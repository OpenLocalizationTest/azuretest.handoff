<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 1:23:41 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a754a5eff384f620f486a591981adefb6d82279</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>By default, all requests to mobile service resources are restricted to clients that present the application key, which does not strictly secure access to resources.</source>
            <target state="new">By default, all requests to mobile service resources are restricted to clients that present the application key, which does not strictly secure access to resources.</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>To secure your resources, you must restrict access to only authenticated clients.</source>
            <target state="new">To secure your resources, you must restrict access to only authenticated clients.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>In Visual Studio, open your mobile service project, expand the Controllers folder, and open <bpt id="2">&lt;strong&gt;</bpt>TodoItemController.cs<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, open your mobile service project, expand the Controllers folder, and open <bpt id="2">&lt;strong&gt;</bpt>TodoItemController.cs<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TodoItemController<ept id="2">&lt;/strong&gt;</ept> class implements data access for the TodoItem table.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TodoItemController<ept id="2">&lt;/strong&gt;</ept> class implements data access for the TodoItem table.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Add the following <bpt id="2">&lt;code&gt;</bpt>using<ept id="2">&lt;/code&gt;</ept> statement:</source>
            <target state="new">Add the following <bpt id="2">&lt;code&gt;</bpt>using<ept id="2">&lt;/code&gt;</ept> statement:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Apply the following <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> attribute to the <bpt id="4">&lt;strong&gt;</bpt>TodoItemController<ept id="4">&lt;/strong&gt;</ept> class.</source>
            <target state="new">Apply the following <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> attribute to the <bpt id="4">&lt;strong&gt;</bpt>TodoItemController<ept id="4">&lt;/strong&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This makes sure that all operations against the <bpt id="2">&lt;em&gt;</bpt>TodoItem<ept id="2">&lt;/em&gt;</ept> table require an authenticated user.</source>
            <target state="new">This makes sure that all operations against the <bpt id="2">&lt;em&gt;</bpt>TodoItem<ept id="2">&lt;/em&gt;</ept> table require an authenticated user.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>You can also apply the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> attribute at the method level.</source>
            <target state="new">You can also apply the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> attribute at the method level.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>(Optional) If you wish to debug authentication locally, expand the <bpt id="2">&lt;code&gt;</bpt>App_Start<ept id="2">&lt;/code&gt;</ept> folder, open <bpt id="4">&lt;strong&gt;</bpt>WebApiConfig.cs<ept id="4">&lt;/strong&gt;</ept>, and add the following code to the <bpt id="6">&lt;strong&gt;</bpt>Register<ept id="6">&lt;/strong&gt;</ept> method.</source>
            <target state="new">(Optional) If you wish to debug authentication locally, expand the <bpt id="2">&lt;code&gt;</bpt>App_Start<ept id="2">&lt;/code&gt;</ept> folder, open <bpt id="4">&lt;strong&gt;</bpt>WebApiConfig.cs<ept id="4">&lt;/strong&gt;</ept>, and add the following code to the <bpt id="6">&lt;strong&gt;</bpt>Register<ept id="6">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This tells the local mobile service project to run as if it is being hosted in Azure, including honoring the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> settings.</source>
            <target state="new">This tells the local mobile service project to run as if it is being hosted in Azure, including honoring the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> settings.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Without this setting, all HTTP requests to localhost are permitted without authentication despite the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> setting.</source>
            <target state="new">Without this setting, all HTTP requests to localhost are permitted without authentication despite the <bpt id="2">&lt;em&gt;</bpt>AuthorizeLevel<ept id="2">&lt;/em&gt;</ept> setting.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>When you enable self-hosted mode, you also need to set a value for the local application key.</source>
            <target state="new">When you enable self-hosted mode, you also need to set a value for the local application key.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>(Optional) In the web.config project file, set a string value for the <bpt id="2">&lt;code&gt;</bpt>MS_ApplicationKey<ept id="2">&lt;/code&gt;</ept> app setting.</source>
            <target state="new">(Optional) In the web.config project file, set a string value for the <bpt id="2">&lt;code&gt;</bpt>MS_ApplicationKey<ept id="2">&lt;/code&gt;</ept> app setting.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>This is the password that you use (with no username) to test the API help pages when you run the service locally.</source>
            <target state="new">This is the password that you use (with no username) to test the API help pages when you run the service locally.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>This string value is not used by the live site in Azure, and you do not need to use the actual application key; any valid string value will work.</source>
            <target state="new">This string value is not used by the live site in Azure, and you do not need to use the actual application key; any valid string value will work.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Republish your project.</source>
            <target state="new">Republish your project.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>