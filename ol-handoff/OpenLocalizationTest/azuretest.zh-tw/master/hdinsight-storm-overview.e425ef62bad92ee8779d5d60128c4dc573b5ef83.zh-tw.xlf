<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 11:54:09 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdb30e8d0f8850a747fa6944f0f1eece0d2f1105</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Introduction to Apache Storm on HDInsight | Microsoft Azure</source>
            <target state="new">Introduction to Apache Storm on HDInsight | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Get an introduction to Apache Storm, and learn how you can use Storm on HDInsight to build real-time data analytics solutions in the cloud.</source>
            <target state="new">Get an introduction to Apache Storm, and learn how you can use Storm on HDInsight to build real-time data analytics solutions in the cloud.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Introduction to Apache Storm on HDInsight: Real-time analytics for Hadoop</source>
            <target state="new">Introduction to Apache Storm on HDInsight: Real-time analytics for Hadoop</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Apache Storm on HDInsight allows you to create distributed, real-time analytics solutions in the Azure environment by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Apache Hadoop<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Apache Storm on HDInsight allows you to create distributed, real-time analytics solutions in the Azure environment by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Apache Hadoop<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>What is Apache Storm?</source>
            <target state="new">What is Apache Storm?</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Apache Storm is a distributed, fault-tolerant, open-source computation system that allows you to process data in real-time with Hadoop.</source>
            <target state="new">Apache Storm is a distributed, fault-tolerant, open-source computation system that allows you to process data in real-time with Hadoop.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Storm solutions can also provide guaranteed processing of data, with the ability to replay data that was not successfully processed the first time.</source>
            <target state="new">Storm solutions can also provide guaranteed processing of data, with the ability to replay data that was not successfully processed the first time.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Why use Storm on HDInsight?</source>
            <target state="new">Why use Storm on HDInsight?</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Apache Storm on HDInsight is a managed cluster integrated into the Azure environment.</source>
            <target state="new">Apache Storm on HDInsight is a managed cluster integrated into the Azure environment.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>It provides the following key benefits:</source>
            <target state="new">It provides the following key benefits:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Performs as a managed service with an SLA of 99.9% up time</source>
            <target state="new">Performs as a managed service with an SLA of 99.9% up time</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Use the language of your choice: Provides support for Storm components written in <bpt id="2">&lt;strong&gt;</bpt>Java<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>C#<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Python<ept id="6">&lt;/strong&gt;</ept></source>
            <target state="new">Use the language of your choice: Provides support for Storm components written in <bpt id="2">&lt;strong&gt;</bpt>Java<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>C#<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Python<ept id="6">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Supports a mix of programming languages: Read data using Java, then process it using C#</source>
            <target state="new">Supports a mix of programming languages: Read data using Java, then process it using C#</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>Trident<ept id="2">&lt;/strong&gt;</ept> Java interface to create Storm topologies that support "exactly once" processing of messages, "transactional" datastore persistence, and a set of common stream analytics operations</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>Trident<ept id="2">&lt;/strong&gt;</ept> Java interface to create Storm topologies that support "exactly once" processing of messages, "transactional" datastore persistence, and a set of common stream analytics operations</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Includes built-in scale-up and scale-down features: Scale an HDInsight cluster with no impact to running Storm topologies</source>
            <target state="new">Includes built-in scale-up and scale-down features: Scale an HDInsight cluster with no impact to running Storm topologies</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Integrate with other Azure services, including Event Hub, Azure Virtual Network, SQL Database, Blob storage, and DocumentDB</source>
            <target state="new">Integrate with other Azure services, including Event Hub, Azure Virtual Network, SQL Database, Blob storage, and DocumentDB</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Combine the capabilities of multiple HDInsight clusters by using Azure Virtual Network: Create analytic pipelines that use HDInsight, HBase, or Hadoop clusters</source>
            <target state="new">Combine the capabilities of multiple HDInsight clusters by using Azure Virtual Network: Create analytic pipelines that use HDInsight, HBase, or Hadoop clusters</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>For a list of companies that are using Apache Storm for their real-time analytics solutions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Companies Using Apache Storm<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a list of companies that are using Apache Storm for their real-time analytics solutions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Companies Using Apache Storm<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To get started using Storm, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with Storm on HDInsight[gettingstarted]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To get started using Storm, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with Storm on HDInsight[gettingstarted]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Ease of provisioning</source>
            <target state="new">Ease of provisioning</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>You can provision a new Storm on HDInsight cluster in minutes.</source>
            <target state="new">You can provision a new Storm on HDInsight cluster in minutes.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Specify the cluster name, size, administrator account, and the storage account.</source>
            <target state="new">Specify the cluster name, size, administrator account, and the storage account.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Azure will create the cluster, including sample topologies and a web-management dashboard.</source>
            <target state="new">Azure will create the cluster, including sample topologies and a web-management dashboard.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>You can also provision Storm clusters by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure CLI<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure PowerShell<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can also provision Storm clusters by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure CLI<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure PowerShell<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Within 15 minutes of submitting the request, you will have a new Storm cluster running and ready for your first real-time analytics pipeline.</source>
            <target state="new">Within 15 minutes of submitting the request, you will have a new Storm cluster running and ready for your first real-time analytics pipeline.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Ease of use</source>
            <target state="new">Ease of use</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>If you use Visual Studio, the HDInsight Tools for Visual Studio allow you to create C# and hybrid C#/Java topologies, and then submit them to your Storm on HDInsight cluster.</source>
            <target state="new">If you use Visual Studio, the HDInsight Tools for Visual Studio allow you to create C# and hybrid C#/Java topologies, and then submit them to your Storm on HDInsight cluster.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Storm Project creation<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Storm Project creation<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>HDInsight Tools for Visual Studio also provides an interface that allows you to monitor and manage Storm topologies on a cluster.</source>
            <target state="new">HDInsight Tools for Visual Studio also provides an interface that allows you to monitor and manage Storm topologies on a cluster.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Storm management<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Storm management<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>For an example of using the HDInsight Tools to create a Storm application, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Develop C# Storm topologies with the HDInsight Tools for Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For an example of using the HDInsight Tools to create a Storm application, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Develop C# Storm topologies with the HDInsight Tools for Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For more information about the HDInsight Tools for Visual Studio, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started using the HDInsight Tools for Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about the HDInsight Tools for Visual Studio, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started using the HDInsight Tools for Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Each Storm on HDInsight cluster also provides a web-based Storm Dashboard that allows you to submit, monitor, and manage Storm topologies running on the cluster.</source>
            <target state="new">Each Storm on HDInsight cluster also provides a web-based Storm Dashboard that allows you to submit, monitor, and manage Storm topologies running on the cluster.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Storm dashboard<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Storm dashboard<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>For more information about using the Storm Dashboard, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy and manage Apache Storm topologies on HDInsight<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about using the Storm Dashboard, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy and manage Apache Storm topologies on HDInsight<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Storm on HDInsight also provides easy integration with Azure Event Hubs through the <bpt id="2">&lt;strong&gt;</bpt>Event Hub Spout<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Storm on HDInsight also provides easy integration with Azure Event Hubs through the <bpt id="2">&lt;strong&gt;</bpt>Event Hub Spout<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>This is available on each storm cluster at <bpt id="2">&lt;strong&gt;</bpt>%STORM_HOME%\examples\eventhubspout\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">This is available on each storm cluster at <bpt id="2">&lt;strong&gt;</bpt>%STORM_HOME%\examples\eventhubspout\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>For examples of using this spout in a Storm topology, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting started with Event Hubs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Analyzing sensor data with Storm and HBase<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For examples of using this spout in a Storm topology, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting started with Event Hubs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Analyzing sensor data with Storm and HBase<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Reliability</source>
            <target state="new">Reliability</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Apache Storm always guarantees that each incoming message will be fully processed, even when the data analysis is spread over hundreds of nodes.</source>
            <target state="new">Apache Storm always guarantees that each incoming message will be fully processed, even when the data analysis is spread over hundreds of nodes.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Nimbus node<ept id="2">&lt;/strong&gt;</ept> provides similar functionality to the Hadoop JobTracker, and it assigns tasks to other nodes in the cluster through <bpt id="4">&lt;strong&gt;</bpt>Zookeeper<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Nimbus node<ept id="2">&lt;/strong&gt;</ept> provides similar functionality to the Hadoop JobTracker, and it assigns tasks to other nodes in the cluster through <bpt id="4">&lt;strong&gt;</bpt>Zookeeper<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Zookeeper nodes provide coordination for the cluster and facilitate communication between Nimbus and the <bpt id="2">&lt;strong&gt;</bpt>Supervisor<ept id="2">&lt;/strong&gt;</ept> process on the worker nodes.</source>
            <target state="new">Zookeeper nodes provide coordination for the cluster and facilitate communication between Nimbus and the <bpt id="2">&lt;strong&gt;</bpt>Supervisor<ept id="2">&lt;/strong&gt;</ept> process on the worker nodes.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>If one processing node goes down, the Nimbus node is informed, and it assigns the task and associated data to another node.</source>
            <target state="new">If one processing node goes down, the Nimbus node is informed, and it assigns the task and associated data to another node.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The default configuration for Apache Storm is to have only one Nimbus node.</source>
            <target state="new">The default configuration for Apache Storm is to have only one Nimbus node.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Storm on HDInsight runs two Nimbus nodes.</source>
            <target state="new">Storm on HDInsight runs two Nimbus nodes.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>If the primary node fails, the HDInsight cluster will switch to the secondary node while the primary node is recovered.</source>
            <target state="new">If the primary node fails, the HDInsight cluster will switch to the secondary node while the primary node is recovered.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Diagram of nimbus, zookeeper, and supervisor<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Diagram of nimbus, zookeeper, and supervisor<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Scale</source>
            <target state="new">Scale</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Although you can specify the number of nodes in your cluster during creation, you may want to grow or shrink the cluster to match workload.</source>
            <target state="new">Although you can specify the number of nodes in your cluster during creation, you may want to grow or shrink the cluster to match workload.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>All HDInsight clusters allow you to change the number of nodes in the cluster, even while processing data.</source>
            <target state="new">All HDInsight clusters allow you to change the number of nodes in the cluster, even while processing data.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>To take advantage of new nodes added through scaling, you will need to rebalance topologies started before the cluster size was increased.</source>
            <target state="new">To take advantage of new nodes added through scaling, you will need to rebalance topologies started before the cluster size was increased.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Support</source>
            <target state="new">Support</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Storm on HDInsight comes with full enterprise-level 24/7 support.</source>
            <target state="new">Storm on HDInsight comes with full enterprise-level 24/7 support.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Storm on HDInsight also has an SLA of 99.9%.</source>
            <target state="new">Storm on HDInsight also has an SLA of 99.9%.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>That means we guarantee that the cluster will have external connectivity at least 99.9% of the time.</source>
            <target state="new">That means we guarantee that the cluster will have external connectivity at least 99.9% of the time.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Common use cases for real-time analytics</source>
            <target state="new">Common use cases for real-time analytics</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The following are some common scenarios for which you might use Apache storm on HDInsight.</source>
            <target state="new">The following are some common scenarios for which you might use Apache storm on HDInsight.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>For information about real-world scenarios, read <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How companies are using Storm<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about real-world scenarios, read <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How companies are using Storm<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Internet of Things (IoT)</source>
            <target state="new">Internet of Things (IoT)</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Fraud detection</source>
            <target state="new">Fraud detection</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Social analytics</source>
            <target state="new">Social analytics</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Extract, Transform, Load (ETL)</source>
            <target state="new">Extract, Transform, Load (ETL)</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Network monitoring</source>
            <target state="new">Network monitoring</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Search</source>
            <target state="new">Search</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Mobile engagement</source>
            <target state="new">Mobile engagement</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>How is data in HDInsight Storm processed?</source>
            <target state="new">How is data in HDInsight Storm processed?</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Apache Storm runs <bpt id="2">&lt;strong&gt;</bpt>topologies<ept id="2">&lt;/strong&gt;</ept> instead of the MapReduce jobs that you may be familiar with in HDInsight or Hadoop.</source>
            <target state="new">Apache Storm runs <bpt id="2">&lt;strong&gt;</bpt>topologies<ept id="2">&lt;/strong&gt;</ept> instead of the MapReduce jobs that you may be familiar with in HDInsight or Hadoop.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>A Storm on HDInsight cluster contains two types of nodes: head nodes that run <bpt id="2">&lt;strong&gt;</bpt>Nimbus<ept id="2">&lt;/strong&gt;</ept> and worker nodes that run <bpt id="4">&lt;strong&gt;</bpt>Supervisor<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">A Storm on HDInsight cluster contains two types of nodes: head nodes that run <bpt id="2">&lt;strong&gt;</bpt>Nimbus<ept id="2">&lt;/strong&gt;</ept> and worker nodes that run <bpt id="4">&lt;strong&gt;</bpt>Supervisor<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Nimbus<ept id="1">&lt;/strong&gt;</ept>: Similar to the JobTracker in Hadoop, it is responsible for distributing code throughout the cluster, assigning tasks to virtual machines, and monitoring for failure.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Nimbus<ept id="1">&lt;/strong&gt;</ept>: Similar to the JobTracker in Hadoop, it is responsible for distributing code throughout the cluster, assigning tasks to virtual machines, and monitoring for failure.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>HDInsight provides two Nimbus nodes, so there is no single point of failure for Storm on HDInsight</source>
            <target state="new">HDInsight provides two Nimbus nodes, so there is no single point of failure for Storm on HDInsight</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Supervisor<ept id="1">&lt;/strong&gt;</ept>: The supervisor for each worker node is responsible for starting and stopping <bpt id="3">&lt;strong&gt;</bpt>worker processes<ept id="3">&lt;/strong&gt;</ept> on the node.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Supervisor<ept id="1">&lt;/strong&gt;</ept>: The supervisor for each worker node is responsible for starting and stopping <bpt id="3">&lt;strong&gt;</bpt>worker processes<ept id="3">&lt;/strong&gt;</ept> on the node.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Worker process<ept id="1">&lt;/strong&gt;</ept>: Runs a subset of a <bpt id="3">&lt;strong&gt;</bpt>topology<ept id="3">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Worker process<ept id="1">&lt;/strong&gt;</ept>: Runs a subset of a <bpt id="3">&lt;strong&gt;</bpt>topology<ept id="3">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>A running topology is distributed across many worker processes throughout the cluster.</source>
            <target state="new">A running topology is distributed across many worker processes throughout the cluster.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Topology<ept id="1">&lt;/strong&gt;</ept>: Defines a graph of computation that processes <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept> of data.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Topology<ept id="1">&lt;/strong&gt;</ept>: Defines a graph of computation that processes <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept> of data.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Unlike MapReduce jobs, topologies run until you stop them.</source>
            <target state="new">Unlike MapReduce jobs, topologies run until you stop them.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Stream<ept id="1">&lt;/strong&gt;</ept>: An unbound collection of <bpt id="3">&lt;strong&gt;</bpt>tuples<ept id="3">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Stream<ept id="1">&lt;/strong&gt;</ept>: An unbound collection of <bpt id="3">&lt;strong&gt;</bpt>tuples<ept id="3">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Streams are produced by <bpt id="2">&lt;strong&gt;</bpt>spouts<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>bolts<ept id="4">&lt;/strong&gt;</ept>, and they are consumed by <bpt id="6">&lt;strong&gt;</bpt>bolts<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Streams are produced by <bpt id="2">&lt;strong&gt;</bpt>spouts<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>bolts<ept id="4">&lt;/strong&gt;</ept>, and they are consumed by <bpt id="6">&lt;strong&gt;</bpt>bolts<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Tuple<ept id="1">&lt;/strong&gt;</ept>: A named list of dynamically typed values.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Tuple<ept id="1">&lt;/strong&gt;</ept>: A named list of dynamically typed values.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Spout<ept id="1">&lt;/strong&gt;</ept>: Consumes data from a data source and emits one or more <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Spout<ept id="1">&lt;/strong&gt;</ept>: Consumes data from a data source and emits one or more <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>In many cases, data is read from a queue, such as Kafka, Azure Service Bus queues, or Event hubs.</source>
            <target state="new">In many cases, data is read from a queue, such as Kafka, Azure Service Bus queues, or Event hubs.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>The queue ensures that data is persisted if there is an outage.</source>
            <target state="new">The queue ensures that data is persisted if there is an outage.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Bolt<ept id="1">&lt;/strong&gt;</ept>: Consumes <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept>, performs processing on <bpt id="5">&lt;strong&gt;</bpt>tuples<ept id="5">&lt;/strong&gt;</ept>, and may emit <bpt id="7">&lt;strong&gt;</bpt>streams<ept id="7">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Bolt<ept id="1">&lt;/strong&gt;</ept>: Consumes <bpt id="3">&lt;strong&gt;</bpt>streams<ept id="3">&lt;/strong&gt;</ept>, performs processing on <bpt id="5">&lt;strong&gt;</bpt>tuples<ept id="5">&lt;/strong&gt;</ept>, and may emit <bpt id="7">&lt;strong&gt;</bpt>streams<ept id="7">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Bolts are also responsible for writing data to external storage, such as a queue, HDInsight, HBase, a blob, or other data store.</source>
            <target state="new">Bolts are also responsible for writing data to external storage, such as a queue, HDInsight, HBase, a blob, or other data store.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Apache Thrift<ept id="1">&lt;/strong&gt;</ept>: A software framework for scalable cross-language service development.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Apache Thrift<ept id="1">&lt;/strong&gt;</ept>: A software framework for scalable cross-language service development.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>It allows you to build services that work between C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, JavaScript, Node.js, Smalltalk, and other languages.</source>
            <target state="new">It allows you to build services that work between C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, JavaScript, Node.js, Smalltalk, and other languages.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Nimbus<ept id="1">&lt;/strong&gt;</ept> is a Thrift service, and a <bpt id="3">&lt;strong&gt;</bpt>topology<ept id="3">&lt;/strong&gt;</ept> is a Thrift definition, so it is possible to develop topologies using a variety of programming languages.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Nimbus<ept id="1">&lt;/strong&gt;</ept> is a Thrift service, and a <bpt id="3">&lt;strong&gt;</bpt>topology<ept id="3">&lt;/strong&gt;</ept> is a Thrift definition, so it is possible to develop topologies using a variety of programming languages.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>For more information about Storm components, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storm tutorial[apachetutorial]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</source>
            <target state="new">For more information about Storm components, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storm tutorial[apachetutorial]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>What programming languages can I use?</source>
            <target state="new">What programming languages can I use?</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>The Storm on HDInsight cluster provides support for C#, Java, and Python.</source>
            <target state="new">The Storm on HDInsight cluster provides support for C#, Java, and Python.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>C&amp;#35;</source>
            <target state="new">C&amp;#35;</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The HDInsight Tools for Visual Studio allow .NET developers to design and implement a topology in C#.</source>
            <target state="new">The HDInsight Tools for Visual Studio allow .NET developers to design and implement a topology in C#.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>You can also create hybrid topologies that use Java and C# components.</source>
            <target state="new">You can also create hybrid topologies that use Java and C# components.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Develop C# topologies for Apache Storm on HDInsight using Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Develop C# topologies for Apache Storm on HDInsight using Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Java</source>
            <target state="new">Java</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Most Java examples you encounter will be plain Java or Trident.</source>
            <target state="new">Most Java examples you encounter will be plain Java or Trident.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Trident is a high-level abstraction that makes it easier to do things such as joins, aggregations, grouping, and filtering.</source>
            <target state="new">Trident is a high-level abstraction that makes it easier to do things such as joins, aggregations, grouping, and filtering.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>However, Trident acts on batches of tuples, whereas a raw Java solution processes a stream one tuple at a time.</source>
            <target state="new">However, Trident acts on batches of tuples, whereas a raw Java solution processes a stream one tuple at a time.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>For more information about Trident, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Trident tutorial<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</source>
            <target state="new">For more information about Trident, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Trident tutorial<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>For examples of raw Java and Trident topologies, see the <bpt id="2">&lt;strong&gt;</bpt>%storm_home%\contrib\storm-starter<ept id="2">&lt;/strong&gt;</ept> directory on your HDInsight Storm cluster.</source>
            <target state="new">For examples of raw Java and Trident topologies, see the <bpt id="2">&lt;strong&gt;</bpt>%storm_home%\contrib\storm-starter<ept id="2">&lt;/strong&gt;</ept> directory on your HDInsight Storm cluster.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>What are some common development patterns?</source>
            <target state="new">What are some common development patterns?</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>Guaranteed message processing</source>
            <target state="new">Guaranteed message processing</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Storm can provide different levels of guaranteed message processing.</source>
            <target state="new">Storm can provide different levels of guaranteed message processing.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>For example, a basic Storm application can guarantee at-least-once processing, and Trident can guarantee exactly-once processing.</source>
            <target state="new">For example, a basic Storm application can guarantee at-least-once processing, and Trident can guarantee exactly-once processing.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Guarantees on data processing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Guarantees on data processing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> at apache.org.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>IBasicBolt</source>
            <target state="new">IBasicBolt</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>The pattern of reading an input tuple, emitting zero or more tuples, and then acking the input tuple immediately at the end of the execute method is very common, and Storm provides the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>IBasicBolt<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> interface to automate this pattern.</source>
            <target state="new">The pattern of reading an input tuple, emitting zero or more tuples, and then acking the input tuple immediately at the end of the execute method is very common, and Storm provides the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>IBasicBolt<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> interface to automate this pattern.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Joins</source>
            <target state="new">Joins</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Joining two streams of data will vary between applications.</source>
            <target state="new">Joining two streams of data will vary between applications.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>For example, you could join each tuple from multiple streams into one new stream, or you could join only batches of tuples for a specific window.</source>
            <target state="new">For example, you could join each tuple from multiple streams into one new stream, or you could join only batches of tuples for a specific window.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Either way, joining can be accomplished by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which is a way of defining how tuples are routed to bolts.</source>
            <target state="new">Either way, joining can be accomplished by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which is a way of defining how tuples are routed to bolts.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>In the following Java example, fieldsGrouping is used to route tuples that originate from components "1", "2", and "3" to the <bpt id="2">&lt;strong&gt;</bpt>MyJoiner<ept id="2">&lt;/strong&gt;</ept> bolt.</source>
            <target state="new">In the following Java example, fieldsGrouping is used to route tuples that originate from components "1", "2", and "3" to the <bpt id="2">&lt;strong&gt;</bpt>MyJoiner<ept id="2">&lt;/strong&gt;</ept> bolt.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Batching</source>
            <target state="new">Batching</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Batching can be accomplished several ways.</source>
            <target state="new">Batching can be accomplished several ways.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>With a basic Storm Java topology, you might use simple counter to batch X number of tuples before emitting them, or use an internal timing mechanism known as a "tick tuple" to emit a batch every X seconds.</source>
            <target state="new">With a basic Storm Java topology, you might use simple counter to batch X number of tuples before emitting them, or use an internal timing mechanism known as a "tick tuple" to emit a batch every X seconds.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>For an example of using tick tuples, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Analyzing sensor data with Storm and HBase on HDInsight<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For an example of using tick tuples, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Analyzing sensor data with Storm and HBase on HDInsight<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>If you are using Trident, it is based on processing batches of tuples.</source>
            <target state="new">If you are using Trident, it is based on processing batches of tuples.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Caching</source>
            <target state="new">Caching</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>In-memory caching is often used as a mechanism for speeding up processing because it keeps frequently used assets in memory.</source>
            <target state="new">In-memory caching is often used as a mechanism for speeding up processing because it keeps frequently used assets in memory.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Because a topology is distributed across multiple nodes, and multiple processes within each node, you should consider using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to ensure that tuples containing the fields that are used for cache lookup are always routed to the same process.</source>
            <target state="new">Because a topology is distributed across multiple nodes, and multiple processes within each node, you should consider using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to ensure that tuples containing the fields that are used for cache lookup are always routed to the same process.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>This avoids duplication of cache entries across processes.</source>
            <target state="new">This avoids duplication of cache entries across processes.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Streaming top N</source>
            <target state="new">Streaming top N</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>When your topology depends on calculating a "top N" value, such as the top 5 trends on Twitter, you should calculate the top N value in parallel and then merge the output from those calculations into a global value.</source>
            <target state="new">When your topology depends on calculating a "top N" value, such as the top 5 trends on Twitter, you should calculate the top N value in parallel and then merge the output from those calculations into a global value.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>This can be done by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to route by field to the parallel bolts (which partitions the data by field value), and then route to a bolt that globally determines the top N value.</source>
            <target state="new">This can be done by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>fieldsGrouping<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to route by field to the parallel bolts (which partitions the data by field value), and then route to a bolt that globally determines the top N value.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>For an example of this, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>RollingTopWords<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> example.</source>
            <target state="new">For an example of this, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>RollingTopWords<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> example.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>Learn more about real-time analytics solutions with Apache Storm in HDInsight:</source>
            <target state="new">Learn more about real-time analytics solutions with Apache Storm in HDInsight:</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Getting Started with Storm on HDInsight[gettingstarted]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Getting Started with Storm on HDInsight[gettingstarted]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Example topologies for Storm on HDInsight<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Example topologies for Storm on HDInsight<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>