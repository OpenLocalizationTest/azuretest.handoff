<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:38:54 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fc0117d02c467818fec4130c2fb91341de5a09d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Connect to SQL Database by using Java with JDBC on Windows</source>
            <target state="new">Connect to SQL Database by using Java with JDBC on Windows</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Presents a Java code sample you can use to connect to Azure SQL Database. The sample uses JDBC, and it runs on a Windows client computer.</source>
            <target state="new">Presents a Java code sample you can use to connect to Azure SQL Database. The sample uses JDBC, and it runs on a Windows client computer.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Connect to SQL Database by using Java with JDBC on Windows</source>
            <target state="new">Connect to SQL Database by using Java with JDBC on Windows</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic presents a Java code sample that you can use to connect to Azure SQL Database.</source>
            <target state="new">This topic presents a Java code sample that you can use to connect to Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The Java sample relies on the Java Development Kit (JDK) version 1.8.</source>
            <target state="new">The Java sample relies on the Java Development Kit (JDK) version 1.8.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The sample connects to an Azure SQL Database by using the JDBC driver.</source>
            <target state="new">The sample connects to an Azure SQL Database by using the JDBC driver.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Requirements</source>
            <target state="new">Requirements</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Any operating system platform that runs <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Java Development Kit 1.8<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Any operating system platform that runs <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Java Development Kit 1.8<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>An existing database on SQL Azure.</source>
            <target state="new">An existing database on SQL Azure.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started topic<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to learn how to create a sample database and retrieve your connection string.</source>
            <target state="new">See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started topic<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to learn how to create a sample database and retrieve your connection string.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Test environment</source>
            <target state="new">Test environment</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The Java code example in this topic assumes the following test table already exists in your Azure SQL Database database.</source>
            <target state="new">The Java code example in this topic assumes the following test table already exists in your Azure SQL Database database.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Connection string for your SQL Database</source>
            <target state="new">Connection string for your SQL Database</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The code sample creates a <bpt id="2">&lt;code&gt;</bpt>Connection<ept id="2">&lt;/code&gt;</ept> object by using a connection string.</source>
            <target state="new">The code sample creates a <bpt id="2">&lt;code&gt;</bpt>Connection<ept id="2">&lt;/code&gt;</ept> object by using a connection string.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>You can find the connection string by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can find the connection string by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>For details about finding the connection string, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first Azure SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For details about finding the connection string, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first Azure SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Java code sample</source>
            <target state="new">Java code sample</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The section contains the bulk of the Java code sample.</source>
            <target state="new">The section contains the bulk of the Java code sample.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>It has comments indicating where you would copy-and-paste the smaller Java segments that are presented in subsequent sections.</source>
            <target state="new">It has comments indicating where you would copy-and-paste the smaller Java segments that are presented in subsequent sections.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>The sample in this section could compile and run even without the copy-and-pastes near the comments, but it would only connect and then end.</source>
            <target state="new">The sample in this section could compile and run even without the copy-and-pastes near the comments, but it would only connect and then end.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The comments you will find are the following:</source>
            <target state="new">The comments you will find are the following:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>// INSERT two rows into the table.<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>// INSERT two rows into the table.<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>// TRANSACTION and commit for an UPDATE.<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>// TRANSACTION and commit for an UPDATE.<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>// SELECT rows from the table.<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>// SELECT rows from the table.<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Here next is the bulk of the Java code sample.</source>
            <target state="new">Here next is the bulk of the Java code sample.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The sample includes the <bpt id="2">&lt;code&gt;</bpt>main<ept id="2">&lt;/code&gt;</ept> function of the <bpt id="4">&lt;code&gt;</bpt>SQLDatabaseTest<ept id="4">&lt;/code&gt;</ept> class.</source>
            <target state="new">The sample includes the <bpt id="2">&lt;code&gt;</bpt>main<ept id="2">&lt;/code&gt;</ept> function of the <bpt id="4">&lt;code&gt;</bpt>SQLDatabaseTest<ept id="4">&lt;/code&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Of course, to actually run the preceding Java code sample, you would have to put your real values into the connection string to replace the placeholders:</source>
            <target state="new">Of course, to actually run the preceding Java code sample, you would have to put your real values into the connection string to replace the placeholders:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>your_server</source>
            <target state="new">your_server</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>your_database</source>
            <target state="new">your_database</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>your_user</source>
            <target state="new">your_user</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>your_password</source>
            <target state="new">your_password</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>INSERT two rows into the table</source>
            <target state="new">INSERT two rows into the table</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>This Java segment issues a Transact-SQL INSERT statement to insert two rows into the Person table.</source>
            <target state="new">This Java segment issues a Transact-SQL INSERT statement to insert two rows into the Person table.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The general sequence is as follows:</source>
            <target state="new">The general sequence is as follows:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Generate a <bpt id="2">&lt;code&gt;</bpt>PreparedStatement<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Connection<ept id="4">&lt;/code&gt;</ept> object.</source>
            <target state="new">Generate a <bpt id="2">&lt;code&gt;</bpt>PreparedStatement<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Connection<ept id="4">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>We include the parameter <bpt id="2">&lt;code&gt;</bpt>Statement.RETURN_GENERATED_KEYS<ept id="2">&lt;/code&gt;</ept> so that later we can obtain the value that was automatically generated for the <bpt id="4">&lt;strong&gt;</bpt>id<ept id="4">&lt;/strong&gt;</ept> key value.</source>
            <target state="new">We include the parameter <bpt id="2">&lt;code&gt;</bpt>Statement.RETURN_GENERATED_KEYS<ept id="2">&lt;/code&gt;</ept> so that later we can obtain the value that was automatically generated for the <bpt id="4">&lt;strong&gt;</bpt>id<ept id="4">&lt;/strong&gt;</ept> key value.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Call the <bpt id="2">&lt;code&gt;</bpt>execute<ept id="2">&lt;/code&gt;</ept> method on the <bpt id="4">&lt;code&gt;</bpt>PreparedStatement<ept id="4">&lt;/code&gt;</ept> object.</source>
            <target state="new">Call the <bpt id="2">&lt;code&gt;</bpt>execute<ept id="2">&lt;/code&gt;</ept> method on the <bpt id="4">&lt;code&gt;</bpt>PreparedStatement<ept id="4">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Obtain the numeric value that was automatically generated for the primary key, by using the <bpt id="2">&lt;code&gt;</bpt>PreparedStatement<ept id="2">&lt;/code&gt;</ept> object.</source>
            <target state="new">Obtain the numeric value that was automatically generated for the primary key, by using the <bpt id="2">&lt;code&gt;</bpt>PreparedStatement<ept id="2">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>This relates to the AUTO_INCREMENT specification on the <bpt id="2">&lt;strong&gt;</bpt>id<ept id="2">&lt;/strong&gt;</ept> column in the Person table</source>
            <target state="new">This relates to the AUTO_INCREMENT specification on the <bpt id="2">&lt;strong&gt;</bpt>id<ept id="2">&lt;/strong&gt;</ept> column in the Person table</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// INSERT two rows into the table.<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// INSERT two rows into the table.<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>TRANSACTION and commit for an UPDATE</source>
            <target state="new">TRANSACTION and commit for an UPDATE</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The following segment of Java code issues a Transact-SQL UPDATE statement to increase the <bpt id="2">&lt;code&gt;</bpt>age<ept id="2">&lt;/code&gt;</ept> value for every row in the person table.</source>
            <target state="new">The following segment of Java code issues a Transact-SQL UPDATE statement to increase the <bpt id="2">&lt;code&gt;</bpt>age<ept id="2">&lt;/code&gt;</ept> value for every row in the person table.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The general sequence is as follows:</source>
            <target state="new">The general sequence is as follows:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>setAutoCommit<ept id="2">&lt;/code&gt;</ept> method is called to prevent updates from being automatically committed in the database.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>setAutoCommit<ept id="2">&lt;/code&gt;</ept> method is called to prevent updates from being automatically committed in the database.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>executeUpdate<ept id="2">&lt;/code&gt;</ept> method is called to execute the UPDATE in the context of transaction.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>executeUpdate<ept id="2">&lt;/code&gt;</ept> method is called to execute the UPDATE in the context of transaction.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>commit<ept id="2">&lt;/code&gt;</ept> method is called to explicitly commit the transaction.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>commit<ept id="2">&lt;/code&gt;</ept> method is called to explicitly commit the transaction.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// TRANSACTION and commit for an UPDATE.<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// TRANSACTION and commit for an UPDATE.<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>SELECT rows from a table</source>
            <target state="new">SELECT rows from a table</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>This Java segment executes a Transact-SQL SELECT statement to see all the updated rows from the Person table.</source>
            <target state="new">This Java segment executes a Transact-SQL SELECT statement to see all the updated rows from the Person table.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The general sequence is as follows:</source>
            <target state="new">The general sequence is as follows:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Generate a <bpt id="2">&lt;code&gt;</bpt>Statement<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Connection<ept id="4">&lt;/code&gt;</ept> object.</source>
            <target state="new">Generate a <bpt id="2">&lt;code&gt;</bpt>Statement<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Connection<ept id="4">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Generate a <bpt id="2">&lt;code&gt;</bpt>ResultSet<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Statement<ept id="4">&lt;/code&gt;</ept> object.</source>
            <target state="new">Generate a <bpt id="2">&lt;code&gt;</bpt>ResultSet<ept id="2">&lt;/code&gt;</ept> object by using the <bpt id="4">&lt;code&gt;</bpt>Statement<ept id="4">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Loop around a call to <bpt id="2">&lt;code&gt;</bpt>resultSet.next<ept id="2">&lt;/code&gt;</ept> to iterate through all the returned rows.</source>
            <target state="new">Loop around a call to <bpt id="2">&lt;code&gt;</bpt>resultSet.next<ept id="2">&lt;/code&gt;</ept> to iterate through all the returned rows.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// SELECT rows from a table.<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <bpt id="2">&lt;code&gt;</bpt>// SELECT rows from a table.<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>