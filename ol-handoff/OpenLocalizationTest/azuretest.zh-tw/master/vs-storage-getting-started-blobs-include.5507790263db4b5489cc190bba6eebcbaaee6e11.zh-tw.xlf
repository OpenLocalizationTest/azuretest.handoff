<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 1:33:11 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c646c294638ae6643915b405a409d0e7ed1a0177</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Create a container</source>
            <target state="new">Create a container</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Just as files live in folders, storage blobs live in containers.</source>
            <target state="new">Just as files live in folders, storage blobs live in containers.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>You can use a <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object to reference an existing container, or you can call the CreateCloudBlobClient() method to create a new container.</source>
            <target state="new">You can use a <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object to reference an existing container, or you can call the CreateCloudBlobClient() method to create a new container.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The following code shows how to create a new blob storage container.</source>
            <target state="new">The following code shows how to create a new blob storage container.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The code first creates a <bpt id="2">&lt;strong&gt;</bpt>BlobClient<ept id="2">&lt;/strong&gt;</ept> object so that you can access the object's functions, such as creating a storage container.</source>
            <target state="new">The code first creates a <bpt id="2">&lt;strong&gt;</bpt>BlobClient<ept id="2">&lt;/strong&gt;</ept> object so that you can access the object's functions, such as creating a storage container.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Then, the code tries to reference a storage container named “mycontainer.”</source>
            <target state="new">Then, the code tries to reference a storage container named “mycontainer.”</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>If it can’t find a container with that name, it creates one.</source>
            <target state="new">If it can’t find a container with that name, it creates one.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>By default, the new container is private and you must specify your storage access key to download blobs from this container.</source>
            <target state="new">By default, the new container is private and you must specify your storage access key to download blobs from this container.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>If you want to make the files within the container available to everyone, you can set the container to be public by using the following code.</source>
            <target state="new">If you want to make the files within the container available to everyone, you can set the container to be public by using the following code.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use this code block in front of the code in the following sections.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use this code block in front of the code in the following sections.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Upload a blob into a container</source>
            <target state="new">Upload a blob into a container</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>To upload a blob file into a container, get a container reference and use it to get a blob reference.</source>
            <target state="new">To upload a blob file into a container, get a container reference and use it to get a blob reference.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Once you have a blob reference, you can upload any stream of data to it by calling the <bpt id="2">&lt;strong&gt;</bpt>UploadFromStream()<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">Once you have a blob reference, you can upload any stream of data to it by calling the <bpt id="2">&lt;strong&gt;</bpt>UploadFromStream()<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>This operation will create the blob if it’s not already there, or overwrite it if it does exist.</source>
            <target state="new">This operation will create the blob if it’s not already there, or overwrite it if it does exist.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The following example shows how to upload a blob into a container and assumes that the container was already created.</source>
            <target state="new">The following example shows how to upload a blob into a container and assumes that the container was already created.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>List the blobs in a container</source>
            <target state="new">List the blobs in a container</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>To list the blobs in a container, first get a container reference.</source>
            <target state="new">To list the blobs in a container, first get a container reference.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>You can then call the container's <bpt id="2">&lt;strong&gt;</bpt>ListBlobs()<ept id="2">&lt;/strong&gt;</ept> method to retrieve the blobs and/or directories within it.</source>
            <target state="new">You can then call the container's <bpt id="2">&lt;strong&gt;</bpt>ListBlobs()<ept id="2">&lt;/strong&gt;</ept> method to retrieve the blobs and/or directories within it.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To access the rich set of properties and methods for a returned <bpt id="2">&lt;strong&gt;</bpt>IListBlobItem<ept id="2">&lt;/strong&gt;</ept>, you must cast it to a <bpt id="4">&lt;strong&gt;</bpt>CloudBlockBlob<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>CloudPageBlob<ept id="6">&lt;/strong&gt;</ept>, or <bpt id="8">&lt;strong&gt;</bpt>CloudBlobDirectory<ept id="8">&lt;/strong&gt;</ept> object.</source>
            <target state="new">To access the rich set of properties and methods for a returned <bpt id="2">&lt;strong&gt;</bpt>IListBlobItem<ept id="2">&lt;/strong&gt;</ept>, you must cast it to a <bpt id="4">&lt;strong&gt;</bpt>CloudBlockBlob<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>CloudPageBlob<ept id="6">&lt;/strong&gt;</ept>, or <bpt id="8">&lt;strong&gt;</bpt>CloudBlobDirectory<ept id="8">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>If you don’t know the blob type, you can use a type check to determine which to cast it to.</source>
            <target state="new">If you don’t know the blob type, you can use a type check to determine which to cast it to.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The following code demonstrates how to retrieve and output the URI of each item in a container named “photos”.</source>
            <target state="new">The following code demonstrates how to retrieve and output the URI of each item in a container named “photos”.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>There are others ways to list the contents of a blob container.</source>
            <target state="new">There are others ways to list the contents of a blob container.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Blob Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Blob Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Download a blob</source>
            <target state="new">Download a blob</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>To download a blob, first get a reference to the blob and then call the DownloadToStream() method.</source>
            <target state="new">To download a blob, first get a reference to the blob and then call the DownloadToStream() method.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The following example uses the DownloadToStream() method to transfer the blob contents to a stream object that you can then save as a local file.</source>
            <target state="new">The following example uses the DownloadToStream() method to transfer the blob contents to a stream object that you can then save as a local file.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>There are other ways to save blobs as files.</source>
            <target state="new">There are other ways to save blobs as files.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Blob Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Blob Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Delete a blob</source>
            <target state="new">Delete a blob</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>To delete a blob, first get a reference to the blob and then call the Delete() method on it.</source>
            <target state="new">To delete a blob, first get a reference to the blob and then call the Delete() method on it.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>