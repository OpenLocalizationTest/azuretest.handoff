<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:29:18 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">970e32200e3c77f5c9ba7677b40aec45eace5fb2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Service Fabric Application Upgrade Tutorial</source>
            <target state="new">Service Fabric Application Upgrade Tutorial</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This article walks through an experience of upgrading a Service Fabric application.</source>
            <target state="new">This article walks through an experience of upgrading a Service Fabric application.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Application Upgrade Tutorial</source>
            <target state="new">Application Upgrade Tutorial</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The most frequently used and recommended upgrade approach is the monitored rolling upgrade.</source>
            <target state="new">The most frequently used and recommended upgrade approach is the monitored rolling upgrade.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Service Fabric monitors the health of the application being upgraded based on a set of health policies.</source>
            <target state="new">Service Fabric monitors the health of the application being upgraded based on a set of health policies.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>When the applications in an upgrade domain (UD) have been upgraded, Service Fabric evaluates the application health and determines whether to proceed to the next upgrade domain or fail the upgrade based on the health policies.</source>
            <target state="new">When the applications in an upgrade domain (UD) have been upgraded, Service Fabric evaluates the application health and determines whether to proceed to the next upgrade domain or fail the upgrade based on the health policies.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>A monitored application upgrade can be performed using the managed or native APIs, PowerShell, or REST.</source>
            <target state="new">A monitored application upgrade can be performed using the managed or native APIs, PowerShell, or REST.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Service Fabric monitored rolling upgrade allows the application administrator to configure the health evaluation policy that Service Fabric uses to determine the application is healthy.</source>
            <target state="new">Service Fabric monitored rolling upgrade allows the application administrator to configure the health evaluation policy that Service Fabric uses to determine the application is healthy.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>In addition, it also allows the administrator to configure the action to be taken when the health evaluation fails such as automatically roll-back.</source>
            <target state="new">In addition, it also allows the administrator to configure the action to be taken when the health evaluation fails such as automatically roll-back.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This section walkthrough a monitored upgrade for one of the SDK samples.</source>
            <target state="new">This section walkthrough a monitored upgrade for one of the SDK samples.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Step 1: Build &amp; Deploy the Visual Objects Sample</source>
            <target state="new">Step 1: Build &amp; Deploy the Visual Objects Sample</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>These steps can be done by opening the project in Visual Studio, and right clicking on the Solution and selecting the deploy command in the Service Fabric menu item.</source>
            <target state="new">These steps can be done by opening the project in Visual Studio, and right clicking on the Solution and selecting the deploy command in the Service Fabric menu item.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>managing your Service Fabric application in Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>managing your Service Fabric application in Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Alternatively, one may use PowerShell.</source>
            <target state="new">Alternatively, one may use PowerShell.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Before any of the Service Fabric commands may be used in PowerShell, one has to first connect to the cluster by using the <bpt id="2">&lt;code&gt;</bpt>Connect-ServiceFabricCluster<ept id="2">&lt;/code&gt;</ept> cmdlet.</source>
            <target state="new">Before any of the Service Fabric commands may be used in PowerShell, one has to first connect to the cluster by using the <bpt id="2">&lt;code&gt;</bpt>Connect-ServiceFabricCluster<ept id="2">&lt;/code&gt;</ept> cmdlet.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Similarly, it is assumed that the Cluster has already been setup on your local machine.</source>
            <target state="new">Similarly, it is assumed that the Cluster has already been setup on your local machine.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>See the article on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>setting up your Service Fabric development environment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See the article on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>setting up your Service Fabric development environment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>After building the project in Visual Studio, one may use the PowerShell command <bpt id="2">&lt;strong&gt;</bpt>Copy-ServiceFabricApplicationPackage<ept id="2">&lt;/strong&gt;</ept> to copy the application package to the ImageStore, followed by registering the application to the Service Fabric runtime by using the <bpt id="4">&lt;strong&gt;</bpt>Register-ServiceFabricApplicationPackage<ept id="4">&lt;/strong&gt;</ept> cmdlet, and finally starting an instance of the application by using the <bpt id="6">&lt;strong&gt;</bpt>New-ServiceFabricApplication<ept id="6">&lt;/strong&gt;</ept> cmdlet.</source>
            <target state="new">After building the project in Visual Studio, one may use the PowerShell command <bpt id="2">&lt;strong&gt;</bpt>Copy-ServiceFabricApplicationPackage<ept id="2">&lt;/strong&gt;</ept> to copy the application package to the ImageStore, followed by registering the application to the Service Fabric runtime by using the <bpt id="4">&lt;strong&gt;</bpt>Register-ServiceFabricApplicationPackage<ept id="4">&lt;/strong&gt;</ept> cmdlet, and finally starting an instance of the application by using the <bpt id="6">&lt;strong&gt;</bpt>New-ServiceFabricApplication<ept id="6">&lt;/strong&gt;</ept> cmdlet.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>These three steps are analogous to using the Deploy menu item in Visual Studio.</source>
            <target state="new">These three steps are analogous to using the Deploy menu item in Visual Studio.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Now, you can use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Fabric Explorer to view the cluster and the application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Now, you can use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Fabric Explorer to view the cluster and the application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The application has a web service that can be navigated to in Internet Explorer by typing <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://localhost:80<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> in the address bar.</source>
            <target state="new">The application has a web service that can be navigated to in Internet Explorer by typing <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://localhost:80<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> in the address bar.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>You should see some floating visual objects moving around in the screen.</source>
            <target state="new">You should see some floating visual objects moving around in the screen.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Additionally, one may use <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplication<ept id="2">&lt;/strong&gt;</ept> to check the application status.</source>
            <target state="new">Additionally, one may use <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplication<ept id="2">&lt;/strong&gt;</ept> to check the application status.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Step 2: Update the Visual Objects Sample</source>
            <target state="new">Step 2: Update the Visual Objects Sample</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>You might notice that with the version that was deployed in Step 1, the visual objects do not rotate.</source>
            <target state="new">You might notice that with the version that was deployed in Step 1, the visual objects do not rotate.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Let us upgrade this application to one where the visual objects also rotate.</source>
            <target state="new">Let us upgrade this application to one where the visual objects also rotate.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Select the VisualObjects.DataService project within the VisualObjects solution, and open the VisualObjects.cs file in that project.</source>
            <target state="new">Select the VisualObjects.DataService project within the VisualObjects solution, and open the VisualObjects.cs file in that project.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Within that file navigate to the method <bpt id="2">&lt;code&gt;</bpt>CreateMovedObject<ept id="2">&lt;/code&gt;</ept>, and find the line where rotation of the visual objects is set (search for the following lines in the <bpt id="4">&lt;code&gt;</bpt>CreateMovedObject<ept id="4">&lt;/code&gt;</ept> method).</source>
            <target state="new">Within that file navigate to the method <bpt id="2">&lt;code&gt;</bpt>CreateMovedObject<ept id="2">&lt;/code&gt;</ept>, and find the line where rotation of the visual objects is set (search for the following lines in the <bpt id="4">&lt;code&gt;</bpt>CreateMovedObject<ept id="4">&lt;/code&gt;</ept> method).</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Comment out the line <bpt id="2">&lt;code&gt;</bpt>nextObject.Rotation = 1<ept id="2">&lt;/code&gt;</ept>, and uncomment the line below it.</source>
            <target state="new">Comment out the line <bpt id="2">&lt;code&gt;</bpt>nextObject.Rotation = 1<ept id="2">&lt;/code&gt;</ept>, and uncomment the line below it.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Your code should look like the following after the changes are made:</source>
            <target state="new">Your code should look like the following after the changes are made:</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>We also need to update the <bpt id="2">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="2">&lt;/em&gt;</ept> file (under PackageRoot) of the project <bpt id="4">&lt;strong&gt;</bpt>VisualObjects.DataService<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">We also need to update the <bpt id="2">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="2">&lt;/em&gt;</ept> file (under PackageRoot) of the project <bpt id="4">&lt;strong&gt;</bpt>VisualObjects.DataService<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Update the <bpt id="2">&lt;em&gt;</bpt>CodePackage<ept id="2">&lt;/em&gt;</ept> and the service version to 2.0, and the corresponding lines in the <bpt id="4">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="4">&lt;/em&gt;</ept> file should look like the following (highlighted portions show the changes):</source>
            <target state="new">Update the <bpt id="2">&lt;em&gt;</bpt>CodePackage<ept id="2">&lt;/em&gt;</ept> and the service version to 2.0, and the corresponding lines in the <bpt id="4">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="4">&lt;/em&gt;</ept> file should look like the following (highlighted portions show the changes):</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Now, we need to update the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> file (found under the <bpt id="4">&lt;strong&gt;</bpt>VisualObjects<ept id="4">&lt;/strong&gt;</ept> project under the <bpt id="6">&lt;strong&gt;</bpt>VisualObjects<ept id="6">&lt;/strong&gt;</ept> solution) to use version 2.0 of the <bpt id="8">&lt;strong&gt;</bpt>VisualObjects.DataService<ept id="8">&lt;/strong&gt;</ept> project and also update the Application version to 2.0.0.0 from 1.0.0.0.</source>
            <target state="new">Now, we need to update the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> file (found under the <bpt id="4">&lt;strong&gt;</bpt>VisualObjects<ept id="4">&lt;/strong&gt;</ept> project under the <bpt id="6">&lt;strong&gt;</bpt>VisualObjects<ept id="6">&lt;/strong&gt;</ept> solution) to use version 2.0 of the <bpt id="8">&lt;strong&gt;</bpt>VisualObjects.DataService<ept id="8">&lt;/strong&gt;</ept> project and also update the Application version to 2.0.0.0 from 1.0.0.0.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Now, the corresponding lines in the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> should read like the following:</source>
            <target state="new">Now, the corresponding lines in the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> should read like the following:</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Now, build the project by selecting the <bpt id="2">&lt;strong&gt;</bpt>VisualObjects<ept id="2">&lt;/strong&gt;</ept> project and right clicking and selecting build in Visual Studio (if you select Rebuild all, you might have to update the versions for the <bpt id="4">&lt;strong&gt;</bpt>VisualObjects.WebService<ept id="4">&lt;/strong&gt;</ept> project as well in its <bpt id="6">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="6">&lt;/em&gt;</ept> and in the <bpt id="8">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="8">&lt;/em&gt;</ept>, since the code would have changed).</source>
            <target state="new">Now, build the project by selecting the <bpt id="2">&lt;strong&gt;</bpt>VisualObjects<ept id="2">&lt;/strong&gt;</ept> project and right clicking and selecting build in Visual Studio (if you select Rebuild all, you might have to update the versions for the <bpt id="4">&lt;strong&gt;</bpt>VisualObjects.WebService<ept id="4">&lt;/strong&gt;</ept> project as well in its <bpt id="6">&lt;em&gt;</bpt>ServiceManifest.xml<ept id="6">&lt;/em&gt;</ept> and in the <bpt id="8">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="8">&lt;/em&gt;</ept>, since the code would have changed).</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Now let's package the updated application by right clicking on the <bpt id="2">&lt;em&gt;</bpt>VisualObjects<ept id="2">&lt;/em&gt;</ept> project, selecting the Service Fabric Menu and choosing Package.</source>
            <target state="new">Now let's package the updated application by right clicking on the <bpt id="2">&lt;em&gt;</bpt>VisualObjects<ept id="2">&lt;/em&gt;</ept> project, selecting the Service Fabric Menu and choosing Package.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>This should create an application package that can be deployed.</source>
            <target state="new">This should create an application package that can be deployed.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Your updated application is ready to be deployed now.</source>
            <target state="new">Your updated application is ready to be deployed now.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Step 3:  Decide on health policies and upgrade parameters</source>
            <target state="new">Step 3:  Decide on health policies and upgrade parameters</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Please familiarize yourself with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>application upgrade parameters<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>upgrade process<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to get a good understanding of the various upgrade parameters, timeouts and health criterion applied.</source>
            <target state="new">Please familiarize yourself with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>application upgrade parameters<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>upgrade process<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to get a good understanding of the various upgrade parameters, timeouts and health criterion applied.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>For this walkthrough, we will leave the service health evaluation criterion to be the default (and recommended values) which mean that all services and instances should be <bpt id="2">&lt;em&gt;</bpt>healthy<ept id="2">&lt;/em&gt;</ept> after the upgrade.</source>
            <target state="new">For this walkthrough, we will leave the service health evaluation criterion to be the default (and recommended values) which mean that all services and instances should be <bpt id="2">&lt;em&gt;</bpt>healthy<ept id="2">&lt;/em&gt;</ept> after the upgrade.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Let's however increase the <bpt id="2">&lt;em&gt;</bpt>HealthCheckStableDuration<ept id="2">&lt;/em&gt;</ept> to 60 seconds (so that the services will be healthy for at least 20 seconds before the upgrade proceeds to the next upgrade domain).</source>
            <target state="new">Let's however increase the <bpt id="2">&lt;em&gt;</bpt>HealthCheckStableDuration<ept id="2">&lt;/em&gt;</ept> to 60 seconds (so that the services will be healthy for at least 20 seconds before the upgrade proceeds to the next upgrade domain).</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Let's also set the <bpt id="2">&lt;em&gt;</bpt>UpgradeDomainTimeout<ept id="2">&lt;/em&gt;</ept> to be 1200 seconds and the <bpt id="4">&lt;em&gt;</bpt>UpgradeTimeout<ept id="4">&lt;/em&gt;</ept> to be 3000 seconds.</source>
            <target state="new">Let's also set the <bpt id="2">&lt;em&gt;</bpt>UpgradeDomainTimeout<ept id="2">&lt;/em&gt;</ept> to be 1200 seconds and the <bpt id="4">&lt;em&gt;</bpt>UpgradeTimeout<ept id="4">&lt;/em&gt;</ept> to be 3000 seconds.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Finally, let's also set the <bpt id="2">&lt;em&gt;</bpt>UpgradeFailureAction<ept id="2">&lt;/em&gt;</ept> to rollback thereby requesting that Service Fabric rollback the application to the previous version if it encounters any issues during upgrade.</source>
            <target state="new">Finally, let's also set the <bpt id="2">&lt;em&gt;</bpt>UpgradeFailureAction<ept id="2">&lt;/em&gt;</ept> to rollback thereby requesting that Service Fabric rollback the application to the previous version if it encounters any issues during upgrade.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Thus, the upgrade parameters we will specify when starting the upgrade (in Step 4) will be the following:</source>
            <target state="new">Thus, the upgrade parameters we will specify when starting the upgrade (in Step 4) will be the following:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>FailureAction = Rollback</source>
            <target state="new">FailureAction = Rollback</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>HealthCheckStableDurationSec = 60</source>
            <target state="new">HealthCheckStableDurationSec = 60</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>UpgradeDomainTimeoutSec = 1200</source>
            <target state="new">UpgradeDomainTimeoutSec = 1200</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>UpgradeTimeout = 3000</source>
            <target state="new">UpgradeTimeout = 3000</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Step 4: Prepare Application for Upgrade</source>
            <target state="new">Step 4: Prepare Application for Upgrade</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Now, the application is built and ready to be upgraded.</source>
            <target state="new">Now, the application is built and ready to be upgraded.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>If you open up a PowerShell window as administrator and type <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplication<ept id="2">&lt;/strong&gt;</ept>, it should let you know that it is Application Type 1.0.0.0 of <bpt id="4">&lt;strong&gt;</bpt>VisualObjects<ept id="4">&lt;/strong&gt;</ept> that's been deployed.</source>
            <target state="new">If you open up a PowerShell window as administrator and type <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplication<ept id="2">&lt;/strong&gt;</ept>, it should let you know that it is Application Type 1.0.0.0 of <bpt id="4">&lt;strong&gt;</bpt>VisualObjects<ept id="4">&lt;/strong&gt;</ept> that's been deployed.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The application package is stored under the following relative path where you uncompressed the Service Fabric SDK - <bpt id="2">&lt;em&gt;</bpt>Samples\Services\Stateful\VisualObjects\VisualObjects\obj\x64\Debug<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">The application package is stored under the following relative path where you uncompressed the Service Fabric SDK - <bpt id="2">&lt;em&gt;</bpt>Samples\Services\Stateful\VisualObjects\VisualObjects\obj\x64\Debug<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>You should find a "Package" folder in that directory - this is where the application package is stored.</source>
            <target state="new">You should find a "Package" folder in that directory - this is where the application package is stored.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Please check the timestamps to ensure that it is the latest build (and you may need to modify the paths appropriately as well).</source>
            <target state="new">Please check the timestamps to ensure that it is the latest build (and you may need to modify the paths appropriately as well).</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Now let's copy the updated application package to the Service Fabric ImageStore (where the application packages are stored by Service Fabric).</source>
            <target state="new">Now let's copy the updated application package to the Service Fabric ImageStore (where the application packages are stored by Service Fabric).</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The parameter <bpt id="2">&lt;em&gt;</bpt>ApplicationPackagePathInImageStore<ept id="2">&lt;/em&gt;</ept> informs Service Fabric where it can find the application package.</source>
            <target state="new">The parameter <bpt id="2">&lt;em&gt;</bpt>ApplicationPackagePathInImageStore<ept id="2">&lt;/em&gt;</ept> informs Service Fabric where it can find the application package.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>We have put the updated application in "VisualObjects\_V2" with the following command (you may have to modify paths again appropriately).</source>
            <target state="new">We have put the updated application in "VisualObjects\_V2" with the following command (you may have to modify paths again appropriately).</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The next step is to register this application with Service Fabric, which can be performed using the following command:</source>
            <target state="new">The next step is to register this application with Service Fabric, which can be performed using the following command:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>If the above command doesn't succeed it is likely that you need a rebuild of all services.</source>
            <target state="new">If the above command doesn't succeed it is likely that you need a rebuild of all services.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>As mentioned in Step 2, you may have to update your WebService version as well.</source>
            <target state="new">As mentioned in Step 2, you may have to update your WebService version as well.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Step 5: Start Application Upgrade</source>
            <target state="new">Step 5: Start Application Upgrade</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Now, we are all set to start the application upgrade by using the following command:</source>
            <target state="new">Now, we are all set to start the application upgrade by using the following command:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Note the application name is as was described in the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> file.</source>
            <target state="new">Note the application name is as was described in the <bpt id="2">&lt;em&gt;</bpt>ApplicationManifest.xml<ept id="2">&lt;/em&gt;</ept> file.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Service Fabric uses this name to identify which application is getting upgraded.</source>
            <target state="new">Service Fabric uses this name to identify which application is getting upgraded.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>If you set the timeouts to be too short, you may encounter a failure message that states the problem.</source>
            <target state="new">If you set the timeouts to be too short, you may encounter a failure message that states the problem.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Refer to the troubleshooting section, or increase the timeouts.</source>
            <target state="new">Refer to the troubleshooting section, or increase the timeouts.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Now, as the application upgrade proceeds, you can monitor it using Service Fabric Explorer, or using the following PowerShell command: <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplicationUpgrade fabric:/VisualObjects<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Now, as the application upgrade proceeds, you can monitor it using Service Fabric Explorer, or using the following PowerShell command: <bpt id="2">&lt;strong&gt;</bpt>Get-ServiceFabricApplicationUpgrade fabric:/VisualObjects<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>In a few minutes, the status using the above PowerShell command should state that all upgrade domains were upgraded (completed).</source>
            <target state="new">In a few minutes, the status using the above PowerShell command should state that all upgrade domains were upgraded (completed).</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>And you should find that the visual objects in your browser window will now have started rotating!</source>
            <target state="new">And you should find that the visual objects in your browser window will now have started rotating!</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>You may want to try changing the versions and moving from version 2 to version 3 as an exercise, or even from version 2 back to version 1 (yes, you can upgrade from v2 to v1).</source>
            <target state="new">You may want to try changing the versions and moving from version 2 to version 3 as an exercise, or even from version 2 back to version 1 (yes, you can upgrade from v2 to v1).</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Play with timeouts and health policies to make yourself familiar.</source>
            <target state="new">Play with timeouts and health policies to make yourself familiar.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>When you are deploying to an Azure cluster, the parameters used will be different than those that worked when deploying to a local cluster - it is recommended to set the timeouts conservatively.</source>
            <target state="new">When you are deploying to an Azure cluster, the parameters used will be different than those that worked when deploying to a local cluster - it is recommended to set the timeouts conservatively.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Parameters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Parameters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Data Serialization<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Data Serialization<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Advanced Topics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Advanced Topics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting Application Upgrade <ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting Application Upgrade <ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>