<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 11:16:18 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">536bc701cbed312f66a309ceb2d8dd60edd2211f</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Enable offline sync for your Azure Mobile App (Windows 8.1) | Microsoft Azure</source>
            <target state="new">Enable offline sync for your Azure Mobile App (Windows 8.1) | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use an Azure Mobile App to cache and sync offline data in your Windows Store application</source>
            <target state="new">Learn how to use an Azure Mobile App to cache and sync offline data in your Windows Store application</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Enable offline sync for your Windows app</source>
            <target state="new">Enable offline sync for your Windows app</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/app-service-mobile-selector-offline-preview.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/app-service-mobile-selector-offline-preview.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>&amp;nbsp;</source>
            <target state="new">&amp;nbsp;</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/app-service-mobile-note-mobile-services-preview.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/app-service-mobile-note-mobile-services-preview.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This tutorial shows you how to add offline support to a Windows 8.1 Store or Phone app using an Azure Mobile App backend.</source>
            <target state="new">This tutorial shows you how to add offline support to a Windows 8.1 Store or Phone app using an Azure Mobile App backend.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Offline sync allows end-users to interact with a mobile app--viewing, adding, or modifying data--even when there is no network connection.</source>
            <target state="new">Offline sync allows end-users to interact with a mobile app--viewing, adding, or modifying data--even when there is no network connection.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Changes are stored in a local database; once the device is back online, these changes are synced with the remote backend.</source>
            <target state="new">Changes are stored in a local database; once the device is back online, these changes are synced with the remote backend.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In this tutorial, you will update the Windows 8.1 app project from the tutorial [Create a Windows app] to support the offline features of Azure Mobile Apps.</source>
            <target state="new">In this tutorial, you will update the Windows 8.1 app project from the tutorial [Create a Windows app] to support the offline features of Azure Mobile Apps.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>If you do not use the downloaded quick start server project, you must add the data access extension packages to your project.</source>
            <target state="new">If you do not use the downloaded quick start server project, you must add the data access extension packages to your project.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For more information about server extension packages, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about server extension packages, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>To learn more about the offline sync feature, see the topic [Offline Data Sync in Azure Mobile Apps].</source>
            <target state="new">To learn more about the offline sync feature, see the topic [Offline Data Sync in Azure Mobile Apps].</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Requirements</source>
            <target state="new">Requirements</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>This tutorial requires the following:</source>
            <target state="new">This tutorial requires the following:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Visual Studio 2013 running on Windows 8.1.</source>
            <target state="new">Visual Studio 2013 running on Windows 8.1.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Completion of <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Windows app[create a windows app]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Completion of <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Windows app[create a windows app]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Mobile Services SQLite Store version 2.0.0-beta[sqlite store nuget]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Mobile Services SQLite Store version 2.0.0-beta[sqlite store nuget]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SQLite for Windows 8.1<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SQLite for Windows 8.1<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Update the client app to support offline features</source>
            <target state="new">Update the client app to support offline features</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Azure Mobile App offline features allow you to interact with a local database when you are in an offline scenario.</source>
            <target state="new">Azure Mobile App offline features allow you to interact with a local database when you are in an offline scenario.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>To use these features in your app, you initialize a <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="2">&lt;/code&gt;</ept> to a local store.</source>
            <target state="new">To use these features in your app, you initialize a <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="2">&lt;/code&gt;</ept> to a local store.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Then reference your table through the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="2">&lt;/code&gt;</ept> interface.</source>
            <target state="new">Then reference your table through the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="2">&lt;/code&gt;</ept> interface.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In this tutorial we use SQLite for the local store.</source>
            <target state="new">In this tutorial we use SQLite for the local store.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Install the SQLite runtime for Windows 8.1 and Windows Phone 8.1.</source>
            <target state="new">Install the SQLite runtime for Windows 8.1 and Windows Phone 8.1.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows 8.1 Runtime:<ept id="1">&lt;/strong&gt;</ept> Install [SQLite for Windows 8.1].</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows 8.1 Runtime:<ept id="1">&lt;/strong&gt;</ept> Install [SQLite for Windows 8.1].</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.1:<ept id="1">&lt;/strong&gt;</ept> Install [SQLite for Windows Phone 8.1].</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.1:<ept id="1">&lt;/strong&gt;</ept> Install [SQLite for Windows Phone 8.1].</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>If you are using Internet Explorer, clicking the link to install SQLite may prompt you to download the .vsix as a .zip file.</source>
            <target state="new">If you are using Internet Explorer, clicking the link to install SQLite may prompt you to download the .vsix as a .zip file.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Save the file to a location on your hard drive with the .vsix extension instead of .zip.</source>
            <target state="new">Save the file to a location on your hard drive with the .vsix extension instead of .zip.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The double click the .vsix file in Windows Explorer to run the installation.</source>
            <target state="new">The double click the .vsix file in Windows Explorer to run the installation.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In Visual Studio open the project that you completed in the [Create a Windows app] tutorial.</source>
            <target state="new">In Visual Studio open the project that you completed in the [Create a Windows app] tutorial.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Install the <bpt id="2">&lt;strong&gt;</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="2">&lt;/strong&gt;</ept> NuGet package for the Windows 8.1 runtime and Windows Phone 8.1 projects.</source>
            <target state="new">Install the <bpt id="2">&lt;strong&gt;</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="2">&lt;/strong&gt;</ept> NuGet package for the Windows 8.1 runtime and Windows Phone 8.1 projects.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In Solution Explorer, right click the solution and click <bpt id="2">&lt;strong&gt;</bpt>Manage Nuget Packages for Solution<ept id="2">&lt;/strong&gt;</ept> to run NuGet Package Manager.</source>
            <target state="new">In Solution Explorer, right click the solution and click <bpt id="2">&lt;strong&gt;</bpt>Manage Nuget Packages for Solution<ept id="2">&lt;/strong&gt;</ept> to run NuGet Package Manager.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>In the "Online" tab, select the option "Include Prerelease" in the dropdown at the top.</source>
            <target state="new">In the "Online" tab, select the option "Include Prerelease" in the dropdown at the top.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Search for <bpt id="2">&lt;strong&gt;</bpt>SQLiteStore<ept id="2">&lt;/strong&gt;</ept> to install the 2.0.0-beta of <bpt id="4">&lt;code&gt;</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">Search for <bpt id="2">&lt;strong&gt;</bpt>SQLiteStore<ept id="2">&lt;/strong&gt;</ept> to install the 2.0.0-beta of <bpt id="4">&lt;code&gt;</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Then, add the NuGet reference to both the Windows Store 8.1 and Windows Phone 8.1 projects.</source>
            <target state="new">Then, add the NuGet reference to both the Windows Store 8.1 and Windows Phone 8.1 projects.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>If the installation creates an additional reference to a different version of SQLite than you have installed, you will get a compilation error.</source>
            <target state="new">If the installation creates an additional reference to a different version of SQLite than you have installed, you will get a compilation error.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>You should resolve this error by removing the duplicate in the <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> node in your projects.</source>
            <target state="new">You should resolve this error by removing the duplicate in the <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> node in your projects.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>In Solution Explorer, right click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> for the Windows 8.1 Runtime and Windows Phone 8.1 platform projects and ensure there is a reference to SQLite, which is located in the <bpt id="4">&lt;strong&gt;</bpt>Extensions<ept id="4">&lt;/strong&gt;</ept> section.</source>
            <target state="new">In Solution Explorer, right click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> for the Windows 8.1 Runtime and Windows Phone 8.1 platform projects and ensure there is a reference to SQLite, which is located in the <bpt id="4">&lt;strong&gt;</bpt>Extensions<ept id="4">&lt;/strong&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows 8.1 Runtime<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows 8.1 Runtime<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.1<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.1<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>SQLite is a native library and requires that you choose a platform-specific architecture such as <bpt id="2">&lt;strong&gt;</bpt>x86<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>x64<ept id="4">&lt;/strong&gt;</ept>, or <bpt id="6">&lt;strong&gt;</bpt>ARM<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">SQLite is a native library and requires that you choose a platform-specific architecture such as <bpt id="2">&lt;strong&gt;</bpt>x86<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>x64<ept id="4">&lt;/strong&gt;</ept>, or <bpt id="6">&lt;strong&gt;</bpt>ARM<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Any CPU<ept id="1">&lt;/strong&gt;</ept> is not supported.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Any CPU<ept id="1">&lt;/strong&gt;</ept> is not supported.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In Solution Explorer, click the Solution at the top, then change the processor architecture drop down box to one of the supported settings that you want to test.</source>
            <target state="new">In Solution Explorer, click the Solution at the top, then change the processor architecture drop down box to one of the supported settings that you want to test.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>In Solution Explorer, in the shared project, open the MainPage.cs file.</source>
            <target state="new">In Solution Explorer, in the shared project, open the MainPage.cs file.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Uncomment the following using statements at the top of the file:</source>
            <target state="new">Uncomment the following using statements at the top of the file:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>In MainPage.cs, comment the line of code that initializes <bpt id="2">&lt;code&gt;</bpt>todoTable<ept id="2">&lt;/code&gt;</ept> as an <bpt id="4">&lt;code&gt;</bpt>IMobileServiceTable<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">In MainPage.cs, comment the line of code that initializes <bpt id="2">&lt;code&gt;</bpt>todoTable<ept id="2">&lt;/code&gt;</ept> as an <bpt id="4">&lt;code&gt;</bpt>IMobileServiceTable<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Uncomment the line of code that initializes <bpt id="2">&lt;code&gt;</bpt>todoTable<ept id="2">&lt;/code&gt;</ept> as an <bpt id="4">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="4">&lt;/code&gt;</ept>:</source>
            <target state="new">Uncomment the line of code that initializes <bpt id="2">&lt;code&gt;</bpt>todoTable<ept id="2">&lt;/code&gt;</ept> as an <bpt id="4">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="4">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>In MainPage.cs, in the region marked <bpt id="2">&lt;code&gt;</bpt>Offline sync<ept id="2">&lt;/code&gt;</ept>, uncomment the methods <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>SyncAsync<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">In MainPage.cs, in the region marked <bpt id="2">&lt;code&gt;</bpt>Offline sync<ept id="2">&lt;/code&gt;</ept>, uncomment the methods <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>SyncAsync<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The method <bpt id="2">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="2">&lt;/code&gt;</ept> initializes the client sync context with a SQLite store.</source>
            <target state="new">The method <bpt id="2">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="2">&lt;/code&gt;</ept> initializes the client sync context with a SQLite store.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>In Visual Studio, you can select all commented lines and use the <bpt id="2">&lt;strong&gt;</bpt>Ctrl<ept id="2">&lt;/strong&gt;</ept>+<bpt id="4">&lt;strong&gt;</bpt>K<ept id="4">&lt;/strong&gt;</ept>+<bpt id="6">&lt;strong&gt;</bpt>U<ept id="6">&lt;/strong&gt;</ept> keyboard shortcut to uncomment.</source>
            <target state="new">In Visual Studio, you can select all commented lines and use the <bpt id="2">&lt;strong&gt;</bpt>Ctrl<ept id="2">&lt;/strong&gt;</ept>+<bpt id="4">&lt;strong&gt;</bpt>K<ept id="4">&lt;/strong&gt;</ept>+<bpt id="6">&lt;strong&gt;</bpt>U<ept id="6">&lt;/strong&gt;</ept> keyboard shortcut to uncomment.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Notice in <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> a push operation is executed off the <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/code&gt;</ept> instead of the <bpt id="6">&lt;code&gt;</bpt>IMobileServicesSyncTable<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">Notice in <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> a push operation is executed off the <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/code&gt;</ept> instead of the <bpt id="6">&lt;code&gt;</bpt>IMobileServicesSyncTable<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>This is because the context tracks changes made by the client for all tables.</source>
            <target state="new">This is because the context tracks changes made by the client for all tables.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>This is to cover scenarios where there are relationships between tables.</source>
            <target state="new">This is to cover scenarios where there are relationships between tables.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>For more information on this behavior, see [Offline Data Sync in Azure Mobile Apps].</source>
            <target state="new">For more information on this behavior, see [Offline Data Sync in Azure Mobile Apps].</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler, uncomment the call to <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept>:</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler, uncomment the call to <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Uncommment the 3 calls to <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> in the methods <bpt id="4">&lt;code&gt;</bpt>InsertTodoItem<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>UpdateCheckedTodoItem<ept id="6">&lt;/code&gt;</ept>, and <bpt id="8">&lt;code&gt;</bpt>ButtonRefresh_Click<ept id="8">&lt;/code&gt;</ept>:</source>
            <target state="new">Uncommment the 3 calls to <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> in the methods <bpt id="4">&lt;code&gt;</bpt>InsertTodoItem<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>UpdateCheckedTodoItem<ept id="6">&lt;/code&gt;</ept>, and <bpt id="8">&lt;code&gt;</bpt>ButtonRefresh_Click<ept id="8">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Add exception handlers in the <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> method.</source>
            <target state="new">Add exception handlers in the <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>In an offline situation a <bpt id="2">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="2">&lt;/code&gt;</ept> will be thrown with <bpt id="4">&lt;code&gt;</bpt>PushResult.Status == CancelledByNetworkError<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">In an offline situation a <bpt id="2">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="2">&lt;/code&gt;</ept> will be thrown with <bpt id="4">&lt;code&gt;</bpt>PushResult.Status == CancelledByNetworkError<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>In this <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept> example, we retrieve all records in the remote <bpt id="4">&lt;code&gt;</bpt>todoTable<ept id="4">&lt;/code&gt;</ept>, but it is also possible to filter records by passing a query.</source>
            <target state="new">In this <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept> example, we retrieve all records in the remote <bpt id="4">&lt;code&gt;</bpt>todoTable<ept id="4">&lt;/code&gt;</ept>, but it is also possible to filter records by passing a query.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The first parameter to <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept> is a query ID that is used for incremental sync, which uses the <bpt id="4">&lt;code&gt;</bpt>UpdatedAt<ept id="4">&lt;/code&gt;</ept> timestamp to get only records modified since the last sync.</source>
            <target state="new">The first parameter to <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept> is a query ID that is used for incremental sync, which uses the <bpt id="4">&lt;code&gt;</bpt>UpdatedAt<ept id="4">&lt;/code&gt;</ept> timestamp to get only records modified since the last sync.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>The query ID should be a descriptive string that is unique for each logical query in your client application.</source>
            <target state="new">The query ID should be a descriptive string that is unique for each logical query in your client application.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>To opt-out of incremental sync, pass <bpt id="2">&lt;code&gt;</bpt>null<ept id="2">&lt;/code&gt;</ept> as the query ID.</source>
            <target state="new">To opt-out of incremental sync, pass <bpt id="2">&lt;code&gt;</bpt>null<ept id="2">&lt;/code&gt;</ept> as the query ID.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>This will retrieve all records on each pull operation, which is potentially inefficient.</source>
            <target state="new">This will retrieve all records on each pull operation, which is potentially inefficient.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Note that the <bpt id="2">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="2">&lt;/code&gt;</ept> can occur for both a push and a pull operation.</source>
            <target state="new">Note that the <bpt id="2">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="2">&lt;/code&gt;</ept> can occur for both a push and a pull operation.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>It can occur for a pull because the pull operation internally executes a push to make sure all tables along with any relationships are consistent.</source>
            <target state="new">It can occur for a pull because the pull operation internally executes a push to make sure all tables along with any relationships are consistent.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the client app.</source>
            <target state="new">In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the client app.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>The app will behave the same as it did before the offline sync changes, because it does a sync operation on the insert, update, and refresh operations.</source>
            <target state="new">The app will behave the same as it did before the offline sync changes, because it does a sync operation on the insert, update, and refresh operations.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>However, it will populate a local database which can be used in an offline scenario.</source>
            <target state="new">However, it will populate a local database which can be used in an offline scenario.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>We will cause and offline scenario in the next section now that the local database is populated.</source>
            <target state="new">We will cause and offline scenario in the next section now that the local database is populated.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the sync behavior of the client app</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the sync behavior of the client app</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>In this section, you will modify the client app to simulate an offline scenario by breaking your connection to the Azure Mobile App backend.</source>
            <target state="new">In this section, you will modify the client app to simulate an offline scenario by breaking your connection to the Azure Mobile App backend.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>When you add data items, your exception handler will inform you that the app is operating in offline mode with <bpt id="2">&lt;code&gt;</bpt>PushResult.Status == CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">When you add data items, your exception handler will inform you that the app is operating in offline mode with <bpt id="2">&lt;code&gt;</bpt>PushResult.Status == CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Items added will be held in the local store, but not synced to the mobile app backend until you are online again and execute a successful push to the Azure Mobile App backend.</source>
            <target state="new">Items added will be held in the local store, but not synced to the mobile app backend until you are online again and execute a successful push to the Azure Mobile App backend.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Edit App.xaml.cs in the shared project.</source>
            <target state="new">Edit App.xaml.cs in the shared project.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Comment out the initialization of the <bpt id="2">&lt;strong&gt;</bpt>MobileServiceClient<ept id="2">&lt;/strong&gt;</ept> and add the following lines, which use an invalid mobile app URL:</source>
            <target state="new">Comment out the initialization of the <bpt id="2">&lt;strong&gt;</bpt>MobileServiceClient<ept id="2">&lt;/strong&gt;</ept> and add the following lines, which use an invalid mobile app URL:</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to build and run the app.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to build and run the app.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Notice your sync failed on refresh when the app launched.</source>
            <target state="new">Notice your sync failed on refresh when the app launched.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Enter some new todo items and click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept> for each one.</source>
            <target state="new">Enter some new todo items and click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept> for each one.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Push fails for each one with a <bpt id="2">&lt;code&gt;</bpt>PushResult.Status=CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Push fails for each one with a <bpt id="2">&lt;code&gt;</bpt>PushResult.Status=CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The new todo items exist only in the local store until they can be pushed to the mobile app backend.</source>
            <target state="new">The new todo items exist only in the local store until they can be pushed to the mobile app backend.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>You could suppress the exception dialog for <bpt id="2">&lt;code&gt;</bpt>PushResult.Status=CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>, then client app would behave as if its connected to the mobile app backend supporting all create, read, update, delete (CRUD) operations seamlessly.</source>
            <target state="new">You could suppress the exception dialog for <bpt id="2">&lt;code&gt;</bpt>PushResult.Status=CancelledByNetworkError<ept id="2">&lt;/code&gt;</ept>, then client app would behave as if its connected to the mobile app backend supporting all create, read, update, delete (CRUD) operations seamlessly.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Close the app and restart it to verify that the new items you created are persisted to the local store.</source>
            <target state="new">Close the app and restart it to verify that the new items you created are persisted to the local store.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>(Optional) Use Visual Studio to view your Azure SQL Database table to see that the data in the backend database has not changed.</source>
            <target state="new">(Optional) Use Visual Studio to view your Azure SQL Database table to see that the data in the backend database has not changed.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>In Visual Studio, open <bpt id="2">&lt;strong&gt;</bpt>Server Explorer<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, open <bpt id="2">&lt;strong&gt;</bpt>Server Explorer<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Navigate to your database in <bpt id="2">&lt;strong&gt;</bpt>Azure<ept id="2">&lt;/strong&gt;</ept>-&gt;<bpt id="4">&lt;strong&gt;</bpt>SQL Databases<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Navigate to your database in <bpt id="2">&lt;strong&gt;</bpt>Azure<ept id="2">&lt;/strong&gt;</ept>-&gt;<bpt id="4">&lt;strong&gt;</bpt>SQL Databases<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Right-click your database and select <bpt id="2">&lt;strong&gt;</bpt>Open in SQL Server Object Explorer<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click your database and select <bpt id="2">&lt;strong&gt;</bpt>Open in SQL Server Object Explorer<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Now you can browse to your SQL database table and its contents.</source>
            <target state="new">Now you can browse to your SQL database table and its contents.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>(Optional) Use a REST tool such as Fiddler or Postman to query your mobile backend, using a GET query in the form <bpt id="2">&lt;code&gt;</bpt>https://your-mobile-app-backend-name.azurewebsites.net/tables/TodoItem<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">(Optional) Use a REST tool such as Fiddler or Postman to query your mobile backend, using a GET query in the form <bpt id="2">&lt;code&gt;</bpt>https://your-mobile-app-backend-name.azurewebsites.net/tables/TodoItem<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to reconnect your Mobile App backend</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to reconnect your Mobile App backend</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>In this section you reconnect the app to the mobile app backend.</source>
            <target state="new">In this section you reconnect the app to the mobile app backend.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>This simulates the app moving from an offline state to an online state with the mobile app backend.</source>
            <target state="new">This simulates the app moving from an offline state to an online state with the mobile app backend.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>When you first run the application, the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler will call <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">When you first run the application, the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler will call <bpt id="4">&lt;code&gt;</bpt>InitLocalStoreAsync<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>This will in turn call <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> to sync your local store with the backend database.</source>
            <target state="new">This will in turn call <bpt id="2">&lt;code&gt;</bpt>SyncAsync<ept id="2">&lt;/code&gt;</ept> to sync your local store with the backend database.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>So the app will attempt to sync on start up.</source>
            <target state="new">So the app will attempt to sync on start up.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Open App.xaml.cs in the shared project.</source>
            <target state="new">Open App.xaml.cs in the shared project.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Uncomment your previous initialization of <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient<ept id="2">&lt;/code&gt;</ept> to use the correct Mobile App URL and gateway URL.</source>
            <target state="new">Uncomment your previous initialization of <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient<ept id="2">&lt;/code&gt;</ept> to use the correct Mobile App URL and gateway URL.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the app.</source>
            <target state="new">Press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the app.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>The app syncs your local changes with the Azure Mobile App backend using push and pull operations as soon as the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler executes.</source>
            <target state="new">The app syncs your local changes with the Azure Mobile App backend using push and pull operations as soon as the <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/code&gt;</ept> event handler executes.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>(Optional) View the updated data using either SQL Server Object Explorer or a REST tool like Fiddler.</source>
            <target state="new">(Optional) View the updated data using either SQL Server Object Explorer or a REST tool like Fiddler.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Notice the data has been synchronized between the Azure Mobile App backend database and the local store.</source>
            <target state="new">Notice the data has been synchronized between the Azure Mobile App backend database and the local store.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>In the app, click the check box beside a few items to complete them in the local store.</source>
            <target state="new">In the app, click the check box beside a few items to complete them in the local store.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>UpdateCheckedTodoItem<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>SyncAsync<ept id="3">&lt;/code&gt;</ept> to sync the complete each item with the Mobile App backend.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>UpdateCheckedTodoItem<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>SyncAsync<ept id="3">&lt;/code&gt;</ept> to sync the complete each item with the Mobile App backend.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>SyncAsync<ept id="1">&lt;/code&gt;</ept> calls both push and pull.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>SyncAsync<ept id="1">&lt;/code&gt;</ept> calls both push and pull.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>However, you should note that <bpt id="2">&lt;strong&gt;</bpt>whenever you execute a pull against a table that the client has made changes to, a push on the client sync context will always be executed first automatically<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">However, you should note that <bpt id="2">&lt;strong&gt;</bpt>whenever you execute a pull against a table that the client has made changes to, a push on the client sync context will always be executed first automatically<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>This is to ensure all tables in the local store, along with relationships remain consistent.</source>
            <target state="new">This is to ensure all tables in the local store, along with relationships remain consistent.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>So in this case we could have removed the call to <bpt id="2">&lt;code&gt;</bpt>PushAsync<ept id="2">&lt;/code&gt;</ept> because it is executed automatically when executing a pull.</source>
            <target state="new">So in this case we could have removed the call to <bpt id="2">&lt;code&gt;</bpt>PushAsync<ept id="2">&lt;/code&gt;</ept> because it is executed automatically when executing a pull.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>This behavior may result in an unexpected push if you are not aware of it.</source>
            <target state="new">This behavior may result in an unexpected push if you are not aware of it.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>For more information on this behavior, see [Offline Data Sync in Azure Mobile Apps].</source>
            <target state="new">For more information on this behavior, see [Offline Data Sync in Azure Mobile Apps].</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>Summary</source>
            <target state="new">Summary</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>In order to support the offline features of mobile services, we used the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="2">&lt;/code&gt;</ept> interface and initialized <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/code&gt;</ept> with a local store.</source>
            <target state="new">In order to support the offline features of mobile services, we used the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable<ept id="2">&lt;/code&gt;</ept> interface and initialized <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/code&gt;</ept> with a local store.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>In this case the local store was a SQLite database.</source>
            <target state="new">In this case the local store was a SQLite database.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>The normal CRUD operations for mobile services work as if the app is still connected but, all the operations occur against the local store.</source>
            <target state="new">The normal CRUD operations for mobile services work as if the app is still connected but, all the operations occur against the local store.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>When we want to synchronize the local store with the server, we used the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.PushAsync<ept id="4">&lt;/code&gt;</ept> methods.</source>
            <target state="new">When we want to synchronize the local store with the server, we used the <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.PushAsync<ept id="4">&lt;/code&gt;</ept> methods.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>To push changes to the server, we called <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncContext.PushAsync()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To push changes to the server, we called <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncContext.PushAsync()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>This method is a member of <bpt id="2">&lt;code&gt;</bpt>IMobileServicesSyncContext<ept id="2">&lt;/code&gt;</ept> instead of the sync table because it will push changes across all tables.</source>
            <target state="new">This method is a member of <bpt id="2">&lt;code&gt;</bpt>IMobileServicesSyncContext<ept id="2">&lt;/code&gt;</ept> instead of the sync table because it will push changes across all tables.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Only records that have been modified in some way locally (through CUD operations) will be sent to the server.</source>
            <target state="new">Only records that have been modified in some way locally (through CUD operations) will be sent to the server.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>To pull data from a table on the server to the app, we called <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To pull data from a table on the server to the app, we called <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PullAsync<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>A pull always issues a sync context push first if the client sync context has tracked changes on that table.</source>
            <target state="new">A pull always issues a sync context push first if the client sync context has tracked changes on that table.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>This is to ensure all tables in the local store along with relationships remain consistent.</source>
            <target state="new">This is to ensure all tables in the local store along with relationships remain consistent.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>There are also overloads of <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept> that allow a query to be specified in order to filter the data that is stored on the client.</source>
            <target state="new">There are also overloads of <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept> that allow a query to be specified in order to filter the data that is stored on the client.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>If a query is not passed, <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept> will pull all rows in the corresponding table (or query).</source>
            <target state="new">If a query is not passed, <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept> will pull all rows in the corresponding table (or query).</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>You can pass the query to filter only the changes your app needs to sync with.</source>
            <target state="new">You can pass the query to filter only the changes your app needs to sync with.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>To enable incremental sync, pass a query ID to <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To enable incremental sync, pass a query ID to <bpt id="2">&lt;code&gt;</bpt>PullAsync()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>The query ID is used to store the last updated timestamp from the results of the last pull operation.</source>
            <target state="new">The query ID is used to store the last updated timestamp from the results of the last pull operation.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>The query ID should be a descriptive string that is unique for each logical query in your app.</source>
            <target state="new">The query ID should be a descriptive string that is unique for each logical query in your app.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>If the query has a parameter, then the same parameter value could be part of the query ID.</source>
            <target state="new">If the query has a parameter, then the same parameter value could be part of the query ID.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>For instance, if you are filtering on userid, your unique query ID could be:</source>
            <target state="new">For instance, if you are filtering on userid, your unique query ID could be:</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>If you want to opt out of incremental sync, pass <bpt id="2">&lt;code&gt;</bpt>null<ept id="2">&lt;/code&gt;</ept> as the query ID.</source>
            <target state="new">If you want to opt out of incremental sync, pass <bpt id="2">&lt;code&gt;</bpt>null<ept id="2">&lt;/code&gt;</ept> as the query ID.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>In this case, all records will be retrieved on every call to <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept>, which is potentially inefficient.</source>
            <target state="new">In this case, all records will be retrieved on every call to <bpt id="2">&lt;code&gt;</bpt>PullAsync<ept id="2">&lt;/code&gt;</ept>, which is potentially inefficient.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Your app should periodically call <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PurgeAsync()<ept id="2">&lt;/code&gt;</ept> to purge the local store.</source>
            <target state="new">Your app should periodically call <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable.PurgeAsync()<ept id="2">&lt;/code&gt;</ept> to purge the local store.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Additional Resources</source>
            <target state="new">Additional Resources</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>[Offline Data Sync in Azure Mobile Apps]</source>
            <target state="new">[Offline Data Sync in Azure Mobile Apps]</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>[Cloud Cover: Offline Sync in Azure Mobile Services] \(note: the video is on Mobile Services, but offline sync works in a similar way in Azure Mobile Apps\)</source>
            <target state="new">[Cloud Cover: Offline Sync in Azure Mobile Services] \(note: the video is on Mobile Services, but offline sync works in a similar way in Azure Mobile Apps\)</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>[Azure Friday: Offline-enabled apps in Azure Mobile Services]</source>
            <target state="new">[Azure Friday: Offline-enabled apps in Azure Mobile Services]</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>