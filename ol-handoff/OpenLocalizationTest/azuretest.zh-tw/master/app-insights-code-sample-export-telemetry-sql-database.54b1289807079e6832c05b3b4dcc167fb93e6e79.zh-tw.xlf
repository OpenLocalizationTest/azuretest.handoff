<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 11:25:52 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">207e6c0526bfbc1fc5ebe911560d0eb70cc51970</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Code sample: export to SQL from Application Insights using a worker role</source>
            <target state="new">Code sample: export to SQL from Application Insights using a worker role</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Code your own analysis of telemetry in Application Insights by using the continuous export feature.</source>
            <target state="new">Code your own analysis of telemetry in Application Insights by using the continuous export feature.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Code sample: export to SQL from Application Insights using a worker role</source>
            <target state="new">Code sample: export to SQL from Application Insights using a worker role</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This article shows how to move your telemetry data from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio Application Insights[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> into an Azure SQL database by using <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Continuous Export[export]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and a small amount of code.</source>
            <target state="new">This article shows how to move your telemetry data from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio Application Insights[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> into an Azure SQL database by using <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Continuous Export[export]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and a small amount of code.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Continuous export moves your telemetry into Azure Storage in JSON format, so we'll write some code to parse the JSON objects and create rows in a database table.</source>
            <target state="new">Continuous export moves your telemetry into Azure Storage in JSON format, so we'll write some code to parse the JSON objects and create rows in a database table.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>(More generally, Continuous Export is the way to do your own analysis of the telemetry your apps send to Application Insights.</source>
            <target state="new">(More generally, Continuous Export is the way to do your own analysis of the telemetry your apps send to Application Insights.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>You could adapt this code sample to do other things with the exported telemetry.)</source>
            <target state="new">You could adapt this code sample to do other things with the exported telemetry.)</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>We'll start with the assumption that you already have the app you want to monitor.</source>
            <target state="new">We'll start with the assumption that you already have the app you want to monitor.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Add Application Insights SDK</source>
            <target state="new">Add Application Insights SDK</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>To monitor your application, you <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>add an Application Insights SDK[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to your application.</source>
            <target state="new">To monitor your application, you <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>add an Application Insights SDK[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to your application.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>There are different SDKs and helper tools for different platforms, IDEs and languages.</source>
            <target state="new">There are different SDKs and helper tools for different platforms, IDEs and languages.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>You can monitor web pages, Java or ASP.NET web servers, and mobile devices of several kinds.</source>
            <target state="new">You can monitor web pages, Java or ASP.NET web servers, and mobile devices of several kinds.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>All the SDKs send telemetry to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, where you can use our powerful analysis and diagnostic tools, and export the data to storage.</source>
            <target state="new">All the SDKs send telemetry to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, where you can use our powerful analysis and diagnostic tools, and export the data to storage.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>To get started:</source>
            <target state="new">To get started:</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Get an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>account in Microsoft Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Get an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>account in Microsoft Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, add a new Application Insights resource for your app:</source>
            <target state="new">In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, add a new Application Insights resource for your app:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Choose New, Developer Services, Application Insights, and choose the type of application<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Choose New, Developer Services, Application Insights, and choose the type of application<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>(Your app type and subscription might be different.)</source>
            <target state="new">(Your app type and subscription might be different.)</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Open Quick Start to find how to set up the SDK for your app type.</source>
            <target state="new">Open Quick Start to find how to set up the SDK for your app type.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Choose Quick Start and follow instructions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Choose Quick Start and follow instructions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>If your app type isn't listed, take a look at the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting Started[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> page.</source>
            <target state="new">If your app type isn't listed, take a look at the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting Started[start]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> page.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In this example, we're monitoring a web app, so we can use the Azure tools in Visual Studio to install the SDK.</source>
            <target state="new">In this example, we're monitoring a web app, so we can use the Azure tools in Visual Studio to install the SDK.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>We tell it the name of our Application Insights resource:</source>
            <target state="new">We tell it the name of our Application Insights resource:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In Visual Studio, in the New Project dialog, check Add Application Insights, and under Send telemetry to, choose to create a new app, or use an existing one.<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In Visual Studio, in the New Project dialog, check Add Application Insights, and under Send telemetry to, choose to create a new app, or use an existing one.<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Create storage in Azure</source>
            <target state="new">Create storage in Azure</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Create a storage account in your subscription in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Create a storage account in your subscription in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In Azure portal, choose New, Data, Storage<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In Azure portal, choose New, Data, Storage<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Create a container</source>
            <target state="new">Create a container</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In the new storage, select Containers and then Add<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In the new storage, select Containers and then Add<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Start continuous export to Azure storage</source>
            <target state="new">Start continuous export to Azure storage</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>In the Azure portal, browse to the Application Insights resource you created for your application.</source>
            <target state="new">In the Azure portal, browse to the Application Insights resource you created for your application.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Choose Browse, Application Insights, your application<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Choose Browse, Application Insights, your application<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Create a continuous export.</source>
            <target state="new">Create a continuous export.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Choose Settings, Continuous Export, Add<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Choose Settings, Continuous Export, Add<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Select the storage account you created earlier:</source>
            <target state="new">Select the storage account you created earlier:</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Set the export destination<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Set the export destination<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Set the event types you want to see:</source>
            <target state="new">Set the event types you want to see:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Choose event types<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Choose event types<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Let some data accumulate.</source>
            <target state="new">Let some data accumulate.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Sit back and let people use your application for a while.</source>
            <target state="new">Sit back and let people use your application for a while.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Telemetry will come in and you'll see statistical charts in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>metric explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and individual events in <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>diagnostic search<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Telemetry will come in and you'll see statistical charts in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>metric explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and individual events in <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>diagnostic search<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>And also, the data will export to your storage.</source>
            <target state="new">And also, the data will export to your storage.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Inspect the exported data.</source>
            <target state="new">Inspect the exported data.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In Visual Studio, choose <bpt id="2">&lt;strong&gt;</bpt>View / Cloud Explorer<ept id="2">&lt;/strong&gt;</ept>, and open Azure / Storage.</source>
            <target state="new">In Visual Studio, choose <bpt id="2">&lt;strong&gt;</bpt>View / Cloud Explorer<ept id="2">&lt;/strong&gt;</ept>, and open Azure / Storage.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>(If you don't have this menu option, you need to install the Azure SDK: Open the New Project dialog and open Visual C# / Cloud / Get Microsoft Azure SDK for .NET.)</source>
            <target state="new">(If you don't have this menu option, you need to install the Azure SDK: Open the New Project dialog and open Visual C# / Cloud / Get Microsoft Azure SDK for .NET.)</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In Visual Studio, open Server Browser, Azure, Storage<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In Visual Studio, open Server Browser, Azure, Storage<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Make a note of the common part of the path name, which is derived from the application name and instrumentation key.</source>
            <target state="new">Make a note of the common part of the path name, which is derived from the application name and instrumentation key.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The events are written to blob files in JSON format.</source>
            <target state="new">The events are written to blob files in JSON format.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Each file may contain one or more events.</source>
            <target state="new">Each file may contain one or more events.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>So we'd like to read the event data and filter out the fields we want.</source>
            <target state="new">So we'd like to read the event data and filter out the fields we want.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>There are all kinds of things we could do with the data, but our plan today is to write some code to move the data to a SQL database.</source>
            <target state="new">There are all kinds of things we could do with the data, but our plan today is to write some code to move the data to a SQL database.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>That will make it easy to run lots of interesting queries.</source>
            <target state="new">That will make it easy to run lots of interesting queries.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Create an Azure SQL Database</source>
            <target state="new">Create an Azure SQL Database</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Once again starting from your subscription in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, create the database (and a new server, unless you've already got one) to which you'll write the data.</source>
            <target state="new">Once again starting from your subscription in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[portal]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, create the database (and a new server, unless you've already got one) to which you'll write the data.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>New, Data, SQL<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>New, Data, SQL<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Make sure that the database server allows access to Azure services:</source>
            <target state="new">Make sure that the database server allows access to Azure services:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Browse, Servers, your server, Settings, Firewall, Allow Access to Azure<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Browse, Servers, your server, Settings, Firewall, Allow Access to Azure<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Create a worker role</source>
            <target state="new">Create a worker role</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Now we can write <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>some code<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to parse the JSON in the exported blobs, and create records in the database.</source>
            <target state="new">Now we can write <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>some code<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to parse the JSON in the exported blobs, and create records in the database.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Since the export store and the database are both in Azure, we'll run the code in an Azure worker role.</source>
            <target state="new">Since the export store and the database are both in Azure, we'll run the code in an Azure worker role.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>This code automatically extracts whatever properties are present in the JSON.</source>
            <target state="new">This code automatically extracts whatever properties are present in the JSON.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>For descriptions of the properties, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Export data model<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For descriptions of the properties, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Export data model<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Create worker role project</source>
            <target state="new">Create worker role project</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>In Visual Studio, create a new project for the worker role:</source>
            <target state="new">In Visual Studio, create a new project for the worker role:</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>New Project, Visual C#, Cloud, Azure Cloud Service<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>New Project, Visual C#, Cloud, Azure Cloud Service<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In new cloud service dialog, choose Visual C#, Worker Role<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In new cloud service dialog, choose Visual C#, Worker Role<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Connect to the storage account</source>
            <target state="new">Connect to the storage account</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>In Azure, get the connection string from your Storage account:</source>
            <target state="new">In Azure, get the connection string from your Storage account:</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>In the Storage Account, select Keys, and copy Primary Connection String<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>In the Storage Account, select Keys, and copy Primary Connection String<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>In Visual Studio, configure the worker role settings with the Storage account connection string:</source>
            <target state="new">In Visual Studio, configure the worker role settings with the Storage account connection string:</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>![In Solution Explorer, under the Cloud Service project, expand Roles, and open your worker role.</source>
            <target state="new">![In Solution Explorer, under the Cloud Service project, expand Roles, and open your worker role.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Open the settings tab, choose Add Setting, and set name=StorageConnectionString, type=connection string, click to set the value.</source>
            <target state="new">Open the settings tab, choose Add Setting, and set name=StorageConnectionString, type=connection string, click to set the value.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Set it manually and paste the connection string.](./media/app-insights-code-sample-export-telemetry-sql-database/130-connection-string.png)</source>
            <target state="new">Set it manually and paste the connection string.](./media/app-insights-code-sample-export-telemetry-sql-database/130-connection-string.png)</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Packages</source>
            <target state="new">Packages</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>In Solution Explorer, right-click your Worker Role project and choose Manage NuGet Packages.</source>
            <target state="new">In Solution Explorer, right-click your Worker Role project and choose Manage NuGet Packages.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Search for and install these packages:</source>
            <target state="new">Search for and install these packages:</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>EntityFramework 6.1.2 or later - We'll use this to generate the DB table schema on the fly, based on the content of the JSON in the blob.</source>
            <target state="new">EntityFramework 6.1.2 or later - We'll use this to generate the DB table schema on the fly, based on the content of the JSON in the blob.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>JsonFx - We'll use this for flattening the JSON to C# class properties.</source>
            <target state="new">JsonFx - We'll use this for flattening the JSON to C# class properties.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Use this tool to generate C# Class out of our single JSON document.</source>
            <target state="new">Use this tool to generate C# Class out of our single JSON document.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>It requires some minor changes like flattening JSON arrays into single C# property in turn single column in DB table (ex.</source>
            <target state="new">It requires some minor changes like flattening JSON arrays into single C# property in turn single column in DB table (ex.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>urlData_port)</source>
            <target state="new">urlData_port)</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>JSON C# class generator<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>JSON C# class generator<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Code</source>
            <target state="new">Code</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>You can put this code in <bpt id="2">&lt;code&gt;</bpt>WorkerRole.cs<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">You can put this code in <bpt id="2">&lt;code&gt;</bpt>WorkerRole.cs<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Imports</source>
            <target state="new">Imports</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Retrieve the storage connection string</source>
            <target state="new">Retrieve the storage connection string</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Run the worker at regular intervals</source>
            <target state="new">Run the worker at regular intervals</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Replace the existing run method, and choose the interval you prefer.</source>
            <target state="new">Replace the existing run method, and choose the interval you prefer.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>It should be at least one hour, because the export feature completes one JSON object in an hour.</source>
            <target state="new">It should be at least one hour, because the export feature completes one JSON object in an hour.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Insert each JSON object as a table row</source>
            <target state="new">Insert each JSON object as a table row</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Parse each blob</source>
            <target state="new">Parse each blob</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Prepare a dictionary for each JSON document</source>
            <target state="new">Prepare a dictionary for each JSON document</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Cast the JSON document into C# class telemetry object properties</source>
            <target state="new">Cast the JSON document into C# class telemetry object properties</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>PageViewPerformance class file generated out of JSON document</source>
            <target state="new">PageViewPerformance class file generated out of JSON document</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>DBcontext for SQL interaction by Entity Framework</source>
            <target state="new">DBcontext for SQL interaction by Entity Framework</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Add your DB connection string with name <bpt id="2">&lt;code&gt;</bpt>TelemetryContext<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;code&gt;</bpt>app.config<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">Add your DB connection string with name <bpt id="2">&lt;code&gt;</bpt>TelemetryContext<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;code&gt;</bpt>app.config<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Schema (information only)</source>
            <target state="new">Schema (information only)</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>This is the schema for the table that will be generated for PageView.</source>
            <target state="new">This is the schema for the table that will be generated for PageView.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>You don't have to run this script.</source>
            <target state="new">You don't have to run this script.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>The attributes in the JSON determine the columns in the table.</source>
            <target state="new">The attributes in the JSON determine the columns in the table.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>To see this example in action, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> the complete working code, change the <bpt id="4">&lt;code&gt;</bpt>app.config<ept id="4">&lt;/code&gt;</ept> settings and publish the worker role to Azure.</source>
            <target state="new">To see this example in action, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> the complete working code, change the <bpt id="4">&lt;code&gt;</bpt>app.config<ept id="4">&lt;/code&gt;</ept> settings and publish the worker role to Azure.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Related articles</source>
            <target state="new">Related articles</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Export to SQL using a worker role<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Export to SQL using a worker role<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Continuous Export in Application Insights<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Continuous Export in Application Insights<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Application Insights<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Application Insights<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Export data model<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Export data model<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>More samples and walkthroughs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>More samples and walkthroughs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>