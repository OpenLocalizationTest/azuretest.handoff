<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 1:24:59 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11b54ff5e7f3f1ef4f4c121c44b7cfe32b2182bb</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>In Visual Studio, open the MainPage.xaml file in your quickstart project, locate the <bpt id="2">&lt;strong&gt;</bpt>Button<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;code&gt;</bpt>ButtonRefresh<ept id="4">&lt;/code&gt;</ept>, and replace it with the following XAML code:</source>
            <target state="new">In Visual Studio, open the MainPage.xaml file in your quickstart project, locate the <bpt id="2">&lt;strong&gt;</bpt>Button<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;code&gt;</bpt>ButtonRefresh<ept id="4">&lt;/code&gt;</ept>, and replace it with the following XAML code:</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>This adds a new button to the page.</source>
            <target state="new">This adds a new button to the page.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Open the MainPage.xaml.cs code file, and add the following class definition code:</source>
            <target state="new">Open the MainPage.xaml.cs code file, and add the following class definition code:</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This class is used to hold the row count value returned by the custom API.</source>
            <target state="new">This class is used to hold the row count value returned by the custom API.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Locate the <bpt id="2">&lt;strong&gt;</bpt>RefreshTodoItems<ept id="2">&lt;/strong&gt;</ept> method in the <bpt id="4">&lt;strong&gt;</bpt>MainPage<ept id="4">&lt;/strong&gt;</ept> class, and make sure that the <bpt id="6">&lt;code&gt;</bpt>query<ept id="6">&lt;/code&gt;</ept> is defined by using the following <bpt id="8">&lt;strong&gt;</bpt>Where<ept id="8">&lt;/strong&gt;</ept> method:</source>
            <target state="new">Locate the <bpt id="2">&lt;strong&gt;</bpt>RefreshTodoItems<ept id="2">&lt;/strong&gt;</ept> method in the <bpt id="4">&lt;strong&gt;</bpt>MainPage<ept id="4">&lt;/strong&gt;</ept> class, and make sure that the <bpt id="6">&lt;code&gt;</bpt>query<ept id="6">&lt;/code&gt;</ept> is defined by using the following <bpt id="8">&lt;strong&gt;</bpt>Where<ept id="8">&lt;/strong&gt;</ept> method:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This filters the items so that completed items are not returned by the query.</source>
            <target state="new">This filters the items so that completed items are not returned by the query.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>MainPage<ept id="2">&lt;/strong&gt;</ept> class, add the following method:</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>MainPage<ept id="2">&lt;/strong&gt;</ept> class, add the following method:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</source>
            <target state="new">This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>InvokeApiAsync<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a request to the new custom API.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>InvokeApiAsync<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a request to the new custom API.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The result returned by the custom API is displayed in a message dialog.</source>
            <target state="new">The result returned by the custom API is displayed in a message dialog.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild the project and start the app.</source>
            <target state="new">In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild the project and start the app.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then tap <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then tap <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Repeat the previous step until you have added several todo items to the list.</source>
            <target state="new">Repeat the previous step until you have added several todo items to the list.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Tap the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Tap the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>A message box is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</source>
            <target state="new">A message box is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>