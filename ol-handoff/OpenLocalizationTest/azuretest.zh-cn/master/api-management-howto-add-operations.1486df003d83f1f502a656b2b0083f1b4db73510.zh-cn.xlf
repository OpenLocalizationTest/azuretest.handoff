<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:53:23 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">767b5723e477af9df2071de79efa111681569880</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to add operations to an API in Azure API Management</source>
            <target state="new">How to add operations to an API in Azure API Management</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to add operations to an API in Azure API Management.</source>
            <target state="new">Learn how to add operations to an API in Azure API Management.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to add operations to an API in Azure API Management</source>
            <target state="new">How to add operations to an API in Azure API Management</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Before an API in API Management can be used, operations must be added.</source>
            <target state="new">Before an API in API Management can be used, operations must be added.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This guide shows how to add and configure different types of operations to an API in API Management.</source>
            <target state="new">This guide shows how to add and configure different types of operations to an API in API Management.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Add an operation</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Add an operation</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Operations are added and configured to an API in the publisher portal.</source>
            <target state="new">Operations are added and configured to an API in the publisher portal.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>To access the publisher portal, click <bpt id="2">&lt;strong&gt;</bpt>Manage<ept id="2">&lt;/strong&gt;</ept> in the Azure Portal for your API Management service.</source>
            <target state="new">To access the publisher portal, click <bpt id="2">&lt;strong&gt;</bpt>Manage<ept id="2">&lt;/strong&gt;</ept> in the Azure Portal for your API Management service.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Publisher portal<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Publisher portal<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>If you have not yet created an API Management service instance, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an API Management service instance[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> 在 <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Get started with Azure API Management[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> tutorial.</source>
            <target state="new">If you have not yet created an API Management service instance, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an API Management service instance[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> 在 <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Get started with Azure API Management[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> tutorial.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Select the desired API in the API Management portal and then select the <bpt id="2">&lt;strong&gt;</bpt>Operations<ept id="2">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">Select the desired API in the API Management portal and then select the <bpt id="2">&lt;strong&gt;</bpt>Operations<ept id="2">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Operations<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Operations<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Add Operation<ept id="2">&lt;/strong&gt;</ept> to add a new operation.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Add Operation<ept id="2">&lt;/strong&gt;</ept> to add a new operation.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>New operation<ept id="2">&lt;/strong&gt;</ept> will be displayed and the <bpt id="4">&lt;strong&gt;</bpt>Signature<ept id="4">&lt;/strong&gt;</ept> tab will be selected by default.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>New operation<ept id="2">&lt;/strong&gt;</ept> will be displayed and the <bpt id="4">&lt;strong&gt;</bpt>Signature<ept id="4">&lt;/strong&gt;</ept> tab will be selected by default.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Add operation<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Add operation<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Specify the <bpt id="2">&lt;strong&gt;</bpt>HTTP verb<ept id="2">&lt;/strong&gt;</ept> by choosing from the drop-down list.</source>
            <target state="new">Specify the <bpt id="2">&lt;strong&gt;</bpt>HTTP verb<ept id="2">&lt;/strong&gt;</ept> by choosing from the drop-down list.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>HTTP method<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>HTTP method<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Define the URL template by typing in a URL fragment consisting of one or more URL path segments and zero or more query string parameters.</source>
            <target state="new">Define the URL template by typing in a URL fragment consisting of one or more URL path segments and zero or more query string parameters.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The URL template, appended to the base URL of the API, identifies a single HTTP operation.</source>
            <target state="new">The URL template, appended to the base URL of the API, identifies a single HTTP operation.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>It may contain one or more named variable parts that are identified by curly braces.</source>
            <target state="new">It may contain one or more named variable parts that are identified by curly braces.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>These variable parts are called template parameters and are dynamically assigned values extracted from the request's URL when the request is being processed by the API Management platform.</source>
            <target state="new">These variable parts are called template parameters and are dynamically assigned values extracted from the request's URL when the request is being processed by the API Management platform.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>URL template<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>URL template<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>If desired, specify the <bpt id="2">&lt;strong&gt;</bpt>Rewrite URL template<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">If desired, specify the <bpt id="2">&lt;strong&gt;</bpt>Rewrite URL template<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This allows you to use the standard URL template for processing incoming requests on the front-end, while calling the back-end via a converted URL according to the rewrite template.</source>
            <target state="new">This allows you to use the standard URL template for processing incoming requests on the front-end, while calling the back-end via a converted URL according to the rewrite template.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Template parameters from the URL template should be used in the rewrite template.</source>
            <target state="new">Template parameters from the URL template should be used in the rewrite template.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The following example shows how content type encoded as path segment in the web service from the previous example can be provided as a query parameter in the API published via the API Management platform using the URL templates.</source>
            <target state="new">The following example shows how content type encoded as path segment in the web service from the previous example can be provided as a query parameter in the API published via the API Management platform using the URL templates.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>URL template rewrite<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>URL template rewrite<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Callers to the operation will use the format <bpt id="2">&lt;code&gt;</bpt>/customers?customerid=ALFKI<ept id="2">&lt;/code&gt;</ept> and this will be mapped to <bpt id="4">&lt;code&gt;</bpt>/Customers('ALFKI')<ept id="4">&lt;/code&gt;</ept> when the back-end service is invoked.</source>
            <target state="new">Callers to the operation will use the format <bpt id="2">&lt;code&gt;</bpt>/customers?customerid=ALFKI<ept id="2">&lt;/code&gt;</ept> and this will be mapped to <bpt id="4">&lt;code&gt;</bpt>/Customers('ALFKI')<ept id="4">&lt;/code&gt;</ept> when the back-end service is invoked.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Display<ept id="1">&lt;/strong&gt;</ept> name and <bpt id="3">&lt;strong&gt;</bpt>Description<ept id="3">&lt;/strong&gt;</ept> provide a description of the operation and are used to provide documentation to the developers using this API in the developer portal.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Display<ept id="1">&lt;/strong&gt;</ept> name and <bpt id="3">&lt;strong&gt;</bpt>Description<ept id="3">&lt;/strong&gt;</ept> provide a description of the operation and are used to provide documentation to the developers using this API in the developer portal.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Description<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Description<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The operation description can be specified as plain text or HTML in the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</source>
            <target state="new">The operation description can be specified as plain text or HTML in the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Operation caching</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Operation caching</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Response caching reduces latency perceived by the API consumers, lowers bandwidth consumption and decreases the load on the HTTP web service implementing the API.</source>
            <target state="new">Response caching reduces latency perceived by the API consumers, lowers bandwidth consumption and decreases the load on the HTTP web service implementing the API.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>To easily and quickly enable caching for the operation, select the <bpt id="2">&lt;strong&gt;</bpt>Caching<ept id="2">&lt;/strong&gt;</ept> tab and check the <bpt id="4">&lt;strong&gt;</bpt>Enable<ept id="4">&lt;/strong&gt;</ept> checkbox.</source>
            <target state="new">To easily and quickly enable caching for the operation, select the <bpt id="2">&lt;strong&gt;</bpt>Caching<ept id="2">&lt;/strong&gt;</ept> tab and check the <bpt id="4">&lt;strong&gt;</bpt>Enable<ept id="4">&lt;/strong&gt;</ept> checkbox.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Caching<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Caching<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Duration<ept id="1">&lt;/strong&gt;</ept> specifies the time period during which the operation response remains in the cache.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Duration<ept id="1">&lt;/strong&gt;</ept> specifies the time period during which the operation response remains in the cache.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The default value is 3600 seconds or 1 hour.</source>
            <target state="new">The default value is 3600 seconds or 1 hour.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Cache keys are used to differentiate between responses so that the response corresponding to each different cache key will get its own separate cached value.</source>
            <target state="new">Cache keys are used to differentiate between responses so that the response corresponding to each different cache key will get its own separate cached value.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Optionally, enter specific query string parameters and/or HTTP headers to be used in computing cache key values in the <bpt id="2">&lt;strong&gt;</bpt>Vary by query string parameters<ept id="2">&lt;/strong&gt;</ept> 和 <bpt id="4">&lt;strong&gt;</bpt>Vary by headers<ept id="4">&lt;/strong&gt;</ept> text boxes respectively.</source>
            <target state="new">Optionally, enter specific query string parameters and/or HTTP headers to be used in computing cache key values in the <bpt id="2">&lt;strong&gt;</bpt>Vary by query string parameters<ept id="2">&lt;/strong&gt;</ept> 和 <bpt id="4">&lt;strong&gt;</bpt>Vary by headers<ept id="4">&lt;/strong&gt;</ept> text boxes respectively.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>When none are specified, full request URL and the following HTTP header values are used in cache key generation: <bpt id="2">&lt;strong&gt;</bpt>Accept<ept id="2">&lt;/strong&gt;</ept> 和 <bpt id="4">&lt;strong&gt;</bpt>Accept-Charset<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">When none are specified, full request URL and the following HTTP header values are used in cache key generation: <bpt id="2">&lt;strong&gt;</bpt>Accept<ept id="2">&lt;/strong&gt;</ept> 和 <bpt id="4">&lt;strong&gt;</bpt>Accept-Charset<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>For more information on caching and caching policies, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to cache operation results in Azure API Management[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information on caching and caching policies, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to cache operation results in Azure API Management[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Request parameters</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Request parameters</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Operation parameters are managed on the Parameters tab.</source>
            <target state="new">Operation parameters are managed on the Parameters tab.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Parameters specified in the <bpt id="2">&lt;strong&gt;</bpt>URL Template<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>Signature<ept id="4">&lt;/strong&gt;</ept> tab are added automatically and can be changed only by editing the URL template.</source>
            <target state="new">Parameters specified in the <bpt id="2">&lt;strong&gt;</bpt>URL Template<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>Signature<ept id="4">&lt;/strong&gt;</ept> tab are added automatically and can be changed only by editing the URL template.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Additional parameters can be entered manually.</source>
            <target state="new">Additional parameters can be entered manually.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>To add a new query parameter, click <bpt id="2">&lt;strong&gt;</bpt>Add Query Parameter<ept id="2">&lt;/strong&gt;</ept> and enter the following information:</source>
            <target state="new">To add a new query parameter, click <bpt id="2">&lt;strong&gt;</bpt>Add Query Parameter<ept id="2">&lt;/strong&gt;</ept> and enter the following information:</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Name<ept id="1">&lt;/strong&gt;</ept> - parameter name.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Name<ept id="1">&lt;/strong&gt;</ept> - parameter name.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Description<ept id="1">&lt;/strong&gt;</ept> - a brief description of the parameter (optional).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Description<ept id="1">&lt;/strong&gt;</ept> - a brief description of the parameter (optional).</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Type<ept id="1">&lt;/strong&gt;</ept> - parameter type, selected in the drop down.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Type<ept id="1">&lt;/strong&gt;</ept> - parameter type, selected in the drop down.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Values<ept id="1">&lt;/strong&gt;</ept> - values that can be assigned to this parameter.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Values<ept id="1">&lt;/strong&gt;</ept> - values that can be assigned to this parameter.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>One of the values can be marked as default (optional).</source>
            <target state="new">One of the values can be marked as default (optional).</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Required<ept id="1">&lt;/strong&gt;</ept> - make the parameter mandatory by checking the checkbox.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Required<ept id="1">&lt;/strong&gt;</ept> - make the parameter mandatory by checking the checkbox.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Request parameters<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Request parameters<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Request body</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Request body</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>If the operation allows (e.g. PUT, POST) and requires a body you may provide an example of it in all of the supported representation formats (e.g. json, XML).</source>
            <target state="new">If the operation allows (e.g. PUT, POST) and requires a body you may provide an example of it in all of the supported representation formats (e.g. json, XML).</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The request body is used for documentation purposes only and is not validated.</source>
            <target state="new">The request body is used for documentation purposes only and is not validated.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>To enter a request body, switch to the <bpt id="2">&lt;strong&gt;</bpt>Body<ept id="2">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">To enter a request body, switch to the <bpt id="2">&lt;strong&gt;</bpt>Body<ept id="2">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Add Representation<ept id="2">&lt;/strong&gt;</ept>, start typing desired content type name (e.g. application/json), select it in the drop-down, and paste the desired request body example in the selected format into the text box.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Add Representation<ept id="2">&lt;/strong&gt;</ept>, start typing desired content type name (e.g. application/json), select it in the drop-down, and paste the desired request body example in the selected format into the text box.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Request body<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Request body<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>In additional to representations, you can also specify an optional text description in the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</source>
            <target state="new">In additional to representations, you can also specify an optional text description in the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Responses</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Responses</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>It is a good practice to provide examples of responses for all status codes that the operation may produce.</source>
            <target state="new">It is a good practice to provide examples of responses for all status codes that the operation may produce.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Each status code may have more than one response body example, one for each of the supported content types.</source>
            <target state="new">Each status code may have more than one response body example, one for each of the supported content types.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>To add a response, click <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept> and start typing the desired status code.</source>
            <target state="new">To add a response, click <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept> and start typing the desired status code.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>In this example the status code is <bpt id="2">&lt;strong&gt;</bpt>200 OK<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In this example the status code is <bpt id="2">&lt;strong&gt;</bpt>200 OK<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Once the code is displayed in the drop-down, select it, and the response code is created and added to your operation.</source>
            <target state="new">Once the code is displayed in the drop-down, select it, and the response code is created and added to your operation.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Response code<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Response code<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Add Representation<ept id="2">&lt;/strong&gt;</ept>, start typing the desired content type name (e.g. application/json) and then select it in the drop down.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Add Representation<ept id="2">&lt;/strong&gt;</ept>, start typing the desired content type name (e.g. application/json) and then select it in the drop down.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Body content type<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Body content type<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Paste the response body example in the selected format into the text box.</source>
            <target state="new">Paste the response body example in the selected format into the text box.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Response body<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Response body<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>If desired, add an optional description into the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</source>
            <target state="new">If desired, add an optional description into the <bpt id="2">&lt;strong&gt;</bpt>Description<ept id="2">&lt;/strong&gt;</ept> text box.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Once the operation is configured, click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Once the operation is configured, click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>接下来的步骤</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>接下来的步骤</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Once the operations are added to an API, the next step is to associate the API with a product and publish it so that developers can call its operations.</source>
            <target state="new">Once the operations are added to an API, the next step is to associate the API with a product and publish it so that developers can call its operations.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create and publish a product[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create and publish a product[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>