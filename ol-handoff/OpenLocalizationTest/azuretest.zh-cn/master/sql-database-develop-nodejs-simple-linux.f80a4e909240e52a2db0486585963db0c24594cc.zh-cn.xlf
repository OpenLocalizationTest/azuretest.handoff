<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:28:26 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">601e231b47b99d45272b1418619275993ca6c226</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</source>
            <target state="new">Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Presents a Node.js code sample you can use to connect to Azure SQL Database. The sample uses the Tedious driver to connect.</source>
            <target state="new">Presents a Node.js code sample you can use to connect to Azure SQL Database. The sample uses the Tedious driver to connect.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</source>
            <target state="new">Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic presents a Node.js code sample that runs on Ubuntu Linux.</source>
            <target state="new">This topic presents a Node.js code sample that runs on Ubuntu Linux.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The sample connects to Azure SQL Database by using the Tedious driver.</source>
            <target state="new">The sample connects to Azure SQL Database by using the Tedious driver.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Required software items</source>
            <target state="new">Required software items</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Open your terminal and install <bpt id="2">&lt;strong&gt;</bpt>node<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>npm<ept id="4">&lt;/strong&gt;</ept>, unless they are already installed on your machine.</source>
            <target state="new">Open your terminal and install <bpt id="2">&lt;strong&gt;</bpt>node<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>npm<ept id="4">&lt;/strong&gt;</ept>, unless they are already installed on your machine.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>After your machine is configured with <bpt id="2">&lt;strong&gt;</bpt>node<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>npm<ept id="4">&lt;/strong&gt;</ept>, navigate to a directory where you plan to create your Node.js project, and enter the following commands.</source>
            <target state="new">After your machine is configured with <bpt id="2">&lt;strong&gt;</bpt>node<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>npm<ept id="4">&lt;/strong&gt;</ept>, navigate to a directory where you plan to create your Node.js project, and enter the following commands.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>npm init<ept id="1">&lt;/strong&gt;</ept> creates a node project.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>npm init<ept id="1">&lt;/strong&gt;</ept> creates a node project.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>To retain the defaults during your project creation, press enter until the project is created.</source>
            <target state="new">To retain the defaults during your project creation, press enter until the project is created.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Now you see a <bpt id="2">&lt;strong&gt;</bpt>package.json<ept id="2">&lt;/strong&gt;</ept> file in your project directory.</source>
            <target state="new">Now you see a <bpt id="2">&lt;strong&gt;</bpt>package.json<ept id="2">&lt;/strong&gt;</ept> file in your project directory.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Create an AdventureWorks database</source>
            <target state="new">Create an AdventureWorks database</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The code sample in this topic expects an <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks<ept id="2">&lt;/strong&gt;</ept> test database.</source>
            <target state="new">The code sample in this topic expects an <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks<ept id="2">&lt;/strong&gt;</ept> test database.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>If you do not already have one, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you do not already have one, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>It is important that you follow the guide to create an <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks database template<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">It is important that you follow the guide to create an <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks database template<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The examples shown below work only with the <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks schema<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The examples shown below work only with the <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks schema<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Connect to your SQL Database</source>
            <target state="new">Connect to your SQL Database</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>new Connection<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function is used to connect to SQL Database.</source>
            <target state="new">The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>new Connection<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function is used to connect to SQL Database.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Execute an SQL SELECT</source>
            <target state="new">Execute an SQL SELECT</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>All SQL statements are executed using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>new Request()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function.</source>
            <target state="new">All SQL statements are executed using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>new Request()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>If the statement returns rows, such as a select statement, you can retreive them using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>request.on()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function.</source>
            <target state="new">If the statement returns rows, such as a select statement, you can retreive them using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>request.on()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>If there are no rows, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>request.on()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function returns empty lists.</source>
            <target state="new">If there are no rows, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>request.on()<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> function returns empty lists.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Insert a row, apply parameters, and retrieve the generated primary key</source>
            <target state="new">Insert a row, apply parameters, and retrieve the generated primary key</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In SQL Database the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>IDENTITY<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property and the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SEQUENCE<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> object can be used to auto-generate <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>primary key<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> values.</source>
            <target state="new">In SQL Database the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>IDENTITY<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property and the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SEQUENCE<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> object can be used to auto-generate <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>primary key<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> values.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In this example you will see how to execute an insert-statement, safely pass parameters which protects from SQL injection, and retrieve the auto-generated primary key value.</source>
            <target state="new">In this example you will see how to execute an insert-statement, safely pass parameters which protects from SQL injection, and retrieve the auto-generated primary key value.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The code sample in this section applies parameters to an SQL INSERT statement.</source>
            <target state="new">The code sample in this section applies parameters to an SQL INSERT statement.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The primary key value that is generated is retrieved by the program.</source>
            <target state="new">The primary key value that is generated is retrieved by the program.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>