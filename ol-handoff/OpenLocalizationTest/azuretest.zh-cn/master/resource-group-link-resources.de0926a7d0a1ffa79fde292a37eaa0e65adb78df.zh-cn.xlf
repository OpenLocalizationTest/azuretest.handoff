<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:53:13 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d692936ebd156de971008a41a53bf493268b624</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Linking resources in Azure Resource Manager</source>
            <target state="new">Linking resources in Azure Resource Manager</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Create a link between resources in different resource groups in Azure Resource Manager.</source>
            <target state="new">Create a link between resources in different resource groups in Azure Resource Manager.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Linking resources in Azure Resource Manager</source>
            <target state="new">Linking resources in Azure Resource Manager</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Post-deployment, you may wish to query the relationships or links between resources.</source>
            <target state="new">Post-deployment, you may wish to query the relationships or links between resources.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Dependencies inform deployment, but that</source>
            <target state="new">Dependencies inform deployment, but that</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>lifecycle ends at deployment.</source>
            <target state="new">lifecycle ends at deployment.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Once deployment is complete, there is no identified relationship between dependent resources.</source>
            <target state="new">Once deployment is complete, there is no identified relationship between dependent resources.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Instead, Azure Resource Manager provides a new feature called resource linking to establish and query relationships</source>
            <target state="new">Instead, Azure Resource Manager provides a new feature called resource linking to establish and query relationships</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>between resources.</source>
            <target state="new">between resources.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>You can determine which resources are linked to a resource or which resources are linked from a resource.</source>
            <target state="new">You can determine which resources are linked to a resource or which resources are linked from a resource.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The scope for a resource link can be a subscription, resource group or a specific resource.</source>
            <target state="new">The scope for a resource link can be a subscription, resource group or a specific resource.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>This means that resource links can document</source>
            <target state="new">This means that resource links can document</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>relationships that span across resource groups.</source>
            <target state="new">relationships that span across resource groups.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>As you begin to decompose your solution into multiple templates and multiple resource groups,</source>
            <target state="new">As you begin to decompose your solution into multiple templates and multiple resource groups,</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>having a mechanism to identify these resource links proves to be useful.</source>
            <target state="new">having a mechanism to identify these resource links proves to be useful.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>For example, it is common to have a database with its own lifecycle</source>
            <target state="new">For example, it is common to have a database with its own lifecycle</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>reside in one resource group, and an app with a different lifecycle reside in a different resource group.</source>
            <target state="new">reside in one resource group, and an app with a different lifecycle reside in a different resource group.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The app connects to the database so</source>
            <target state="new">The app connects to the database so</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>there is a link between the resources in different resource groups.</source>
            <target state="new">there is a link between the resources in different resource groups.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>All linked resources must belong to the same subscription.</source>
            <target state="new">All linked resources must belong to the same subscription.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Each resource can be linked to 50 other resources.</source>
            <target state="new">Each resource can be linked to 50 other resources.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>If any of the linked resources are</source>
            <target state="new">If any of the linked resources are</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>deleted or moved, the link owner must clean up the remaining link.</source>
            <target state="new">deleted or moved, the link owner must clean up the remaining link.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Linking in templates</source>
            <target state="new">Linking in templates</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The example below shows a template that creates a resource of type "Microsoft.AppService/apiapps"</source>
            <target state="new">The example below shows a template that creates a resource of type "Microsoft.AppService/apiapps"</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>with a set of unidirection relationships to a website, a notification hub, and SQL databases.</source>
            <target state="new">with a set of unidirection relationships to a website, a notification hub, and SQL databases.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Linking with REST API</source>
            <target state="new">Linking with REST API</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>To define a link between deployed resources, run:</source>
            <target state="new">To define a link between deployed resources, run:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Replace {subscription-id} with your subscription id.</source>
            <target state="new">Replace {subscription-id} with your subscription id.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Replace {resource-group}, {provider-namespace, {resource-type}, and {resource-name} with the values that</source>
            <target state="new">Replace {resource-group}, {provider-namespace, {resource-type}, and {resource-name} with the values that</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>identify the first resource in the link.</source>
            <target state="new">identify the first resource in the link.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Replace {link-name} with the name of the link to create.</source>
            <target state="new">Replace {link-name} with the name of the link to create.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Use 2015-01-01 for the api-version.</source>
            <target state="new">Use 2015-01-01 for the api-version.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In the request, include an object that defines the second resource in the link:</source>
            <target state="new">In the request, include an object that defines the second resource in the link:</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>The properties element contains the identifier for the second resource.</source>
            <target state="new">The properties element contains the identifier for the second resource.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>For more examples, including how to retrieve information about links, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Linked Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more examples, including how to retrieve information about links, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Linked Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>次のステップ</source>
            <target state="new">次のステップ</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>You can also organize your resources with tags.</source>
            <target state="new">You can also organize your resources with tags.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>To learn about tagging resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using tags to organize your resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn about tagging resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using tags to organize your resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>For a description of how to create templates and define the resources to be deployed, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authoring templates<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a description of how to create templates and define the resources to be deployed, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authoring templates<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>