<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 5:08:03 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f70a49de970f75a6d9b7606b825be794edce0e89</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Handle conflicts with offline data in Mobile Services (iOS) | Mobile Dev Center</source>
            <target state="new">Handle conflicts with offline data in Mobile Services (iOS) | Mobile Dev Center</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Mobile Services to handle conflicts when syncing offline data in your iOS application</source>
            <target state="new">Learn how to use Azure Mobile Services to handle conflicts when syncing offline data in your iOS application</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Handling Conflicts with Offline Data Sync in Mobile Services</source>
            <target state="new">Handling Conflicts with Offline Data Sync in Mobile Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline-conflicts.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline-conflicts.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic shows you how to synchronize data and handle conflicts when using the offline capabilities of Azure Mobile Services.</source>
            <target state="new">This topic shows you how to synchronize data and handle conflicts when using the offline capabilities of Azure Mobile Services.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This tutorial builds on the steps and the sample app from the previous tutorial [Get Started with Offline Data].</source>
            <target state="new">This tutorial builds on the steps and the sample app from the previous tutorial [Get Started with Offline Data].</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Before you begin this tutorial, you must first complete [Get Started with Offline Data].</source>
            <target state="new">Before you begin this tutorial, you must first complete [Get Started with Offline Data].</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>To complete this tutorial, you need a Azure account.</source>
            <target state="new">To complete this tutorial, you need a Azure account.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
            <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For details, see <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Azure Free Trial<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>.</source>
            <target state="new">For details, see <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Azure Free Trial<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>This tutorial walks you through these basic steps:</source>
            <target state="new">This tutorial walks you through these basic steps:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>[Update the App Project to Allow Editing]</source>
            <target state="new">[Update the App Project to Allow Editing]</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>[Update Todo List View Controller]</source>
            <target state="new">[Update Todo List View Controller]</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>[Add Todo Item View Controller]</source>
            <target state="new">[Add Todo Item View Controller]</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>[Add Todo Item View Controller and Segue to Storyboard]</source>
            <target state="new">[Add Todo Item View Controller and Segue to Storyboard]</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>[Add Item Details to Todo Item View Controller]</source>
            <target state="new">[Add Item Details to Todo Item View Controller]</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>[Add Support for Saving Edits]</source>
            <target state="new">[Add Support for Saving Edits]</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>[Conflict Handling Problem]</source>
            <target state="new">[Conflict Handling Problem]</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>[Update QSTodoService to Support Conflict Handling]</source>
            <target state="new">[Update QSTodoService to Support Conflict Handling]</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>[Add UI Alert View Helper to Support Conflict Handling]</source>
            <target state="new">[Add UI Alert View Helper to Support Conflict Handling]</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>[Add Conflict Handler to Todo List View Controller]</source>
            <target state="new">[Add Conflict Handler to Todo List View Controller]</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>[Test the App]</source>
            <target state="new">[Test the App]</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Complete the Get Started with Offline Tutorial</source>
            <target state="new">Complete the Get Started with Offline Tutorial</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Follow the instructions at the [Get Started with Offline Data] tutorial and complete that project.</source>
            <target state="new">Follow the instructions at the [Get Started with Offline Data] tutorial and complete that project.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>We will use the finished project from that tutorial as the starting point for this tutorial.</source>
            <target state="new">We will use the finished project from that tutorial as the starting point for this tutorial.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the App Project to Allow Editing</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the App Project to Allow Editing</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Let's update the finished project from [Get Started with Offline Data] to allow the editing of items.</source>
            <target state="new">Let's update the finished project from [Get Started with Offline Data] to allow the editing of items.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Currently, if you run this same app on two phones, change the same item on both phones locally, and push the changes back to the server, it will fail with a conflict.</source>
            <target state="new">Currently, if you run this same app on two phones, change the same item on both phones locally, and push the changes back to the server, it will fail with a conflict.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The offline sync features in the SDK let you handle such  conflicts via code and let you dynamically decide what to do with conflicting items.</source>
            <target state="new">The offline sync features in the SDK let you handle such  conflicts via code and let you dynamically decide what to do with conflicting items.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Changing the quickstart project lets us experiment with this feature.</source>
            <target state="new">Changing the quickstart project lets us experiment with this feature.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update Todo List View Controller</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update Todo List View Controller</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>MainStoryboard_iPhone.storyboard<ept id="2">&lt;/strong&gt;</ept> in the Xcode Project Navigator, then select <bpt id="4">&lt;strong&gt;</bpt>Todo List View Controller<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>MainStoryboard_iPhone.storyboard<ept id="2">&lt;/strong&gt;</ept> in the Xcode Project Navigator, then select <bpt id="4">&lt;strong&gt;</bpt>Todo List View Controller<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Select the table view cell, and sets its Accessory mode to <bpt id="2">&lt;strong&gt;</bpt>Disclosure indicator<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select the table view cell, and sets its Accessory mode to <bpt id="2">&lt;strong&gt;</bpt>Disclosure indicator<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The disclosure indicator indicates to users that if they tap on the associated table view controller, a new view will be displayed.</source>
            <target state="new">The disclosure indicator indicates to users that if they tap on the associated table view controller, a new view will be displayed.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>The disclosure indicator produces no event.</source>
            <target state="new">The disclosure indicator produces no event.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>TodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, remove the following operations and their contents altogether.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>TodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, remove the following operations and their contents altogether.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>We do not need them:</source>
            <target state="new">We do not need them:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Todo Item View Controller</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Todo Item View Controller</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Create a new Cocoa Touch class named <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>, derived from <bpt id="4">&lt;strong&gt;</bpt>UIViewController<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Create a new Cocoa Touch class named <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>, derived from <bpt id="4">&lt;strong&gt;</bpt>UIViewController<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="2">&lt;/strong&gt;</ept> add the following type definition:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="2">&lt;/strong&gt;</ept> add the following type definition:</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="2">&lt;/strong&gt;</ept>, add a property to hold the item to be modified, and a property for the callback that is invoked after the user presses the back button in the detail view:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="2">&lt;/strong&gt;</ept>, add a property to hold the item to be modified, and a property for the callback that is invoked after the user presses the back button in the detail view:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, add two private properties for the two fields of the todo item we'll edit -- the completion status and the text of the todo item itself:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, add two private properties for the two fields of the todo item we'll edit -- the completion status and the text of the todo item itself:</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, update the stub implementation of <bpt id="4">&lt;strong&gt;</bpt>viewDidLoad<ept id="4">&lt;/strong&gt;</ept> to the following code:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, update the stub implementation of <bpt id="4">&lt;strong&gt;</bpt>viewDidLoad<ept id="4">&lt;/strong&gt;</ept> to the following code:</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, add four additional methods to handle edited control events:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>, add four additional methods to handle edited control events:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>, also add the following method, which is called when the user presses the <bpt id="4">&lt;strong&gt;</bpt>Back<ept id="4">&lt;/strong&gt;</ept> button in the Navigation Bar.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>, also add the following method, which is called when the user presses the <bpt id="4">&lt;strong&gt;</bpt>Back<ept id="4">&lt;/strong&gt;</ept> button in the Navigation Bar.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The method can be called on other events, so we first check the parent view.</source>
            <target state="new">The method can be called on other events, so we first check the parent view.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>If there has been any change to the item, then <bpt id="2">&lt;strong&gt;</bpt>self.item<ept id="2">&lt;/strong&gt;</ept> is modified and the callback <bpt id="4">&lt;strong&gt;</bpt>editCompleteBlock<ept id="4">&lt;/strong&gt;</ept> is called:</source>
            <target state="new">If there has been any change to the item, then <bpt id="2">&lt;strong&gt;</bpt>self.item<ept id="2">&lt;/strong&gt;</ept> is modified and the callback <bpt id="4">&lt;strong&gt;</bpt>editCompleteBlock<ept id="4">&lt;/strong&gt;</ept> is called:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Todo Item View Controller and Segue to Storyboard</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Todo Item View Controller and Segue to Storyboard</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Return to the <bpt id="2">&lt;strong&gt;</bpt>MainStoryboard_iPhone.storyboard<ept id="2">&lt;/strong&gt;</ept> file using the Project Navigator.</source>
            <target state="new">Return to the <bpt id="2">&lt;strong&gt;</bpt>MainStoryboard_iPhone.storyboard<ept id="2">&lt;/strong&gt;</ept> file using the Project Navigator.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Add a new view controller for the Todo Item to the storyboard, to the right of the existing <bpt id="2">&lt;strong&gt;</bpt>Todo List View Controller<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Add a new view controller for the Todo Item to the storyboard, to the right of the existing <bpt id="2">&lt;strong&gt;</bpt>Todo List View Controller<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Set the custom class of this new view controller to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Set the custom class of this new view controller to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>To learn more, see [Adding a Scene to a Storyboard].</source>
            <target state="new">To learn more, see [Adding a Scene to a Storyboard].</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Add a <bpt id="2">&lt;strong&gt;</bpt>Show<ept id="2">&lt;/strong&gt;</ept> segue from the <bpt id="4">&lt;strong&gt;</bpt>Todo List View Controller<ept id="4">&lt;/strong&gt;</ept> to the <bpt id="6">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Add a <bpt id="2">&lt;strong&gt;</bpt>Show<ept id="2">&lt;/strong&gt;</ept> segue from the <bpt id="4">&lt;strong&gt;</bpt>Todo List View Controller<ept id="4">&lt;/strong&gt;</ept> to the <bpt id="6">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Then, in the Attributes Inspector, set the segue identifier to <bpt id="2">&lt;strong&gt;</bpt>detailSegue<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Then, in the Attributes Inspector, set the segue identifier to <bpt id="2">&lt;strong&gt;</bpt>detailSegue<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Don't create this segue from the any cell or button in the origin view controller.</source>
            <target state="new">Don't create this segue from the any cell or button in the origin view controller.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Instead, CTRL + Drag from the view controller icon above the <bpt id="2">&lt;strong&gt;</bpt>Todo List View Controller<ept id="2">&lt;/strong&gt;</ept> in the storyboard interface to the  <bpt id="4">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="4">&lt;/strong&gt;</ept>:</source>
            <target state="new">Instead, CTRL + Drag from the view controller icon above the <bpt id="2">&lt;strong&gt;</bpt>Todo List View Controller<ept id="2">&lt;/strong&gt;</ept> in the storyboard interface to the  <bpt id="4">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="4">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>If you accidentally segue from a cell, you will trigger the segue twice when you run the app, resulting in this error:</source>
            <target state="new">If you accidentally segue from a cell, you will trigger the segue twice when you run the app, resulting in this error:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>To learn more about segues, see [Adding a Segue Between Scenes in a Storyboard].</source>
            <target state="new">To learn more about segues, see [Adding a Segue Between Scenes in a Storyboard].</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Add a text field for item text and a segmented control for the completion status to the new <bpt id="2">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="2">&lt;/strong&gt;</ept>, with labels as well.</source>
            <target state="new">Add a text field for item text and a segmented control for the completion status to the new <bpt id="2">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="2">&lt;/strong&gt;</ept>, with labels as well.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>In the segmented control, set the title of <bpt id="2">&lt;strong&gt;</bpt>Segment 0<ept id="2">&lt;/strong&gt;</ept> to <bpt id="4">&lt;strong&gt;</bpt>Yes<ept id="4">&lt;/strong&gt;</ept> and the title for <bpt id="6">&lt;strong&gt;</bpt>Segment 1<ept id="6">&lt;/strong&gt;</ept> to <bpt id="8">&lt;strong&gt;</bpt>No<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the segmented control, set the title of <bpt id="2">&lt;strong&gt;</bpt>Segment 0<ept id="2">&lt;/strong&gt;</ept> to <bpt id="4">&lt;strong&gt;</bpt>Yes<ept id="4">&lt;/strong&gt;</ept> and the title for <bpt id="6">&lt;strong&gt;</bpt>Segment 1<ept id="6">&lt;/strong&gt;</ept> to <bpt id="8">&lt;strong&gt;</bpt>No<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Connect these new fields to outlets in code.</source>
            <target state="new">Connect these new fields to outlets in code.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>To learn more, see [Build a User Interface] and [Segmented Controls].</source>
            <target state="new">To learn more, see [Build a User Interface] and [Segmented Controls].</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Connect these new fields to the corresponding outlets you've already added to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Connect these new fields to the corresponding outlets you've already added to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController.m<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Connect the item text field to the <bpt id="2">&lt;strong&gt;</bpt>itemText<ept id="2">&lt;/strong&gt;</ept> outlet and the completion status segmented control to the <bpt id="4">&lt;strong&gt;</bpt>itemComplete<ept id="4">&lt;/strong&gt;</ept> outlet.</source>
            <target state="new">Connect the item text field to the <bpt id="2">&lt;strong&gt;</bpt>itemText<ept id="2">&lt;/strong&gt;</ept> outlet and the completion status segmented control to the <bpt id="4">&lt;strong&gt;</bpt>itemComplete<ept id="4">&lt;/strong&gt;</ept> outlet.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>To learn more, see [Creating an Outlet Connection].</source>
            <target state="new">To learn more, see [Creating an Outlet Connection].</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Set the text field's delegate to the view controller.</source>
            <target state="new">Set the text field's delegate to the view controller.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>CTRL + Drag from the text field to the view controller icon below the <bpt id="2">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="2">&lt;/strong&gt;</ept> in the storyboard interface, and select the delegate outlet; this indicates to the storyboard that this text field's delegate is this view controller.</source>
            <target state="new">CTRL + Drag from the text field to the view controller icon below the <bpt id="2">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="2">&lt;/strong&gt;</ept> in the storyboard interface, and select the delegate outlet; this indicates to the storyboard that this text field's delegate is this view controller.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Verify that the app works with all the changes you've made so far.</source>
            <target state="new">Verify that the app works with all the changes you've made so far.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Run the app now in the simulator.</source>
            <target state="new">Run the app now in the simulator.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Add items to the todo list, and then click on them.</source>
            <target state="new">Add items to the todo list, and then click on them.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>You'll see the (currently empty) item view controller.</source>
            <target state="new">You'll see the (currently empty) item view controller.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept>          <bpt id="3">&lt;linkText&gt;</bpt><ept id="3">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept>          <bpt id="3">&lt;linkText&gt;</bpt><ept id="3">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Item Details to Todo Item View Controller</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Item Details to Todo Item View Controller</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>We will refer to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept> from  <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">We will refer to <bpt id="2">&lt;strong&gt;</bpt>QSItemViewController<ept id="2">&lt;/strong&gt;</ept> from  <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>So, in <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, let's add a line to import <bpt id="4">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">So, in <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, let's add a line to import <bpt id="4">&lt;strong&gt;</bpt>QSItemViewController.h<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Add a new property to the <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="2">&lt;/strong&gt;</ept> interface in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to store the item being edited:</source>
            <target state="new">Add a new property to the <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="2">&lt;/strong&gt;</ept> interface in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to store the item being edited:</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Implement <bpt id="2">&lt;strong&gt;</bpt>tableView:didSelectRowAtIndexPath:<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to save the item being edited and then to call the segue to display the detail view.</source>
            <target state="new">Implement <bpt id="2">&lt;strong&gt;</bpt>tableView:didSelectRowAtIndexPath:<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to save the item being edited and then to call the segue to display the detail view.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Implement <bpt id="2">&lt;strong&gt;</bpt>prepareForSegue:sender:<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to pass the item to the  <bpt id="6">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="6">&lt;/strong&gt;</ept>, and specify the callback when the user exits the detail view:</source>
            <target state="new">Implement <bpt id="2">&lt;strong&gt;</bpt>prepareForSegue:sender:<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="4">&lt;/strong&gt;</ept> to pass the item to the  <bpt id="6">&lt;strong&gt;</bpt>Todo Item View Controller<ept id="6">&lt;/strong&gt;</ept>, and specify the callback when the user exits the detail view:</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Verify that the app works with all the changes you've made so far.</source>
            <target state="new">Verify that the app works with all the changes you've made so far.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Run the app now in the simulator.</source>
            <target state="new">Run the app now in the simulator.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Add items to the todo list, and then click on them.</source>
            <target state="new">Add items to the todo list, and then click on them.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>You'll see the item view controller is no longer empty -- it displays the details of the todo items.</source>
            <target state="new">You'll see the item view controller is no longer empty -- it displays the details of the todo items.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Support for Saving Edits</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Support for Saving Edits</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>When you click the "Back" button in the navigation view, the edits are lost.</source>
            <target state="new">When you click the "Back" button in the navigation view, the edits are lost.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>We've sent data to the detail view, but the data isn't sent back to the master view.</source>
            <target state="new">We've sent data to the detail view, but the data isn't sent back to the master view.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Since we already pass a pointer to a copy of the item, we can use that pointer to retrieve the list of updates made to the item and update it on the server.</source>
            <target state="new">Since we already pass a pointer to a copy of the item, we can use that pointer to retrieve the list of updates made to the item and update it on the server.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>To get started, first update the server wrapper class of <bpt id="2">&lt;strong&gt;</bpt>QSTodoService<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.m<ept id="4">&lt;/strong&gt;</ept> by removing the <bpt id="6">&lt;strong&gt;</bpt>completeItem<ept id="6">&lt;/strong&gt;</ept> operation and adding a new  <bpt id="8">&lt;strong&gt;</bpt>updateItem<ept id="8">&lt;/strong&gt;</ept> operation.</source>
            <target state="new">To get started, first update the server wrapper class of <bpt id="2">&lt;strong&gt;</bpt>QSTodoService<ept id="2">&lt;/strong&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.m<ept id="4">&lt;/strong&gt;</ept> by removing the <bpt id="6">&lt;strong&gt;</bpt>completeItem<ept id="6">&lt;/strong&gt;</ept> operation and adding a new  <bpt id="8">&lt;strong&gt;</bpt>updateItem<ept id="8">&lt;/strong&gt;</ept> operation.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>This is because <bpt id="2">&lt;strong&gt;</bpt>completeItem<ept id="2">&lt;/strong&gt;</ept> only marks items as complete; instead, <bpt id="4">&lt;strong&gt;</bpt>updateItem<ept id="4">&lt;/strong&gt;</ept> will update items.</source>
            <target state="new">This is because <bpt id="2">&lt;strong&gt;</bpt>completeItem<ept id="2">&lt;/strong&gt;</ept> only marks items as complete; instead, <bpt id="4">&lt;strong&gt;</bpt>updateItem<ept id="4">&lt;/strong&gt;</ept> will update items.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Remove the declaration for <bpt id="2">&lt;strong&gt;</bpt>completeItem<ept id="2">&lt;/strong&gt;</ept> from <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.h<ept id="4">&lt;/strong&gt;</ept> and add this declaration for <bpt id="6">&lt;strong&gt;</bpt>updateItem<ept id="6">&lt;/strong&gt;</ept>:</source>
            <target state="new">Remove the declaration for <bpt id="2">&lt;strong&gt;</bpt>completeItem<ept id="2">&lt;/strong&gt;</ept> from <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.h<ept id="4">&lt;/strong&gt;</ept> and add this declaration for <bpt id="6">&lt;strong&gt;</bpt>updateItem<ept id="6">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Now let's test the app.</source>
            <target state="new">Now let's test the app.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Verify that the app works with all the changes you've made so far.</source>
            <target state="new">Verify that the app works with all the changes you've made so far.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Run the app now in the simulator.</source>
            <target state="new">Run the app now in the simulator.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Add items to the todo list, and then click on them.</source>
            <target state="new">Add items to the todo list, and then click on them.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Try to edit an item, and go back.</source>
            <target state="new">Try to edit an item, and go back.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Verify that the item description is updated in the app's master view.</source>
            <target state="new">Verify that the item description is updated in the app's master view.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Refresh the app using the drag-down gesture, and verify that the edit is reflected in your remote service.</source>
            <target state="new">Refresh the app using the drag-down gesture, and verify that the edit is reflected in your remote service.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Conflict Handling Problem</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Conflict Handling Problem</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Let's examine what happens when two different clients try to modify the same piece of data at the same time.</source>
            <target state="new">Let's examine what happens when two different clients try to modify the same piece of data at the same time.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>In the example list below, there's an item "Mobile Services is Cool!"</source>
            <target state="new">In the example list below, there's an item "Mobile Services is Cool!"</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Let's change this to, say, "I love Mobile Services!"</source>
            <target state="new">Let's change this to, say, "I love Mobile Services!"</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>on one device and let's change this to "I love Azure!"</source>
            <target state="new">on one device and let's change this to "I love Azure!"</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>on another device.</source>
            <target state="new">on another device.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Launch the app in two places: on two iOS devices, or in the simulator and on an iOS device.</source>
            <target state="new">Launch the app in two places: on two iOS devices, or in the simulator and on an iOS device.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>If you don't have a physical device to test on, launch one instance in the simulator, and using a REST client, send a PATCH request to the mobile service.The URL of the PATCH request reflects the name of the Mobile Service, the name of the todo item table, and the ID of the todo item table you're editing, while the x-zumo-application header is the application key:</source>
            <target state="new">If you don't have a physical device to test on, launch one instance in the simulator, and using a REST client, send a PATCH request to the mobile service.The URL of the PATCH request reflects the name of the Mobile Service, the name of the todo item table, and the ID of the todo item table you're editing, while the x-zumo-application header is the application key:</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Now, refresh the items in the two instances of the app.</source>
            <target state="new">Now, refresh the items in the two instances of the app.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>You'll see an error printed in the output log in Xcode:</source>
            <target state="new">You'll see an error printed in the output log in Xcode:</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>This is because on the completion block, in the call to <bpt id="2">&lt;strong&gt;</bpt>pullWithQuery:completion:<ept id="2">&lt;/strong&gt;</ept>, the error parameter will be non-nil, which will cause the error to be printed out to the output via <bpt id="4">&lt;strong&gt;</bpt>NSLog<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">This is because on the completion block, in the call to <bpt id="2">&lt;strong&gt;</bpt>pullWithQuery:completion:<ept id="2">&lt;/strong&gt;</ept>, the error parameter will be non-nil, which will cause the error to be printed out to the output via <bpt id="4">&lt;strong&gt;</bpt>NSLog<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update QSTodoService to Support Conflict Handling</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update QSTodoService to Support Conflict Handling</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Let's let the user decide how to handle the conflict by dealing with it in the client.</source>
            <target state="new">Let's let the user decide how to handle the conflict by dealing with it in the client.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>To do this, let's implement the <bpt id="2">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="2">&lt;/strong&gt;</ept> protocol.</source>
            <target state="new">To do this, let's implement the <bpt id="2">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="2">&lt;/strong&gt;</ept> protocol.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>In both <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.h<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.m<ept id="4">&lt;/strong&gt;</ept>, change the <bpt id="6">&lt;strong&gt;</bpt>(QSTodoService *)defaultService;<ept id="6">&lt;/strong&gt;</ept> factory method declaration to the statement below, so as to receive the sync context delegate as a parameter:</source>
            <target state="new">In both <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.h<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>QSTodoService.m<ept id="4">&lt;/strong&gt;</ept>, change the <bpt id="6">&lt;strong&gt;</bpt>(QSTodoService *)defaultService;<ept id="6">&lt;/strong&gt;</ept> factory method declaration to the statement below, so as to receive the sync context delegate as a parameter:</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the <bpt id="4">&lt;strong&gt;</bpt>init<ept id="4">&lt;/strong&gt;</ept> line as shown below, again receiving the sync context delegate as a parameter:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the <bpt id="4">&lt;strong&gt;</bpt>init<ept id="4">&lt;/strong&gt;</ept> line as shown below, again receiving the sync context delegate as a parameter:</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the <bpt id="4">&lt;strong&gt;</bpt>init<ept id="4">&lt;/strong&gt;</ept> call in <bpt id="6">&lt;strong&gt;</bpt>defaultServiceWithDelegate<ept id="6">&lt;/strong&gt;</ept> to <bpt id="8">&lt;strong&gt;</bpt>initWithDelegate<ept id="8">&lt;/strong&gt;</ept> instead:</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the <bpt id="4">&lt;strong&gt;</bpt>init<ept id="4">&lt;/strong&gt;</ept> call in <bpt id="6">&lt;strong&gt;</bpt>defaultServiceWithDelegate<ept id="6">&lt;/strong&gt;</ept> to <bpt id="8">&lt;strong&gt;</bpt>initWithDelegate<ept id="8">&lt;/strong&gt;</ept> instead:</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Back in <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the initialization of <bpt id="4">&lt;strong&gt;</bpt>self.client.syncContext<ept id="4">&lt;/strong&gt;</ept> to pass in <bpt id="6">&lt;strong&gt;</bpt>syncDelegate<ept id="6">&lt;/strong&gt;</ept> instead of <bpt id="8">&lt;strong&gt;</bpt>nil<ept id="8">&lt;/strong&gt;</ept> for the delegate:</source>
            <target state="new">Back in <bpt id="2">&lt;strong&gt;</bpt>QSTodoService.m<ept id="2">&lt;/strong&gt;</ept>, change the initialization of <bpt id="4">&lt;strong&gt;</bpt>self.client.syncContext<ept id="4">&lt;/strong&gt;</ept> to pass in <bpt id="6">&lt;strong&gt;</bpt>syncDelegate<ept id="6">&lt;/strong&gt;</ept> instead of <bpt id="8">&lt;strong&gt;</bpt>nil<ept id="8">&lt;/strong&gt;</ept> for the delegate:</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add UI Alert View Helper to Support Conflict Handling</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add UI Alert View Helper to Support Conflict Handling</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>If there's a conflict, let's allow the user to choose which version to keep:</source>
            <target state="new">If there's a conflict, let's allow the user to choose which version to keep:</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>keep the client version (which overrides the version on the server),</source>
            <target state="new">keep the client version (which overrides the version on the server),</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>keep the server version (which updates the client local table), or</source>
            <target state="new">keep the server version (which updates the client local table), or</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>keep neither version (cancels push and leaves the operation pending).</source>
            <target state="new">keep neither version (cancels push and leaves the operation pending).</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Since another update may also happen while we display the prompt, we'll keep showing  options until the server stops returning a failure response.</source>
            <target state="new">Since another update may also happen while we display the prompt, we'll keep showing  options until the server stops returning a failure response.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>In our code, let's use a helper class that shows an alert view and takes a delegate that is invoked when the alert view is displayed.</source>
            <target state="new">In our code, let's use a helper class that shows an alert view and takes a delegate that is invoked when the alert view is displayed.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Let's define the helper class <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept> first.</source>
            <target state="new">Let's define the helper class <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept> first.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Add this new class, <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept>, using Xcode, and overwrite <bpt id="4">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock.h<ept id="4">&lt;/strong&gt;</ept> with the following contents:</source>
            <target state="new">Add this new class, <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept>, using Xcode, and overwrite <bpt id="4">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock.h<ept id="4">&lt;/strong&gt;</ept> with the following contents:</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Next, overwrite <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock.m<ept id="2">&lt;/strong&gt;</ept> with the following file:</source>
            <target state="new">Next, overwrite <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock.m<ept id="2">&lt;/strong&gt;</ept> with the following file:</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Conflict Handler to Todo List View Controller</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Add Conflict Handler to Todo List View Controller</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, edit <bpt id="4">&lt;strong&gt;</bpt>viewDidLoad<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>, edit <bpt id="4">&lt;strong&gt;</bpt>viewDidLoad<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Replace the call to <bpt id="2">&lt;strong&gt;</bpt>defaultService<ept id="2">&lt;/strong&gt;</ept> with a call to <bpt id="4">&lt;strong&gt;</bpt>defaultServiceWithDelegate<ept id="4">&lt;/strong&gt;</ept> instead:</source>
            <target state="new">Replace the call to <bpt id="2">&lt;strong&gt;</bpt>defaultService<ept id="2">&lt;/strong&gt;</ept> with a call to <bpt id="4">&lt;strong&gt;</bpt>defaultServiceWithDelegate<ept id="4">&lt;/strong&gt;</ept> instead:</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.h<ept id="2">&lt;/strong&gt;</ept>, add <bpt id="4">&lt;strong&gt;</bpt>&lt;MSSyncContextDelegate&gt;<ept id="4">&lt;/strong&gt;</ept> to the interface declaration so we're implementing the <bpt id="6">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="6">&lt;/strong&gt;</ept> protocol.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.h<ept id="2">&lt;/strong&gt;</ept>, add <bpt id="4">&lt;strong&gt;</bpt>&lt;MSSyncContextDelegate&gt;<ept id="4">&lt;/strong&gt;</ept> to the interface declaration so we're implementing the <bpt id="6">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="6">&lt;/strong&gt;</ept> protocol.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>Add the following import statement at the top of <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>:</source>
            <target state="new">Add the following import statement at the top of <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Finally, let's add the following two operations to <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept> to use this helper class and prompt the user to reconcile the conflict in one of three ways.</source>
            <target state="new">Finally, let's add the following two operations to <bpt id="2">&lt;strong&gt;</bpt>QSTodoListViewController.m<ept id="2">&lt;/strong&gt;</ept> to use this helper class and prompt the user to reconcile the conflict in one of three ways.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the App</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the App</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Let's test the application with conflicts!</source>
            <target state="new">Let's test the application with conflicts!</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Edit the same item in two different instances of the app running at the same time, or using the app and a REST client.</source>
            <target state="new">Edit the same item in two different instances of the app running at the same time, or using the app and a REST client.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>Perform the refresh gesture in the app instances by dragging from the top.</source>
            <target state="new">Perform the refresh gesture in the app instances by dragging from the top.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Now you'll see a prompt to reconcile the conflict:</source>
            <target state="new">Now you'll see a prompt to reconcile the conflict:</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>Summary</source>
            <target state="new">Summary</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>In order to set up the completed project from [Get Started with Offline Data] to detect conflicts, you first added the ability to edit and update the todo items.</source>
            <target state="new">In order to set up the completed project from [Get Started with Offline Data] to detect conflicts, you first added the ability to edit and update the todo items.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>To do so, you added a new item details view controller, connected the main view controller and the details view controller, and finally added the ability to save edits and push them to the cloud.</source>
            <target state="new">To do so, you added a new item details view controller, connected the main view controller and the details view controller, and finally added the ability to save edits and push them to the cloud.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Next, you discovered what happens when there is a conflict.</source>
            <target state="new">Next, you discovered what happens when there is a conflict.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>You added support for a conflict handler by implementing the <bpt id="2">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="2">&lt;/strong&gt;</ept> protocol.</source>
            <target state="new">You added support for a conflict handler by implementing the <bpt id="2">&lt;strong&gt;</bpt>MSSyncContextDelegate<ept id="2">&lt;/strong&gt;</ept> protocol.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>You also enabled support for the sync context delegate through the server interface class of <bpt id="2">&lt;strong&gt;</bpt>QSTodoService<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="4">&lt;/strong&gt;</ept>, and supporting classes.</source>
            <target state="new">You also enabled support for the sync context delegate through the server interface class of <bpt id="2">&lt;strong&gt;</bpt>QSTodoService<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="4">&lt;/strong&gt;</ept>, and supporting classes.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Along the way, you added a <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept> helper class to display an alert to users, and finished by adding code to <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="4">&lt;/strong&gt;</ept> to prompt the user to reconcile the conflict in one of three ways.</source>
            <target state="new">Along the way, you added a <bpt id="2">&lt;strong&gt;</bpt>QSUIAlertViewWithBlock<ept id="2">&lt;/strong&gt;</ept> helper class to display an alert to users, and finished by adding code to <bpt id="4">&lt;strong&gt;</bpt>QSTodoListViewController<ept id="4">&lt;/strong&gt;</ept> to prompt the user to reconcile the conflict in one of three ways.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>