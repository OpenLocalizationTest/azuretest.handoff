<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 5:17:06 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfb56a9f20167092fb18de78e5c4fe28b7d4e46b</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Service Fabric Architecture</source>
            <target state="new">Service Fabric Architecture</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud. This article shows the architecture of Service Fabric.</source>
            <target state="new">Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud. This article shows the architecture of Service Fabric.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Service Fabric Architecture</source>
            <target state="new">Service Fabric Architecture</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Service Fabric, like any platform is built through many sub-systems.</source>
            <target state="new">Service Fabric, like any platform is built through many sub-systems.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>These subsystems layered together allow application developers to write service fabric applications that are:</source>
            <target state="new">These subsystems layered together allow application developers to write service fabric applications that are:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>highly available,</source>
            <target state="new">highly available,</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>scalable,</source>
            <target state="new">scalable,</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>easily manageable and</source>
            <target state="new">easily manageable and</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>easy to test.</source>
            <target state="new">easy to test.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The following picture shows the architecture and major subsystems of Service Fabric.</source>
            <target state="new">The following picture shows the architecture and major subsystems of Service Fabric.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>In a distributed system, the ability to securely communicate between different nodes is crucial.</source>
            <target state="new">In a distributed system, the ability to securely communicate between different nodes is crucial.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>At the bottom of the stack is transport subsystem, which provides the ability to securely communicate between the different nodes.</source>
            <target state="new">At the bottom of the stack is transport subsystem, which provides the ability to securely communicate between the different nodes.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Above the transport subsystem lies the federation subsystem, which clusters the different nodes into a single entity (named clusters) so that the system can detect failures, perform leader election and route consistenty.</source>
            <target state="new">Above the transport subsystem lies the federation subsystem, which clusters the different nodes into a single entity (named clusters) so that the system can detect failures, perform leader election and route consistenty.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The reliability subsystem, layered on top of the federation subsystem is responsible for the high reliability of Service Fabric services through mechanisms such as replication, resource management and failover management.</source>
            <target state="new">The reliability subsystem, layered on top of the federation subsystem is responsible for the high reliability of Service Fabric services through mechanisms such as replication, resource management and failover management.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The federation subsystem also underlies the Hosting subsystem, which manages the lifecycle of an application on a single node.</source>
            <target state="new">The federation subsystem also underlies the Hosting subsystem, which manages the lifecycle of an application on a single node.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The cluster management subsystem manages the multi-machine lifecycle of applications and services.</source>
            <target state="new">The cluster management subsystem manages the multi-machine lifecycle of applications and services.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The testability subsystem allows the application developer to test their services through simulated faults before deploying applications and services to production environments.</source>
            <target state="new">The testability subsystem allows the application developer to test their services through simulated faults before deploying applications and services to production environments.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Service Fabric also provides the ability to resolve service locations through its communication subsystem.</source>
            <target state="new">Service Fabric also provides the ability to resolve service locations through its communication subsystem.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The application programming model exposed to developers is layered on top of these susbsystems.</source>
            <target state="new">The application programming model exposed to developers is layered on top of these susbsystems.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Transport subsystem</source>
            <target state="new">Transport subsystem</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>The transport subsystem implements a point-to-point datagram communication channel.</source>
            <target state="new">The transport subsystem implements a point-to-point datagram communication channel.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This channel is used for communication within service fabric cluster and communication between service fabric cluster and clients.</source>
            <target state="new">This channel is used for communication within service fabric cluster and communication between service fabric cluster and clients.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>It supports one-way and request-reply communication pattern, which provides the basis for implementing broadcast and multicast in upper layers.</source>
            <target state="new">It supports one-way and request-reply communication pattern, which provides the basis for implementing broadcast and multicast in upper layers.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The transport subsystem secures communication by using X509 certificates or Windows security.</source>
            <target state="new">The transport subsystem secures communication by using X509 certificates or Windows security.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>This subsystem is used internally by Service Fabric and is not directly accessible to the developers for application programming.</source>
            <target state="new">This subsystem is used internally by Service Fabric and is not directly accessible to the developers for application programming.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Federation subsystem</source>
            <target state="new">Federation subsystem</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In order to reason about a set of nodes in a distributed system, we need to have a consistent view of the system.</source>
            <target state="new">In order to reason about a set of nodes in a distributed system, we need to have a consistent view of the system.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The federation subsystem uses the communication primitives provided by the transport subsystem and stitches the various nodes into a single unified system that it can reason about.</source>
            <target state="new">The federation subsystem uses the communication primitives provided by the transport subsystem and stitches the various nodes into a single unified system that it can reason about.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>It provides the distributed systems primitives needed by the other subsystems - failure detection, leader election, and consistent routing.</source>
            <target state="new">It provides the distributed systems primitives needed by the other subsystems - failure detection, leader election, and consistent routing.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The federation subsystem is built on top of Distributed Hash Tables with a 128 bit token space and creates a ring topology over the nodes, with each node in the ring being allocated a subset of the token space for ownership.</source>
            <target state="new">The federation subsystem is built on top of Distributed Hash Tables with a 128 bit token space and creates a ring topology over the nodes, with each node in the ring being allocated a subset of the token space for ownership.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For failure detection, the layer uses a leasing mechanism based on heart beating and arbitration.</source>
            <target state="new">For failure detection, the layer uses a leasing mechanism based on heart beating and arbitration.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The federation subsystem also guarantees through intricate join and departure protocols that only a single owner of a token exists at any time.</source>
            <target state="new">The federation subsystem also guarantees through intricate join and departure protocols that only a single owner of a token exists at any time.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>This allows us to provide leader election and consistent routing guarantees.</source>
            <target state="new">This allows us to provide leader election and consistent routing guarantees.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Reliability subsystem</source>
            <target state="new">Reliability subsystem</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The reliability subsystem provides the mechanism to make the state of a Service Fabric service highly available through the use of the <bpt id="2">&lt;em&gt;</bpt>replicator<ept id="2">&lt;/em&gt;</ept>, the _failover manager_, and, the _resource balancer_.</source>
            <target state="new">The reliability subsystem provides the mechanism to make the state of a Service Fabric service highly available through the use of the <bpt id="2">&lt;em&gt;</bpt>replicator<ept id="2">&lt;/em&gt;</ept>, the _failover manager_, and, the _resource balancer_.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The Replicator ensures that state changes in the primary service replica will automatically be replicated to secondary replicas, maintaining consistency between the primary and secondary replicas in a service replica set.</source>
            <target state="new">The Replicator ensures that state changes in the primary service replica will automatically be replicated to secondary replicas, maintaining consistency between the primary and secondary replicas in a service replica set.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The Replicator is responsible for quorum management among the replicas in the replica-set.</source>
            <target state="new">The Replicator is responsible for quorum management among the replicas in the replica-set.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>It interacts with the failover unit to get the list of operations to replicate and the reconfiguration agent (RA) provides it with the configuration of the replica-set, which indicates which replicas the operations need to be replicated to.</source>
            <target state="new">It interacts with the failover unit to get the list of operations to replicate and the reconfiguration agent (RA) provides it with the configuration of the replica-set, which indicates which replicas the operations need to be replicated to.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Service Fabric provides a default replicator called Fabric Replicator, which can be used by service developers to make service state highly available and reliable.</source>
            <target state="new">Service Fabric provides a default replicator called Fabric Replicator, which can be used by service developers to make service state highly available and reliable.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The Failover Manager ensures that when nodes are added to or removed from the cluster, load is automatically redistributed across the available nodes.</source>
            <target state="new">The Failover Manager ensures that when nodes are added to or removed from the cluster, load is automatically redistributed across the available nodes.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>If a node in the cluster fails, the cluster will automatically reconfigure the service replicas so that there will be no loss of availability.</source>
            <target state="new">If a node in the cluster fails, the cluster will automatically reconfigure the service replicas so that there will be no loss of availability.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>The Resource Balancer places service replicas across failure domain in the cluster and ensures that all failover units are operational.</source>
            <target state="new">The Resource Balancer places service replicas across failure domain in the cluster and ensures that all failover units are operational.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The Resource Balancer also resource balances services across the underlying shared pool of cluster nodes to achieve optimal uniform load distribution.</source>
            <target state="new">The Resource Balancer also resource balances services across the underlying shared pool of cluster nodes to achieve optimal uniform load distribution.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Management subsystem</source>
            <target state="new">Management subsystem</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The management subsystem provides end-to-end service and application lifecycle management.</source>
            <target state="new">The management subsystem provides end-to-end service and application lifecycle management.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>PowerShell Cmdlets and administrative APIs enable you to provision, deploy, patch, upgrade, and de-provision applications without loss of availability.</source>
            <target state="new">PowerShell Cmdlets and administrative APIs enable you to provision, deploy, patch, upgrade, and de-provision applications without loss of availability.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The management subsystem performs this through the following services.</source>
            <target state="new">The management subsystem performs this through the following services.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Cluster Manager - This is the primary service that interacts with the Failover Manager from reliability to place the applications with the various nodes based on the service placement constraints.</source>
            <target state="new">Cluster Manager - This is the primary service that interacts with the Failover Manager from reliability to place the applications with the various nodes based on the service placement constraints.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>The resource balancer in failover ensures that the constraints are never broken.</source>
            <target state="new">The resource balancer in failover ensures that the constraints are never broken.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>The cluster manager manages the life-cycle of the applications from provision to de-provision.</source>
            <target state="new">The cluster manager manages the life-cycle of the applications from provision to de-provision.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>It integrates with the health manager described in the next step to ensure that application availability is not lost from a semantic health perspective during upgrades.</source>
            <target state="new">It integrates with the health manager described in the next step to ensure that application availability is not lost from a semantic health perspective during upgrades.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Health Manager - This services enables health monitoring of applications and services and cluster entities.</source>
            <target state="new">Health Manager - This services enables health monitoring of applications and services and cluster entities.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Cluster entities (such as nodes, service partitions, and replicas) can report health information, which is then aggregated into the centralized Health Store.</source>
            <target state="new">Cluster entities (such as nodes, service partitions, and replicas) can report health information, which is then aggregated into the centralized Health Store.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>This health information provides an overall point-in-time health snapshot of the services and nodes distributed across multiple nodes in the cluster, allowing you to take any needed corrective actions.</source>
            <target state="new">This health information provides an overall point-in-time health snapshot of the services and nodes distributed across multiple nodes in the cluster, allowing you to take any needed corrective actions.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Health Query APIs enable you to query the health events reported to the Health subsystem.</source>
            <target state="new">Health Query APIs enable you to query the health events reported to the Health subsystem.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The Health Query APIs return the raw health data stored in the Health Store or the aggregated, interpreted health data for a specific cluster entity.</source>
            <target state="new">The Health Query APIs return the raw health data stored in the Health Store or the aggregated, interpreted health data for a specific cluster entity.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Image Store - This service allows for the storage and distribution of the application binaries.</source>
            <target state="new">Image Store - This service allows for the storage and distribution of the application binaries.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>This service provides simple distributed file store where the applications are uploaded to and downloaded from.</source>
            <target state="new">This service provides simple distributed file store where the applications are uploaded to and downloaded from.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Hosting subsystem</source>
            <target state="new">Hosting subsystem</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The cluster manager informs the hosting subsystem (running on each node) which services it needs to manage for a particular node.</source>
            <target state="new">The cluster manager informs the hosting subsystem (running on each node) which services it needs to manage for a particular node.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The hosting subsytem then manages the lifecycle of the application on that node.</source>
            <target state="new">The hosting subsytem then manages the lifecycle of the application on that node.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>It interacts with the reliability and health components to ensure that the replicas are properly placed and are healthy.</source>
            <target state="new">It interacts with the reliability and health components to ensure that the replicas are properly placed and are healthy.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Communication subsystem</source>
            <target state="new">Communication subsystem</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>This subsystem provides reliable messaging within the cluster and service discovery through the Naming service.</source>
            <target state="new">This subsystem provides reliable messaging within the cluster and service discovery through the Naming service.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>The Naming service resolves service names to a location in the cluster and allows users to manage service names and properties.</source>
            <target state="new">The Naming service resolves service names to a location in the cluster and allows users to manage service names and properties.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Using the Naming service, clients can securely communicate with any node in the cluster to resolve a service name and retrieve service metadata.</source>
            <target state="new">Using the Naming service, clients can securely communicate with any node in the cluster to resolve a service name and retrieve service metadata.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Using a simple Naming Client API, users of Service Fabric can develop services and clients capable of resolving the current network location despite node dynamism or size of the cluster.</source>
            <target state="new">Using a simple Naming Client API, users of Service Fabric can develop services and clients capable of resolving the current network location despite node dynamism or size of the cluster.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Testability subsystem</source>
            <target state="new">Testability subsystem</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Testability is a suite of tools specifically designed for testing services built on  Service Fabric.</source>
            <target state="new">Testability is a suite of tools specifically designed for testing services built on  Service Fabric.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>The tools allow the developer to easily induce meaningful faults and run test scenarios to exercise and validate the numerous different states and transitions a service will experience throughout its lifetime, all in a controlled and safe manner.</source>
            <target state="new">The tools allow the developer to easily induce meaningful faults and run test scenarios to exercise and validate the numerous different states and transitions a service will experience throughout its lifetime, all in a controlled and safe manner.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Testability also provides a mechanism to run long running tests that can iterate through various possible failures without losing availability providing users with a Test In Production environment.</source>
            <target state="new">Testability also provides a mechanism to run long running tests that can iterate through various possible failures without losing availability providing users with a Test In Production environment.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>