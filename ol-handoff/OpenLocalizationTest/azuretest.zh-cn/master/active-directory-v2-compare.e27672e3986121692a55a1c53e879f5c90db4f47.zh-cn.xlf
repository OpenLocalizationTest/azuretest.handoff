<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:07:04 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b47f5ae6fe1f392513bb5a3e477949c91fbd312b</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>App Model v2.0 | Microsoft Azure</source>
            <target state="new">App Model v2.0 | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>An comparison between the generally available Azure AD and the v2.0 app model public preview.</source>
            <target state="new">An comparison between the generally available Azure AD and the v2.0 app model public preview.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>App model v2.0 preview: What's different?</source>
            <target state="new">App model v2.0 preview: What's different?</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>If you're familiar with the generally available Azure AD service or have integrated apps with Azure AD in the past, there may be some differences in the v2.0 app model that you would not expect.</source>
            <target state="new">If you're familiar with the generally available Azure AD service or have integrated apps with Azure AD in the past, there may be some differences in the v2.0 app model that you would not expect.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This document calls out those differences for your understanding.</source>
            <target state="new">This document calls out those differences for your understanding.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This information applies to the v2.0 app model public preview.</source>
            <target state="new">This information applies to the v2.0 app model public preview.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Microsoft Accounts and Azure AD Accounts</source>
            <target state="new">Microsoft Accounts and Azure AD Accounts</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The v2.0 app model allows developers to write apps that accept sign-in from both Microsoft Accounts and Azure AD accounts, using a single endpoint.</source>
            <target state="new">The v2.0 app model allows developers to write apps that accept sign-in from both Microsoft Accounts and Azure AD accounts, using a single endpoint.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This gives you the ability to write your app completely account-agnostic; it can be ignorant of the type of account that the user signs in with.</source>
            <target state="new">This gives you the ability to write your app completely account-agnostic; it can be ignorant of the type of account that the user signs in with.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Of course, you <bpt id="2">&lt;em&gt;</bpt>can<ept id="2">&lt;/em&gt;</ept> make your app aware of the type of account being used in a particular session, but you don't have to.</source>
            <target state="new">Of course, you <bpt id="2">&lt;em&gt;</bpt>can<ept id="2">&lt;/em&gt;</ept> make your app aware of the type of account being used in a particular session, but you don't have to.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For instance, if your app calls the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Office 365 REST APIs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, some additional functionality and data will be available to enterprise users, such as their SharePoint sites or Directory data.</source>
            <target state="new">For instance, if your app calls the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Office 365 REST APIs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, some additional functionality and data will be available to enterprise users, such as their SharePoint sites or Directory data.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>But for many actions, such as <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reading a user's mail<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, the code can be written exactly the same for both Microsoft Accounts and Azure AD accounts.</source>
            <target state="new">But for many actions, such as <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reading a user's mail<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, the code can be written exactly the same for both Microsoft Accounts and Azure AD accounts.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Integrating your app with Microsoft Accounts and Azure AD accounts is now one simple process.</source>
            <target state="new">Integrating your app with Microsoft Accounts and Azure AD accounts is now one simple process.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>You can use a single set of endpoints, a single library, and a single app registration to gain access to both the consumer and enterprise worlds.</source>
            <target state="new">You can use a single set of endpoints, a single library, and a single app registration to gain access to both the consumer and enterprise worlds.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>To learn more about the v2.0 app model preview, check out <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>the overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more about the v2.0 app model preview, check out <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>the overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>New App Registration Portal</source>
            <target state="new">New App Registration Portal</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The v2.0 app model requires you to register your Microsoft apps in a new location: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The v2.0 app model requires you to register your Microsoft apps in a new location: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>This is the portal where you can obtain an Application Id, customize the appearance of your app's sign-in page, and more.</source>
            <target state="new">This is the portal where you can obtain an Application Id, customize the appearance of your app's sign-in page, and more.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>We will continue to add more and more functionality to this App Registration Portal, largely based on feedback we receive during the preview.</source>
            <target state="new">We will continue to add more and more functionality to this App Registration Portal, largely based on feedback we receive during the preview.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The intent is that this portal will be the new location where you can go to manage anything and everything having to do with your Microsoft apps.</source>
            <target state="new">The intent is that this portal will be the new location where you can go to manage anything and everything having to do with your Microsoft apps.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>And the best part is, you don't need an Azure or Office subscription to use it.</source>
            <target state="new">And the best part is, you don't need an Azure or Office subscription to use it.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>All you need is a personal Microsoft account or a work/school account.</source>
            <target state="new">All you need is a personal Microsoft account or a work/school account.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Note that today, apps registered in the new App Registration Portal will only work with app model v2.0, and <bpt id="2">&lt;em&gt;</bpt>only<ept id="2">&lt;/em&gt;</ept> apps registered in the new App Registration Portal will work with the app model v2.0.</source>
            <target state="new">Note that today, apps registered in the new App Registration Portal will only work with app model v2.0, and <bpt id="2">&lt;em&gt;</bpt>only<ept id="2">&lt;/em&gt;</ept> apps registered in the new App Registration Portal will work with the app model v2.0.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>If you try to use one of these apps with the generally available Microsoft Account or Azure AD services, or try to use an existing app with the v2.0 app model, you may run into incompatibilities.</source>
            <target state="new">If you try to use one of these apps with the generally available Microsoft Account or Azure AD services, or try to use an existing app with the v2.0 app model, you may run into incompatibilities.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>One App Id for All Platforms</source>
            <target state="new">One App Id for All Platforms</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>In the GA Azure AD service, you may have registered several different apps for a single project.</source>
            <target state="new">In the GA Azure AD service, you may have registered several different apps for a single project.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>You were forced to use separate app registrations for your native clients and web apps:</source>
            <target state="new">You were forced to use separate app registrations for your native clients and web apps:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Old Application Registration UI<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Old Application Registration UI<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>For example, if you've built both a website and an iOS app, you had to register them separately, using two different Application Ids.</source>
            <target state="new">For example, if you've built both a website and an iOS app, you had to register them separately, using two different Application Ids.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>If you had a website and a backend web api, you might have registered each as a separate app in Azure AD.</source>
            <target state="new">If you had a website and a backend web api, you might have registered each as a separate app in Azure AD.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>If you had an iOS app and an Android app, you also might have registered two different apps.</source>
            <target state="new">If you had an iOS app and an Android app, you also might have registered two different apps.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Now, all you need is a single app registration and a single Application Id for each of your projects.</source>
            <target state="new">Now, all you need is a single app registration and a single Application Id for each of your projects.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>You can add several "platforms" to a each project, and provide the appropriate data for each platform you add.</source>
            <target state="new">You can add several "platforms" to a each project, and provide the appropriate data for each platform you add.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Of course, you can create as many apps as you like depending on your requirements, but for the majority of cases only one Application Id should be necessary.</source>
            <target state="new">Of course, you can create as many apps as you like depending on your requirements, but for the majority of cases only one Application Id should be necessary.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Our aim is that this will lead to a more simplified app management and development experience, and create a more consolidated view of a single project that you might be working on.</source>
            <target state="new">Our aim is that this will lead to a more simplified app management and development experience, and create a more consolidated view of a single project that you might be working on.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Scopes, Not Resources</source>
            <target state="new">Scopes, Not Resources</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>In the Azure AD generally available service, an app can behave as a <bpt id="2">&lt;strong&gt;</bpt>resource<ept id="2">&lt;/strong&gt;</ept>, or a recipient of tokens.</source>
            <target state="new">In the Azure AD generally available service, an app can behave as a <bpt id="2">&lt;strong&gt;</bpt>resource<ept id="2">&lt;/strong&gt;</ept>, or a recipient of tokens.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>A resource can define a number of <bpt id="2">&lt;strong&gt;</bpt>scopes<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>oAuth2Permissions<ept id="4">&lt;/strong&gt;</ept> that it understands, allowing client apps to request tokens to that resource for a certain set of scopes.</source>
            <target state="new">A resource can define a number of <bpt id="2">&lt;strong&gt;</bpt>scopes<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>oAuth2Permissions<ept id="4">&lt;/strong&gt;</ept> that it understands, allowing client apps to request tokens to that resource for a certain set of scopes.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Consider the Azure AD Graph API as an example of a resource:</source>
            <target state="new">Consider the Azure AD Graph API as an example of a resource:</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Resource Identifier, or <bpt id="2">&lt;code&gt;</bpt>AppID URI<ept id="2">&lt;/code&gt;</ept>: <bpt id="4">&lt;code&gt;</bpt>https://graph.windows.net/<ept id="4">&lt;/code&gt;</ept></source>
            <target state="new">Resource Identifier, or <bpt id="2">&lt;code&gt;</bpt>AppID URI<ept id="2">&lt;/code&gt;</ept>: <bpt id="4">&lt;code&gt;</bpt>https://graph.windows.net/<ept id="4">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Scopes, or <bpt id="2">&lt;code&gt;</bpt>OAuth2Permissions<ept id="2">&lt;/code&gt;</ept>: <bpt id="4">&lt;code&gt;</bpt>Directory.Read<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>Directory.Write<ept id="6">&lt;/code&gt;</ept>, etc.</source>
            <target state="new">Scopes, or <bpt id="2">&lt;code&gt;</bpt>OAuth2Permissions<ept id="2">&lt;/code&gt;</ept>: <bpt id="4">&lt;code&gt;</bpt>Directory.Read<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>Directory.Write<ept id="6">&lt;/code&gt;</ept>, etc.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>All of this holds true for the v2.0 app model.</source>
            <target state="new">All of this holds true for the v2.0 app model.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>An app can still behave as resource, define scopes, and be identified by a URI.</source>
            <target state="new">An app can still behave as resource, define scopes, and be identified by a URI.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Client apps can still request access to those scopes.</source>
            <target state="new">Client apps can still request access to those scopes.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>However, the way in which a client requests those permissions has changed.</source>
            <target state="new">However, the way in which a client requests those permissions has changed.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>In the past, an OAuth 2.0 authorize request to Azure AD might have looked like:</source>
            <target state="new">In the past, an OAuth 2.0 authorize request to Azure AD might have looked like:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>where the <bpt id="2">&lt;strong&gt;</bpt>resource<ept id="2">&lt;/strong&gt;</ept> parameter indicated which resource the client app is requesting authorization for.</source>
            <target state="new">where the <bpt id="2">&lt;strong&gt;</bpt>resource<ept id="2">&lt;/strong&gt;</ept> parameter indicated which resource the client app is requesting authorization for.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Azure AD computed the permissions required by the app based on static configuration in the Azure Portal, and issued tokens accordingly.</source>
            <target state="new">Azure AD computed the permissions required by the app based on static configuration in the Azure Portal, and issued tokens accordingly.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Now, the same OAuth 2.0 authorize request looks like:</source>
            <target state="new">Now, the same OAuth 2.0 authorize request looks like:</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>where the <bpt id="2">&lt;strong&gt;</bpt>scope<ept id="2">&lt;/strong&gt;</ept> parameter indicates which resource and permissions the app is requesting authorization for.</source>
            <target state="new">where the <bpt id="2">&lt;strong&gt;</bpt>scope<ept id="2">&lt;/strong&gt;</ept> parameter indicates which resource and permissions the app is requesting authorization for.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The desired resource is still very present in the request - it is simply encompassed in each of the values of the scope parameter.</source>
            <target state="new">The desired resource is still very present in the request - it is simply encompassed in each of the values of the scope parameter.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Using the scope parameter in this manner allows the v2.0 app model to be more compliant with the OAuth 2.0 specification, and aligns more closely with common industry practices.</source>
            <target state="new">Using the scope parameter in this manner allows the v2.0 app model to be more compliant with the OAuth 2.0 specification, and aligns more closely with common industry practices.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>It also enables apps to perform <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>incremental consent<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which is described in the next section.</source>
            <target state="new">It also enables apps to perform <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>incremental consent<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which is described in the next section.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Incremental and Dynamic Consent</source>
            <target state="new">Incremental and Dynamic Consent</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Apps registered in the generally available Azure AD service needed to specify their required OAuth 2.0 permissions in the Azure Portal, at app creation time:</source>
            <target state="new">Apps registered in the generally available Azure AD service needed to specify their required OAuth 2.0 permissions in the Azure Portal, at app creation time:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Permissions Registration UI<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Permissions Registration UI<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>The permissions an app required were configured <bpt id="2">&lt;strong&gt;</bpt>statically<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The permissions an app required were configured <bpt id="2">&lt;strong&gt;</bpt>statically<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>While this allowed configuration of the app to exist in the Azure Portal and kept the code nice and simple, it presents a few issues for developers:</source>
            <target state="new">While this allowed configuration of the app to exist in the Azure Portal and kept the code nice and simple, it presents a few issues for developers:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>An app had to know all of the permissions it would ever need at app creation time.</source>
            <target state="new">An app had to know all of the permissions it would ever need at app creation time.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Adding permissions over time was a difficult process.</source>
            <target state="new">Adding permissions over time was a difficult process.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>An app had to know all of the resources it would ever access ahead of time.</source>
            <target state="new">An app had to know all of the resources it would ever access ahead of time.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>It was difficult to create apps that could access an arbitrary number of resources.</source>
            <target state="new">It was difficult to create apps that could access an arbitrary number of resources.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>An app had to request all the permissions it would ever need upon the user's first sign-in.</source>
            <target state="new">An app had to request all the permissions it would ever need upon the user's first sign-in.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>In some cases this led to a very long list of permissions, which discouraged end-users from approving the app's access on initial sign-in.</source>
            <target state="new">In some cases this led to a very long list of permissions, which discouraged end-users from approving the app's access on initial sign-in.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>In the v2.0 app model, you can specify the permissions your app needs <bpt id="2">&lt;strong&gt;</bpt>dynamically<ept id="2">&lt;/strong&gt;</ept>, at runtime, during regular usage of your app.</source>
            <target state="new">In the v2.0 app model, you can specify the permissions your app needs <bpt id="2">&lt;strong&gt;</bpt>dynamically<ept id="2">&lt;/strong&gt;</ept>, at runtime, during regular usage of your app.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>To do so, you can specify the scopes your app needs at any given point in time by including them in the <bpt id="2">&lt;code&gt;</bpt>scope<ept id="2">&lt;/code&gt;</ept> parameter of an authorization request:</source>
            <target state="new">To do so, you can specify the scopes your app needs at any given point in time by including them in the <bpt id="2">&lt;code&gt;</bpt>scope<ept id="2">&lt;/code&gt;</ept> parameter of an authorization request:</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>The above requests permission for the app to read an Azure AD user's directory data, as well as write data to their directory.</source>
            <target state="new">The above requests permission for the app to read an Azure AD user's directory data, as well as write data to their directory.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>If the user has consented to those permissions in the past for this particular app, they will simply enter their credentials and be signed into the app.</source>
            <target state="new">If the user has consented to those permissions in the past for this particular app, they will simply enter their credentials and be signed into the app.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>If the user has not consented to any of these permissions, the v2.0 endpoint will ask the user for consent to those permissions.</source>
            <target state="new">If the user has not consented to any of these permissions, the v2.0 endpoint will ask the user for consent to those permissions.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>To learn more, you can read up on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>permissions, consent, and scopes<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more, you can read up on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>permissions, consent, and scopes<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Allowing an app to request permissions dynamically via the <bpt id="2">&lt;code&gt;</bpt>scope<ept id="2">&lt;/code&gt;</ept> parameter gives you full control over your user's experience.</source>
            <target state="new">Allowing an app to request permissions dynamically via the <bpt id="2">&lt;code&gt;</bpt>scope<ept id="2">&lt;/code&gt;</ept> parameter gives you full control over your user's experience.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>If you wish, you can choose to frontload your consent experience and ask for all permissions in one initial authorization request.</source>
            <target state="new">If you wish, you can choose to frontload your consent experience and ask for all permissions in one initial authorization request.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Or if your app requires a large number of permissions, you can choose to gather those permissions from the user incrementally, as they attempt to use certain features of your app over time.</source>
            <target state="new">Or if your app requires a large number of permissions, you can choose to gather those permissions from the user incrementally, as they attempt to use certain features of your app over time.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Offline Access</source>
            <target state="new">Offline Access</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>The v2.0 app model introduces a new well-known permission for apps - the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope.</source>
            <target state="new">The v2.0 app model introduces a new well-known permission for apps - the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>All apps will need to request this permission if they need to access resources on the behalf of a user for a prolonged period of time, even when the user may not be actively using the app.</source>
            <target state="new">All apps will need to request this permission if they need to access resources on the behalf of a user for a prolonged period of time, even when the user may not be actively using the app.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope will appear to the user in consent dialogs as "Access your data offline", which the user must agree to.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope will appear to the user in consent dialogs as "Access your data offline", which the user must agree to.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Requesting the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> permission will enable your web app to receive OAuth 2.0 refresh_tokens from the v2.0 endpoint.</source>
            <target state="new">Requesting the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> permission will enable your web app to receive OAuth 2.0 refresh_tokens from the v2.0 endpoint.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Refresh_tokens are long-lived, and can be exchanged for new OAuth 2.0 access_tokens for extended periods of access.</source>
            <target state="new">Refresh_tokens are long-lived, and can be exchanged for new OAuth 2.0 access_tokens for extended periods of access.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>If your app does not request the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope, it will not receive refresh_tokens.</source>
            <target state="new">If your app does not request the <bpt id="2">&lt;code&gt;</bpt>offline_access<ept id="2">&lt;/code&gt;</ept> scope, it will not receive refresh_tokens.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>This means that when you redeem an authorization_code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0 authorization code flow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will only receive back an access_token from the <bpt id="4">&lt;code&gt;</bpt>/oauth2/token<ept id="4">&lt;/code&gt;</ept> endpoint.</source>
            <target state="new">This means that when you redeem an authorization_code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0 authorization code flow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will only receive back an access_token from the <bpt id="4">&lt;code&gt;</bpt>/oauth2/token<ept id="4">&lt;/code&gt;</ept> endpoint.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>That access_token will remain valid for a short period of time (typically one hour), but will eventually expire.</source>
            <target state="new">That access_token will remain valid for a short period of time (typically one hour), but will eventually expire.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>At that point in time, your app will need to redirect the user back to the <bpt id="2">&lt;code&gt;</bpt>/oauth2/authorize<ept id="2">&lt;/code&gt;</ept> endpoint to retrieve a new authorization_code.</source>
            <target state="new">At that point in time, your app will need to redirect the user back to the <bpt id="2">&lt;code&gt;</bpt>/oauth2/authorize<ept id="2">&lt;/code&gt;</ept> endpoint to retrieve a new authorization_code.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>During this redirect, the user may or may not need to enter their credentials again or re-consent to permissions, depending on the the type of app.</source>
            <target state="new">During this redirect, the user may or may not need to enter their credentials again or re-consent to permissions, depending on the the type of app.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>To learn more about OAuth 2.0, refresh_tokens, and access_tokens, check out the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 app model protocol reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more about OAuth 2.0, refresh_tokens, and access_tokens, check out the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 app model protocol reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Token Claims</source>
            <target state="new">Token Claims</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>The claims in tokens issued by the v2.0 endpoint will not be identical to tokens issued by the generally available Azure AD endpoints - apps migrating to the new service should not assume a particular claim will exist in id_tokens or access_tokens.</source>
            <target state="new">The claims in tokens issued by the v2.0 endpoint will not be identical to tokens issued by the generally available Azure AD endpoints - apps migrating to the new service should not assume a particular claim will exist in id_tokens or access_tokens.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Tokens issued by the v2.0 endpoint are compliant with the OAuth 2.0 and OpenID Connect specifications, but may follow different semantics than the generally available Azure AD service.</source>
            <target state="new">Tokens issued by the v2.0 endpoint are compliant with the OAuth 2.0 and OpenID Connect specifications, but may follow different semantics than the generally available Azure AD service.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>To learn about the specific claims emitted in v2.0 app model tokens, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 token reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn about the specific claims emitted in v2.0 app model tokens, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 token reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Preview Limitations</source>
            <target state="new">Preview Limitations</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>There are a number of restrictions to be aware of when building an app with the v2.0 app model during the public preview.</source>
            <target state="new">There are a number of restrictions to be aware of when building an app with the v2.0 app model during the public preview.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 app model limitations doc<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to see if any of these restrictions apply to your particular scenario.</source>
            <target state="new">Please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>v2.0 app model limitations doc<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to see if any of these restrictions apply to your particular scenario.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>