<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:19:45 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99255362fbd9baf9458cb900cbbc5bf8e3f1fe5e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>&lt;properties</source>
            <target state="new">&lt;properties</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>pageTitle="Managing Media Services Entities with REST API"</source>
            <target state="new">pageTitle="Managing Media Services Entities with REST API"</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>description="Learn how to manage Media Services entities with REST API."</source>
            <target state="new">description="Learn how to manage Media Services entities with REST API."</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>authors="juliako"</source>
            <target state="new">authors="juliako"</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>manager="dwrede"</source>
            <target state="new">manager="dwrede"</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>editor=""</source>
            <target state="new">editor=""</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>services="media-services"</source>
            <target state="new">services="media-services"</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>documentationCenter=""/&gt;</source>
            <target state="new">documentationCenter=""/&gt;</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>&lt;tags</source>
            <target state="new">&lt;tags</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>ms.service="media-services"</source>
            <target state="new">ms.service="media-services"</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>ms.workload="media"</source>
            <target state="new">ms.workload="media"</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>ms.tgt_pltfrm="na"</source>
            <target state="new">ms.tgt_pltfrm="na"</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>ms.devlang="na"</source>
            <target state="new">ms.devlang="na"</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>ms.topic="article"</source>
            <target state="new">ms.topic="article"</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>ms.date="08/11/2015"</source>
            <target state="new">ms.date="08/11/2015"</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>ms.author="juliako"/&gt;</source>
            <target state="new">ms.author="juliako"/&gt;</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Managing Media Services Entities with REST API</source>
            <target state="new">Managing Media Services Entities with REST API</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Microsoft Azure Media Services is a REST-based service built on OData v3.</source>
            <target state="new">Microsoft Azure Media Services is a REST-based service built on OData v3.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Because of this, you can add, query, update, and delete entities in much the same way as you can on any other OData service.</source>
            <target state="new">Because of this, you can add, query, update, and delete entities in much the same way as you can on any other OData service.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Exceptions will be called out when applicable.</source>
            <target state="new">Exceptions will be called out when applicable.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>For more information on OData, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Open Data Protocol documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information on OData, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Open Data Protocol documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Adding entities</source>
            <target state="new">Adding entities</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Querying entities</source>
            <target state="new">Querying entities</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Updating entities</source>
            <target state="new">Updating entities</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Deleting entities</source>
            <target state="new">Deleting entities</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>When working with the Media Services REST API, the following considerations apply:</source>
            <target state="new">When working with the Media Services REST API, the following considerations apply:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</source>
            <target state="new">When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Setup for Media Services REST API Development<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Setup for Media Services REST API Development<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</source>
            <target state="new">After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>You must make subsequent calls to the new URI as described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connecting to Media Services using REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You must make subsequent calls to the new URI as described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connecting to Media Services using REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Adding entities</source>
            <target state="new">Adding entities</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Every entity in Media Services is added to an entity set, such as Assets, through a POST HTTP request.</source>
            <target state="new">Every entity in Media Services is added to an entity set, such as Assets, through a POST HTTP request.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The following example shows how to create an AccessPolicy.</source>
            <target state="new">The following example shows how to create an AccessPolicy.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Querying entities</source>
            <target state="new">Querying entities</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Querying and listing entities is straightforward and only involves a GET HTTP request and optional OData operations.</source>
            <target state="new">Querying and listing entities is straightforward and only involves a GET HTTP request and optional OData operations.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The following example retrieves a list of all MediaProcessor entities.</source>
            <target state="new">The following example retrieves a list of all MediaProcessor entities.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>You can also retrieve a specific entity or all entity sets associated with a specific entity, such as in the following examples:</source>
            <target state="new">You can also retrieve a specific entity or all entity sets associated with a specific entity, such as in the following examples:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The following example returns only the State property of all Jobs.</source>
            <target state="new">The following example returns only the State property of all Jobs.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The $expand operation is not supported in Media Services as well as the unsupported LINQ methods described in LINQ Considerations (WCF Data Services).</source>
            <target state="new">The $expand operation is not supported in Media Services as well as the unsupported LINQ methods described in LINQ Considerations (WCF Data Services).</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Updating entities</source>
            <target state="new">Updating entities</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Depending on the entity type and the state that it is in, you can update properties on that entity through a PATCH, PUT, or MERGE HTTP requests.</source>
            <target state="new">Depending on the entity type and the state that it is in, you can update properties on that entity through a PATCH, PUT, or MERGE HTTP requests.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For more information about these operations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>PATCH/PUT/MERGE<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about these operations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>PATCH/PUT/MERGE<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>The following code example shows how to update the Name property on an Asset entity.</source>
            <target state="new">The following code example shows how to update the Name property on an Asset entity.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Deleting entities</source>
            <target state="new">Deleting entities</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Entities can be deleted in Media Services by using a DELETE HTTP request.</source>
            <target state="new">Entities can be deleted in Media Services by using a DELETE HTTP request.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Depending on the entity, the order in which you delete entities may be important.</source>
            <target state="new">Depending on the entity, the order in which you delete entities may be important.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>For example, entities such as Assets require that you revoke (or delete) all Locators that reference that particular Asset before deleting the Asset.</source>
            <target state="new">For example, entities such as Assets require that you revoke (or delete) all Locators that reference that particular Asset before deleting the Asset.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The following example shows how to delete a Locator that was used to upload a file into blob storage.</source>
            <target state="new">The following example shows how to delete a Locator that was used to upload a file into blob storage.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>