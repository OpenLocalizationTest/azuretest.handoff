<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:54:02 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec19e99701fcce9689c3cdb1ee35552f62f2a836</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Cloud Cruiser and Microsoft Azure Billing API Integration</source>
            <target state="new">Cloud Cruiser and Microsoft Azure Billing API Integration</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Provides a unique perspective from Microsoft Azure Billing partner Cloud Cruiser, on their experiences integrating the Azure Billing APIs into their product.  This is especially useful for Azure and Cloud Cruiser customers that are interested in using/trying Cloud Cruiser for Microsoft Azure Pack.</source>
            <target state="new">Provides a unique perspective from Microsoft Azure Billing partner Cloud Cruiser, on their experiences integrating the Azure Billing APIs into their product.  This is especially useful for Azure and Cloud Cruiser customers that are interested in using/trying Cloud Cruiser for Microsoft Azure Pack.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>云的巡洋舰和微软 Azure 计费 API 集成</source>
            <target state="new">云的巡洋舰和微软 Azure 计费 API 集成</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>这篇文章描述如何从新的微软 Azure 计费 Api 收集的信息可用于在云巡洋舰工作流成本仿真和分析。</source>
            <target state="new">这篇文章描述如何从新的微软 Azure 计费 Api 收集的信息可用于在云巡洋舰工作流成本仿真和分析。</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>天青 RateCard API</source>
            <target state="new">天青 RateCard API</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>RateCard API 从 Azure 提供率信息。之后使用适当的凭据进行身份验证，您可以查询 API 在 Azure，收集有关可用的服务的元数据，以及利率与您提供的 id。</source>
            <target state="new">RateCard API 从 Azure 提供率信息。之后使用适当的凭据进行身份验证，您可以查询 API 在 Azure，收集有关可用的服务的元数据，以及利率与您提供的 id。</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>下面是显示的价格为 A0 的 API 的示例响应 (Windows) 实例:</source>
            <target state="new">下面是显示的价格为 A0 的 API 的示例响应 (Windows) 实例:</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>云到 Azure RateCard API 巡洋舰的接口</source>
            <target state="new">云到 Azure RateCard API 巡洋舰的接口</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>云巡洋舰可以以不同的方式利用 RateCard API 的信息。这篇文章中，我们将展示如何使用它以使 IaaS 成本模拟和分析的工作量。</source>
            <target state="new">云巡洋舰可以以不同的方式利用 RateCard API 的信息。这篇文章中，我们将展示如何使用它以使 IaaS 成本模拟和分析的工作量。</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>为了证明这一使用情形，请想象的几个实例运行在微软 Azure 包 (WAP) 的工作量。目标是模拟在 Azure 上, 这个相同的工作负载并估计做这种迁移的成本。为了创建这种模拟，有要完成两个主要任务:</source>
            <target state="new">为了证明这一使用情形，请想象的几个实例运行在微软 Azure 包 (WAP) 的工作量。目标是模拟在 Azure 上, 这个相同的工作负载并估计做这种迁移的成本。为了创建这种模拟，有要完成两个主要任务:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>导入和处理从 RateCard API 收集的服务信息<ept id="1">&lt;/strong&gt;</ept> -此任务也执行上的工作簿，其中提取物 RateCard API 是转化，发布到新的收费计划。此新的收费计划将用于模拟估计 Azure 的价格。</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>导入和处理从 RateCard API 收集的服务信息<ept id="1">&lt;/strong&gt;</ept> -此任务也执行上的工作簿，其中提取物 RateCard API 是转化，发布到新的收费计划。此新的收费计划将用于模拟估计 Azure 的价格。</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>正常化、 Azure 服务 IaaS WAP 服务<ept id="1">&lt;/strong&gt;</ept> -默认情况下，基于 WAP 服务是对单个资源 (CPU、 内存大小、 磁盘大小等) 同时 Azure 服务基于实例的大小 (A0、 A1、 A2 等)。这第一项任务可以由云巡洋舰 ETL 引擎，称为工作簿，在那里这些资源可以在实例的大小，类似于 Azure 实例服务捆绑在一起。</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>正常化、 Azure 服务 IaaS WAP 服务<ept id="1">&lt;/strong&gt;</ept> -默认情况下，基于 WAP 服务是对单个资源 (CPU、 内存大小、 磁盘大小等) 同时 Azure 服务基于实例的大小 (A0、 A1、 A2 等)。这第一项任务可以由云巡洋舰 ETL 引擎，称为工作簿，在那里这些资源可以在实例的大小，类似于 Azure 实例服务捆绑在一起。</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>从 RateCard API 导入数据</source>
            <target state="new">从 RateCard API 导入数据</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>云的巡洋舰工作簿提供自动化的方式来收集和处理来自 RateCard API 的信息。 ETL (提取物-变换-负载) 工作簿允许您配置收集、 转换和数据到云巡洋舰数据库出版。</source>
            <target state="new">云的巡洋舰工作簿提供自动化的方式来收集和处理来自 RateCard API 的信息。 ETL (提取物-变换-负载) 工作簿允许您配置收集、 转换和数据到云巡洋舰数据库出版。</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>每个工作簿可以有一个或多个集合。这允许您从不同的来源，以补充或增加使用率数据的信息关联起来。在下面的两个截图，我们显示创建新 <bpt id="2">&lt;em&gt;</bpt>集合<ept id="2">&lt;/em&gt;</ept> 在现有的工作簿，并导入到信息 <bpt id="4">&lt;em&gt;</bpt>集合<ept id="4">&lt;/em&gt;</ept> 从 RateCard API:</source>
            <target state="new">每个工作簿可以有一个或多个集合。这允许您从不同的来源，以补充或增加使用率数据的信息关联起来。在下面的两个截图，我们显示创建新 <bpt id="2">&lt;em&gt;</bpt>集合<ept id="2">&lt;/em&gt;</ept> 在现有的工作簿，并导入到信息 <bpt id="4">&lt;em&gt;</bpt>集合<ept id="4">&lt;/em&gt;</ept> 从 RateCard API:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 1 - Creating a new collection<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 1 - Creating a new collection<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 2 - Import data from the new collection<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 2 - Import data from the new collection<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>After importing the data into the workbook, it’s possible to create multiple steps and transformation processes, to modify and model the data.</source>
            <target state="new">After importing the data into the workbook, it’s possible to create multiple steps and transformation processes, to modify and model the data.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>For this example, since we are only interested in infrastructure-as-a-Service (IaaS,) we can use the transformation steps to remove unnecessary rows, or records, related to services other than IaaS.</source>
            <target state="new">For this example, since we are only interested in infrastructure-as-a-Service (IaaS,) we can use the transformation steps to remove unnecessary rows, or records, related to services other than IaaS.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The screenshot below shows the transformation steps used to process the data collected from RateCard API:</source>
            <target state="new">The screenshot below shows the transformation steps used to process the data collected from RateCard API:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 3 - Transformation steps to process collected data from RateCard API<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 3 - Transformation steps to process collected data from RateCard API<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Defining New Services and Rate Plans</source>
            <target state="new">Defining New Services and Rate Plans</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>There are different ways to define services on Cloud Cruiser.</source>
            <target state="new">There are different ways to define services on Cloud Cruiser.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>One of the options is to import the services from the usage data.</source>
            <target state="new">One of the options is to import the services from the usage data.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>This method is commonly used when working with public clouds, where the services are already defined by the provider.</source>
            <target state="new">This method is commonly used when working with public clouds, where the services are already defined by the provider.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>A Rate Plan is a set of rates or prices that can be applied to different services, based on effective dates, or group of customers, among other options.</source>
            <target state="new">A Rate Plan is a set of rates or prices that can be applied to different services, based on effective dates, or group of customers, among other options.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Rate Plans can also be used on Cloud Cruiser to create simulation or “What-if” scenarios, to understand how changes in services can affect the total cost of a workload.</source>
            <target state="new">Rate Plans can also be used on Cloud Cruiser to create simulation or “What-if” scenarios, to understand how changes in services can affect the total cost of a workload.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In this example, we will use the service information from the RateCard API to define new services in Cloud Cruiser.</source>
            <target state="new">In this example, we will use the service information from the RateCard API to define new services in Cloud Cruiser.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In the same way, we can use the rates associated to the services to create a new Rate Plan on Cloud Cruiser.</source>
            <target state="new">In the same way, we can use the rates associated to the services to create a new Rate Plan on Cloud Cruiser.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>At the end of the transformation process, it is possible to create a new step and publish the data from the RateCard API as new services and rates.</source>
            <target state="new">At the end of the transformation process, it is possible to create a new step and publish the data from the RateCard API as new services and rates.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 4 - Publishing the data from the RateCard API as new Services and Rates<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 4 - Publishing the data from the RateCard API as new Services and Rates<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Verify Azure Services and Rates</source>
            <target state="new">Verify Azure Services and Rates</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>After publishing the services and rates, you can verify the list of imported services in Cloud Cruiser’s <bpt id="2">&lt;em&gt;</bpt>Services<ept id="2">&lt;/em&gt;</ept> tab:</source>
            <target state="new">After publishing the services and rates, you can verify the list of imported services in Cloud Cruiser’s <bpt id="2">&lt;em&gt;</bpt>Services<ept id="2">&lt;/em&gt;</ept> tab:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 5 - Verifying the new Services<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 5 - Verifying the new Services<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>On the <bpt id="2">&lt;em&gt;</bpt>Rate Plans<ept id="2">&lt;/em&gt;</ept> tab, you can check the new rate plan called “AzureSimulation” with the rates imported from the RateCard API.</source>
            <target state="new">On the <bpt id="2">&lt;em&gt;</bpt>Rate Plans<ept id="2">&lt;/em&gt;</ept> tab, you can check the new rate plan called “AzureSimulation” with the rates imported from the RateCard API.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 6 - Verifying the new Rate Plan and associated rates<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 6 - Verifying the new Rate Plan and associated rates<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Normalize WAP and Azure Services</source>
            <target state="new">Normalize WAP and Azure Services</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>By default, WAP provides usage information based on the use of compute, memory and network resources.</source>
            <target state="new">By default, WAP provides usage information based on the use of compute, memory and network resources.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>In Cloud Cruiser, you can define your services based directly on the allocation or metered usage of these resources.</source>
            <target state="new">In Cloud Cruiser, you can define your services based directly on the allocation or metered usage of these resources.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>For example, you can set a basic rate for each hour of CPU usage, or charge the GB of memory allocated to an instance.</source>
            <target state="new">For example, you can set a basic rate for each hour of CPU usage, or charge the GB of memory allocated to an instance.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>For this example, in order to compare costs between WAP and Azure, we need to aggregate the resource usage on WAP into bundles, which can then be mapped to Azure services.</source>
            <target state="new">For this example, in order to compare costs between WAP and Azure, we need to aggregate the resource usage on WAP into bundles, which can then be mapped to Azure services.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>This transformation can be implemented easily in the workbooks:</source>
            <target state="new">This transformation can be implemented easily in the workbooks:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 7 - Transforming WAP data to normalize services<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 7 - Transforming WAP data to normalize services<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The last step at the workbook is to publish the data into the Cloud Cruiser database.</source>
            <target state="new">The last step at the workbook is to publish the data into the Cloud Cruiser database.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>During this step, the usage data is now bundled into services (that map to the Azure Services) and tied to default rates to create the charges.</source>
            <target state="new">During this step, the usage data is now bundled into services (that map to the Azure Services) and tied to default rates to create the charges.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>After finishing the workbook, you can automate the processing of the data, by adding a new task on the scheduler and specifying the frequency and time for the workbook to run.</source>
            <target state="new">After finishing the workbook, you can automate the processing of the data, by adding a new task on the scheduler and specifying the frequency and time for the workbook to run.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Figure 8 - Workbook scheduling<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Figure 8 - Workbook scheduling<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Create Reports for Workload Cost Simulation Analysis</source>
            <target state="new">Create Reports for Workload Cost Simulation Analysis</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>As the usage is collected and the charges are loaded into the Cloud Cruiser database, we can then leverage the Cloud Cruiser Insights module – an advanced analytics reporting tool – to create the workload cost simulation that we desire.</source>
            <target state="new">As the usage is collected and the charges are loaded into the Cloud Cruiser database, we can then leverage the Cloud Cruiser Insights module – an advanced analytics reporting tool – to create the workload cost simulation that we desire.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>In order to demonstrate this scenario, we created the following report:</source>
            <target state="new">In order to demonstrate this scenario, we created the following report:</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Cost Comparison<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Cost Comparison<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The top graph shows a cost comparison broken by services and compares the price of running the workload for each specific service between WAP (dark blue color) and Azure (light blue color).</source>
            <target state="new">The top graph shows a cost comparison broken by services and compares the price of running the workload for each specific service between WAP (dark blue color) and Azure (light blue color).</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The bottom graph shows the same data but broken down by department, demonstrating the costs for each department to run their workload on WAP and Azure, along with the difference between these two – Savings bar (green color).</source>
            <target state="new">The bottom graph shows the same data but broken down by department, demonstrating the costs for each department to run their workload on WAP and Azure, along with the difference between these two – Savings bar (green color).</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>接下来的步骤</source>
            <target state="new">接下来的步骤</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>For detailed instructions on creating Cloud Cruiser workbooks and reports, please refer to Cloud Cruiser’s online <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (valid login required).</source>
            <target state="new">For detailed instructions on creating Cloud Cruiser workbooks and reports, please refer to Cloud Cruiser’s online <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (valid login required).</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>For more information about Cloud Cruiser, please contact <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>info@cloudcruiser.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about Cloud Cruiser, please contact <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>info@cloudcruiser.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>洞察你微软 Azure 资源消耗<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for an overview of the Azure Resource Usage and RateCard APIs.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>洞察你微软 Azure 资源消耗<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for an overview of the Azure Resource Usage and RateCard APIs.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>签出 <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Billing REST API Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information on both APIs, which are part of the set of APIs provided by the Azure Resource Manager.</source>
            <target state="new">签出 <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Billing REST API Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information on both APIs, which are part of the set of APIs provided by the Azure Resource Manager.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>If you would like to dive right into the sample code, check out our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure Billing API Code Samples on Github<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you would like to dive right into the sample code, check out our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure Billing API Code Samples on Github<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Learn More</source>
            <target state="new">Learn More</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article to learn more about the Azure Resource Manager.</source>
            <target state="new">See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article to learn more about the Azure Resource Manager.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>