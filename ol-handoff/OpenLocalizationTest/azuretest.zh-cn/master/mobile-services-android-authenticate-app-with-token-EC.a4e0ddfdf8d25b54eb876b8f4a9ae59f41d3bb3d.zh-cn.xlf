<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:48:26 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a843df278b1678a55c67a794017c2e5644da44f7</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</source>
            <target state="new">The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Not only is this method inefficient, you can run into usage-related issues should many customers try to start your app at the same time.</source>
            <target state="new">Not only is this method inefficient, you can run into usage-related issues should many customers try to start your app at the same time.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</source>
            <target state="new">A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</source>
            <target state="new">You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This tutorial uses service-managed authentication.</source>
            <target state="new">This tutorial uses service-managed authentication.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In Eclipse, open the ToDoActivity.java file and add the following import statements:</source>
            <target state="new">In Eclipse, open the ToDoActivity.java file and add the following import statements:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Add the the following members to the <bpt id="2">&lt;code&gt;</bpt>ToDoActivity<ept id="2">&lt;/code&gt;</ept> class.</source>
            <target state="new">Add the the following members to the <bpt id="2">&lt;code&gt;</bpt>ToDoActivity<ept id="2">&lt;/code&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>In the ToDoActivity.java file, add the the following definition for the <bpt id="2">&lt;code&gt;</bpt>cacheUserToken<ept id="2">&lt;/code&gt;</ept> method.</source>
            <target state="new">In the ToDoActivity.java file, add the the following definition for the <bpt id="2">&lt;code&gt;</bpt>cacheUserToken<ept id="2">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This method stores the user id and token in a preference file that is marked private.</source>
            <target state="new">This method stores the user id and token in a preference file that is marked private.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This should protect access to the cache so that other apps on the device do not have access to the token because the preference is sandboxed for the app.</source>
            <target state="new">This should protect access to the cache so that other apps on the device do not have access to the token because the preference is sandboxed for the app.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>However, if someone gains access to the device, it is possible that they may gain access to the token cache through other means.</source>
            <target state="new">However, if someone gains access to the device, it is possible that they may gain access to the token cache through other means.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>You can further protect the token with encryption if token access to your data is considered highly sensitive and someone may gain access to the device.</source>
            <target state="new">You can further protect the token with encryption if token access to your data is considered highly sensitive and someone may gain access to the device.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>However, a completely secure solution is beyond the scope of this tutorial and dependent on your security requirements.</source>
            <target state="new">However, a completely secure solution is beyond the scope of this tutorial and dependent on your security requirements.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In the ToDoActivity.java file, add the the following definition for the <bpt id="2">&lt;code&gt;</bpt>loadUserTokenCache<ept id="2">&lt;/code&gt;</ept> method.</source>
            <target state="new">In the ToDoActivity.java file, add the the following definition for the <bpt id="2">&lt;code&gt;</bpt>loadUserTokenCache<ept id="2">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In the <bpt id="2">&lt;em&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/em&gt;</ept> file, replace the <bpt id="4">&lt;code&gt;</bpt>authenticate<ept id="4">&lt;/code&gt;</ept> method with the following method which uses a token cache.</source>
            <target state="new">In the <bpt id="2">&lt;em&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/em&gt;</ept> file, replace the <bpt id="4">&lt;code&gt;</bpt>authenticate<ept id="4">&lt;/code&gt;</ept> method with the following method which uses a token cache.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Change the login provider if you want to use an account other than a Microsoft account.</source>
            <target state="new">Change the login provider if you want to use an account other than a Microsoft account.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Build the app and test authentication using a valid account.</source>
            <target state="new">Build the app and test authentication using a valid account.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Run it at least twice.</source>
            <target state="new">Run it at least twice.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>During the first run, you should receive a prompt to log in and create the token cache.</source>
            <target state="new">During the first run, you should receive a prompt to log in and create the token cache.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>After that, each run will attempt to load the token cache for authentication and you should not be required to login.</source>
            <target state="new">After that, each run will attempt to load the token cache for authentication and you should not be required to login.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>