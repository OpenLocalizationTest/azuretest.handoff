<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 4:21:40 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9e0a0a7be336b1c2780462700afe9d8d5edd829</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure AD AngularJS Getting Started | Microsoft Azure</source>
            <target state="new">Azure AD AngularJS Getting Started | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to build a Angular JS Single Page application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</source>
            <target state="new">How to build a Angular JS Single Page application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Securing AngularJS Single Page Apps with Azure AD</source>
            <target state="new">Securing AngularJS Single Page Apps with Azure AD</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Azure AD makes it simple and straightforward for you to add sign in, sign out, and secure OAuth API calls to your single page apps.</source>
            <target state="new">Azure AD makes it simple and straightforward for you to add sign in, sign out, and secure OAuth API calls to your single page apps.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>It enables your app to authenticate users with their Active Directory accounts and consume any web API protected by Azure AD, such as the Office 365 APIs or the Azure API.</source>
            <target state="new">It enables your app to authenticate users with their Active Directory accounts and consume any web API protected by Azure AD, such as the Office 365 APIs or the Azure API.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>For javascript applications running in a browser, Azure AD provides the Active Directory Authentication Library, or adal.js.</source>
            <target state="new">For javascript applications running in a browser, Azure AD provides the Active Directory Authentication Library, or adal.js.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Adal.js's sole purpose in life is to make it easy for your app to get access tokens.</source>
            <target state="new">Adal.js's sole purpose in life is to make it easy for your app to get access tokens.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>To demonstrate just how easy it is, here we'll build an AngularJS To Do List application that:</source>
            <target state="new">To demonstrate just how easy it is, here we'll build an AngularJS To Do List application that:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Signs the user into the app using Azure AD as the identity provider.</source>
            <target state="new">Signs the user into the app using Azure AD as the identity provider.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Displays some information about the user.</source>
            <target state="new">Displays some information about the user.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Securely calls the app's To Do List API using Bearer tokens from AAD.</source>
            <target state="new">Securely calls the app's To Do List API using Bearer tokens from AAD.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Signs the user out of the app.</source>
            <target state="new">Signs the user out of the app.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To build the complete working application, you'll need to:</source>
            <target state="new">To build the complete working application, you'll need to:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Register your application with Azure AD.</source>
            <target state="new">Register your application with Azure AD.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Install ADAL &amp; Configure the SPA.</source>
            <target state="new">Install ADAL &amp; Configure the SPA.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Use ADAL to secure pages in the SPA.</source>
            <target state="new">Use ADAL to secure pages in the SPA.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app skeleton<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app skeleton<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>You'll also need an Azure AD tenant in which you can create users and register an application.</source>
            <target state="new">You'll also need an Azure AD tenant in which you can create users and register an application.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>1. Register the DirectorySearcher Application<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>1. Register the DirectorySearcher Application<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>To enable your app to authenticate users and get tokens, you'll first need to register it in your Azure AD tenant:</source>
            <target state="new">To enable your app to authenticate users and get tokens, you'll first need to register it in your Azure AD tenant:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Sign into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Sign into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In the left hand nav, click on <bpt id="2">&lt;strong&gt;</bpt>Active Directory<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">In the left hand nav, click on <bpt id="2">&lt;strong&gt;</bpt>Active Directory<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Select a tenant in which to register the application.</source>
            <target state="new">Select a tenant in which to register the application.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Applications<ept id="2">&lt;/strong&gt;</ept> tab, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> in the bottom drawer.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Applications<ept id="2">&lt;/strong&gt;</ept> tab, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> in the bottom drawer.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Follow the prompts and create a new <bpt id="2">&lt;strong&gt;</bpt>Web Application and/or WebAPI<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Follow the prompts and create a new <bpt id="2">&lt;strong&gt;</bpt>Web Application and/or WebAPI<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept> of the application will describe your application to end-users.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept> of the application will describe your application to end-users.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Redirect Uri<ept id="2">&lt;/strong&gt;</ept> is location to which AAD will return tokens.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Redirect Uri<ept id="2">&lt;/strong&gt;</ept> is location to which AAD will return tokens.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The default location for this sample is <bpt id="2">&lt;code&gt;</bpt>https://localhost:44326/<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">The default location for this sample is <bpt id="2">&lt;code&gt;</bpt>https://localhost:44326/<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Once you've completed registration, AAD will assign your app a unique <bpt id="2">&lt;strong&gt;</bpt>Client ID<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Once you've completed registration, AAD will assign your app a unique <bpt id="2">&lt;strong&gt;</bpt>Client ID<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>You'll need this value in the next sections, so copy it from the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">You'll need this value in the next sections, so copy it from the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Adal.js uses the OAuth implicit flow to communicate with Azure AD.</source>
            <target state="new">Adal.js uses the OAuth implicit flow to communicate with Azure AD.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You must enable the implicit flow for your application by:</source>
            <target state="new">You must enable the implicit flow for your application by:</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Download the application manifest by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Manifest<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Download the application manifest by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Manifest<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Open the manifest and locate the <bpt id="2">&lt;code&gt;</bpt>oauth2AllowImplicitFlow<ept id="2">&lt;/code&gt;</ept> property.</source>
            <target state="new">Open the manifest and locate the <bpt id="2">&lt;code&gt;</bpt>oauth2AllowImplicitFlow<ept id="2">&lt;/code&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Set its value to <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Set its value to <bpt id="2">&lt;code&gt;</bpt>true<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Save &amp; upload the application manifest by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Manifest<ept id="2">&lt;/strong&gt;</ept> once again.</source>
            <target state="new">Save &amp; upload the application manifest by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Manifest<ept id="2">&lt;/strong&gt;</ept> once again.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>2. Install ADAL &amp; Configure the SPA<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>2. Install ADAL &amp; Configure the SPA<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Now that you have an application in Azure AD, you can install adal.js and write your identity-related code.</source>
            <target state="new">Now that you have an application in Azure AD, you can install adal.js and write your identity-related code.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Begin by adding adal.js to the TodoSPA project using the Package Manager Console:</source>
            <target state="new">Begin by adding adal.js to the TodoSPA project using the Package Manager Console:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>adal.js<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and add it to the <bpt id="4">&lt;code&gt;</bpt>App/Scripts/<ept id="4">&lt;/code&gt;</ept> project directory.</source>
            <target state="new">Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>adal.js<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and add it to the <bpt id="4">&lt;code&gt;</bpt>App/Scripts/<ept id="4">&lt;/code&gt;</ept> project directory.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>adal-angular.js<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and add it to the <bpt id="4">&lt;code&gt;</bpt>App/Scripts/<ept id="4">&lt;/code&gt;</ept> project directory.</source>
            <target state="new">Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>adal-angular.js<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and add it to the <bpt id="4">&lt;code&gt;</bpt>App/Scripts/<ept id="4">&lt;/code&gt;</ept> project directory.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Load each script before the end of the <bpt id="2">&lt;code&gt;</bpt>&lt;/body&gt;<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;code&gt;</bpt>index.html<ept id="4">&lt;/code&gt;</ept>:</source>
            <target state="new">Load each script before the end of the <bpt id="2">&lt;code&gt;</bpt>&lt;/body&gt;<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;code&gt;</bpt>index.html<ept id="4">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>For the SPA's backend To Do List API to accept tokens from the browser, the backend needs configuration information about the app registration. In the TodoSPA project, open <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept>.  Replace the values of the elements in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section to reflect the values you input into the Azure Portal.  Your code will reference these values whenever it uses ADAL.</source>
            <target state="new">For the SPA's backend To Do List API to accept tokens from the browser, the backend needs configuration information about the app registration. In the TodoSPA project, open <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept>.  Replace the values of the elements in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section to reflect the values you input into the Azure Portal.  Your code will reference these values whenever it uses ADAL.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ida:Tenant<ept id="2">&lt;/code&gt;</ept> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ida:Tenant<ept id="2">&lt;/code&gt;</ept> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ida:Audience<ept id="2">&lt;/code&gt;</ept> must be the <bpt id="4">&lt;strong&gt;</bpt>Client ID<ept id="4">&lt;/strong&gt;</ept> of your application you copied from the portal.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ida:Audience<ept id="2">&lt;/code&gt;</ept> must be the <bpt id="4">&lt;strong&gt;</bpt>Client ID<ept id="4">&lt;/strong&gt;</ept> of your application you copied from the portal.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>3.  Use ADAL to secure pages in the SPA<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>3.  Use ADAL to secure pages in the SPA<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Adal.js has been built to integrate with AngularJS route and http providers, which enables you to secure individual views in your SPA.</source>
            <target state="new">Adal.js has been built to integrate with AngularJS route and http providers, which enables you to secure individual views in your SPA.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>In <bpt id="2">&lt;code&gt;</bpt>App/Scripts/app.js<ept id="2">&lt;/code&gt;</ept>, bring in the adal.js module:</source>
            <target state="new">In <bpt id="2">&lt;code&gt;</bpt>App/Scripts/app.js<ept id="2">&lt;/code&gt;</ept>, bring in the adal.js module:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>You can now initialize the <bpt id="2">&lt;code&gt;</bpt>adalProvider<ept id="2">&lt;/code&gt;</ept> with the configuration values of your application registration, also in <bpt id="4">&lt;code&gt;</bpt>App/Scripts/app.js<ept id="4">&lt;/code&gt;</ept>:</source>
            <target state="new">You can now initialize the <bpt id="2">&lt;code&gt;</bpt>adalProvider<ept id="2">&lt;/code&gt;</ept> with the configuration values of your application registration, also in <bpt id="4">&lt;code&gt;</bpt>App/Scripts/app.js<ept id="4">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Now to secure the <bpt id="2">&lt;code&gt;</bpt>TodoList<ept id="2">&lt;/code&gt;</ept> view in the app, only one line of code is necessary - <bpt id="4">&lt;code&gt;</bpt>requireADLogin<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">Now to secure the <bpt id="2">&lt;code&gt;</bpt>TodoList<ept id="2">&lt;/code&gt;</ept> view in the app, only one line of code is necessary - <bpt id="4">&lt;code&gt;</bpt>requireADLogin<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>You now have a secure single page application with the ability to sign users in and issue Bearer token protected requests to its backend API.</source>
            <target state="new">You now have a secure single page application with the ability to sign users in and issue Bearer token protected requests to its backend API.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>When a user clicks the <bpt id="2">&lt;code&gt;</bpt>TodoList<ept id="2">&lt;/code&gt;</ept> link, adal.js will automatically redirect to Azure AD for sign in if necessary.</source>
            <target state="new">When a user clicks the <bpt id="2">&lt;code&gt;</bpt>TodoList<ept id="2">&lt;/code&gt;</ept> link, adal.js will automatically redirect to Azure AD for sign in if necessary.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>In addition, adal.js will automatically attach an access_token to any ajax requests that are sent to the application's backend.</source>
            <target state="new">In addition, adal.js will automatically attach an access_token to any ajax requests that are sent to the application's backend.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The above is the bare minimum necessary to build a SPA with adal.js - but there are a number of other features that are useful in SPAs:</source>
            <target state="new">The above is the bare minimum necessary to build a SPA with adal.js - but there are a number of other features that are useful in SPAs:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>To explicitly issue sign in and sign out requests you can define functions in your controllers that invoke adal.js.</source>
            <target state="new">To explicitly issue sign in and sign out requests you can define functions in your controllers that invoke adal.js.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>In <bpt id="2">&lt;code&gt;</bpt>App/Scripts/homeCtrl.js<ept id="2">&lt;/code&gt;</ept>:</source>
            <target state="new">In <bpt id="2">&lt;code&gt;</bpt>App/Scripts/homeCtrl.js<ept id="2">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>You might also want to present user information in the app's UI.</source>
            <target state="new">You might also want to present user information in the app's UI.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The adal service has already been added to the <bpt id="2">&lt;code&gt;</bpt>userDataCtrl<ept id="2">&lt;/code&gt;</ept> controller, so you can access the <bpt id="4">&lt;code&gt;</bpt>userInfo<ept id="4">&lt;/code&gt;</ept> object in the associated view, <bpt id="6">&lt;code&gt;</bpt>App/Scripts/UserData.html<ept id="6">&lt;/code&gt;</ept>:</source>
            <target state="new">The adal service has already been added to the <bpt id="2">&lt;code&gt;</bpt>userDataCtrl<ept id="2">&lt;/code&gt;</ept> controller, so you can access the <bpt id="4">&lt;code&gt;</bpt>userInfo<ept id="4">&lt;/code&gt;</ept> object in the associated view, <bpt id="6">&lt;code&gt;</bpt>App/Scripts/UserData.html<ept id="6">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>There are also many scenarios in which you will want to know if the user is signed in or not.</source>
            <target state="new">There are also many scenarios in which you will want to know if the user is signed in or not.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>You can also use the <bpt id="2">&lt;code&gt;</bpt>userInfo<ept id="2">&lt;/code&gt;</ept> object to gather this information.</source>
            <target state="new">You can also use the <bpt id="2">&lt;code&gt;</bpt>userInfo<ept id="2">&lt;/code&gt;</ept> object to gather this information.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>For instance, in <bpt id="2">&lt;code&gt;</bpt>index.html<ept id="2">&lt;/code&gt;</ept> you can show either the "Login" or "Logout" button based on authentication status:</source>
            <target state="new">For instance, in <bpt id="2">&lt;code&gt;</bpt>index.html<ept id="2">&lt;/code&gt;</ept> you can show either the "Login" or "Logout" button based on authentication status:</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Congratulations!</source>
            <target state="new">Congratulations!</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Your Azure AD integrated Single Page App is now complete.</source>
            <target state="new">Your Azure AD integrated Single Page App is now complete.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>It can authenticate users, securely call its backend using OAuth 2.0, and get basic information about the user.</source>
            <target state="new">It can authenticate users, securely call its backend using OAuth 2.0, and get basic information about the user.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>If you haven't already, now is the time to populate your tenant with some users.</source>
            <target state="new">If you haven't already, now is the time to populate your tenant with some users.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Run your To Do List SPA, and sign in with one of those users.</source>
            <target state="new">Run your To Do List SPA, and sign in with one of those users.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Add tasks to the users to do list, sign out, and sign back in.</source>
            <target state="new">Add tasks to the users to do list, sign out, and sign back in.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Adal.js makes it easy to incorporate all of these common identity features into your application.</source>
            <target state="new">Adal.js makes it easy to incorporate all of these common identity features into your application.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</source>
            <target state="new">It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>You can now move on to additional scenarios.</source>
            <target state="new">You can now move on to additional scenarios.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>You may want to try:</source>
            <target state="new">You may want to try:</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Call a CORS Web API from a SPA &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Call a CORS Web API from a SPA &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>