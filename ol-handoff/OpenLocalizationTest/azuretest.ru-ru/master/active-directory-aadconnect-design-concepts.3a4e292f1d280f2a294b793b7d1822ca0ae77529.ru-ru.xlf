<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/20/2016 2:07:55 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67d551f7e2f0064ac1da09b8438ebebaad9bd2b8</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure AD Connect design concepts | Microsoft Azure</source>
            <target state="new">Azure AD Connect design concepts | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This topic details certain implementation design areas</source>
            <target state="new">This topic details certain implementation design areas</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Design concepts for Azure AD Connect</source>
            <target state="new">Design concepts for Azure AD Connect</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The purpose of this topic is to describe areas which must be thought through during the implementation design of Azure AD Connect.</source>
            <target state="new">The purpose of this topic is to describe areas which must be thought through during the implementation design of Azure AD Connect.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This is a deep dive on certain areas and these concept are briefly described in other topics as well.</source>
            <target state="new">This is a deep dive on certain areas and these concept are briefly described in other topics as well.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>sourceAnchor</source>
            <target state="new">sourceAnchor</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The sourceAnchor attribute is defined as <bpt id="2">&lt;em&gt;</bpt>an attribute immutable during the lifetime of an object<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">The sourceAnchor attribute is defined as <bpt id="2">&lt;em&gt;</bpt>an attribute immutable during the lifetime of an object<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>It uniquely identifies an object as being the same object on-premises and in Azure AD.</source>
            <target state="new">It uniquely identifies an object as being the same object on-premises and in Azure AD.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The attribute is also called <bpt id="2">&lt;strong&gt;</bpt>immutableId<ept id="2">&lt;/strong&gt;</ept> and the two names are used interchangeable.</source>
            <target state="new">The attribute is also called <bpt id="2">&lt;strong&gt;</bpt>immutableId<ept id="2">&lt;/strong&gt;</ept> and the two names are used interchangeable.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The word immutable, i.e. cannot be changed, is important to this topic.</source>
            <target state="new">The word immutable, i.e. cannot be changed, is important to this topic.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Since this attribute’s value cannot be changed after it has been set it is important to pick a design which will support your scenario.</source>
            <target state="new">Since this attribute’s value cannot be changed after it has been set it is important to pick a design which will support your scenario.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The attribute is used for the following scenarios:</source>
            <target state="new">The attribute is used for the following scenarios:</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>When a new sync engine server is built, or rebuilt after a disaster recovery scenario, this attribute will link existing objects in Azure AD with objects on-premises.</source>
            <target state="new">When a new sync engine server is built, or rebuilt after a disaster recovery scenario, this attribute will link existing objects in Azure AD with objects on-premises.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>If you move from a cloud-only identity to a synchronized identity model this attribute will allow objects to “hard match” existing objects in Azure AD with on-premises objects.</source>
            <target state="new">If you move from a cloud-only identity to a synchronized identity model this attribute will allow objects to “hard match” existing objects in Azure AD with on-premises objects.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>If you use federation, this attribute together with the <bpt id="2">&lt;strong&gt;</bpt>userPrincipalName<ept id="2">&lt;/strong&gt;</ept> is used in the claim to uniquely identify a user.</source>
            <target state="new">If you use federation, this attribute together with the <bpt id="2">&lt;strong&gt;</bpt>userPrincipalName<ept id="2">&lt;/strong&gt;</ept> is used in the claim to uniquely identify a user.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>This topic will only talk about sourceAnchor as it relates to users.</source>
            <target state="new">This topic will only talk about sourceAnchor as it relates to users.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The same rules apply to all object types, but it is only for users this usually is a concern.</source>
            <target state="new">The same rules apply to all object types, but it is only for users this usually is a concern.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Selecting a good sourceAnchor attribute</source>
            <target state="new">Selecting a good sourceAnchor attribute</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The attribute value must follow the following rules:</source>
            <target state="new">The attribute value must follow the following rules:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Be less than 60 characters in length</source>
            <target state="new">Be less than 60 characters in length</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Not contain a special character: &amp;#92; ! # $ % &amp; * + / = ? ^ &amp;#96; { } | ~ &lt; &gt; ( ) ' ; : , [ ] " @ _</source>
            <target state="new">Not contain a special character: &amp;#92; ! # $ % &amp; * + / = ? ^ &amp;#96; { } | ~ &lt; &gt; ( ) ' ; : , [ ] " @ _</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Must be globally unique</source>
            <target state="new">Must be globally unique</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Must be either a string, integer or binary</source>
            <target state="new">Must be either a string, integer or binary</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Should not be based on user's name, these change</source>
            <target state="new">Should not be based on user's name, these change</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Should not be case sensitive and avoid values that may vary by case</source>
            <target state="new">Should not be case sensitive and avoid values that may vary by case</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Should be assigned when the object is created.</source>
            <target state="new">Should be assigned when the object is created.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>If the selected sourceAnchor is not of type string, Azure AD Connect will Base64Encode the attribute value to ensure no special characters will appear.</source>
            <target state="new">If the selected sourceAnchor is not of type string, Azure AD Connect will Base64Encode the attribute value to ensure no special characters will appear.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>If you use another federation server than ADFS, make sure your server also has the capability to Base64Encode the attribute.</source>
            <target state="new">If you use another federation server than ADFS, make sure your server also has the capability to Base64Encode the attribute.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The sourceAnchor attribute is case sensitive.</source>
            <target state="new">The sourceAnchor attribute is case sensitive.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>A value of “JohnDoe” is not the same as “johndoe”.</source>
            <target state="new">A value of “JohnDoe” is not the same as “johndoe”.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>If you have a single forest on-premises then the attribute you should use is <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">If you have a single forest on-premises then the attribute you should use is <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>This is also the attribute used when you use express settings in Azure AD Connect and also the attribute used by DirSync.</source>
            <target state="new">This is also the attribute used when you use express settings in Azure AD Connect and also the attribute used by DirSync.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>If you have multiple forests and do not move users between forests and between domains in the same forest, then <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> is a good attribute to use even in this case.</source>
            <target state="new">If you have multiple forests and do not move users between forests and between domains in the same forest, then <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> is a good attribute to use even in this case.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>If you move users between forests and domains, then you must find an attribute which will not change or can be moved with the users during the move.</source>
            <target state="new">If you move users between forests and domains, then you must find an attribute which will not change or can be moved with the users during the move.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>A recommended approach is to introduce a synthetic attribute.</source>
            <target state="new">A recommended approach is to introduce a synthetic attribute.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>An attribute which could hold something which looks like a GUID would be suitable.</source>
            <target state="new">An attribute which could hold something which looks like a GUID would be suitable.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>During object creation a new GUID is created and stamped on the user.</source>
            <target state="new">During object creation a new GUID is created and stamped on the user.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>A custom rule can be created in the sync engine server to create this value based on the <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> and update the selected attribute in ADDS.</source>
            <target state="new">A custom rule can be created in the sync engine server to create this value based on the <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> and update the selected attribute in ADDS.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>When you move the object, make sure to also copy the content of this value.</source>
            <target state="new">When you move the object, make sure to also copy the content of this value.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Another solution is to pick an existing attribute you know will not change.</source>
            <target state="new">Another solution is to pick an existing attribute you know will not change.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Commonly used attributes include <bpt id="2">&lt;strong&gt;</bpt>employeeID<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Commonly used attributes include <bpt id="2">&lt;strong&gt;</bpt>employeeID<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>If you consider an attribute which will contain letters, make sure there is no chance the case (upper case vs. lower case) can change for the attribute's value.</source>
            <target state="new">If you consider an attribute which will contain letters, make sure there is no chance the case (upper case vs. lower case) can change for the attribute's value.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Bad attributes which should not be used include those with the name of the user.</source>
            <target state="new">Bad attributes which should not be used include those with the name of the user.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In a marriage or divorce the name is expected to change, which is not allowed for this attribute.</source>
            <target state="new">In a marriage or divorce the name is expected to change, which is not allowed for this attribute.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This is also one reason why attributes such as <bpt id="2">&lt;strong&gt;</bpt>userPrincipalName<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>mail<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>targetAddress<ept id="6">&lt;/strong&gt;</ept> are not even possible to select in the Azure AD Connect installation wizard.</source>
            <target state="new">This is also one reason why attributes such as <bpt id="2">&lt;strong&gt;</bpt>userPrincipalName<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>mail<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>targetAddress<ept id="6">&lt;/strong&gt;</ept> are not even possible to select in the Azure AD Connect installation wizard.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Those attributes will also contain the @-character, which is not allowed in the sourceAnchor.</source>
            <target state="new">Those attributes will also contain the @-character, which is not allowed in the sourceAnchor.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Changing the sourceAnchor attribute</source>
            <target state="new">Changing the sourceAnchor attribute</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The sourceAnchor attribute value cannot be changed after the object has been created in Azure AD and the identity is synchronized.</source>
            <target state="new">The sourceAnchor attribute value cannot be changed after the object has been created in Azure AD and the identity is synchronized.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>For this reason, the following restrictions apply to Azure AD Connect:</source>
            <target state="new">For this reason, the following restrictions apply to Azure AD Connect:</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>The sourceAnchor attribute can only be set during initial installation.</source>
            <target state="new">The sourceAnchor attribute can only be set during initial installation.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>If you re-run the installation wizard this option is read-only.</source>
            <target state="new">If you re-run the installation wizard this option is read-only.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>If you need to change this, then you must uninstall and reinstall.</source>
            <target state="new">If you need to change this, then you must uninstall and reinstall.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>If you install another Azure AD Connect server, then you must select the same sourceAnchor attribute as previously used.</source>
            <target state="new">If you install another Azure AD Connect server, then you must select the same sourceAnchor attribute as previously used.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>If you have earlier been using DirSync and move to Azure AD Connect, then you must use <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> since that is the attribute used by DirSync.</source>
            <target state="new">If you have earlier been using DirSync and move to Azure AD Connect, then you must use <bpt id="2">&lt;strong&gt;</bpt>objectGUID<ept id="2">&lt;/strong&gt;</ept> since that is the attribute used by DirSync.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>If the value for sourceAnchor is changed after the object has been exported to Azure AD, then Azure AD Connect sync will throw an error and will not allow any more changes on that object before the issue has been fixed and the sourceAnchor is changed back in the source directory.</source>
            <target state="new">If the value for sourceAnchor is changed after the object has been exported to Azure AD, then Azure AD Connect sync will throw an error and will not allow any more changes on that object before the issue has been fixed and the sourceAnchor is changed back in the source directory.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>