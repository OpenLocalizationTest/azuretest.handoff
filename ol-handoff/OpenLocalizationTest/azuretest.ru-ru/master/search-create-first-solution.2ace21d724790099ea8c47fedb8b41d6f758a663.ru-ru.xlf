<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/20/2016 4:24:48 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e386f2851e69503e632caf0db32f8e8845ad5d32</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Create your first search solution using Azure Search</source>
            <target state="new">Create your first search solution using Azure Search</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Create your first search solution using Azure Search</source>
            <target state="new">Create your first search solution using Azure Search</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Create your first search solution using Azure Search</source>
            <target state="new">Create your first search solution using Azure Search</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This sample demonstrates a search application for the Adventure Works bicycle company.</source>
            <target state="new">This sample demonstrates a search application for the Adventure Works bicycle company.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>After completing this tutorial, you’ll have an online product catalog with a rich search experience that includes faceted navigation, multiple sort options for your search results, and type-ahead query suggestions.</source>
            <target state="new">After completing this tutorial, you’ll have an online product catalog with a rich search experience that includes faceted navigation, multiple sort options for your search results, and type-ahead query suggestions.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The demo gets you started with Azure Search by walking you through these exercises:</source>
            <target state="new">The demo gets you started with Azure Search by walking you through these exercises:</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Create an Azure Search index.</source>
            <target state="new">Create an Azure Search index.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Load documents (data) into the Azure Search index from a SQL Server database.</source>
            <target state="new">Load documents (data) into the Azure Search index from a SQL Server database.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Build an ASP.NET MVC4 Application that utilizes Azure Search to:</source>
            <target state="new">Build an ASP.NET MVC4 Application that utilizes Azure Search to:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Search and display results from an Azure Search index</source>
            <target state="new">Search and display results from an Azure Search index</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Show type-ahead suggestions in a Search box while entering a search term</source>
            <target state="new">Show type-ahead suggestions in a Search box while entering a search term</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Filter search results using faceting</source>
            <target state="new">Filter search results using faceting</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>An <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure subscription<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">An <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure subscription<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>If you aren't ready to sign up for a trial subscription, you can skip this tutorial and opt for <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Try Azure App Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> instead.</source>
            <target state="new">If you aren't ready to sign up for a trial subscription, you can skip this tutorial and opt for <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Try Azure App Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> instead.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>This alternative option gives you Azure Search with an ASP.NET Web app for free - one hour per session - no subscription required.</source>
            <target state="new">This alternative option gives you Azure Search with an ASP.NET Web app for free - one hour per session - no subscription required.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Visual Studio 2012 or higher with ASP.NET MVC 4 and SQL Server installed.</source>
            <target state="new">Visual Studio 2012 or higher with ASP.NET MVC 4 and SQL Server installed.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>You can download the free Express editions if you don't already have the software installed: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio 2013 Express<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Microsoft SQL Server 2014 Express<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can download the free Express editions if you don't already have the software installed: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio 2013 Express<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Microsoft SQL Server 2014 Express<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>An Azure Search service.</source>
            <target state="new">An Azure Search service.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>You'll need the Search service name, plus the admin key.</source>
            <target state="new">You'll need the Search service name, plus the admin key.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure Search service in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure Search service in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Adventure Works Azure Search Demo project on CodePlex<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Adventure Works Azure Search Demo project on CodePlex<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>On the Source tab, click <bpt id="2">&lt;strong&gt;</bpt>Download<ept id="2">&lt;/strong&gt;</ept> to get a zip file of the solution.</source>
            <target state="new">On the Source tab, click <bpt id="2">&lt;strong&gt;</bpt>Download<ept id="2">&lt;/strong&gt;</ept> to get a zip file of the solution.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>This solution contains two projects:</source>
            <target state="new">This solution contains two projects:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CatalogIndex<ept id="1">&lt;/strong&gt;</ept> creates an Azure Search index and loads data from a SQL Server database included with the project.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CatalogIndex<ept id="1">&lt;/strong&gt;</ept> creates an Azure Search index and loads data from a SQL Server database included with the project.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="1">&lt;/strong&gt;</ept> is an MVC4-based application that queries the Azure Search index.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="1">&lt;/strong&gt;</ept> is an MVC4-based application that queries the Azure Search index.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>This tutorial assumes that you have a working knowledge of ASP.NET MVC.</source>
            <target state="new">This tutorial assumes that you have a working knowledge of ASP.NET MVC.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Create an Azure Search index</source>
            <target state="new">Create an Azure Search index</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In this step, you will use <bpt id="2">&lt;strong&gt;</bpt>CatalogIndex<ept id="2">&lt;/strong&gt;</ept> to create a new Azure Search index called "catalog" based on data in an AdventureWorks SQL Server database.</source>
            <target state="new">In this step, you will use <bpt id="2">&lt;strong&gt;</bpt>CatalogIndex<ept id="2">&lt;/strong&gt;</ept> to create a new Azure Search index called "catalog" based on data in an AdventureWorks SQL Server database.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In Visual Studio, open up the Azure Search Demo solution named <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksCatalog.sln<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, open up the Azure Search Demo solution named <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksCatalog.sln<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>CatalogIndexer<ept id="2">&lt;/strong&gt;</ept> in Solution Explorer and select <bpt id="4">&lt;strong&gt;</bpt>Set as startup project<ept id="4">&lt;/strong&gt;</ept> so that this application runs, rather than the <bpt id="6">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="6">&lt;/strong&gt;</ept> project, when you press <bpt id="8">&lt;strong&gt;</bpt>F5<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>CatalogIndexer<ept id="2">&lt;/strong&gt;</ept> in Solution Explorer and select <bpt id="4">&lt;strong&gt;</bpt>Set as startup project<ept id="4">&lt;/strong&gt;</ept> so that this application runs, rather than the <bpt id="6">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="6">&lt;/strong&gt;</ept> project, when you press <bpt id="8">&lt;strong&gt;</bpt>F5<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Open <bpt id="2">&lt;strong&gt;</bpt>App.config<ept id="2">&lt;/strong&gt;</ept> in this project and update the values for "SearchServiceName" and "SearchServiceApiKey" to those of your Azure Search service.</source>
            <target state="new">Open <bpt id="2">&lt;strong&gt;</bpt>App.config<ept id="2">&lt;/strong&gt;</ept> in this project and update the values for "SearchServiceName" and "SearchServiceApiKey" to those of your Azure Search service.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</source>
            <target state="new">For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Optionally, App.config includes an entry for "SourceSqlConnectionString" that assumes SQL Server 2014 Express LocalDB (Server=(LocalDB)\v11.0).</source>
            <target state="new">Optionally, App.config includes an entry for "SourceSqlConnectionString" that assumes SQL Server 2014 Express LocalDB (Server=(LocalDB)\v11.0).</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>If you’re using a different edition of SQL Server, update the server name accordingly.</source>
            <target state="new">If you’re using a different edition of SQL Server, update the server name accordingly.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>For example, if you have a local default instance, you can use (local) or localhost.</source>
            <target state="new">For example, if you have a local default instance, you can use (local) or localhost.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Save <bpt id="2">&lt;strong&gt;</bpt>App.config<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Save <bpt id="2">&lt;strong&gt;</bpt>App.config<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to launch the project.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to launch the project.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>A command prompt should open with the following text: "Creating index..."</source>
            <target state="new">A command prompt should open with the following text: "Creating index..."</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>After a few moments, it should complete with the text: "Complete.  Press <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> to continue:"</source>
            <target state="new">After a few moments, it should complete with the text: "Complete.  Press <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> to continue:"</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> to close the application.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> to close the application.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>At this point, you have successfully created the Azure Search index.</source>
            <target state="new">At this point, you have successfully created the Azure Search index.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>If you get errors that include "invalid value for key 'attachdbfilename'" or some other database attachment error, you might be running into UAC conflicts.</source>
            <target state="new">If you get errors that include "invalid value for key 'attachdbfilename'" or some other database attachment error, you might be running into UAC conflicts.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>For the purposes of this demo, work around these errors by doing the following:</source>
            <target state="new">For the purposes of this demo, work around these errors by doing the following:</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Copy the solution to a new or existing folder (such as Temp) that provides access to authenticated users.</source>
            <target state="new">Copy the solution to a new or existing folder (such as Temp) that provides access to authenticated users.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Use <bpt id="2">&lt;strong&gt;</bpt>Run as Administrator<ept id="2">&lt;/strong&gt;</ept> to start Visual Studio.</source>
            <target state="new">Use <bpt id="2">&lt;strong&gt;</bpt>Run as Administrator<ept id="2">&lt;/strong&gt;</ept> to start Visual Studio.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Open the solution, build it, and then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to create the index.</source>
            <target state="new">Open the solution, build it, and then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to create the index.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>To verify index creation and document upload, go to your Search service dashboard in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure management portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To verify index creation and document upload, go to your Search service dashboard in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure management portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>In Usage, the index count should be up by one, and you should have 294 documents, one for each product in the database.</source>
            <target state="new">In Usage, the index count should be up by one, and you should have 294 documents, one for each product in the database.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Indexes<ept id="2">&lt;/strong&gt;</ept> tile to show the index list.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Indexes<ept id="2">&lt;/strong&gt;</ept> tile to show the index list.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The indexes list slides out to show the new index and document count.</source>
            <target state="new">The indexes list slides out to show the new index and document count.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Note that you can have up to three indexes at the Free pricing tier.</source>
            <target state="new">Note that you can have up to three indexes at the Free pricing tier.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>If you already had three indexes, you would need to delete one to free up space for any new ones.</source>
            <target state="new">If you already had three indexes, you would need to delete one to free up space for any new ones.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Explore CatalogIndexer</source>
            <target state="new">Explore CatalogIndexer</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Let’s take a closer look at the <bpt id="2">&lt;strong&gt;</bpt>CatalogIndexer<ept id="2">&lt;/strong&gt;</ept> project to understand how it works.</source>
            <target state="new">Let’s take a closer look at the <bpt id="2">&lt;strong&gt;</bpt>CatalogIndexer<ept id="2">&lt;/strong&gt;</ept> project to understand how it works.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Open <bpt id="2">&lt;strong&gt;</bpt>Program.cs<ept id="2">&lt;/strong&gt;</ept> from the Solution Explorer and go to the <bpt id="4">&lt;code&gt;</bpt>Main(string[] args)<ept id="4">&lt;/code&gt;</ept> function.</source>
            <target state="new">Open <bpt id="2">&lt;strong&gt;</bpt>Program.cs<ept id="2">&lt;/strong&gt;</ept> from the Solution Explorer and go to the <bpt id="4">&lt;code&gt;</bpt>Main(string[] args)<ept id="4">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Notice how this function builds up a Uri called <bpt id="2">&lt;code&gt;</bpt>_serviceURI<ept id="2">&lt;/code&gt;</ept> based on your specific Azure Search service and then creates an HttpClient called <bpt id="4">&lt;code&gt;</bpt>_httpClient<ept id="4">&lt;/code&gt;</ept> that makes use of your API Key to authenticate to this Search service.</source>
            <target state="new">Notice how this function builds up a Uri called <bpt id="2">&lt;code&gt;</bpt>_serviceURI<ept id="2">&lt;/code&gt;</ept> based on your specific Azure Search service and then creates an HttpClient called <bpt id="4">&lt;code&gt;</bpt>_httpClient<ept id="4">&lt;/code&gt;</ept> that makes use of your API Key to authenticate to this Search service.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>ChangeEnumeratorSql<ept id="1">&lt;/code&gt;</ept> and <bpt id="3">&lt;code&gt;</bpt>ChangeSet<ept id="3">&lt;/code&gt;</ept> are used to enumerate the data from the Products table in your SQL Server AdventureWorks database.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>ChangeEnumeratorSql<ept id="1">&lt;/code&gt;</ept> and <bpt id="3">&lt;code&gt;</bpt>ChangeSet<ept id="3">&lt;/code&gt;</ept> are used to enumerate the data from the Products table in your SQL Server AdventureWorks database.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Based on the data that is collected from this table, <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> is then called to apply this data to your Azure Search index.</source>
            <target state="new">Based on the data that is collected from this table, <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> is then called to apply this data to your Azure Search index.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Move to <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> in the same file.</source>
            <target state="new">Move to <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> in the same file.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Notice how this function deletes the index if it already exists (<bpt id="2">&lt;code&gt;</bpt>DeleteCatalogIndex<ept id="2">&lt;/code&gt;</ept>) and then creates a new index called "catalog" (<bpt id="4">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="4">&lt;/code&gt;</ept>).</source>
            <target state="new">Notice how this function deletes the index if it already exists (<bpt id="2">&lt;code&gt;</bpt>DeleteCatalogIndex<ept id="2">&lt;/code&gt;</ept>) and then creates a new index called "catalog" (<bpt id="4">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="4">&lt;/code&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Move to the <bpt id="2">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="2">&lt;/code&gt;</ept> function, and notice how the index is created with a schema that matches the columns from the Products table in SQL Server.</source>
            <target state="new">Move to the <bpt id="2">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="2">&lt;/code&gt;</ept> function, and notice how the index is created with a schema that matches the columns from the Products table in SQL Server.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Each field has a Type (i.e., <bpt id="2">&lt;code&gt;</bpt>Edm.String<ept id="2">&lt;/code&gt;</ept> or <bpt id="4">&lt;code&gt;</bpt>Edm.Double<ept id="4">&lt;/code&gt;</ept>) as well as attributes that define what these fields are used for.</source>
            <target state="new">Each field has a Type (i.e., <bpt id="2">&lt;code&gt;</bpt>Edm.String<ept id="2">&lt;/code&gt;</ept> or <bpt id="4">&lt;code&gt;</bpt>Edm.Double<ept id="4">&lt;/code&gt;</ept>) as well as attributes that define what these fields are used for.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search REST API documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more details on these attributes.</source>
            <target state="new">Refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search REST API documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more details on these attributes.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Go back to the <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">Go back to the <bpt id="2">&lt;code&gt;</bpt>ApplyChanges<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Notice how this function loops through all of the data in the enumerated changes <bpt id="2">&lt;code&gt;</bpt>ChangeSet<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Notice how this function loops through all of the data in the enumerated changes <bpt id="2">&lt;code&gt;</bpt>ChangeSet<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Rather than applying the changes one by one, they are batched into groups of 1000 and then applied to the Search service.</source>
            <target state="new">Rather than applying the changes one by one, they are batched into groups of 1000 and then applied to the Search service.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>This is much more efficient than applying the documents one by one.</source>
            <target state="new">This is much more efficient than applying the documents one by one.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Now that you've seen how to create and populate an index using relational data from SQL Server, let’s take a look at how to build a product catalog that uses our search data.</source>
            <target state="new">Now that you've seen how to create and populate an index using relational data from SQL Server, let’s take a look at how to build a product catalog that uses our search data.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Build an MVC4 Application using Azure Search</source>
            <target state="new">Build an MVC4 Application using Azure Search</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>In this step, you’ll build and run the search application in a web browser.</source>
            <target state="new">In this step, you’ll build and run the search application in a web browser.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>In Visual Studio, open up the Azure Search Demo Solution named <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksCatalog.sln<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, open up the Azure Search Demo Solution named <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksCatalog.sln<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="2">&lt;/strong&gt;</ept> in the Solution Explorer and select <bpt id="4">&lt;strong&gt;</bpt>Set as startup project<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="2">&lt;/strong&gt;</ept> in the Solution Explorer and select <bpt id="4">&lt;strong&gt;</bpt>Set as startup project<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Open <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept> in this project and update the values for "SearchServiceName" and "SearchServiceApiKey" to those of your Azure Search service.</source>
            <target state="new">Open <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept> in this project and update the values for "SearchServiceName" and "SearchServiceApiKey" to those of your Azure Search service.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</source>
            <target state="new">For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Save <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Save <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to launch the project.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to launch the project.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Follow these <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> steps if you get a build error.</source>
            <target state="new">Follow these <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> steps if you get a build error.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Leave the search box empty, and click <bpt id="2">&lt;strong&gt;</bpt>Search<ept id="2">&lt;/strong&gt;</ept> to return all 294 products.</source>
            <target state="new">Leave the search box empty, and click <bpt id="2">&lt;strong&gt;</bpt>Search<ept id="2">&lt;/strong&gt;</ept> to return all 294 products.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Notice the list of facets along on the left side.</source>
            <target state="new">Notice the list of facets along on the left side.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Try clicking one of the facets.</source>
            <target state="new">Try clicking one of the facets.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Search is re-executed, but this time it adds the facet you chose to filter the results.</source>
            <target state="new">Search is re-executed, but this time it adds the facet you chose to filter the results.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>You may want to add a breakpoint to the first line in the <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> function to step through (F11) each line.</source>
            <target state="new">You may want to add a breakpoint to the first line in the <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> function to step through (F11) each line.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Enter a search term, such as "mountain bikes".</source>
            <target state="new">Enter a search term, such as "mountain bikes".</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>As you type, notice the drop-down list of suggested queries.</source>
            <target state="new">As you type, notice the drop-down list of suggested queries.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The screenshot from the start of this demo appears again below, as a reminder of what was covered.</source>
            <target state="new">The screenshot from the start of this demo appears again below, as a reminder of what was covered.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>In the previous sections, we discussed faceted navigation (on the left), the document count at the top of the page, suggestions, and the sort options for sorting by relevance, list, or price.</source>
            <target state="new">In the previous sections, we discussed faceted navigation (on the left), the document count at the top of the page, suggestions, and the sort options for sorting by relevance, list, or price.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Explore AdventureWorksWeb</source>
            <target state="new">Explore AdventureWorksWeb</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>The project AdventureWorksWeb shows us how ASP.NET MVC 4 can be used to interact with Azure Search from a web application.</source>
            <target state="new">The project AdventureWorksWeb shows us how ASP.NET MVC 4 can be used to interact with Azure Search from a web application.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>In this section, we’ll review individual parts of the application code to see what they do.</source>
            <target state="new">In this section, we’ll review individual parts of the application code to see what they do.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>In Solution Explorer, expand <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="2">&lt;/strong&gt;</ept> | <bpt id="4">&lt;strong&gt;</bpt>Controller<ept id="4">&lt;/strong&gt;</ept> and open <bpt id="6">&lt;strong&gt;</bpt>HomeController.cs<ept id="6">&lt;/strong&gt;</ept></source>
            <target state="new">In Solution Explorer, expand <bpt id="2">&lt;strong&gt;</bpt>AdventureWorksWeb<ept id="2">&lt;/strong&gt;</ept> | <bpt id="4">&lt;strong&gt;</bpt>Controller<ept id="4">&lt;/strong&gt;</ept> and open <bpt id="6">&lt;strong&gt;</bpt>HomeController.cs<ept id="6">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>This is the MVC controller that manages the interaction from the Index view.</source>
            <target state="new">This is the MVC controller that manages the interaction from the Index view.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>At the top of the controller, you will notice a reference to <bpt id="2">&lt;code&gt;</bpt>CatalogSearch _catalogSearch<ept id="2">&lt;/code&gt;</ept> which creates a HttpClient connection object to your Azure Search service.</source>
            <target state="new">At the top of the controller, you will notice a reference to <bpt id="2">&lt;code&gt;</bpt>CatalogSearch _catalogSearch<ept id="2">&lt;/code&gt;</ept> which creates a HttpClient connection object to your Azure Search service.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>The code for this <bpt id="2">&lt;code&gt;</bpt>CatalogSearch<ept id="2">&lt;/code&gt;</ept> is located in <bpt id="4">&lt;strong&gt;</bpt>CatalogSeach.cs<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">The code for this <bpt id="2">&lt;code&gt;</bpt>CatalogSearch<ept id="2">&lt;/code&gt;</ept> is located in <bpt id="4">&lt;strong&gt;</bpt>CatalogSeach.cs<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Within <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept>, there are two main functions:</source>
            <target state="new">Within <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept>, there are two main functions:</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Search<ept id="1">&lt;/strong&gt;</ept>: When the user clicks on the search button or chooses a facet, this function is called to retrieve the results and send them back to the Index view to be displayed.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Search<ept id="1">&lt;/strong&gt;</ept>: When the user clicks on the search button or chooses a facet, this function is called to retrieve the results and send them back to the Index view to be displayed.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Suggest<ept id="1">&lt;/strong&gt;</ept>: As the user is typing in the Search box, this function is called to return a list of suggestions based on the content in your Azure Search index.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Suggest<ept id="1">&lt;/strong&gt;</ept>: As the user is typing in the Search box, this function is called to return a list of suggestions based on the content in your Azure Search index.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Let’s drill into these two functions in more detail.</source>
            <target state="new">Let’s drill into these two functions in more detail.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> function, you will notice a call to <bpt id="6">&lt;code&gt;</bpt>_catalogSearch.Search<ept id="6">&lt;/code&gt;</ept>, which includes the connection object to your Azure Search service.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> function, you will notice a call to <bpt id="6">&lt;code&gt;</bpt>_catalogSearch.Search<ept id="6">&lt;/code&gt;</ept>, which includes the connection object to your Azure Search service.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>When you call the Search function located in <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept>, you can see that it utilizes these parameters to build out an Azure Search query.</source>
            <target state="new">When you call the Search function located in <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept>, you can see that it utilizes these parameters to build out an Azure Search query.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>The results of the query are stored in a JSON object called <bpt id="2">&lt;code&gt;</bpt>result<ept id="2">&lt;/code&gt;</ept> and then passed back to the <bpt id="4">&lt;code&gt;</bpt>Index<ept id="4">&lt;/code&gt;</ept> view where the results are parsed and displayed in the web page.</source>
            <target state="new">The results of the query are stored in a JSON object called <bpt id="2">&lt;code&gt;</bpt>result<ept id="2">&lt;/code&gt;</ept> and then passed back to the <bpt id="4">&lt;code&gt;</bpt>Index<ept id="4">&lt;/code&gt;</ept> view where the results are parsed and displayed in the web page.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Open <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> under Views | Home, you will notice the code that is used to parse these results.</source>
            <target state="new">Open <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> under Views | Home, you will notice the code that is used to parse these results.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Stop the application if it’s still running, and open <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> file under Views | Home.</source>
            <target state="new">Stop the application if it’s still running, and open <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> file under Views | Home.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>At the end of this file, you will see a JavaScript function that uses <bpt id="2">&lt;code&gt;</bpt>JQuery $(function ())<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">At the end of this file, you will see a JavaScript function that uses <bpt id="2">&lt;code&gt;</bpt>JQuery $(function ())<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>This function is called when the page loads.</source>
            <target state="new">This function is called when the page loads.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>It uses the JQuery autocomplete function and links this function as a callback from the search text box, identified as "q".</source>
            <target state="new">It uses the JQuery autocomplete function and links this function as a callback from the search text box, identified as "q".</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Whenever someone types into the text box, this autosuggest function is called which in turn calls /home/suggest with what is entered.</source>
            <target state="new">Whenever someone types into the text box, this autosuggest function is called which in turn calls /home/suggest with what is entered.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>/home/suggest<ept id="1">&lt;/code&gt;</ept> is a reference to the function in <bpt id="3">&lt;strong&gt;</bpt>HomeController.cs<ept id="3">&lt;/strong&gt;</ept> called <bpt id="5">&lt;code&gt;</bpt>Suggest<ept id="5">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>/home/suggest<ept id="1">&lt;/code&gt;</ept> is a reference to the function in <bpt id="3">&lt;strong&gt;</bpt>HomeController.cs<ept id="3">&lt;/strong&gt;</ept> called <bpt id="5">&lt;code&gt;</bpt>Suggest<ept id="5">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Open <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> and move to the Suggest function.</source>
            <target state="new">Open <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> and move to the Suggest function.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>This code is very similar to the Search function that uses the <bpt id="2">&lt;code&gt;</bpt>_catalogSearch<ept id="2">&lt;/code&gt;</ept> object to call a function in <bpt id="4">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="4">&lt;/strong&gt;</ept> called <bpt id="6">&lt;code&gt;</bpt>Suggest<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">This code is very similar to the Search function that uses the <bpt id="2">&lt;code&gt;</bpt>_catalogSearch<ept id="2">&lt;/code&gt;</ept> object to call a function in <bpt id="4">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="4">&lt;/strong&gt;</ept> called <bpt id="6">&lt;code&gt;</bpt>Suggest<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Rather than making a search query, the <bpt id="2">&lt;code&gt;</bpt>Suggest<ept id="2">&lt;/code&gt;</ept> function makes a call to the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Suggestions API<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Rather than making a search query, the <bpt id="2">&lt;code&gt;</bpt>Suggest<ept id="2">&lt;/code&gt;</ept> function makes a call to the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Suggestions API<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>This uses the terms entered in the text box and build out a list of potential suggestions.</source>
            <target state="new">This uses the terms entered in the text box and build out a list of potential suggestions.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>The values are returned to the <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> file that are automatically listed in the Search box as type-ahead options.</source>
            <target state="new">The values are returned to the <bpt id="2">&lt;strong&gt;</bpt>Index.cshtml<ept id="2">&lt;/strong&gt;</ept> file that are automatically listed in the Search box as type-ahead options.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>You might be asking yourself at this point how Azure Search knows what fields to build suggestions over.</source>
            <target state="new">You might be asking yourself at this point how Azure Search knows what fields to build suggestions over.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>The answer to this is back when you created the Index.</source>
            <target state="new">The answer to this is back when you created the Index.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="2">&lt;/code&gt;</ept>  function within the file Program.cs of the <bpt id="4">&lt;strong&gt;</bpt>CatalogIndexer<ept id="4">&lt;/strong&gt;</ept> project, there is an attribute called <bpt id="6">&lt;code&gt;</bpt>Suggestions<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>CreateCatalogIndex<ept id="2">&lt;/code&gt;</ept>  function within the file Program.cs of the <bpt id="4">&lt;strong&gt;</bpt>CatalogIndexer<ept id="4">&lt;/strong&gt;</ept> project, there is an attribute called <bpt id="6">&lt;code&gt;</bpt>Suggestions<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Whenever this attribute is set to <bpt id="2">&lt;code&gt;</bpt>True<ept id="2">&lt;/code&gt;</ept>, it means that Azure Search can use it as a field for retrieving suggestions</source>
            <target state="new">Whenever this attribute is set to <bpt id="2">&lt;code&gt;</bpt>True<ept id="2">&lt;/code&gt;</ept>, it means that Azure Search can use it as a field for retrieving suggestions</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Let’s give this a try.</source>
            <target state="new">Let’s give this a try.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>Once again, build the application and then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to run the application.</source>
            <target state="new">Once again, build the application and then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to run the application.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>In the search box type in the word "Road".</source>
            <target state="new">In the search box type in the word "Road".</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>After a second, you should see a list of items display below the text box with Suggestions that a user could potentially choose.</source>
            <target state="new">After a second, you should see a list of items display below the text box with Suggestions that a user could potentially choose.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>You might want to add a breakpoint to the <bpt id="2">&lt;code&gt;</bpt>Suggest<ept id="2">&lt;/code&gt;</ept> function within <bpt id="4">&lt;strong&gt;</bpt>HomeController.cs<ept id="4">&lt;/strong&gt;</ept> and step through (F11) each call that is made to build out the Suggestion list.</source>
            <target state="new">You might want to add a breakpoint to the <bpt id="2">&lt;code&gt;</bpt>Suggest<ept id="2">&lt;/code&gt;</ept> function within <bpt id="4">&lt;strong&gt;</bpt>HomeController.cs<ept id="4">&lt;/strong&gt;</ept> and step through (F11) each call that is made to build out the Suggestion list.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>This concludes the demo.</source>
            <target state="new">This concludes the demo.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>You have now walked through all of the main operations that you'll need to know before building out an ASP.NET MVC4 application using Azure Search.</source>
            <target state="new">You have now walked through all of the main operations that you'll need to know before building out an ASP.NET MVC4 application using Azure Search.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>How to resolve "Could not load file or assembly 'System.Web.Mvc"</source>
            <target state="new">How to resolve "Could not load file or assembly 'System.Web.Mvc"</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>When building AdventureWorksWeb, if you get "Could not load file or assembly 'System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies", try these steps to resolve the error.</source>
            <target state="new">When building AdventureWorksWeb, if you get "Could not load file or assembly 'System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies", try these steps to resolve the error.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Open the Package Manager Console: <bpt id="2">&lt;strong&gt;</bpt>Tools<ept id="2">&lt;/strong&gt;</ept> | <bpt id="4">&lt;strong&gt;</bpt>NuGet Package Manager<ept id="4">&lt;/strong&gt;</ept> | <bpt id="6">&lt;strong&gt;</bpt>Package Manager Console<ept id="6">&lt;/strong&gt;</ept></source>
            <target state="new">Open the Package Manager Console: <bpt id="2">&lt;strong&gt;</bpt>Tools<ept id="2">&lt;/strong&gt;</ept> | <bpt id="4">&lt;strong&gt;</bpt>NuGet Package Manager<ept id="4">&lt;/strong&gt;</ept> | <bpt id="6">&lt;strong&gt;</bpt>Package Manager Console<ept id="6">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>At the PM&gt; prompt, enter "Update-package -reinstall Microsoft.AspNet.Mvc"</source>
            <target state="new">At the PM&gt; prompt, enter "Update-package -reinstall Microsoft.AspNet.Mvc"</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>When asked to reload the file, choose <bpt id="2">&lt;strong&gt;</bpt>Yes to All<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">When asked to reload the file, choose <bpt id="2">&lt;strong&gt;</bpt>Yes to All<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>Rebuild the solution and try <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> again.</source>
            <target state="new">Rebuild the solution and try <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> again.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>For additional self-study, consider adding a Details page that opens when a user clicks one of the Search results.</source>
            <target state="new">For additional self-study, consider adding a Details page that opens when a user clicks one of the Search results.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>To prepare, you could do the following:</source>
            <target state="new">To prepare, you could do the following:</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Read up on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lookup API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that allows you to make a query to Azure Search to bring back a specific document (for example you could pass the productID).</source>
            <target state="new">Read up on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lookup API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that allows you to make a query to Azure Search to bring back a specific document (for example you could pass the productID).</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>Try adding a new function in the <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> file called Details.</source>
            <target state="new">Try adding a new function in the <bpt id="2">&lt;strong&gt;</bpt>HomeController.cs<ept id="2">&lt;/strong&gt;</ept> file called Details.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>Add a corresponding <bpt id="2">&lt;strong&gt;</bpt>Details.cshtml<ept id="2">&lt;/strong&gt;</ept> view that receives the results of this Lookup and displays the results.</source>
            <target state="new">Add a corresponding <bpt id="2">&lt;strong&gt;</bpt>Details.cshtml<ept id="2">&lt;/strong&gt;</ept> view that receives the results of this Lookup and displays the results.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>Check out this additional code sample and video on geospatial search: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Channel 9 - Azure Search and Geospatial Data<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>CodePlex: Azure Search GeoSearch Sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Check out this additional code sample and video on geospatial search: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Channel 9 - Azure Search and Geospatial Data<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>CodePlex: Azure Search GeoSearch Sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>You can also review the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> on MSDN.</source>
            <target state="new">You can also review the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> on MSDN.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>