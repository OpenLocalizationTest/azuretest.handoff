<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/20/2016 4:39:51 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a143c8469d198aebbe9d441ce01a3c789f06e32a</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Migrate your SQL code to SQL Data Warehouse | Microsoft Azure</source>
            <target state="new">Migrate your SQL code to SQL Data Warehouse | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Tips for migrating your SQL code to Azure SQL Data Warehouse for developing solutions.</source>
            <target state="new">Tips for migrating your SQL code to Azure SQL Data Warehouse for developing solutions.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Migrate your SQL code to SQL Data Warehouse</source>
            <target state="new">Migrate your SQL code to SQL Data Warehouse</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>In order to ensure your code is compliant with SQL Data Warehouse it is quite likely that you will need to make changes to your code base.</source>
            <target state="new">In order to ensure your code is compliant with SQL Data Warehouse it is quite likely that you will need to make changes to your code base.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Some SQL Data Warehouse features can also significantly improve performance as they are designed to work directly in a distributed fashion.</source>
            <target state="new">Some SQL Data Warehouse features can also significantly improve performance as they are designed to work directly in a distributed fashion.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>However, to maintain performance and scale, some features are also not available.</source>
            <target state="new">However, to maintain performance and scale, some features are also not available.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Transact-SQL code changes</source>
            <target state="new">Transact-SQL code changes</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The following list summarizes the main features that are not supported in Azure SQL Data Warehouse.</source>
            <target state="new">The following list summarizes the main features that are not supported in Azure SQL Data Warehouse.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The links provided take you to workarounds for the unsupported feature:</source>
            <target state="new">The links provided take you to workarounds for the unsupported feature:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>ANSI joins on updates[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>ANSI joins on updates[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>ANSI joins on deletes[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>ANSI joins on deletes[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>merge statement[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>merge statement[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>cross-database joins</source>
            <target state="new">cross-database joins</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>cursors[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>cursors[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SELECT..INTO[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SELECT..INTO[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>INSERT..EXEC[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>INSERT..EXEC[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>output clause</source>
            <target state="new">output clause</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>inline user-defined functions</source>
            <target state="new">inline user-defined functions</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>multi-statement functions</source>
            <target state="new">multi-statement functions</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>[recursive common table expressions (CTE)](#Recursive-common-table-expressions-(CTE)</source>
            <target state="new">[recursive common table expressions (CTE)](#Recursive-common-table-expressions-(CTE)</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>updates through CTEs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>updates through CTEs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>CLR functions and procedures</source>
            <target state="new">CLR functions and procedures</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>$partition function</source>
            <target state="new">$partition function</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>table variables</source>
            <target state="new">table variables</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>table value parameters</source>
            <target state="new">table value parameters</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>distributed transactions</source>
            <target state="new">distributed transactions</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>commit / rollback work</source>
            <target state="new">commit / rollback work</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>save transaction</source>
            <target state="new">save transaction</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>execution contexts (EXECUTE AS)</source>
            <target state="new">execution contexts (EXECUTE AS)</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>group by clause with rollup / cube / grouping sets options[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>group by clause with rollup / cube / grouping sets options[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>nesting levels beyond 8[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>nesting levels beyond 8[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>updating through views[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>updating through views[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>use of select for variable assignment[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>use of select for variable assignment[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>no MAX data type for dynamic SQL strings[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>no MAX data type for dynamic SQL strings[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Happily most of these limitations can be worked around.</source>
            <target state="new">Happily most of these limitations can be worked around.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Explanations have been included in the relevant development articles referenced above.</source>
            <target state="new">Explanations have been included in the relevant development articles referenced above.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Recursive common table expressions (CTE)</source>
            <target state="new">Recursive common table expressions (CTE)</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>This is a complex scenario with no quick fix.</source>
            <target state="new">This is a complex scenario with no quick fix.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The CTE will need to be broken down and handled in steps.</source>
            <target state="new">The CTE will need to be broken down and handled in steps.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>You can typically use a fairly complex loop; populating a temporary table as you iterate over the recursive interim queries.</source>
            <target state="new">You can typically use a fairly complex loop; populating a temporary table as you iterate over the recursive interim queries.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Once the temporary table is populated you can then return the data as a single result set.</source>
            <target state="new">Once the temporary table is populated you can then return the data as a single result set.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>A similar approach has been used to solve <bpt id="2">&lt;code&gt;</bpt>GROUP BY WITH CUBE<ept id="2">&lt;/code&gt;</ept> in the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>group by clause with rollup / cube / grouping sets options[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> article.</source>
            <target state="new">A similar approach has been used to solve <bpt id="2">&lt;code&gt;</bpt>GROUP BY WITH CUBE<ept id="2">&lt;/code&gt;</ept> in the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>group by clause with rollup / cube / grouping sets options[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> article.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Updates through CTEs</source>
            <target state="new">Updates through CTEs</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>If the CTE is non-recursive then you can re-write the query to use sub-queries.</source>
            <target state="new">If the CTE is non-recursive then you can re-write the query to use sub-queries.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>For recursive CTEs you will need to build up the resultset first as described above; then join the final resultset to the target table and perform the update.</source>
            <target state="new">For recursive CTEs you will need to build up the resultset first as described above; then join the final resultset to the target table and perform the update.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>System functions</source>
            <target state="new">System functions</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>There are also some system functions that are not supported.</source>
            <target state="new">There are also some system functions that are not supported.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Some of the main ones you might typically find used in data warehousing are:</source>
            <target state="new">Some of the main ones you might typically find used in data warehousing are:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>NEWID()</source>
            <target state="new">NEWID()</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>NEWSEQUENTIALID()</source>
            <target state="new">NEWSEQUENTIALID()</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>@@NESTLEVEL()</source>
            <target state="new">@@NESTLEVEL()</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>@@IDENTITY()</source>
            <target state="new">@@IDENTITY()</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>@@ROWCOUNT()</source>
            <target state="new">@@ROWCOUNT()</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>ROWCOUNT_BIG</source>
            <target state="new">ROWCOUNT_BIG</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>ERROR_LINE()</source>
            <target state="new">ERROR_LINE()</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Again many of these issues can be worked around.</source>
            <target state="new">Again many of these issues can be worked around.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>For example the code below is an alternative solution for retrieving @@ROWCOUNT information:</source>
            <target state="new">For example the code below is an alternative solution for retrieving @@ROWCOUNT information:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>For advice on developing your code please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For advice on developing your code please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>