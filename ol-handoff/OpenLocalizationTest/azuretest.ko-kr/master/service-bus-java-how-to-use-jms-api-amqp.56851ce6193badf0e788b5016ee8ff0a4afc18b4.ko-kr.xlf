<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 4:39:18 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a23ef99812269a643139ed26becc53b75efa342d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use AMQP 1.0 with the Java Service Bus API | Microsoft Azure</source>
            <target state="new">How to use AMQP 1.0 with the Java Service Bus API | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the Java Message Service (JMS) with Azure Service Bus and Advanced Message Queuing Protodol (AMQP) 1.0.</source>
            <target state="new">Learn how to use the Java Message Service (JMS) with Azure Service Bus and Advanced Message Queuing Protodol (AMQP) 1.0.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use the Java Message Service (JMS) API with Service Bus and AMQP 1.0</source>
            <target state="new">How to use the Java Message Service (JMS) API with Service Bus and AMQP 1.0</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The Advanced Message Queuing Protocol (AMQP) 1.0 is an efficient, reliable, wire-level messaging protocol that you can use to build robust, cross-platform messaging applications.</source>
            <target state="new">The Advanced Message Queuing Protocol (AMQP) 1.0 is an efficient, reliable, wire-level messaging protocol that you can use to build robust, cross-platform messaging applications.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Support for AMQP 1.0 in Service Bus means that you can use the queuing and publish/subscribe brokered messaging features from a range of platforms using an efficient binary protocol.</source>
            <target state="new">Support for AMQP 1.0 in Service Bus means that you can use the queuing and publish/subscribe brokered messaging features from a range of platforms using an efficient binary protocol.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Furthermore, you can build applications comprised of components built using a mix of languages, frameworks, and operating systems.</source>
            <target state="new">Furthermore, you can build applications comprised of components built using a mix of languages, frameworks, and operating systems.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This how-to guide explains how to use the Service Bus brokered messaging features (queues and publish/subscribe topics) from Java applications using the popular Java Message Service (JMS) API standard.</source>
            <target state="new">This how-to guide explains how to use the Service Bus brokered messaging features (queues and publish/subscribe topics) from Java applications using the popular Java Message Service (JMS) API standard.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>There is a companion How-to guide that explains how to do the same using the Service Bus .NET API.</source>
            <target state="new">There is a companion How-to guide that explains how to do the same using the Service Bus .NET API.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>You can use these two guides together to learn about cross-platform messaging using AMQP 1.0.</source>
            <target state="new">You can use these two guides together to learn about cross-platform messaging using AMQP 1.0.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Get started with Service Bus</source>
            <target state="new">Get started with Service Bus</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>This guide assumes that you already have a Service Bus namespace containing a queue named "queue1."</source>
            <target state="new">This guide assumes that you already have a Service Bus namespace containing a queue named "queue1."</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>If you do not, then you can create the namespace and queue using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you do not, then you can create the namespace and queue using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For more information about how to create Service Bus namespaces and queues, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about how to create Service Bus namespaces and queues, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept>: You must create the queue with partitioning disabled as partitioned queues and topics do not yet have AMQP support.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept>: You must create the queue with partitioning disabled as partitioned queues and topics do not yet have AMQP support.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>For additional information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Messaging Entities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For additional information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Messaging Entities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Downloading the AMQP 1.0 JMS client library</source>
            <target state="new">Downloading the AMQP 1.0 JMS client library</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>For information about where to download the latest version of the Apache Qpid JMS AMQP 1.0 client library, visit <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about where to download the latest version of the Apache Qpid JMS AMQP 1.0 client library, visit <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://people.apache.org/~rgodfrey/qpid-java-amqp-1-0-client-jms.html<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>You must add the following four JAR files from the Apache Qpid JMS AMQP 1.0 distribution archive to the Java CLASSPATH when building and running JMS applications with Service Bus:</source>
            <target state="new">You must add the following four JAR files from the Apache Qpid JMS AMQP 1.0 distribution archive to the Java CLASSPATH when building and running JMS applications with Service Bus:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Coding Java applications</source>
            <target state="new">Coding Java applications</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Java Naming and Directory Interface (JNDI)</source>
            <target state="new">Java Naming and Directory Interface (JNDI)</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>JMS uses the Java Naming and Directory Interface (JNDI) to create a separation between logical names and physical names.</source>
            <target state="new">JMS uses the Java Naming and Directory Interface (JNDI) to create a separation between logical names and physical names.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Two types of JMS objects are resolved using JNDI: ConnectionFactory and Destination.</source>
            <target state="new">Two types of JMS objects are resolved using JNDI: ConnectionFactory and Destination.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>JNDI uses a provider model into which you can plug different directory services to handle name resolution duties.</source>
            <target state="new">JNDI uses a provider model into which you can plug different directory services to handle name resolution duties.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The Apache Qpid JMS AMQP 1.0 library comes with a simple properties file-based JNDI Provider that is configured using a properties file of the following format:</source>
            <target state="new">The Apache Qpid JMS AMQP 1.0 library comes with a simple properties file-based JNDI Provider that is configured using a properties file of the following format:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Configuring the ConnectionFactory</source>
            <target state="new">Configuring the ConnectionFactory</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The entry used to define a <bpt id="2">&lt;strong&gt;</bpt>ConnectionFactory<ept id="2">&lt;/strong&gt;</ept> in the Qpid Properties File JNDI Provider is of the following format:</source>
            <target state="new">The entry used to define a <bpt id="2">&lt;strong&gt;</bpt>ConnectionFactory<ept id="2">&lt;/strong&gt;</ept> in the Qpid Properties File JNDI Provider is of the following format:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Where <bpt id="2">&lt;strong&gt;</bpt>[jndi_name]<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>[ConnectionURL]<ept id="4">&lt;/strong&gt;</ept> have the following meanings:</source>
            <target state="new">Where <bpt id="2">&lt;strong&gt;</bpt>[jndi_name]<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>[ConnectionURL]<ept id="4">&lt;/strong&gt;</ept> have the following meanings:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>[jndi_name]<ept id="1">&lt;/strong&gt;</ept>: The logical name of the ConnectionFactory.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>[jndi_name]<ept id="1">&lt;/strong&gt;</ept>: The logical name of the ConnectionFactory.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>This is the name that will be resolved in the Java application using the JNDI IntialContext.lookup() method.</source>
            <target state="new">This is the name that will be resolved in the Java application using the JNDI IntialContext.lookup() method.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>[ConnectionURL]<ept id="1">&lt;/strong&gt;</ept>: A URL that provides the JMS library with the information required to the AMQP broker.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>[ConnectionURL]<ept id="1">&lt;/strong&gt;</ept>: A URL that provides the JMS library with the information required to the AMQP broker.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The format of the <bpt id="2">&lt;strong&gt;</bpt>ConnectionURL<ept id="2">&lt;/strong&gt;</ept> is as follows:</source>
            <target state="new">The format of the <bpt id="2">&lt;strong&gt;</bpt>ConnectionURL<ept id="2">&lt;/strong&gt;</ept> is as follows:</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>queue.[jndi_name] = [physical_name]</source>
            <target state="new">queue.[jndi_name] = [physical_name]</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Where <bpt id="2">&lt;strong&gt;</bpt>[jndi\_name]<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>[physical\_name]<ept id="4">&lt;/strong&gt;</ept> have the following meanings:</source>
            <target state="new">Where <bpt id="2">&lt;strong&gt;</bpt>[jndi\_name]<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>[physical\_name]<ept id="4">&lt;/strong&gt;</ept> have the following meanings:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>[jndi_name]<ept id="1">&lt;/strong&gt;</ept>: The logical name of the destination.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>[jndi_name]<ept id="1">&lt;/strong&gt;</ept>: The logical name of the destination.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>This is the name that will be resolved in the Java application using the JNDI IntialContext.lookup() method.</source>
            <target state="new">This is the name that will be resolved in the Java application using the JNDI IntialContext.lookup() method.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>[physical_name]<ept id="1">&lt;/strong&gt;</ept>: The name of the Service Bus entity to which the application sends or receives messages.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>[physical_name]<ept id="1">&lt;/strong&gt;</ept>: The name of the Service Bus entity to which the application sends or receives messages.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>When receiving from a Service Bus topic subscription, the physical name specified in JNDI should be the name of the topic.</source>
            <target state="new">When receiving from a Service Bus topic subscription, the physical name specified in JNDI should be the name of the topic.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The subscription name is provided when the durable subscription is created in the JMS application code.</source>
            <target state="new">The subscription name is provided when the durable subscription is created in the JMS application code.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> provides more details on working with Service Bus topic subscriptions from JMS.</source>
            <target state="new">The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> provides more details on working with Service Bus topic subscriptions from JMS.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Writing the JMS application</source>
            <target state="new">Writing the JMS application</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>There are no special APIs or options required when using JMS with Service Bus.</source>
            <target state="new">There are no special APIs or options required when using JMS with Service Bus.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>However, there are a few restrictions that will be covered later.</source>
            <target state="new">However, there are a few restrictions that will be covered later.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>As with any JMS application, the first thing required is configuration of the JNDI environment, to be able to resolve a <bpt id="2">&lt;strong&gt;</bpt>ConnectionFactory<ept id="2">&lt;/strong&gt;</ept> and destinations.</source>
            <target state="new">As with any JMS application, the first thing required is configuration of the JNDI environment, to be able to resolve a <bpt id="2">&lt;strong&gt;</bpt>ConnectionFactory<ept id="2">&lt;/strong&gt;</ept> and destinations.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Configuring the JNDI InitialContext</source>
            <target state="new">Configuring the JNDI InitialContext</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The JNDI environment is configured by passing a hashtable of configuration information into the constructor of the javax.naming.InitialContext class.</source>
            <target state="new">The JNDI environment is configured by passing a hashtable of configuration information into the constructor of the javax.naming.InitialContext class.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The two required elements in the hashtable are the class name of the Initial Context Factory and the Provider URL.</source>
            <target state="new">The two required elements in the hashtable are the class name of the Initial Context Factory and the Provider URL.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The following code shows how to configure the JNDI environment to use the Qpid properties file based JNDI Provider with a properties file named <bpt id="2">&lt;strong&gt;</bpt>servicebus.properties<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The following code shows how to configure the JNDI environment to use the Qpid properties file based JNDI Provider with a properties file named <bpt id="2">&lt;strong&gt;</bpt>servicebus.properties<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>A simple JMS application using a Service Bus queue</source>
            <target state="new">A simple JMS application using a Service Bus queue</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>The following example program sends JMS TextMessages to a Service Bus queue with the JNDI logical name of QUEUE, and receives the messages back.</source>
            <target state="new">The following example program sends JMS TextMessages to a Service Bus queue with the JNDI logical name of QUEUE, and receives the messages back.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Running the application</source>
            <target state="new">Running the application</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Running the application produces output of the form:</source>
            <target state="new">Running the application produces output of the form:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Cross-platform messaging between JMS and .NET</source>
            <target state="new">Cross-platform messaging between JMS and .NET</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>This guide showed how to send and receive messages to and from Service Bus using JMS.</source>
            <target state="new">This guide showed how to send and receive messages to and from Service Bus using JMS.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>However, one of the key benefits of AMQP 1.0 is that it enables applications to be built from components written in different languages, with messages exchanged reliably and at full fidelity.</source>
            <target state="new">However, one of the key benefits of AMQP 1.0 is that it enables applications to be built from components written in different languages, with messages exchanged reliably and at full fidelity.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Using the sample JMS application described above and a similar .NET application taken from a companion guide, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use AMQP 1.0 with the .NET Service Bus .NET API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you can exchange messages between .NET and Java.</source>
            <target state="new">Using the sample JMS application described above and a similar .NET application taken from a companion guide, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use AMQP 1.0 with the .NET Service Bus .NET API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you can exchange messages between .NET and Java.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>For more information about the details of cross-platform messaging using Service Bus and AMQP 1.0, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about the details of cross-platform messaging using Service Bus and AMQP 1.0, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>JMS to .NET</source>
            <target state="new">JMS to .NET</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>To demonstrate JMS to .NET messaging:</source>
            <target state="new">To demonstrate JMS to .NET messaging:</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Start the .NET sample application without any command-line arguments.</source>
            <target state="new">Start the .NET sample application without any command-line arguments.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Start the Java sample application with the "sendonly" command-line argument.</source>
            <target state="new">Start the Java sample application with the "sendonly" command-line argument.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>In this mode, the application will not receive messages from the queue, it will only send.</source>
            <target state="new">In this mode, the application will not receive messages from the queue, it will only send.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> a few times in the Java application console, which will cause messages to be sent.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> a few times in the Java application console, which will cause messages to be sent.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>These messages are received by the .NET application.</source>
            <target state="new">These messages are received by the .NET application.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Output from JMS application</source>
            <target state="new">Output from JMS application</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Output from .NET application</source>
            <target state="new">Output from .NET application</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>.NET to JMS</source>
            <target state="new">.NET to JMS</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>To demonstrate .NET to JMS messaging:</source>
            <target state="new">To demonstrate .NET to JMS messaging:</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Start the .NET sample application with the "sendonly" command-line argument.</source>
            <target state="new">Start the .NET sample application with the "sendonly" command-line argument.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>In this mode, the application will not receive messages from the queue, it will only send.</source>
            <target state="new">In this mode, the application will not receive messages from the queue, it will only send.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Start the Java sample application without any command-line arguments.</source>
            <target state="new">Start the Java sample application without any command-line arguments.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> a few times in the .NET application console, which will cause messages to be sent.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>Enter<ept id="2">&lt;/strong&gt;</ept> a few times in the .NET application console, which will cause messages to be sent.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>These messages are received by the Java application.</source>
            <target state="new">These messages are received by the Java application.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Output from .NET application</source>
            <target state="new">Output from .NET application</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Output from JMS application</source>
            <target state="new">Output from JMS application</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Unsupported features and restrictions</source>
            <target state="new">Unsupported features and restrictions</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>The following restrictions exist when using JMS over AMQP 1.0 with Service Bus, namely:</source>
            <target state="new">The following restrictions exist when using JMS over AMQP 1.0 with Service Bus, namely:</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Only one <bpt id="2">&lt;strong&gt;</bpt>MessageProducer<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>MessageConsumer<ept id="4">&lt;/strong&gt;</ept> is allowed per <bpt id="6">&lt;strong&gt;</bpt>Session<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Only one <bpt id="2">&lt;strong&gt;</bpt>MessageProducer<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>MessageConsumer<ept id="4">&lt;/strong&gt;</ept> is allowed per <bpt id="6">&lt;strong&gt;</bpt>Session<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>If you need to create multiple <bpt id="2">&lt;strong&gt;</bpt>MessageProducers<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>MessageConsumers<ept id="4">&lt;/strong&gt;</ept> in an application, create a dedicated <bpt id="6">&lt;strong&gt;</bpt>Session<ept id="6">&lt;/strong&gt;</ept> for each of them.</source>
            <target state="new">If you need to create multiple <bpt id="2">&lt;strong&gt;</bpt>MessageProducers<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>MessageConsumers<ept id="4">&lt;/strong&gt;</ept> in an application, create a dedicated <bpt id="6">&lt;strong&gt;</bpt>Session<ept id="6">&lt;/strong&gt;</ept> for each of them.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Volatile topic subscriptions are not currently supported.</source>
            <target state="new">Volatile topic subscriptions are not currently supported.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>MessageSelectors<ept id="1">&lt;/strong&gt;</ept> are not currently supported.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>MessageSelectors<ept id="1">&lt;/strong&gt;</ept> are not currently supported.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Temporary destinations, i.e., <bpt id="2">&lt;strong&gt;</bpt>TemporaryQueue<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>TemporaryTopic<ept id="4">&lt;/strong&gt;</ept> are not currently supported, along with the <bpt id="6">&lt;strong&gt;</bpt>QueueRequestor<ept id="6">&lt;/strong&gt;</ept> and <bpt id="8">&lt;strong&gt;</bpt>TopicRequestor<ept id="8">&lt;/strong&gt;</ept> APIs that use them.</source>
            <target state="new">Temporary destinations, i.e., <bpt id="2">&lt;strong&gt;</bpt>TemporaryQueue<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>TemporaryTopic<ept id="4">&lt;/strong&gt;</ept> are not currently supported, along with the <bpt id="6">&lt;strong&gt;</bpt>QueueRequestor<ept id="6">&lt;/strong&gt;</ept> and <bpt id="8">&lt;strong&gt;</bpt>TopicRequestor<ept id="8">&lt;/strong&gt;</ept> APIs that use them.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Transacted sessions and distributed transactions are not supported.</source>
            <target state="new">Transacted sessions and distributed transactions are not supported.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Summary</source>
            <target state="new">Summary</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>This how-to guide showed how to use Service Bus brokered messaging features (queues and publish/subscribe topics) from Java using the popular JMS API and AMQP 1.0.</source>
            <target state="new">This how-to guide showed how to use Service Bus brokered messaging features (queues and publish/subscribe topics) from Java using the popular JMS API and AMQP 1.0.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>You can also use Service Bus AMQP 1.0 from other languages, including .NET, C, Python, and PHP.</source>
            <target state="new">You can also use Service Bus AMQP 1.0 from other languages, including .NET, C, Python, and PHP.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Components built using these different languages can exchange messages reliably and at full fidelity using the AMQP 1.0 support in Service Bus.</source>
            <target state="new">Components built using these different languages can exchange messages reliably and at full fidelity using the AMQP 1.0 support in Service Bus.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>AMQP 1.0 support in Azure Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>AMQP 1.0 support in Azure Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to use AMQP 1.0 with the Service Bus .NET API<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to use AMQP 1.0 with the Service Bus .NET API<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP 1.0 Developer's Guide<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>