<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 3:13:02 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5138db5686a391da34bad42bebeb8e09e932ad6e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Script Action Development with HDInsight | Microsoft Azure</source>
            <target state="new">Script Action Development with HDInsight | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to customize Hadoop clusters with Script Action.</source>
            <target state="new">Learn how to customize Hadoop clusters with Script Action.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Script Action development with HDInsight</source>
            <target state="new">Script Action development with HDInsight</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Script Actions are a way to customize Azure HDInsight clusters by specifying cluster configuration settings during installation, or installing additional services, tools, or other software on the cluster.</source>
            <target state="new">Script Actions are a way to customize Azure HDInsight clusters by specifying cluster configuration settings during installation, or installing additional services, tools, or other software on the cluster.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The information in this document is specific to Linux-based HDInsight clusters.</source>
            <target state="new">The information in this document is specific to Linux-based HDInsight clusters.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>For information on using Script Actions with Windows-based clusters, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Script action development with HDInsight (Windows)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information on using Script Actions with Windows-based clusters, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Script action development with HDInsight (Windows)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>What are Script Actions?</source>
            <target state="new">What are Script Actions?</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Script actions are Bash scripts that run on the cluster nodes during provisioning.</source>
            <target state="new">Script actions are Bash scripts that run on the cluster nodes during provisioning.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>A script action is executed as root, and provides full access rights to the cluster nodes.</source>
            <target state="new">A script action is executed as root, and provides full access rights to the cluster nodes.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Script Action can be used when provisioning a cluster using the <bpt id="2">&lt;strong&gt;</bpt>Azure preview portal<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Azure PowerShell<ept id="4">&lt;/strong&gt;</ept>, or the <bpt id="6">&lt;strong&gt;</bpt>HDInsight .NET SDK<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Script Action can be used when provisioning a cluster using the <bpt id="2">&lt;strong&gt;</bpt>Azure preview portal<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Azure PowerShell<ept id="4">&lt;/strong&gt;</ept>, or the <bpt id="6">&lt;strong&gt;</bpt>HDInsight .NET SDK<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For an walkthrough of customizing a cluster using Script Actions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using script actions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For an walkthrough of customizing a cluster using Script Actions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using script actions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Best practices for script development</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Best practices for script development</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>When you develop a custom script for an HDInsight cluster, there are several best practices to keep in mind:</source>
            <target state="new">When you develop a custom script for an HDInsight cluster, there are several best practices to keep in mind:</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Target the Hadoop version<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Target the Hadoop version<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Provide stable links to script resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Provide stable links to script resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Ensure that the cluster customization script is idempotent<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Ensure that the cluster customization script is idempotent<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Ensure high availability of the cluster architecture<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Ensure high availability of the cluster architecture<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configure the custom components to use Azure Blob storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configure the custom components to use Azure Blob storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Write information to STDOUT and STDERR<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Write information to STDOUT and STDERR<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Save files as ASCII with LF line endings<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Save files as ASCII with LF line endings<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Target the Hadoop version</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Target the Hadoop version</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Different versions of HDInsight have different versions of Hadoop services and components installed.</source>
            <target state="new">Different versions of HDInsight have different versions of Hadoop services and components installed.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>If your script expects a specific version of a service or component, you should only use the script with the version of HDInsight that includes the required components.</source>
            <target state="new">If your script expects a specific version of a service or component, you should only use the script with the version of HDInsight that includes the required components.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>You can find information on component versions included with HDInsight using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>HDInsight component versioning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> document.</source>
            <target state="new">You can find information on component versions included with HDInsight using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>HDInsight component versioning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> document.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Provide stable links to script resources</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Provide stable links to script resources</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Users should make sure that all of the scripts and resources used by the script remain available throughout the lifetime of the cluster and that the versions of these files do not change for the duration.</source>
            <target state="new">Users should make sure that all of the scripts and resources used by the script remain available throughout the lifetime of the cluster and that the versions of these files do not change for the duration.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>These resources are required if the nodes in the cluster are re-imaged.</source>
            <target state="new">These resources are required if the nodes in the cluster are re-imaged.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The best practice is to download and archive everything in an Azure Storage account on your subscription.</source>
            <target state="new">The best practice is to download and archive everything in an Azure Storage account on your subscription.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The storage account used must be the default storage account for the cluster or a public, read-only container on any other storage account.</source>
            <target state="new">The storage account used must be the default storage account for the cluster or a public, read-only container on any other storage account.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>For example, the samples provided by Microsoft are stored in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://hdiconfigactions.blob.core.windows.net/<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> storage account, which is a public, read-only container maintained by the HDInsight team.</source>
            <target state="new">For example, the samples provided by Microsoft are stored in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://hdiconfigactions.blob.core.windows.net/<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> storage account, which is a public, read-only container maintained by the HDInsight team.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ensure that the cluster customization script is idempotent</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ensure that the cluster customization script is idempotent</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>You must expect that the nodes of an HDInsight cluster will be re-imaged during the cluster lifetime, and that the cluster customization script will be used when this happens.</source>
            <target state="new">You must expect that the nodes of an HDInsight cluster will be re-imaged during the cluster lifetime, and that the cluster customization script will be used when this happens.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The script must be designed to be idempotent in the sense that upon re-imaging, the script should ensure that the cluster is returned to the same state every time it is ran.</source>
            <target state="new">The script must be designed to be idempotent in the sense that upon re-imaging, the script should ensure that the cluster is returned to the same state every time it is ran.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>For example, if a custom script installs an application at /usr/local/bin on its first run, then on each subsequent run the script should check whether the application already exists at the /usr/local/bin location before proceeding with other steps in the script.</source>
            <target state="new">For example, if a custom script installs an application at /usr/local/bin on its first run, then on each subsequent run the script should check whether the application already exists at the /usr/local/bin location before proceeding with other steps in the script.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ensure high availability of the cluster architecture</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ensure high availability of the cluster architecture</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Linux-based HDInsight clusters provides two head nodes that are active within the cluster, and Script Actions are ran for both nodes.</source>
            <target state="new">Linux-based HDInsight clusters provides two head nodes that are active within the cluster, and Script Actions are ran for both nodes.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>If the components you install expect only one head node, you must design a script that will only install the component on one of the two head nodes in the cluster.</source>
            <target state="new">If the components you install expect only one head node, you must design a script that will only install the component on one of the two head nodes in the cluster.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The head nodes are named <bpt id="2">&lt;strong&gt;</bpt>headnode0<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>headnode1<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The head nodes are named <bpt id="2">&lt;strong&gt;</bpt>headnode0<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>headnode1<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Default services installed as part of HDInsight are designed to fail over between the two head nodes as needed, however this functionality is not extended to custom components installed through Script Actions.</source>
            <target state="new">Default services installed as part of HDInsight are designed to fail over between the two head nodes as needed, however this functionality is not extended to custom components installed through Script Actions.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>If you need the components installed through a Script Action to be highly available, you must implement your own failover mechanism that uses the two available head nodes.</source>
            <target state="new">If you need the components installed through a Script Action to be highly available, you must implement your own failover mechanism that uses the two available head nodes.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure the custom components to use Azure Blob storage</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure the custom components to use Azure Blob storage</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Components that you install on the cluster might have a default configuration that uses Hadoop Distributed File System (HDFS) storage.</source>
            <target state="new">Components that you install on the cluster might have a default configuration that uses Hadoop Distributed File System (HDFS) storage.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>On a cluster re-image, the HDFS file system gets formatted and you will lose any data that is stored there.</source>
            <target state="new">On a cluster re-image, the HDFS file system gets formatted and you will lose any data that is stored there.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>You should change the configuration to use Azure Blob storage (WASB) instead, as this is the default storage for the cluster, and is kept even when the cluster is deleted.</source>
            <target state="new">You should change the configuration to use Azure Blob storage (WASB) instead, as this is the default storage for the cluster, and is kept even when the cluster is deleted.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>For example, the following copies the giraph-examples.jar file from the local file system to WASB:</source>
            <target state="new">For example, the following copies the giraph-examples.jar file from the local file system to WASB:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Write information to STDOUT and STDERR</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Write information to STDOUT and STDERR</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Information written to STDOUT and STDERR is logged, and can be viewed after the cluster has been provisioned by using the Ambari web UI.</source>
            <target state="new">Information written to STDOUT and STDERR is logged, and can be viewed after the cluster has been provisioned by using the Ambari web UI.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Most utilities and installation packages will already write information to STDOUT and STDERR, however you may want to add additional logging.</source>
            <target state="new">Most utilities and installation packages will already write information to STDOUT and STDERR, however you may want to add additional logging.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>To send text to STDOUT use <bpt id="2">&lt;code&gt;</bpt>echo<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To send text to STDOUT use <bpt id="2">&lt;code&gt;</bpt>echo<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>By default, <bpt id="2">&lt;code&gt;</bpt>echo<ept id="2">&lt;/code&gt;</ept> will send the string to STDOUT. To direct it to STDERR, add <bpt id="4">&lt;code&gt;</bpt>&gt;&amp;2<ept id="4">&lt;/code&gt;</ept> before <bpt id="6">&lt;code&gt;</bpt>echo<ept id="6">&lt;/code&gt;</ept>. For example:</source>
            <target state="new">By default, <bpt id="2">&lt;code&gt;</bpt>echo<ept id="2">&lt;/code&gt;</ept> will send the string to STDOUT. To direct it to STDERR, add <bpt id="4">&lt;code&gt;</bpt>&gt;&amp;2<ept id="4">&lt;/code&gt;</ept> before <bpt id="6">&lt;code&gt;</bpt>echo<ept id="6">&lt;/code&gt;</ept>. For example:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This redirects information sent to STDOUT (1, which is default so not listed here,) to STDERR (2).</source>
            <target state="new">This redirects information sent to STDOUT (1, which is default so not listed here,) to STDERR (2).</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>For more information on IO redirection, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://www.tldp.org/LDP/abs/html/io-redirection.html<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information on IO redirection, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://www.tldp.org/LDP/abs/html/io-redirection.html<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>For more information on viewing information logged by Script Actions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using Script Action<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For more information on viewing information logged by Script Actions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using Script Action<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Save files as ASCII with LF line endings</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Save files as ASCII with LF line endings</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Bash scripts should be stored as ASCII format, with lines terminated by LF.</source>
            <target state="new">Bash scripts should be stored as ASCII format, with lines terminated by LF.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>If files are stored as UTF-8, which may include a Byte Order Mark at the beginning of the file, or with line endings of CRLF, which is common for Windows editors, then the script will fail with errors similar to the following:</source>
            <target state="new">If files are stored as UTF-8, which may include a Byte Order Mark at the beginning of the file, or with line endings of CRLF, which is common for Windows editors, then the script will fail with errors similar to the following:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Helper methods for custom scripts</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Helper methods for custom scripts</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Script Action helper methods are utilities that you can use while writing custom scripts.</source>
            <target state="new">Script Action helper methods are utilities that you can use while writing custom scripts.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>These are defined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://hdiconfigactions.blob.core.windows.net/linuxconfigactionmodulev01/HDInsightUtilities-v01.sh<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, and can be included in your scripts using the following:</source>
            <target state="new">These are defined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://hdiconfigactions.blob.core.windows.net/linuxconfigactionmodulev01/HDInsightUtilities-v01.sh<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, and can be included in your scripts using the following:</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>This makes the following helpers available for use in your script:</source>
            <target state="new">This makes the following helpers available for use in your script:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Helper usage</source>
            <target state="new">Helper usage</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>download_file SOURCEURL DESTFILEPATH [OVERWRITE]<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>download_file SOURCEURL DESTFILEPATH [OVERWRITE]<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Downloads a file from the source URL to the specified file path.</source>
            <target state="new">Downloads a file from the source URL to the specified file path.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>By default, it will not overwrite an existing file.</source>
            <target state="new">By default, it will not overwrite an existing file.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>untar_file TARFILE DESTDIR<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>untar_file TARFILE DESTDIR<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Extracts a tar file (using <bpt id="2">&lt;code&gt;</bpt>-xf<ept id="2">&lt;/code&gt;</ept>,) to the destination directory.</source>
            <target state="new">Extracts a tar file (using <bpt id="2">&lt;code&gt;</bpt>-xf<ept id="2">&lt;/code&gt;</ept>,) to the destination directory.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>test_is_headnode<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>test_is_headnode<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>If ran on a cluster head node, returns 1; otherwise, 0.</source>
            <target state="new">If ran on a cluster head node, returns 1; otherwise, 0.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>test_is_datanode<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>test_is_datanode<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>If the current node is a data (worker) node, returns a 1; otherwise, 0.</source>
            <target state="new">If the current node is a data (worker) node, returns a 1; otherwise, 0.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>test_is_first_datanode<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>test_is_first_datanode<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>If the current node is the first data (worker) node (named workernode0,) returns a 1; otherwise, 0.</source>
            <target state="new">If the current node is the first data (worker) node (named workernode0,) returns a 1; otherwise, 0.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Common usage patterns</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Common usage patterns</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>This section provides guidance on implementing some of the common usage patterns that you might run into while writing your own custom script.</source>
            <target state="new">This section provides guidance on implementing some of the common usage patterns that you might run into while writing your own custom script.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Passing parameters to a script</source>
            <target state="new">Passing parameters to a script</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>In some cases, your script may require parameters.</source>
            <target state="new">In some cases, your script may require parameters.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>For example, you may need the admin password for the cluster in order to retrieve information from the Ambari REST API.</source>
            <target state="new">For example, you may need the admin password for the cluster in order to retrieve information from the Ambari REST API.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Parameters passed to the script are known as _positional parameters_, and are assigned to <bpt id="2">&lt;code&gt;</bpt>$1<ept id="2">&lt;/code&gt;</ept> for the first parameter, <bpt id="4">&lt;code&gt;</bpt>$2<ept id="4">&lt;/code&gt;</ept> for the second, and so-on.</source>
            <target state="new">Parameters passed to the script are known as _positional parameters_, and are assigned to <bpt id="2">&lt;code&gt;</bpt>$1<ept id="2">&lt;/code&gt;</ept> for the first parameter, <bpt id="4">&lt;code&gt;</bpt>$2<ept id="4">&lt;/code&gt;</ept> for the second, and so-on.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>$0<ept id="1">&lt;/code&gt;</ept> contains the name of the script itself.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>$0<ept id="1">&lt;/code&gt;</ept> contains the name of the script itself.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Values passed to the script as parameters should be enclosed by single quotes (') so that the passed value is treated as a literal, and special treatment isn't given to included characters such as '!'.</source>
            <target state="new">Values passed to the script as parameters should be enclosed by single quotes (') so that the passed value is treated as a literal, and special treatment isn't given to included characters such as '!'.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Setting environment variables</source>
            <target state="new">Setting environment variables</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Setting an environment variable is performed by the following:</source>
            <target state="new">Setting an environment variable is performed by the following:</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Where VARIABLENAME is the name of the variable.</source>
            <target state="new">Where VARIABLENAME is the name of the variable.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>To access the variable after this, use <bpt id="2">&lt;code&gt;</bpt>$VARIABLENAME<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To access the variable after this, use <bpt id="2">&lt;code&gt;</bpt>$VARIABLENAME<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>For example, to assign a value provided by a positional parameter as an environment variable named PASSWORD, you would use the following:</source>
            <target state="new">For example, to assign a value provided by a positional parameter as an environment variable named PASSWORD, you would use the following:</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Subsequent access to the information could then use <bpt id="2">&lt;code&gt;</bpt>$PASSWORD<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Subsequent access to the information could then use <bpt id="2">&lt;code&gt;</bpt>$PASSWORD<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Environment variables set within the script only exist within the scope of the script.</source>
            <target state="new">Environment variables set within the script only exist within the scope of the script.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>In some cases, you may need to add system wide environment variables that will persist after the script has finished.</source>
            <target state="new">In some cases, you may need to add system wide environment variables that will persist after the script has finished.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Usually this is so that users connecting to the cluster via SSH can use the components installed by your script.</source>
            <target state="new">Usually this is so that users connecting to the cluster via SSH can use the components installed by your script.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>You can accomplish this by adding the environment variable to <bpt id="2">&lt;code&gt;</bpt>/etc/environment<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">You can accomplish this by adding the environment variable to <bpt id="2">&lt;code&gt;</bpt>/etc/environment<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>For example, the following adds <bpt id="2">&lt;strong&gt;</bpt>HADOOP\_CONF\_DIR<ept id="2">&lt;/strong&gt;</ept>:</source>
            <target state="new">For example, the following adds <bpt id="2">&lt;strong&gt;</bpt>HADOOP\_CONF\_DIR<ept id="2">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Access to locations where the custom scripts are stored</source>
            <target state="new">Access to locations where the custom scripts are stored</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Scripts used to customize a cluster needs to either be in the default storage account for the cluster or, if on another storage account, in a public read-only container.</source>
            <target state="new">Scripts used to customize a cluster needs to either be in the default storage account for the cluster or, if on another storage account, in a public read-only container.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>If your script accesses resources located elsewhere these also need to be in a publicly accessible (at least public read-only).</source>
            <target state="new">If your script accesses resources located elsewhere these also need to be in a publicly accessible (at least public read-only).</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>For instance you might want to download a file to the cluster using <bpt id="2">&lt;code&gt;</bpt>download_file<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">For instance you might want to download a file to the cluster using <bpt id="2">&lt;code&gt;</bpt>download_file<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Storing the file in an Azure storage account accessible by the cluster (such as the default storage account,) will provide fast access, as this storage is within the Azure network.</source>
            <target state="new">Storing the file in an Azure storage account accessible by the cluster (such as the default storage account,) will provide fast access, as this storage is within the Azure network.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Checklist for deploying a script action</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Checklist for deploying a script action</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Here are the steps we took when preparing to deploy these scripts:</source>
            <target state="new">Here are the steps we took when preparing to deploy these scripts:</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>Put the files that contain the custom scripts in a place that is accessible by the cluster nodes during deployment.</source>
            <target state="new">Put the files that contain the custom scripts in a place that is accessible by the cluster nodes during deployment.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>This can be any of the default or additional Storage accounts specified at the time of cluster deployment, or any other publicly accessible storage container.</source>
            <target state="new">This can be any of the default or additional Storage accounts specified at the time of cluster deployment, or any other publicly accessible storage container.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Add checks into scripts to make sure that they execute impotently, so that the script can be executed multiple times on the same node.</source>
            <target state="new">Add checks into scripts to make sure that they execute impotently, so that the script can be executed multiple times on the same node.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Use a temporary file directory /tmp to keep the downloaded files used by the scripts and then clean them up after scripts have executed.</source>
            <target state="new">Use a temporary file directory /tmp to keep the downloaded files used by the scripts and then clean them up after scripts have executed.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>In the event that OS-level settings or Hadoop service configuration files were changed, you may want to restart HDInsight services so that they can pick up any OS-level settings, such as the environment variables set in the scripts.</source>
            <target state="new">In the event that OS-level settings or Hadoop service configuration files were changed, you may want to restart HDInsight services so that they can pick up any OS-level settings, such as the environment variables set in the scripts.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to run a script action</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to run a script action</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>You can use Script Actions to customize HDInsight clusters by using the Azure portal, Azure PowerShell, or the HDInsight .NET SDK.</source>
            <target state="new">You can use Script Actions to customize HDInsight clusters by using the Azure portal, Azure PowerShell, or the HDInsight .NET SDK.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>For instructions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Script Action<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Script Action<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Custom script samples</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Custom script samples</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Microsoft provides sample scripts to install components on an HDInsight cluster.</source>
            <target state="new">Microsoft provides sample scripts to install components on an HDInsight cluster.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>The sample scripts and instructions on how to use them are available at the links below:</source>
            <target state="new">The sample scripts and instructions on how to use them are available at the links below:</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Hue on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Hue on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Spark on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Spark on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use R on HDInsight Hadoop clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use R on HDInsight Hadoop clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Solr on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Solr on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Giraph on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Install and use Giraph on HDInsight clusters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>The documents linked above are specific to Linux-based HDInsight clusters.</source>
            <target state="new">The documents linked above are specific to Linux-based HDInsight clusters.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>For a scripts that work with Windows-based HDInsight, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Script action development with HDInsight (Windows)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or use the links available at the top of each article.</source>
            <target state="new">For a scripts that work with Windows-based HDInsight, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Script action development with HDInsight (Windows)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or use the links available at the top of each article.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Troubleshooting</source>
            <target state="new">Troubleshooting</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>The following are errors you may encounter when using scripts you have developed:</source>
            <target state="new">The following are errors you may encounter when using scripts you have developed:</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Error<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>$'\r': command not found<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Error<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>$'\r': command not found<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Sometimes followed by <bpt id="2">&lt;code&gt;</bpt>syntax error: unexpected end of file<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Sometimes followed by <bpt id="2">&lt;code&gt;</bpt>syntax error: unexpected end of file<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Cause<ept id="1">&lt;/em&gt;</ept>: This error is caused when the lines in a script end with CRLF.</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Cause<ept id="1">&lt;/em&gt;</ept>: This error is caused when the lines in a script end with CRLF.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Unix systems expect only LF as the line ending.</source>
            <target state="new">Unix systems expect only LF as the line ending.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>This problem most often occurs when the script is authored on a Windows environment, as CRLF is a common line ending for many text editors on Windows.</source>
            <target state="new">This problem most often occurs when the script is authored on a Windows environment, as CRLF is a common line ending for many text editors on Windows.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Resolution<ept id="1">&lt;/em&gt;</ept>: If it is an option in your text editor, select Unix format or LF for the line ending.</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Resolution<ept id="1">&lt;/em&gt;</ept>: If it is an option in your text editor, select Unix format or LF for the line ending.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>You may also use the following commands on a Unix system to change the CRLF to an LF:</source>
            <target state="new">You may also use the following commands on a Unix system to change the CRLF to an LF:</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>The following commands are roughly equivalent in that they should change the CRLF line endings to LF.</source>
            <target state="new">The following commands are roughly equivalent in that they should change the CRLF line endings to LF.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Select one based on the utilities available on your system.</source>
            <target state="new">Select one based on the utilities available on your system.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Command</source>
            <target state="new">Command</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>Notes</source>
            <target state="new">Notes</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>unix2dos -b INFILE<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>unix2dos -b INFILE<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>The original file will be backed up with a .BAK extension</source>
            <target state="new">The original file will be backed up with a .BAK extension</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>tr -d '\r' &lt; INFILE &gt; OUTFILE<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>tr -d '\r' &lt; INFILE &gt; OUTFILE<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>OUTFILE will contain a version with only LF endings</source>
            <target state="new">OUTFILE will contain a version with only LF endings</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>perl -pi -e 's/\r\n/\n/g' INFILE<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>perl -pi -e 's/\r\n/\n/g' INFILE<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>This will modify the file directly without creating a new file</source>
            <target state="new">This will modify the file directly without creating a new file</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>sed 's/$'"/`echo \\\r`/" INFILE &gt; OUTFILE<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>sed 's/$'"/`echo \\\r`/" INFILE &gt; OUTFILE<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>OUTFILE will contain a version with only LF endings.</source>
            <target state="new">OUTFILE will contain a version with only LF endings.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Error<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>line 1: #!/usr/bin/env: No such file or directory<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Error<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;code&gt;</bpt>line 1: #!/usr/bin/env: No such file or directory<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Cause<ept id="1">&lt;/em&gt;</ept>: This error occurs when the script was saved as UTF-8 with a Byte Order Mark (BOM).</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Cause<ept id="1">&lt;/em&gt;</ept>: This error occurs when the script was saved as UTF-8 with a Byte Order Mark (BOM).</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Resolution<ept id="1">&lt;/em&gt;</ept>: Save the file either as ASCII, or as UTF-8 without a BOM.</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Resolution<ept id="1">&lt;/em&gt;</ept>: Save the file either as ASCII, or as UTF-8 without a BOM.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>You may also use the following command on a Linux or Unix system to create a new file without the BOM:</source>
            <target state="new">You may also use the following command on a Linux or Unix system to create a new file without the BOM:</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>For the above command, replace <bpt id="2">&lt;strong&gt;</bpt>INFILE<ept id="2">&lt;/strong&gt;</ept> with the file containing the BOM.</source>
            <target state="new">For the above command, replace <bpt id="2">&lt;strong&gt;</bpt>INFILE<ept id="2">&lt;/strong&gt;</ept> with the file containing the BOM.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>OUTFILE<ept id="1">&lt;/strong&gt;</ept> should be a new file name, which will contain the script without the BOM.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>OUTFILE<ept id="1">&lt;/strong&gt;</ept> should be a new file name, which will contain the script without the BOM.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>See also</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>See also</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using Script Action<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Customize HDInsight clusters using Script Action<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>