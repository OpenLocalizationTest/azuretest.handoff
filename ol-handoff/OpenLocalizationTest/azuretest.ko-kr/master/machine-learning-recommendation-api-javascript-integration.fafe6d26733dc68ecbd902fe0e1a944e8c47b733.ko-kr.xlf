<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 3:35:16 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8555222b4729aba40d4ee80b63434b46a98c4eb4</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Machine Learning Recommendations: JavaScript Integration | Microsoft Azure</source>
            <target state="new">Machine Learning Recommendations: JavaScript Integration | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Azure Machine Learning Recommendations - JavaScript Integration – documentation</source>
            <target state="new">Azure Machine Learning Recommendations - JavaScript Integration – documentation</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Azure Machine Learning Recommendations - JavaScript Integration</source>
            <target state="new">Azure Machine Learning Recommendations - JavaScript Integration</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This document depict how to integrate your site using JavaScript.</source>
            <target state="new">This document depict how to integrate your site using JavaScript.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The JavaScript enables you to send Data Acquisition events and to consume recommendations once you build a recommendation model.</source>
            <target state="new">The JavaScript enables you to send Data Acquisition events and to consume recommendations once you build a recommendation model.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>All operations done via JS can be also done from server side.</source>
            <target state="new">All operations done via JS can be also done from server side.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/machine-learning-free-trial.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/machine-learning-free-trial.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>1. General Overview</source>
            <target state="new">1. General Overview</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Integrating your site with Azure ML Recommendations consist on 2 Phases:</source>
            <target state="new">Integrating your site with Azure ML Recommendations consist on 2 Phases:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Send Events into Azure ML Recommendations.</source>
            <target state="new">Send Events into Azure ML Recommendations.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>This will enable to build a recommendation model.</source>
            <target state="new">This will enable to build a recommendation model.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Consume the recommendations.</source>
            <target state="new">Consume the recommendations.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>After the model is built you can consume the recommendations.</source>
            <target state="new">After the model is built you can consume the recommendations.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>(This document does not explain how to build a model, read the quick start guide to get more information on how).</source>
            <target state="new">(This document does not explain how to build a model, read the quick start guide to get more information on how).</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Phase I<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Phase I<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>In the first phase you insert into your html pages a small JavaScript library that enables the page to send events as they occur on the html page into Azure ML Recommendations servers (via Data Market):</source>
            <target state="new">In the first phase you insert into your html pages a small JavaScript library that enables the page to send events as they occur on the html page into Azure ML Recommendations servers (via Data Market):</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Drawing1<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Drawing1<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Phase II<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Phase II<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>In the second phase when you want to show the recommendations on the page you select one of the following options:</source>
            <target state="new">In the second phase when you want to show the recommendations on the page you select one of the following options:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Your server (on the phase of page rendering) calls Azure ML Recommendations Server (via Data Market) to get recommendations.</source>
            <target state="new">Your server (on the phase of page rendering) calls Azure ML Recommendations Server (via Data Market) to get recommendations.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The results include a list of items id.</source>
            <target state="new">The results include a list of items id.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Your server needs to enrich the results with the items Meta data (e.g. images, description) and send the created page to the browser.</source>
            <target state="new">Your server needs to enrich the results with the items Meta data (e.g. images, description) and send the created page to the browser.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Drawing2<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Drawing2<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The other option is to use the small JavaScript file from phase one to get a simple list of recommended items.</source>
            <target state="new">The other option is to use the small JavaScript file from phase one to get a simple list of recommended items.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The data received here is leaner than the one in the first option.</source>
            <target state="new">The data received here is leaner than the one in the first option.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Drawing3<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Drawing3<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>2. Prerequisites</source>
            <target state="new">2. Prerequisites</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Create a new model using the APIs.</source>
            <target state="new">Create a new model using the APIs.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>See the Quick start guide on how to do it.</source>
            <target state="new">See the Quick start guide on how to do it.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Encode your &lt;dataMarketUser&gt;:&lt;dataMarketKey&gt; with base64.</source>
            <target state="new">Encode your &lt;dataMarketUser&gt;:&lt;dataMarketKey&gt; with base64.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>(This will be used for the basic authentication to enable the JS code to call the APIs).</source>
            <target state="new">(This will be used for the basic authentication to enable the JS code to call the APIs).</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>3. Send Data Acquisition events using JavaScript</source>
            <target state="new">3. Send Data Acquisition events using JavaScript</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The following steps facilitate sending events:</source>
            <target state="new">The following steps facilitate sending events:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Include JQuery library in your code.</source>
            <target state="new">Include JQuery library in your code.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You can download it from nuget in the following URL.</source>
            <target state="new">You can download it from nuget in the following URL.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Include the Recommendations Java Script library from the following URL: http://1drv.ms/1Aoa1Zp</source>
            <target state="new">Include the Recommendations Java Script library from the following URL: http://1drv.ms/1Aoa1Zp</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Initialize Azure ML Recommendations library with the appropriate parameters.</source>
            <target state="new">Initialize Azure ML Recommendations library with the appropriate parameters.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Send the appropriate event.</source>
            <target state="new">Send the appropriate event.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>See detailed section below on all type of events (example of click event)</source>
            <target state="new">See detailed section below on all type of events (example of click event)</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>3.1. Limitations and Browser Support</source>
            <target state="new">3.1. Limitations and Browser Support</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>This is a reference implementation and it is given as is.</source>
            <target state="new">This is a reference implementation and it is given as is.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>It should support all major browsers.</source>
            <target state="new">It should support all major browsers.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>3.2. Type of Events</source>
            <target state="new">3.2. Type of Events</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>There are 5 types of event that the library supports: Click, Recommendation Click, Add to Shop Cart, Remove from Shop Cart and Purchase.</source>
            <target state="new">There are 5 types of event that the library supports: Click, Recommendation Click, Add to Shop Cart, Remove from Shop Cart and Purchase.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>There is an additional event that is used to set the user context called Login.</source>
            <target state="new">There is an additional event that is used to set the user context called Login.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>3.2.1. Click Event</source>
            <target state="new">3.2.1. Click Event</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>This event should be used any time a user clicked on an item.</source>
            <target state="new">This event should be used any time a user clicked on an item.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Usually when user clicks on an item a new page is opened with the item details; in this page this event should be triggered.</source>
            <target state="new">Usually when user clicks on an item a new page is opened with the item details; in this page this event should be triggered.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>event (string, mandatory) – “click”</source>
            <target state="new">event (string, mandatory) – “click”</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>item (string, mandatory) – Unique identifier of the item</source>
            <target state="new">item (string, mandatory) – Unique identifier of the item</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>itemName (string, optional) – the name of the item</source>
            <target state="new">itemName (string, optional) – the name of the item</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>itemDescription (string, optional) – the description of the item</source>
            <target state="new">itemDescription (string, optional) – the description of the item</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>itemCategory (string, optional) – the category of the item</source>
            <target state="new">itemCategory (string, optional) – the category of the item</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Or with optional data:</source>
            <target state="new">Or with optional data:</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>3.2.2. Recommendation Click Event</source>
            <target state="new">3.2.2. Recommendation Click Event</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>This event should be used any time a user clicked on an item that was received from Azure ML Recommendations as a recommended item.</source>
            <target state="new">This event should be used any time a user clicked on an item that was received from Azure ML Recommendations as a recommended item.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Usually when user clicks on an item a new page is opened with the item details; in this page this event should be triggered.</source>
            <target state="new">Usually when user clicks on an item a new page is opened with the item details; in this page this event should be triggered.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>event (string, mandatory) – “recommendationclick”</source>
            <target state="new">event (string, mandatory) – “recommendationclick”</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>item (string, mandatory) – Unique identifier of the item</source>
            <target state="new">item (string, mandatory) – Unique identifier of the item</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>itemName (string, optional) – the name of the item</source>
            <target state="new">itemName (string, optional) – the name of the item</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>itemDescription (string, optional) – the description of the item</source>
            <target state="new">itemDescription (string, optional) – the description of the item</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>itemCategory (string, optional) – the category of the item</source>
            <target state="new">itemCategory (string, optional) – the category of the item</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>seeds (string array, optional) – the seeds that generated the recommendation query.</source>
            <target state="new">seeds (string array, optional) – the seeds that generated the recommendation query.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>recoList (string array, optional) – the result of the recommendation request that generated the item that was clicked.</source>
            <target state="new">recoList (string array, optional) – the result of the recommendation request that generated the item that was clicked.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Or with optional data:</source>
            <target state="new">Or with optional data:</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>3.2.3. Add Shopping Cart Event</source>
            <target state="new">3.2.3. Add Shopping Cart Event</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>This event should be used when the user add an item to the shopping cart.</source>
            <target state="new">This event should be used when the user add an item to the shopping cart.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>event (string, mandatory) – “addshopcart”</source>
            <target state="new">event (string, mandatory) – “addshopcart”</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>item (string, mandatory) – Unique identifier of the item</source>
            <target state="new">item (string, mandatory) – Unique identifier of the item</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>itemName (string, optional) – the name of the item</source>
            <target state="new">itemName (string, optional) – the name of the item</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>itemDescription (string, optional) – the description of the item</source>
            <target state="new">itemDescription (string, optional) – the description of the item</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>itemCategory (string, optional) – the category of the item</source>
            <target state="new">itemCategory (string, optional) – the category of the item</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>3.2.4. Remove Shopping Cart Event</source>
            <target state="new">3.2.4. Remove Shopping Cart Event</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>This event should be used when the user removes an item to the shopping cart.</source>
            <target state="new">This event should be used when the user removes an item to the shopping cart.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>event (string, mandatory) – “removeshopcart”</source>
            <target state="new">event (string, mandatory) – “removeshopcart”</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>item (string, mandatory) – Unique identifier of the item</source>
            <target state="new">item (string, mandatory) – Unique identifier of the item</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>itemName (string, optional) – the name of the item</source>
            <target state="new">itemName (string, optional) – the name of the item</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>itemDescription (string, optional) – the description of the item</source>
            <target state="new">itemDescription (string, optional) – the description of the item</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>itemCategory (string, optional) – the category of the item</source>
            <target state="new">itemCategory (string, optional) – the category of the item</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>3.2.5. Purchase Event</source>
            <target state="new">3.2.5. Purchase Event</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>This event should be used when the user purchased his shopping cart.</source>
            <target state="new">This event should be used when the user purchased his shopping cart.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>event (string) – “purchase”</source>
            <target state="new">event (string) – “purchase”</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>items ( Purchased[] ) – Array holding an entry for each item purchased.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new">items ( Purchased[] ) – Array holding an entry for each item purchased.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Purchased format:</source>
            <target state="new">Purchased format:</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>item (string) - Unique identifier of the item.</source>
            <target state="new">item (string) - Unique identifier of the item.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>count (int or string) – number of items that were purchased.</source>
            <target state="new">count (int or string) – number of items that were purchased.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>price (float or string) – optional field – the price of the item.</source>
            <target state="new">price (float or string) – optional field – the price of the item.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>The example below shows purchase of 3 items (33, 34, 35), two with all fields populated (item, count, price) and one (item 34) without a price.</source>
            <target state="new">The example below shows purchase of 3 items (33, 34, 35), two with all fields populated (item, count, price) and one (item 34) without a price.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>3.2.6. User Login Event</source>
            <target state="new">3.2.6. User Login Event</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Azure ML Recommendations Event library creates and use a cookie in order to identify events that came from the same browser.</source>
            <target state="new">Azure ML Recommendations Event library creates and use a cookie in order to identify events that came from the same browser.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>In order to improve the model results Azure ML Recommendations enables to set a user unique identification that will override the cookie usage.</source>
            <target state="new">In order to improve the model results Azure ML Recommendations enables to set a user unique identification that will override the cookie usage.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>This event should be used after the user login to your site.</source>
            <target state="new">This event should be used after the user login to your site.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>event (string) – “userlogin”</source>
            <target state="new">event (string) – “userlogin”</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>user (string) – unique identification of the user.</source>
            <target state="new">user (string) – unique identification of the user.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>if (typeof AzureMLRecommendationsEvent=="undefined") { AzureMLRecommendationsEvent = []; }</source>
            <target state="new">if (typeof AzureMLRecommendationsEvent=="undefined") { AzureMLRecommendationsEvent = []; }</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>AzureMLRecommendationsEvent.push({event: "userlogin", user: “ABCD10AA” });</source>
            <target state="new">AzureMLRecommendationsEvent.push({event: "userlogin", user: “ABCD10AA” });</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>4. Consume Recommendations via JavaScript</source>
            <target state="new">4. Consume Recommendations via JavaScript</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>The code that consumes the recommendation is triggered by some JavaScript event by the client’s webpage.</source>
            <target state="new">The code that consumes the recommendation is triggered by some JavaScript event by the client’s webpage.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>The recommendation response includes the recommended items Ids, their names and their ratings.</source>
            <target state="new">The recommendation response includes the recommended items Ids, their names and their ratings.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>It’s best to use this option only for a list display of the recommended items – more complex handling (such as adding the item’s metadata) should be done on the server side integration.</source>
            <target state="new">It’s best to use this option only for a list display of the recommended items – more complex handling (such as adding the item’s metadata) should be done on the server side integration.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>4.1 Consume Recommendations</source>
            <target state="new">4.1 Consume Recommendations</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>To consume recommendations you need to include the required JavaScript libraries in your page and to call AzureMLRecommendationsStart.</source>
            <target state="new">To consume recommendations you need to include the required JavaScript libraries in your page and to call AzureMLRecommendationsStart.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>See section 2.</source>
            <target state="new">See section 2.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>To consume recommendations for one or more items you need to call a method called: AzureMLRecommendationsGetI2IRecommendation.</source>
            <target state="new">To consume recommendations for one or more items you need to call a method called: AzureMLRecommendationsGetI2IRecommendation.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Parameters:</source>
            <target state="new">Parameters:</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>items (array of strings) – One or more items to get recommendations for.</source>
            <target state="new">items (array of strings) – One or more items to get recommendations for.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>If you consume an Fbt build then you can set here only one item.</source>
            <target state="new">If you consume an Fbt build then you can set here only one item.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>numberOfResults (int) – number of required results.</source>
            <target state="new">numberOfResults (int) – number of required results.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>includeMetadata (boolean, optional) – if set to ‘true’ indicates that the metadata field must be populated in the result.</source>
            <target state="new">includeMetadata (boolean, optional) – if set to ‘true’ indicates that the metadata field must be populated in the result.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Processing function – a function that will handle the recommendations returned.</source>
            <target state="new">Processing function – a function that will handle the recommendations returned.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>The data is returned as an array of:</source>
            <target state="new">The data is returned as an array of:</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Item – item unique id</source>
            <target state="new">Item – item unique id</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>name – item name (if exist in catalog)</source>
            <target state="new">name – item name (if exist in catalog)</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>rating – recommendation rating</source>
            <target state="new">rating – recommendation rating</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>metadata – a string that represents the metadata of the item</source>
            <target state="new">metadata – a string that represents the metadata of the item</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Example: The following code requests 8 recommendations for item "64f6eb0d-947a-4c18-a16c-888da9e228ba" (and by not specifying includeMetadata – it implicitly says that no metadata is required), it then concatenate the results into a buffer.</source>
            <target state="new">Example: The following code requests 8 recommendations for item "64f6eb0d-947a-4c18-a16c-888da9e228ba" (and by not specifying includeMetadata – it implicitly says that no metadata is required), it then concatenate the results into a buffer.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>