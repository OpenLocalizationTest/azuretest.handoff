<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 4:04:44 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60704278f5ea8be516187b50df84e4c693e579c0</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Handle conflicts with offline data in universal Windows apps | Microsoft Azure</source>
            <target state="new">Handle conflicts with offline data in universal Windows apps | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Mobile Services handle conflicts when syncing offline data in your universal Windows application</source>
            <target state="new">Learn how to use Azure Mobile Services handle conflicts when syncing offline data in your universal Windows application</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Handling conflicts with offline data sync in Mobile Services</source>
            <target state="new">Handling conflicts with offline data sync in Mobile Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline-conflicts.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline-conflicts.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This topic shows you how to synchronize data and handle conflicts when using the offline capabilities of Azure Mobile Services.</source>
            <target state="new">This topic shows you how to synchronize data and handle conflicts when using the offline capabilities of Azure Mobile Services.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>If you prefer to watch a video, the clip below follows the same steps as this tutorial.</source>
            <target state="new">If you prefer to watch a video, the clip below follows the same steps as this tutorial.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><ph id="1">&lt;video [AZURE.VIDEO build-offline-apps-azure-mobile-services]/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;video [AZURE.VIDEO build-offline-apps-azure-mobile-services]/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>In this tutorial, you download a universal Windows C# solution for an app that supports handling offline synchronization conflicts.</source>
            <target state="new">In this tutorial, you download a universal Windows C# solution for an app that supports handling offline synchronization conflicts.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>You will integrate a mobile service with the app, and then run the Windows Store 8.1 and Windows Phone 8.1 clients to generate a sync conflict and resolve it.</source>
            <target state="new">You will integrate a mobile service with the app, and then run the Windows Store 8.1 and Windows Phone 8.1 clients to generate a sync conflict and resolve it.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>This tutorial builds on the steps and the sample app from the previous tutorial [Get started with offline data].</source>
            <target state="new">This tutorial builds on the steps and the sample app from the previous tutorial [Get started with offline data].</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Before you begin this tutorial, you should first complete [Get started with offline data].</source>
            <target state="new">Before you begin this tutorial, you should first complete [Get started with offline data].</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>This tutorial requires Visual Studio 2013 running on Windows 8.1.</source>
            <target state="new">This tutorial requires Visual Studio 2013 running on Windows 8.1.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Download the sample project</source>
            <target state="new">Download the sample project</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>This tutorial is a walkthrough of how the [Todo Offline Mobile Services sample] handles sync conflicts between the local offline store and the Mobile Service database in Azure.</source>
            <target state="new">This tutorial is a walkthrough of how the [Todo Offline Mobile Services sample] handles sync conflicts between the local offline store and the Mobile Service database in Azure.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Download the zip file for the [Mobile Services Samples GitHub Repository] and extract it to a working directory.</source>
            <target state="new">Download the zip file for the [Mobile Services Samples GitHub Repository] and extract it to a working directory.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>If you haven't already installed SQLite for Windows 8.1 and Windows Phone 8.1 as mentioned in the [Get started with offline data] tutorial, install both runtimes.</source>
            <target state="new">If you haven't already installed SQLite for Windows 8.1 and Windows Phone 8.1 as mentioned in the [Get started with offline data] tutorial, install both runtimes.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>In Visual Studio 2013, open the <bpt id="2">&lt;em&gt;</bpt>mobile-services-samples\TodoOffline\WindowsUniversal\TodoOffline-Universal.sln<ept id="2">&lt;/em&gt;</ept> solution file.</source>
            <target state="new">In Visual Studio 2013, open the <bpt id="2">&lt;em&gt;</bpt>mobile-services-samples\TodoOffline\WindowsUniversal\TodoOffline-Universal.sln<ept id="2">&lt;/em&gt;</ept> solution file.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the project.</source>
            <target state="new">Press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild and run the project.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Verify the NuGet packages are restored and the references are correctly set.</source>
            <target state="new">Verify the NuGet packages are restored and the references are correctly set.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>You may need to delete any old references to the SQLite runtime and replace them with the updated reference as mentioned in the [Get started with offline data] tutorial.</source>
            <target state="new">You may need to delete any old references to the SQLite runtime and replace them with the updated reference as mentioned in the [Get started with offline data] tutorial.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept> to add some todo items to the local store.</source>
            <target state="new">In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept> to add some todo items to the local store.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Then close the app.</source>
            <target state="new">Then close the app.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Note that the app is not yet connected to any mobile service, so the buttons <bpt id="2">&lt;strong&gt;</bpt>Push<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Pull<ept id="4">&lt;/strong&gt;</ept> will throw exceptions.</source>
            <target state="new">Note that the app is not yet connected to any mobile service, so the buttons <bpt id="2">&lt;strong&gt;</bpt>Push<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Pull<ept id="4">&lt;/strong&gt;</ept> will throw exceptions.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Test the app against your  mobile service</source>
            <target state="new">Test the app against your  mobile service</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Now it's time to test the app against Mobile Services.</source>
            <target state="new">Now it's time to test the app against Mobile Services.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In the Azure Management Portal, find your mobile service's application key by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Keys<ept id="2">&lt;/strong&gt;</ept> on the command bar of the <bpt id="4">&lt;strong&gt;</bpt>Dashboard<ept id="4">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">In the Azure Management Portal, find your mobile service's application key by clicking <bpt id="2">&lt;strong&gt;</bpt>Manage Keys<ept id="2">&lt;/strong&gt;</ept> on the command bar of the <bpt id="4">&lt;strong&gt;</bpt>Dashboard<ept id="4">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Copy the <bpt id="2">&lt;strong&gt;</bpt>Application Key<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Copy the <bpt id="2">&lt;strong&gt;</bpt>Application Key<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>In Solution Explorer for Visual Studio, open the App.xaml.cs file in the client sample project.</source>
            <target state="new">In Solution Explorer for Visual Studio, open the App.xaml.cs file in the client sample project.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Change the initialization of the <bpt id="2">&lt;strong&gt;</bpt>MobileServiceClient<ept id="2">&lt;/strong&gt;</ept> to use your mobile service URL and application key:</source>
            <target state="new">Change the initialization of the <bpt id="2">&lt;strong&gt;</bpt>MobileServiceClient<ept id="2">&lt;/strong&gt;</ept> to use your mobile service URL and application key:</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to build and run the app again.</source>
            <target state="new">In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to build and run the app again.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Update the data in the backend to create a conflict</source>
            <target state="new">Update the data in the backend to create a conflict</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>In a real world scenario, a sync conflict would occur when one app pushes updates to a record in the database, and then another app tries to push an update to the same record using an outdated version field in that record.</source>
            <target state="new">In a real world scenario, a sync conflict would occur when one app pushes updates to a record in the database, and then another app tries to push an update to the same record using an outdated version field in that record.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>If you recall from the [Get started with offline data], the version system property is required to support the offline syncing features.</source>
            <target state="new">If you recall from the [Get started with offline data], the version system property is required to support the offline syncing features.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>This version information is examined with each database update.</source>
            <target state="new">This version information is examined with each database update.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>If an instance of the app tries to update a record using an outdated version, a conflict will occur and be caught as a <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> in the app.</source>
            <target state="new">If an instance of the app tries to update a record using an outdated version, a conflict will occur and be caught as a <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> in the app.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>If the app doesn't catch the <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> then a <bpt id="4">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="4">&lt;/code&gt;</ept> will end up being thrown describing how many sync errors were encountered.</source>
            <target state="new">If the app doesn't catch the <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> then a <bpt id="4">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="4">&lt;/code&gt;</ept> will end up being thrown describing how many sync errors were encountered.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>To support synchronization of deleted records with offline data sync, you should enable <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Soft Delete<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To support synchronization of deleted records with offline data sync, you should enable <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Soft Delete<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Otherwise, you have to manually remove records in the local store, or call <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable::PurgeAsync()<ept id="2">&lt;/code&gt;</ept> to purge the local store.</source>
            <target state="new">Otherwise, you have to manually remove records in the local store, or call <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncTable::PurgeAsync()<ept id="2">&lt;/code&gt;</ept> to purge the local store.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>The following steps show the Windows Phone 8.1 and Windows Store 8.1 clients running at the same time to cause and resolve a conflict using the sample.</source>
            <target state="new">The following steps show the Windows Phone 8.1 and Windows Store 8.1 clients running at the same time to cause and resolve a conflict using the sample.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In Visual Studio, right click the Windows Phone 8.1 project and click <bpt id="2">&lt;strong&gt;</bpt>Set as Startup Project<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, right click the Windows Phone 8.1 project and click <bpt id="2">&lt;strong&gt;</bpt>Set as Startup Project<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Then press <bpt id="2">&lt;strong&gt;</bpt>Ctrl+F5<ept id="2">&lt;/strong&gt;</ept> keys to run the Windows Phone 8.1 client without debugging.</source>
            <target state="new">Then press <bpt id="2">&lt;strong&gt;</bpt>Ctrl+F5<ept id="2">&lt;/strong&gt;</ept> keys to run the Windows Phone 8.1 client without debugging.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Once you have the Windows Phone 8.1 client up and running in the emulator, click the <bpt id="2">&lt;strong&gt;</bpt>Pull<ept id="2">&lt;/strong&gt;</ept> button to sync the local store with the current state of the database.</source>
            <target state="new">Once you have the Windows Phone 8.1 client up and running in the emulator, click the <bpt id="2">&lt;strong&gt;</bpt>Pull<ept id="2">&lt;/strong&gt;</ept> button to sync the local store with the current state of the database.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>In Visual Studio, right click the Windows 8.1 runtime project and click <bpt id="2">&lt;strong&gt;</bpt>Set as Startup Project<ept id="2">&lt;/strong&gt;</ept> to set it back to the start up project.</source>
            <target state="new">In Visual Studio, right click the Windows 8.1 runtime project and click <bpt id="2">&lt;strong&gt;</bpt>Set as Startup Project<ept id="2">&lt;/strong&gt;</ept> to set it back to the start up project.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to run it.</source>
            <target state="new">Then press <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> to run it.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Once you have the Windows Store 8.1 client up and running, click the <bpt id="2">&lt;strong&gt;</bpt>Pull<ept id="2">&lt;/strong&gt;</ept> button to sync the local store with the current state of the database.</source>
            <target state="new">Once you have the Windows Store 8.1 client up and running, click the <bpt id="2">&lt;strong&gt;</bpt>Pull<ept id="2">&lt;/strong&gt;</ept> button to sync the local store with the current state of the database.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>At this point point both clients are synchronized with the database.</source>
            <target state="new">At this point point both clients are synchronized with the database.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The code for both clients are also using incremental sync, so that they will only sync incomplete todo items.</source>
            <target state="new">The code for both clients are also using incremental sync, so that they will only sync incomplete todo items.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Completed todo items will be ignored.</source>
            <target state="new">Completed todo items will be ignored.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Choose one of the items and edit the text of the same item in both clients to a different value.</source>
            <target state="new">Choose one of the items and edit the text of the same item in both clients to a different value.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Push<ept id="2">&lt;/strong&gt;</ept> button to sync both changes with the database on the server.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Push<ept id="2">&lt;/strong&gt;</ept> button to sync both changes with the database on the server.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The client whose push was executing last encounters the conflict and allows the user to decide which value to commit to the database.</source>
            <target state="new">The client whose push was executing last encounters the conflict and allows the user to decide which value to commit to the database.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>The exception provides the correct version value which is used for resolving the conflict.</source>
            <target state="new">The exception provides the correct version value which is used for resolving the conflict.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Review of the code for handling sync conflicts</source>
            <target state="new">Review of the code for handling sync conflicts</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>In order to use the offline features for Mobile Services, you must include the version column in both your local database and your data transfer object.</source>
            <target state="new">In order to use the offline features for Mobile Services, you must include the version column in both your local database and your data transfer object.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>This is accomplished by updating the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> class the following member:</source>
            <target state="new">This is accomplished by updating the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> class the following member:</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>__version<ept id="2">&lt;/code&gt;</ept> column is included in the local database in the  <bpt id="4">&lt;code&gt;</bpt>OnNavigatedTo()<ept id="4">&lt;/code&gt;</ept> method when the <bpt id="6">&lt;code&gt;</bpt>TodoItem<ept id="6">&lt;/code&gt;</ept> class is used to define the local store.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>__version<ept id="2">&lt;/code&gt;</ept> column is included in the local database in the  <bpt id="4">&lt;code&gt;</bpt>OnNavigatedTo()<ept id="4">&lt;/code&gt;</ept> method when the <bpt id="6">&lt;code&gt;</bpt>TodoItem<ept id="6">&lt;/code&gt;</ept> class is used to define the local store.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>To handle offline sync conflicts in your code, you create a class that implements <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncHandler<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To handle offline sync conflicts in your code, you create a class that implements <bpt id="2">&lt;code&gt;</bpt>IMobileServiceSyncHandler<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Pass an object of this type in the call to <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.InitializeAsync()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Pass an object of this type in the call to <bpt id="2">&lt;code&gt;</bpt>MobileServiceClient.SyncContext.InitializeAsync()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>This also occurs in the  <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo()<ept id="2">&lt;/code&gt;</ept> method of the sample.</source>
            <target state="new">This also occurs in the  <bpt id="2">&lt;code&gt;</bpt>OnNavigatedTo()<ept id="2">&lt;/code&gt;</ept> method of the sample.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>The class <bpt id="2">&lt;code&gt;</bpt>SyncHandler<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>SyncHandler.cs<ept id="4">&lt;/strong&gt;</ept> implements <bpt id="6">&lt;code&gt;</bpt>IMobileServiceSyncHandler<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">The class <bpt id="2">&lt;code&gt;</bpt>SyncHandler<ept id="2">&lt;/code&gt;</ept> in <bpt id="4">&lt;strong&gt;</bpt>SyncHandler.cs<ept id="4">&lt;/strong&gt;</ept> implements <bpt id="6">&lt;code&gt;</bpt>IMobileServiceSyncHandler<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The method <bpt id="2">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="2">&lt;/code&gt;</ept> is called when each push operation is sent to the server.</source>
            <target state="new">The method <bpt id="2">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="2">&lt;/code&gt;</ept> is called when each push operation is sent to the server.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>If an exception of type <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> is thrown, this means that there is a conflict between the local and remote versions of an item.</source>
            <target state="new">If an exception of type <bpt id="2">&lt;code&gt;</bpt>MobileServicePreconditionFailedException<ept id="2">&lt;/code&gt;</ept> is thrown, this means that there is a conflict between the local and remote versions of an item.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>To resolve conflicts in favor of the local item, you should simply retry the operation.</source>
            <target state="new">To resolve conflicts in favor of the local item, you should simply retry the operation.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Once a conflict has occurred, the local item version will be updated to match the server version, so executing the operation again will overwrite the server changes with the local changes:</source>
            <target state="new">Once a conflict has occurred, the local item version will be updated to match the server version, so executing the operation again will overwrite the server changes with the local changes:</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>To resolve conflicts in favor of the server item, simply return from the <bpt id="2">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To resolve conflicts in favor of the server item, simply return from the <bpt id="2">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>The local version of the object will be discarded and replaced with the value from the server.</source>
            <target state="new">The local version of the object will be discarded and replaced with the value from the server.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>To stop the push operation (but retain the queued changes), use the method <bpt id="2">&lt;code&gt;</bpt>AbortPush()<ept id="2">&lt;/code&gt;</ept>:</source>
            <target state="new">To stop the push operation (but retain the queued changes), use the method <bpt id="2">&lt;code&gt;</bpt>AbortPush()<ept id="2">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>This will stop the current push operation but will keep all pending changes, including the current operation if <bpt id="2">&lt;code&gt;</bpt>AbortPush<ept id="2">&lt;/code&gt;</ept> is called from <bpt id="4">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">This will stop the current push operation but will keep all pending changes, including the current operation if <bpt id="2">&lt;code&gt;</bpt>AbortPush<ept id="2">&lt;/code&gt;</ept> is called from <bpt id="4">&lt;code&gt;</bpt>ExecuteTableOperationAsync<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>The next time that <bpt id="2">&lt;code&gt;</bpt>PushAsync()<ept id="2">&lt;/code&gt;</ept> is called, these changes will be sent to the server.</source>
            <target state="new">The next time that <bpt id="2">&lt;code&gt;</bpt>PushAsync()<ept id="2">&lt;/code&gt;</ept> is called, these changes will be sent to the server.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>When a push is canceled, <bpt id="2">&lt;code&gt;</bpt>PushAsync<ept id="2">&lt;/code&gt;</ept> will throw a <bpt id="4">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="4">&lt;/code&gt;</ept>, and the exception property <bpt id="6">&lt;code&gt;</bpt>PushResult.Status<ept id="6">&lt;/code&gt;</ept> will have the value <bpt id="8">&lt;code&gt;</bpt>MobileServicePushStatus.CancelledByOperation<ept id="8">&lt;/code&gt;</ept>.</source>
            <target state="new">When a push is canceled, <bpt id="2">&lt;code&gt;</bpt>PushAsync<ept id="2">&lt;/code&gt;</ept> will throw a <bpt id="4">&lt;code&gt;</bpt>MobileServicePushFailedException<ept id="4">&lt;/code&gt;</ept>, and the exception property <bpt id="6">&lt;code&gt;</bpt>PushResult.Status<ept id="6">&lt;/code&gt;</ept> will have the value <bpt id="8">&lt;code&gt;</bpt>MobileServicePushStatus.CancelledByOperation<ept id="8">&lt;/code&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>