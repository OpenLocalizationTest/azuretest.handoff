<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 5:15:09 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca4b3132b5b965c27e2b546ff9563252e20d6509</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Queue storage from .NET | Microsoft Azure</source>
            <target state="new">How to use Queue storage from .NET | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Microsoft Azure Queue storage to create and delete queues and insert, peek, get, and delete queue messages.</source>
            <target state="new">Learn how to use Microsoft Azure Queue storage to create and delete queues and insert, peek, get, and delete queue messages.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Queue storage from .NET</source>
            <target state="new">How to use Queue storage from .NET</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-queue-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-queue-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This guide will show you how to perform common scenarios using the</source>
            <target state="new">This guide will show you how to perform common scenarios using the</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Azure Queue storage service.</source>
            <target state="new">Azure Queue storage service.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The samples are written in C\# code</source>
            <target state="new">The samples are written in C\# code</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>and use the Azure Storage Client for .NET.</source>
            <target state="new">and use the Azure Storage Client for .NET.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>inserting<ept id="2">&lt;/strong&gt;</ept>,</source>
            <target state="new">The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>inserting<ept id="2">&lt;/strong&gt;</ept>,</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>peeking<ept id="1">&lt;/strong&gt;</ept>, <bpt id="3">&lt;strong&gt;</bpt>getting<ept id="3">&lt;/strong&gt;</ept>, and <bpt id="5">&lt;strong&gt;</bpt>deleting<ept id="5">&lt;/strong&gt;</ept> queue messages, as well as</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>peeking<ept id="1">&lt;/strong&gt;</ept>, <bpt id="3">&lt;strong&gt;</bpt>getting<ept id="3">&lt;/strong&gt;</ept>, and <bpt id="5">&lt;strong&gt;</bpt>deleting<ept id="5">&lt;/strong&gt;</ept> queue messages, as well as</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>creating and deleting queues<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>creating and deleting queues<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-dotnet-client-library-version-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-dotnet-client-library-version-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-queue-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-queue-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-configure-connection-string-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-configure-connection-string-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Programmatically access Queue storage</source>
            <target state="new">Programmatically access Queue storage</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-dotnet-obtain-assembly.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-dotnet-obtain-assembly.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Namespace declarations</source>
            <target state="new">Namespace declarations</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Add the following code namespace declarations to the top of any C\# file</source>
            <target state="new">Add the following code namespace declarations to the top of any C\# file</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>in which you wish to programmatically access Azure Storage:</source>
            <target state="new">in which you wish to programmatically access Azure Storage:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Make sure you reference the <bpt id="2">&lt;code&gt;</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="2">&lt;/code&gt;</ept> assembly.</source>
            <target state="new">Make sure you reference the <bpt id="2">&lt;code&gt;</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="2">&lt;/code&gt;</ept> assembly.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-dotnet-retrieve-conn-string.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-dotnet-retrieve-conn-string.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Create a queue</source>
            <target state="new">Create a queue</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for queues.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for queues.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>All code in</source>
            <target state="new">All code in</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>this guide uses a storage connection string stored in the Azure</source>
            <target state="new">this guide uses a storage connection string stored in the Azure</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>application's service configuration.</source>
            <target state="new">application's service configuration.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>There are also other ways to create</source>
            <target state="new">There are also other ways to create</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>CloudStorageAccount[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>CloudStorageAccount[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>documentation for details.</source>
            <target state="new">documentation for details.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>queueClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the queue you want</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>queueClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the queue you want</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>to use.</source>
            <target state="new">to use.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>You can create the queue if it doesn't exist.</source>
            <target state="new">You can create the queue if it doesn't exist.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Insert a message into a queue</source>
            <target state="new">Insert a message into a queue</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>To insert a message into an existing queue, first create a new</source>
            <target state="new">To insert a message into an existing queue, first create a new</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Next, call the <bpt id="2">&lt;strong&gt;</bpt>AddMessage<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">Next, call the <bpt id="2">&lt;strong&gt;</bpt>AddMessage<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>A</source>
            <target state="new">A</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="1">&lt;/strong&gt;</ept> can be created from either a string (in UTF-8</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="1">&lt;/strong&gt;</ept> can be created from either a string (in UTF-8</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>format) or a <bpt id="2">&lt;strong&gt;</bpt>byte<ept id="2">&lt;/strong&gt;</ept> array.</source>
            <target state="new">format) or a <bpt id="2">&lt;strong&gt;</bpt>byte<ept id="2">&lt;/strong&gt;</ept> array.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Here is code which creates a queue (if it</source>
            <target state="new">Here is code which creates a queue (if it</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>doesn't exist) and inserts the message 'Hello, World':</source>
            <target state="new">doesn't exist) and inserts the message 'Hello, World':</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Peek at the next message</source>
            <target state="new">Peek at the next message</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>You can peek at the message in the front of a queue without removing it</source>
            <target state="new">You can peek at the message in the front of a queue without removing it</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>PeekMessage<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>PeekMessage<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Change the contents of a queued message</source>
            <target state="new">Change the contents of a queued message</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>You can change the contents of a message in-place in the queue.</source>
            <target state="new">You can change the contents of a message in-place in the queue.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>If the</source>
            <target state="new">If the</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>message represents a work task, you could use this feature to update the</source>
            <target state="new">message represents a work task, you could use this feature to update the</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>status of the work task.</source>
            <target state="new">status of the work task.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>The following code updates the queue message</source>
            <target state="new">The following code updates the queue message</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>with new contents, and sets the visibility timeout to extend another 60</source>
            <target state="new">with new contents, and sets the visibility timeout to extend another 60</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>seconds.</source>
            <target state="new">seconds.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>This saves the state of work associated with the message, and</source>
            <target state="new">This saves the state of work associated with the message, and</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>gives the client another minute to continue working on the message.</source>
            <target state="new">gives the client another minute to continue working on the message.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>You</source>
            <target state="new">You</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>could use this technique to track multi-step workflows on queue</source>
            <target state="new">could use this technique to track multi-step workflows on queue</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>messages, without having to start over from the beginning if a</source>
            <target state="new">messages, without having to start over from the beginning if a</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>processing step fails due to hardware or software failure.</source>
            <target state="new">processing step fails due to hardware or software failure.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Typically,</source>
            <target state="new">Typically,</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>you would keep a retry count as well, and if the message is retried more</source>
            <target state="new">you would keep a retry count as well, and if the message is retried more</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>than <bpt id="2">&lt;em&gt;</bpt>n<ept id="2">&lt;/em&gt;</ept> times, you would delete it.</source>
            <target state="new">than <bpt id="2">&lt;em&gt;</bpt>n<ept id="2">&lt;/em&gt;</ept> times, you would delete it.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>This protects against a message</source>
            <target state="new">This protects against a message</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>that triggers an application error each time it is processed.</source>
            <target state="new">that triggers an application error each time it is processed.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>De-queue the next message</source>
            <target state="new">De-queue the next message</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Your code de-queues a message from a queue in two steps.</source>
            <target state="new">Your code de-queues a message from a queue in two steps.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>When you call</source>
            <target state="new">When you call</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>GetMessage<ept id="1">&lt;/strong&gt;</ept>, you get the next message in a queue.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>GetMessage<ept id="1">&lt;/strong&gt;</ept>, you get the next message in a queue.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>A message returned</source>
            <target state="new">A message returned</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>from <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages</source>
            <target state="new">from <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>from this queue.</source>
            <target state="new">from this queue.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>By default, this message stays invisible for 30</source>
            <target state="new">By default, this message stays invisible for 30</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>seconds.</source>
            <target state="new">seconds.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>To finish removing the message from the queue, you must also</source>
            <target state="new">To finish removing the message from the queue, you must also</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>call <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">call <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>This two-step process of removing a message</source>
            <target state="new">This two-step process of removing a message</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>assures that if your code fails to process a message due to hardware or</source>
            <target state="new">assures that if your code fails to process a message due to hardware or</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>software failure, another instance of your code can get the same message</source>
            <target state="new">software failure, another instance of your code can get the same message</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>and try again.</source>
            <target state="new">and try again.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Your code calls <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept> right after the message</source>
            <target state="new">Your code calls <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept> right after the message</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>has been processed.</source>
            <target state="new">has been processed.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Use Async-Await pattern with common Queue storage APIs</source>
            <target state="new">Use Async-Await pattern with common Queue storage APIs</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>This example shows how to use the Async-Await pattern with common Queue storage APIs.</source>
            <target state="new">This example shows how to use the Async-Await pattern with common Queue storage APIs.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The sample calls the asynchronous version of each of the given methods, as indicated by the <bpt id="2">&lt;em&gt;</bpt>Async<ept id="2">&lt;/em&gt;</ept> suffix of each method.</source>
            <target state="new">The sample calls the asynchronous version of each of the given methods, as indicated by the <bpt id="2">&lt;em&gt;</bpt>Async<ept id="2">&lt;/em&gt;</ept> suffix of each method.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>When an async method is used, the async-await pattern suspends local execution until the call completes.</source>
            <target state="new">When an async method is used, the async-await pattern suspends local execution until the call completes.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>This behavior allows the current thread to do other work, which helps avoid performance bottlenecks and improves the overall responsiveness of your application.</source>
            <target state="new">This behavior allows the current thread to do other work, which helps avoid performance bottlenecks and improves the overall responsiveness of your application.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>For more details on using the Async-Await pattern in .NET see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Async and Await (C# and Visual Basic)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For more details on using the Async-Await pattern in .NET see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Async and Await (C# and Visual Basic)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Leverage additional options for de-queuing messages</source>
            <target state="new">Leverage additional options for de-queuing messages</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>There are two ways you can customize message retrieval from a queue.</source>
            <target state="new">There are two ways you can customize message retrieval from a queue.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>First, you can get a batch of messages (up to 32).</source>
            <target state="new">First, you can get a batch of messages (up to 32).</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Second, you can set a</source>
            <target state="new">Second, you can set a</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>longer or shorter invisibility timeout, allowing your code more or less</source>
            <target state="new">longer or shorter invisibility timeout, allowing your code more or less</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>time to fully process each message.</source>
            <target state="new">time to fully process each message.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>The following code example uses the</source>
            <target state="new">The following code example uses the</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>GetMessages<ept id="1">&lt;/strong&gt;</ept> method to get 20 messages in one call.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>GetMessages<ept id="1">&lt;/strong&gt;</ept> method to get 20 messages in one call.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Then it processes</source>
            <target state="new">Then it processes</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>each message using a <bpt id="2">&lt;strong&gt;</bpt>foreach<ept id="2">&lt;/strong&gt;</ept> loop.</source>
            <target state="new">each message using a <bpt id="2">&lt;strong&gt;</bpt>foreach<ept id="2">&lt;/strong&gt;</ept> loop.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>It also sets the invisibility</source>
            <target state="new">It also sets the invisibility</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>timeout to five minutes for each message.</source>
            <target state="new">timeout to five minutes for each message.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Note that the 5 minutes starts</source>
            <target state="new">Note that the 5 minutes starts</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>for all messages at the same time, so after 5 minutes have passed since</source>
            <target state="new">for all messages at the same time, so after 5 minutes have passed since</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>the call to <bpt id="2">&lt;strong&gt;</bpt>GetMessages<ept id="2">&lt;/strong&gt;</ept>, any messages which have not been deleted</source>
            <target state="new">the call to <bpt id="2">&lt;strong&gt;</bpt>GetMessages<ept id="2">&lt;/strong&gt;</ept>, any messages which have not been deleted</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>will become visible again.</source>
            <target state="new">will become visible again.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Get the queue length</source>
            <target state="new">Get the queue length</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>You can get an estimate of the number of messages in a queue.</source>
            <target state="new">You can get an estimate of the number of messages in a queue.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>The</source>
            <target state="new">The</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method asks the Queue service to</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method asks the Queue service to</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>retrieve the queue attributes, including the message count.</source>
            <target state="new">retrieve the queue attributes, including the message count.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>ApproximateMethodCount<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>ApproximateMethodCount<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>property returns the last value retrieved by the</source>
            <target state="new">property returns the last value retrieved by the</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method, without calling the Queue service.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method, without calling the Queue service.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Delete a queue</source>
            <target state="new">Delete a queue</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>To delete a queue and all the messages contained in it, call the</source>
            <target state="new">To delete a queue and all the messages contained in it, call the</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Delete<ept id="1">&lt;/strong&gt;</ept> method on the queue object.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Delete<ept id="1">&lt;/strong&gt;</ept> method on the queue object.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Now that you've learned the basics of Queue storage, follow these links</source>
            <target state="new">Now that you've learned the basics of Queue storage, follow these links</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>to learn about more complex storage tasks.</source>
            <target state="new">to learn about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>View the Queue service reference documentation for complete details about available APIs:</source>
            <target state="new">View the Queue service reference documentation for complete details about available APIs:</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Storage Client Library for .NET reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Storage Client Library for .NET reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>REST API reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>REST API reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Learn about more advanced tasks you can perform with Azure Storage at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storing and Accessing Data in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Learn about more advanced tasks you can perform with Azure Storage at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storing and Accessing Data in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Learn how to simplify the code you write to work with Azure Storage by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Learn how to simplify the code you write to work with Azure Storage by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>View more feature guides to learn about additional options for storing data in Azure.</source>
            <target state="new">View more feature guides to learn about additional options for storing data in Azure.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Table Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store structured data.</source>
            <target state="new">Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Table Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store structured data.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Blob Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store unstructured data.</source>
            <target state="new">Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Blob Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store unstructured data.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store relational data.</source>
            <target state="new">Use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to store relational data.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>