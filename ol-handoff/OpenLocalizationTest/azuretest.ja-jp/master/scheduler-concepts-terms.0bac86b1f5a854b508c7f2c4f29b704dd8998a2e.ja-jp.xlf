<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:22:35 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3eb8f76dd7377f3365a8e6932e29826733b728e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Scheduler concepts, terms, and entities | Microsoft Azure</source>
            <target state="new">Scheduler concepts, terms, and entities | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Azure Scheduler concepts, terminology, and entity hierarchy, including jobs and job collections.  Shows a comprehensive example of a scheduled job.</source>
            <target state="new">Azure Scheduler concepts, terminology, and entity hierarchy, including jobs and job collections.  Shows a comprehensive example of a scheduled job.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Scheduler concepts, terminology, + entity hierarchy</source>
            <target state="new">Scheduler concepts, terminology, + entity hierarchy</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Scheduler entity hierarchy</source>
            <target state="new">Scheduler entity hierarchy</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The following table describes the main resources exposed or used by the Scheduler API:</source>
            <target state="new">The following table describes the main resources exposed or used by the Scheduler API:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Resource</source>
            <target state="new">Resource</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Cloud service<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Cloud service<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Conceptually, a cloud service represents an application.</source>
            <target state="new">Conceptually, a cloud service represents an application.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>A subscription may have several cloud services.</source>
            <target state="new">A subscription may have several cloud services.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job collection<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job collection<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>A job collection contains a group of jobs and maintains settings, quotas, and throttles that are shared by jobs within the collection.</source>
            <target state="new">A job collection contains a group of jobs and maintains settings, quotas, and throttles that are shared by jobs within the collection.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>A job collection is created by a subscription owner and groups jobs together based on usage or application boundaries.</source>
            <target state="new">A job collection is created by a subscription owner and groups jobs together based on usage or application boundaries.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>It’s constrained to one region.</source>
            <target state="new">It’s constrained to one region.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>It also allows the enforcement of quotas to constrain the usage of all jobs in that collection.</source>
            <target state="new">It also allows the enforcement of quotas to constrain the usage of all jobs in that collection.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The quotas include MaxJobs and MaxRecurrence.</source>
            <target state="new">The quotas include MaxJobs and MaxRecurrence.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>A job defines a single recurrent action, with simple or complex strategies for execution.</source>
            <target state="new">A job defines a single recurrent action, with simple or complex strategies for execution.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Actions may include HTTP requests or storage queue requests.</source>
            <target state="new">Actions may include HTTP requests or storage queue requests.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job history<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job history<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>A job history represents details for an execution of a job.</source>
            <target state="new">A job history represents details for an execution of a job.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>It contains success vs. failure, as well as any response details.</source>
            <target state="new">It contains success vs. failure, as well as any response details.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Scheduler entity management</source>
            <target state="new">Scheduler entity management</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>At a high level, the scheduler and the service management API expose the following operations on the resources:</source>
            <target state="new">At a high level, the scheduler and the service management API expose the following operations on the resources:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Capability</source>
            <target state="new">Capability</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Description and URI address</source>
            <target state="new">Description and URI address</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Cloud service management<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Cloud service management<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>GET, PUT, and DELETE support for creating and modifying cloud services <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></source>
            <target state="new">GET, PUT, and DELETE support for creating and modifying cloud services <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job collection management<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job collection management<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>GET, PUT, and DELETE support for creating and modifying job collections and the jobs contained therein.</source>
            <target state="new">GET, PUT, and DELETE support for creating and modifying job collections and the jobs contained therein.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>A job collection is a container for jobs and maps to quotas and shared settings.</source>
            <target state="new">A job collection is a container for jobs and maps to quotas and shared settings.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Examples of quotas, described later, are maximum number of jobs and smallest recurrence interval.</source>
            <target state="new">Examples of quotas, described later, are maximum number of jobs and smallest recurrence interval.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>PUT and DELETE: <bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/jobcollections/{jobCollectionName}<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>GET: <bpt id="7">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}<ept id="7">&lt;/code&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>PUT and DELETE: <bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/jobcollections/{jobCollectionName}<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>GET: <bpt id="7">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}<ept id="7">&lt;/code&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job management<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job management<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>GET, PUT, POST, PATCH, and DELETE support for creating and modifying jobs.</source>
            <target state="new">GET, PUT, POST, PATCH, and DELETE support for creating and modifying jobs.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>All jobs must belong to a job collection that already exists, so there is no implicit creation.</source>
            <target state="new">All jobs must belong to a job collection that already exists, so there is no implicit creation.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}/jobs/{jobId}<ept id="2">&lt;/code&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}/jobs/{jobId}<ept id="2">&lt;/code&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job history management<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job history management<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>GET support for fetching 60 days of job execution history, such as job elapsed time and job execution results. Adds query string parameter support for filtering based on state and status. <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}/jobs/{jobId}/history<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></source>
            <target state="new">GET support for fetching 60 days of job execution history, such as job elapsed time and job execution results. Adds query string parameter support for filtering based on state and status. <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;code&gt;</bpt>https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}/jobs/{jobId}/history<ept id="3">&lt;/code&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Job types</source>
            <target state="new">Job types</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>There are two types of jobs: HTTP jobs (including HTTPS jobs that support SSL) and storage queue jobs.</source>
            <target state="new">There are two types of jobs: HTTP jobs (including HTTPS jobs that support SSL) and storage queue jobs.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>HTTP jobs are ideal if you have an endpoint of an existing workload or service.</source>
            <target state="new">HTTP jobs are ideal if you have an endpoint of an existing workload or service.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>You can use storage queue jobs to post messages to storage queues, so those jobs are ideal for workloads that use storage queues.</source>
            <target state="new">You can use storage queue jobs to post messages to storage queues, so those jobs are ideal for workloads that use storage queues.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The "job" entity in detail</source>
            <target state="new">The "job" entity in detail</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>At a basic level, a scheduled job has several parts:</source>
            <target state="new">At a basic level, a scheduled job has several parts:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The action to perform when the job timer fires</source>
            <target state="new">The action to perform when the job timer fires</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>(Optional) The time to run the job</source>
            <target state="new">(Optional) The time to run the job</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>(Optional) When and how often to repeat the job</source>
            <target state="new">(Optional) When and how often to repeat the job</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>(Optional) An action to fire if the primary action fails</source>
            <target state="new">(Optional) An action to fire if the primary action fails</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Internally, a scheduled job also contains system-provided data such as the next scheduled execution time.</source>
            <target state="new">Internally, a scheduled job also contains system-provided data such as the next scheduled execution time.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>The following code provides a comprehensive example of a scheduled job.</source>
            <target state="new">The following code provides a comprehensive example of a scheduled job.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Details are provided in subsequent sections.</source>
            <target state="new">Details are provided in subsequent sections.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>As seen in the sample scheduled job above, a job definition has several parts:</source>
            <target state="new">As seen in the sample scheduled job above, a job definition has several parts:</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Start time (“startTime”)</source>
            <target state="new">Start time (“startTime”)</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Action (“action”), which includes error action (“errorAction”)</source>
            <target state="new">Action (“action”), which includes error action (“errorAction”)</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Recurrence (“recurrence”)</source>
            <target state="new">Recurrence (“recurrence”)</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>State (“state”)</source>
            <target state="new">State (“state”)</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Status (“status”)</source>
            <target state="new">Status (“status”)</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Retry policy (“retryPolicy”)</source>
            <target state="new">Retry policy (“retryPolicy”)</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Let’s examine each of these in detail:</source>
            <target state="new">Let’s examine each of these in detail:</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>startTime</source>
            <target state="new">startTime</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The "startTime” is the start time and allows the caller to specify a time zone offset on the wire in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ISO-8601 format<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The "startTime” is the start time and allows the caller to specify a time zone offset on the wire in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ISO-8601 format<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>action and errorAction</source>
            <target state="new">action and errorAction</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The “action” is the action invoked on each occurrence and describes a type of service invocation.</source>
            <target state="new">The “action” is the action invoked on each occurrence and describes a type of service invocation.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The action is what will be executed on the provided schedule.</source>
            <target state="new">The action is what will be executed on the provided schedule.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Scheduler supports HTTP and storage queue actions.</source>
            <target state="new">Scheduler supports HTTP and storage queue actions.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The action in the example above is an HTTP action.</source>
            <target state="new">The action in the example above is an HTTP action.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Below is an example of a storage queue action:</source>
            <target state="new">Below is an example of a storage queue action:</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>The “errorAction” is the error handler, the action invoked when the primary action fails.</source>
            <target state="new">The “errorAction” is the error handler, the action invoked when the primary action fails.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>You can use this variable to call an error-handling endpoint or send a user notification.</source>
            <target state="new">You can use this variable to call an error-handling endpoint or send a user notification.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>This can be used for reaching a secondary endpoint in the case that the primary is not available (e.g., in the case of a disaster at the endpoint’s site) or can be used for notifying an error handling endpoint.</source>
            <target state="new">This can be used for reaching a secondary endpoint in the case that the primary is not available (e.g., in the case of a disaster at the endpoint’s site) or can be used for notifying an error handling endpoint.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Just like the primary action, the error action can be simple or composite logic based on other actions.</source>
            <target state="new">Just like the primary action, the error action can be simple or composite logic based on other actions.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>To learn how to create a SAS token, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create and Use a Shared Access Signature<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn how to create a SAS token, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create and Use a Shared Access Signature<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>recurrence</source>
            <target state="new">recurrence</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Recurrence has several parts:</source>
            <target state="new">Recurrence has several parts:</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Frequency: One of minute, hour, day, week, month, year</source>
            <target state="new">Frequency: One of minute, hour, day, week, month, year</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Interval: Interval at the given frequency for the recurrence</source>
            <target state="new">Interval: Interval at the given frequency for the recurrence</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Prescribed schedule: Specify minutes, hours, weekdays, months, and monthdays of the recurrence</source>
            <target state="new">Prescribed schedule: Specify minutes, hours, weekdays, months, and monthdays of the recurrence</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Count: Count of occurrences</source>
            <target state="new">Count: Count of occurrences</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>End time: No jobs will execute after the specified end time</source>
            <target state="new">End time: No jobs will execute after the specified end time</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>A job is recurring if it has a recurring object specified in its JSON definition.</source>
            <target state="new">A job is recurring if it has a recurring object specified in its JSON definition.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>If both count and endTime are specified, the completion rule that occurs first is honored.</source>
            <target state="new">If both count and endTime are specified, the completion rule that occurs first is honored.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>state</source>
            <target state="new">state</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>The state of the job is one of four values: enabled, disabled, completed, or faulted.</source>
            <target state="new">The state of the job is one of four values: enabled, disabled, completed, or faulted.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>You can PUT or PATCH jobs so as to update them to the enabled or disabled state.</source>
            <target state="new">You can PUT or PATCH jobs so as to update them to the enabled or disabled state.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>If a job has been completed or faulted, that is a final state that cannot be updated (though the job can still be DELETED).</source>
            <target state="new">If a job has been completed or faulted, that is a final state that cannot be updated (though the job can still be DELETED).</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>An example of the state property is as follows:</source>
            <target state="new">An example of the state property is as follows:</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Completed and faulted jobs are deleted after 60 days.</source>
            <target state="new">Completed and faulted jobs are deleted after 60 days.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>status</source>
            <target state="new">status</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Once a Scheduler job has started, information will be returned about the current status of the job.</source>
            <target state="new">Once a Scheduler job has started, information will be returned about the current status of the job.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>This object is not settable by the user—it’s set by the system.</source>
            <target state="new">This object is not settable by the user—it’s set by the system.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>However, it is included in the job object (rather than a separate linked resource) so that one can obtain the status of a job easily.</source>
            <target state="new">However, it is included in the job object (rather than a separate linked resource) so that one can obtain the status of a job easily.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Job status includes the time of the previous execution (if any), the time of the next scheduled execution (for in-progress jobs), and the execution count of the job.</source>
            <target state="new">Job status includes the time of the previous execution (if any), the time of the next scheduled execution (for in-progress jobs), and the execution count of the job.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>retryPolicy</source>
            <target state="new">retryPolicy</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>If a Scheduler job fails, it is possible to specify a retry policy to determine whether and how the action is retried.</source>
            <target state="new">If a Scheduler job fails, it is possible to specify a retry policy to determine whether and how the action is retried.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>This is determined by the <bpt id="2">&lt;strong&gt;</bpt>retryType<ept id="2">&lt;/strong&gt;</ept> object—it is set to <bpt id="4">&lt;strong&gt;</bpt>none<ept id="4">&lt;/strong&gt;</ept> if there is no retry policy, as shown above.</source>
            <target state="new">This is determined by the <bpt id="2">&lt;strong&gt;</bpt>retryType<ept id="2">&lt;/strong&gt;</ept> object—it is set to <bpt id="4">&lt;strong&gt;</bpt>none<ept id="4">&lt;/strong&gt;</ept> if there is no retry policy, as shown above.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Set it to <bpt id="2">&lt;strong&gt;</bpt>fixed<ept id="2">&lt;/strong&gt;</ept> if there is a retry policy.</source>
            <target state="new">Set it to <bpt id="2">&lt;strong&gt;</bpt>fixed<ept id="2">&lt;/strong&gt;</ept> if there is a retry policy.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>To set a retry policy, two additional settings may be specified: a retry interval (<bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept>) and the number of retries (<bpt id="4">&lt;strong&gt;</bpt>retryCount<ept id="4">&lt;/strong&gt;</ept>).</source>
            <target state="new">To set a retry policy, two additional settings may be specified: a retry interval (<bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept>) and the number of retries (<bpt id="4">&lt;strong&gt;</bpt>retryCount<ept id="4">&lt;/strong&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>The retry interval, specified with the <bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept> object, is the interval between retries.</source>
            <target state="new">The retry interval, specified with the <bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept> object, is the interval between retries.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Its default value is 1 minute, its minimum value is 1 minute, and its maximum value is 18 months.</source>
            <target state="new">Its default value is 1 minute, its minimum value is 1 minute, and its maximum value is 18 months.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>It is defined in the ISO 8601 format.</source>
            <target state="new">It is defined in the ISO 8601 format.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Similarly, the value of the number of retries is specified with the <bpt id="2">&lt;strong&gt;</bpt>retryCount<ept id="2">&lt;/strong&gt;</ept> object; it is the number of times a retry is attempted.</source>
            <target state="new">Similarly, the value of the number of retries is specified with the <bpt id="2">&lt;strong&gt;</bpt>retryCount<ept id="2">&lt;/strong&gt;</ept> object; it is the number of times a retry is attempted.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Its default value is 5, and its maximum value is 20\.</source>
            <target state="new">Its default value is 5, and its maximum value is 20\.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Both <bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>retryCount<ept id="4">&lt;/strong&gt;</ept> are optional.</source>
            <target state="new">Both <bpt id="2">&lt;strong&gt;</bpt>retryInterval<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>retryCount<ept id="4">&lt;/strong&gt;</ept> are optional.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>They are given their default values if <bpt id="2">&lt;strong&gt;</bpt>retryType<ept id="2">&lt;/strong&gt;</ept> is set to <bpt id="4">&lt;strong&gt;</bpt>fixed<ept id="4">&lt;/strong&gt;</ept> and no values are specified explicitly.</source>
            <target state="new">They are given their default values if <bpt id="2">&lt;strong&gt;</bpt>retryType<ept id="2">&lt;/strong&gt;</ept> is set to <bpt id="4">&lt;strong&gt;</bpt>fixed<ept id="4">&lt;/strong&gt;</ept> and no values are specified explicitly.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>See also</source>
            <target state="new">See also</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What is Scheduler?<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What is Scheduler?<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get started using Azure Scheduler in the Azure portal<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get started using Azure Scheduler in the Azure portal<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Plans and billing in Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Plans and billing in Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to build complex schedules and advanced recurrence with Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to build complex schedules and advanced recurrence with Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler REST API reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler REST API reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler PowerShell cmdlets reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler PowerShell cmdlets reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler high-availability and reliability<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler high-availability and reliability<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler limits, defaults, and error codes<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler limits, defaults, and error codes<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler outbound authentication<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Scheduler outbound authentication<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>