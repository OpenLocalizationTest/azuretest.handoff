<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:35:51 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc1042d8becd6fcfb291add0db2af94594ac9918</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>On-premises application with blob storage (Java) | Microsoft Azure</source>
            <target state="new">On-premises application with blob storage (Java) | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to create a console application that uploads an image to Azure, and then displays the image in your browser. Code samples in Java.</source>
            <target state="new">Learn how to create a console application that uploads an image to Azure, and then displays the image in your browser. Code samples in Java.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>On-premises application with blob storage</source>
            <target state="new">On-premises application with blob storage</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The following example shows you how you can use Azure storage to</source>
            <target state="new">The following example shows you how you can use Azure storage to</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>store images in Azure.</source>
            <target state="new">store images in Azure.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The code in this article is for a console</source>
            <target state="new">The code in this article is for a console</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>application that uploads an image to Azure, and then creates an</source>
            <target state="new">application that uploads an image to Azure, and then creates an</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>HTML file that displays the image in your browser.</source>
            <target state="new">HTML file that displays the image in your browser.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>A Java Developer Kit (JDK), version 1.6 or later, is installed.</source>
            <target state="new">A Java Developer Kit (JDK), version 1.6 or later, is installed.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The Azure SDK is installed.</source>
            <target state="new">The Azure SDK is installed.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>The JAR for the Azure Libraries for Java, and any applicable</source>
            <target state="new">The JAR for the Azure Libraries for Java, and any applicable</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>dependency JARs, are installed and are in the build path used by</source>
            <target state="new">dependency JARs, are installed and are in the build path used by</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>your Java compiler.</source>
            <target state="new">your Java compiler.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>For information about installing the Azure Libraries for Java, see [Download the</source>
            <target state="new">For information about installing the Azure Libraries for Java, see [Download the</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Azure SDK for Java][].</source>
            <target state="new">Azure SDK for Java][].</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>An Azure storage account has been set up.</source>
            <target state="new">An Azure storage account has been set up.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The account name</source>
            <target state="new">The account name</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>and account key for the storage account will be used by the code</source>
            <target state="new">and account key for the storage account will be used by the code</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>in this article.</source>
            <target state="new">in this article.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>See [How to Create a Storage Account] for information about creating a storage account,</source>
            <target state="new">See [How to Create a Storage Account] for information about creating a storage account,</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>and <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Manage Storage Accounts[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for information about retrieving the</source>
            <target state="new">and <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Manage Storage Accounts[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for information about retrieving the</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>account key.</source>
            <target state="new">account key.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>You have created a local image file named stored at the path</source>
            <target state="new">You have created a local image file named stored at the path</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>c:\\myimages\\image1.jpg.</source>
            <target state="new">c:\\myimages\\image1.jpg.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Alternatively, modify the</source>
            <target state="new">Alternatively, modify the</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FileInputStream<ept id="1">&lt;/strong&gt;</ept> constructor in the example to use a different</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FileInputStream<ept id="1">&lt;/strong&gt;</ept> constructor in the example to use a different</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>image path and file name.</source>
            <target state="new">image path and file name.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>To use Azure blob storage to upload a file</source>
            <target state="new">To use Azure blob storage to upload a file</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>A step-by-step procedure is presented here.</source>
            <target state="new">A step-by-step procedure is presented here.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>If you'd like to skip ahead,</source>
            <target state="new">If you'd like to skip ahead,</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>the entire code is presented later in this article.</source>
            <target state="new">the entire code is presented later in this article.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Begin the code by including imports for the Azure core storage</source>
            <target state="new">Begin the code by including imports for the Azure core storage</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>classes, the Azure blob client classes, the Java IO classes, and</source>
            <target state="new">classes, the Azure blob client classes, the Java IO classes, and</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>the <bpt id="2">&lt;strong&gt;</bpt>URISyntaxException<ept id="2">&lt;/strong&gt;</ept> class.</source>
            <target state="new">the <bpt id="2">&lt;strong&gt;</bpt>URISyntaxException<ept id="2">&lt;/strong&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Declare a class named <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept>, and include the open bracket,</source>
            <target state="new">Declare a class named <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept>, and include the open bracket,</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>{<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>{<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Within the <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept> class, declare a string variable that will</source>
            <target state="new">Within the <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept> class, declare a string variable that will</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>contain the default endpoint protocol, your storage account name, and</source>
            <target state="new">contain the default endpoint protocol, your storage account name, and</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>your storage access key, as specified in your Azure storage</source>
            <target state="new">your storage access key, as specified in your Azure storage</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>account.</source>
            <target state="new">account.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Replace the placeholder values <bpt id="2">&lt;strong&gt;</bpt>your\_account\_name<ept id="2">&lt;/strong&gt;</ept> and</source>
            <target state="new">Replace the placeholder values <bpt id="2">&lt;strong&gt;</bpt>your\_account\_name<ept id="2">&lt;/strong&gt;</ept> and</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>your\_account\_key<ept id="1">&lt;/strong&gt;</ept> with your own account name and account key,</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>your\_account\_key<ept id="1">&lt;/strong&gt;</ept> with your own account name and account key,</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>respectively.</source>
            <target state="new">respectively.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Add in your declaration for <bpt id="2">&lt;strong&gt;</bpt>main<ept id="2">&lt;/strong&gt;</ept>, include a <bpt id="4">&lt;strong&gt;</bpt>try<ept id="4">&lt;/strong&gt;</ept> block, and</source>
            <target state="new">Add in your declaration for <bpt id="2">&lt;strong&gt;</bpt>main<ept id="2">&lt;/strong&gt;</ept>, include a <bpt id="4">&lt;strong&gt;</bpt>try<ept id="4">&lt;/strong&gt;</ept> block, and</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>include the necessary open brackets, <bpt id="2">&lt;strong&gt;</bpt>{<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">include the necessary open brackets, <bpt id="2">&lt;strong&gt;</bpt>{<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Declare variables of the following type (the descriptions are for how</source>
            <target state="new">Declare variables of the following type (the descriptions are for how</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>they are used in this example):</source>
            <target state="new">they are used in this example):</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="1">&lt;/strong&gt;</ept>: Used to initialize the account object with</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="1">&lt;/strong&gt;</ept>: Used to initialize the account object with</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>your Azure storage account name and key, and to create the</source>
            <target state="new">your Azure storage account name and key, and to create the</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>blob client object.</source>
            <target state="new">blob client object.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudBlobClient<ept id="1">&lt;/strong&gt;</ept>: Used to access the blob service.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudBlobClient<ept id="1">&lt;/strong&gt;</ept>: Used to access the blob service.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="1">&lt;/strong&gt;</ept>: Used to create a blob container, list the</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="1">&lt;/strong&gt;</ept>: Used to create a blob container, list the</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>blobs in the container, and delete the container.</source>
            <target state="new">blobs in the container, and delete the container.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloudBlockBlob<ept id="1">&lt;/strong&gt;</ept>: Used to upload a local image file to the</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloudBlockBlob<ept id="1">&lt;/strong&gt;</ept>: Used to upload a local image file to the</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>container.</source>
            <target state="new">container.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>CloudStorageAccount account;</source>
            <target state="new">CloudStorageAccount account;</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>CloudBlobClient serviceClient;</source>
            <target state="new">CloudBlobClient serviceClient;</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>CloudBlobContainer container;</source>
            <target state="new">CloudBlobContainer container;</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>CloudBlockBlob blob;</source>
            <target state="new">CloudBlockBlob blob;</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>account<ept id="2">&lt;/strong&gt;</ept> variable.</source>
            <target state="new">Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>account<ept id="2">&lt;/strong&gt;</ept> variable.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>serviceClient<ept id="2">&lt;/strong&gt;</ept> variable.</source>
            <target state="new">Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>serviceClient<ept id="2">&lt;/strong&gt;</ept> variable.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>container<ept id="2">&lt;/strong&gt;</ept> variable.</source>
            <target state="new">Assign a value to the <bpt id="2">&lt;strong&gt;</bpt>container<ept id="2">&lt;/strong&gt;</ept> variable.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>We'll get a reference to a</source>
            <target state="new">We'll get a reference to a</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>container named <bpt id="2">&lt;strong&gt;</bpt>gettingstarted<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">container named <bpt id="2">&lt;strong&gt;</bpt>gettingstarted<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Create the container.</source>
            <target state="new">Create the container.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>This method will create the container if it doesn't</source>
            <target state="new">This method will create the container if it doesn't</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>exist (and return <bpt id="2">&lt;strong&gt;</bpt>true<ept id="2">&lt;/strong&gt;</ept>).</source>
            <target state="new">exist (and return <bpt id="2">&lt;strong&gt;</bpt>true<ept id="2">&lt;/strong&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>If the container does exist, it will return</source>
            <target state="new">If the container does exist, it will return</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>false<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>false<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>An alternative to <bpt id="2">&lt;strong&gt;</bpt>createIfNotExists<ept id="2">&lt;/strong&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>create<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">An alternative to <bpt id="2">&lt;strong&gt;</bpt>createIfNotExists<ept id="2">&lt;/strong&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>create<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>method (which will return an error if the container already exists).</source>
            <target state="new">method (which will return an error if the container already exists).</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Set anonymous access for the container.</source>
            <target state="new">Set anonymous access for the container.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Get a reference to the block blob, which will represent the blob in</source>
            <target state="new">Get a reference to the block blob, which will represent the blob in</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Azure storage.</source>
            <target state="new">Azure storage.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>File<ept id="2">&lt;/strong&gt;</ept> constructor to get a reference to the locally created</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>File<ept id="2">&lt;/strong&gt;</ept> constructor to get a reference to the locally created</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>file that you will upload.</source>
            <target state="new">file that you will upload.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Ensure you have created this file before</source>
            <target state="new">Ensure you have created this file before</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>running the code.</source>
            <target state="new">running the code.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Upload the local file through a call to the <bpt id="2">&lt;strong&gt;</bpt>CloudBlockBlob.upload<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">Upload the local file through a call to the <bpt id="2">&lt;strong&gt;</bpt>CloudBlockBlob.upload<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>method.</source>
            <target state="new">method.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>The first parameter to the <bpt id="2">&lt;strong&gt;</bpt>CloudBlockBlob.upload<ept id="2">&lt;/strong&gt;</ept> method is a</source>
            <target state="new">The first parameter to the <bpt id="2">&lt;strong&gt;</bpt>CloudBlockBlob.upload<ept id="2">&lt;/strong&gt;</ept> method is a</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FileInputStream<ept id="1">&lt;/strong&gt;</ept> object that represents the local file that will be</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FileInputStream<ept id="1">&lt;/strong&gt;</ept> object that represents the local file that will be</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>uploaded to Azure storage.</source>
            <target state="new">uploaded to Azure storage.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The second parameter is the size, in</source>
            <target state="new">The second parameter is the size, in</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>bytes, of the file.</source>
            <target state="new">bytes, of the file.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Call a helper function named <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept>, to make a basic HTML page</source>
            <target state="new">Call a helper function named <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept>, to make a basic HTML page</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>that contains an <bpt id="2">&lt;strong&gt;</bpt>&lt;image&gt;<ept id="2">&lt;/strong&gt;</ept> element with the source set to the blob that</source>
            <target state="new">that contains an <bpt id="2">&lt;strong&gt;</bpt>&lt;image&gt;<ept id="2">&lt;/strong&gt;</ept> element with the source set to the blob that</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>is now in your Azure storage account.</source>
            <target state="new">is now in your Azure storage account.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>The code for</source>
            <target state="new">The code for</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="1">&lt;/strong&gt;</ept> will be discussed later in this article.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="1">&lt;/strong&gt;</ept> will be discussed later in this article.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Print out a status message and information about the created HTML page.</source>
            <target state="new">Print out a status message and information about the created HTML page.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Close the <bpt id="2">&lt;strong&gt;</bpt>try<ept id="2">&lt;/strong&gt;</ept> block by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Close the <bpt id="2">&lt;strong&gt;</bpt>try<ept id="2">&lt;/strong&gt;</ept> block by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Handle the following exceptions:</source>
            <target state="new">Handle the following exceptions:</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FileNotFoundException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the <bpt id="3">&lt;strong&gt;</bpt>FileInputStream<ept id="3">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FileNotFoundException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the <bpt id="3">&lt;strong&gt;</bpt>FileInputStream<ept id="3">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>or <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> constructors.</source>
            <target state="new">or <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> constructors.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>StorageException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the Azure client</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>StorageException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the Azure client</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>storage library.</source>
            <target state="new">storage library.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>URISyntaxException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the <bpt id="3">&lt;strong&gt;</bpt>ListBlobItem.getUri<ept id="3">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>URISyntaxException<ept id="1">&lt;/strong&gt;</ept>: Can be thrown by the <bpt id="3">&lt;strong&gt;</bpt>ListBlobItem.getUri<ept id="3">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>method.</source>
            <target state="new">method.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Exception<ept id="1">&lt;/strong&gt;</ept>: Generic exception handling.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Exception<ept id="1">&lt;/strong&gt;</ept>: Generic exception handling.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>catch (FileNotFoundException fileNotFoundException)</source>
            <target state="new">catch (FileNotFoundException fileNotFoundException)</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>{</source>
            <target state="new">{</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>System.out.print("FileNotFoundException encountered: ");</source>
            <target state="new">System.out.print("FileNotFoundException encountered: ");</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>System.out.println(fileNotFoundException.getMessage());</source>
            <target state="new">System.out.println(fileNotFoundException.getMessage());</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>System.exit(-1);</source>
            <target state="new">System.exit(-1);</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>}</source>
            <target state="new">}</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>catch (StorageException storageException)</source>
            <target state="new">catch (StorageException storageException)</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>{</source>
            <target state="new">{</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>System.out.print("StorageException encountered: ");</source>
            <target state="new">System.out.print("StorageException encountered: ");</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>System.out.println(storageException.getMessage());</source>
            <target state="new">System.out.println(storageException.getMessage());</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>System.exit(-1);</source>
            <target state="new">System.exit(-1);</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>}</source>
            <target state="new">}</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>catch (URISyntaxException uriSyntaxException)</source>
            <target state="new">catch (URISyntaxException uriSyntaxException)</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>{</source>
            <target state="new">{</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>System.out.print("URISyntaxException encountered: ");</source>
            <target state="new">System.out.print("URISyntaxException encountered: ");</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>System.out.println(uriSyntaxException.getMessage());</source>
            <target state="new">System.out.println(uriSyntaxException.getMessage());</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>System.exit(-1);</source>
            <target state="new">System.exit(-1);</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>}</source>
            <target state="new">}</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>catch (Exception e)</source>
            <target state="new">catch (Exception e)</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>{</source>
            <target state="new">{</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>System.out.print("Exception encountered: ");</source>
            <target state="new">System.out.print("Exception encountered: ");</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>System.out.println(e.getMessage());</source>
            <target state="new">System.out.println(e.getMessage());</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>System.exit(-1);</source>
            <target state="new">System.exit(-1);</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>}</source>
            <target state="new">}</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Close <bpt id="2">&lt;strong&gt;</bpt>main<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Close <bpt id="2">&lt;strong&gt;</bpt>main<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Create a method named <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept> to create a basic HTML page.</source>
            <target state="new">Create a method named <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept> to create a basic HTML page.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>This</source>
            <target state="new">This</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>method has a parameter of type <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="2">&lt;/strong&gt;</ept>, which will be</source>
            <target state="new">method has a parameter of type <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="2">&lt;/strong&gt;</ept>, which will be</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>used to iterate through the list of uploaded blobs.</source>
            <target state="new">used to iterate through the list of uploaded blobs.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>This method will</source>
            <target state="new">This method will</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>throw exceptions of type <bpt id="2">&lt;strong&gt;</bpt>FileNotFoundException<ept id="2">&lt;/strong&gt;</ept>, which can be thrown</source>
            <target state="new">throw exceptions of type <bpt id="2">&lt;strong&gt;</bpt>FileNotFoundException<ept id="2">&lt;/strong&gt;</ept>, which can be thrown</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>by the <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> constructor, and <bpt id="4">&lt;strong&gt;</bpt>URISyntaxException<ept id="4">&lt;/strong&gt;</ept>,</source>
            <target state="new">by the <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> constructor, and <bpt id="4">&lt;strong&gt;</bpt>URISyntaxException<ept id="4">&lt;/strong&gt;</ept>,</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>which can be thrown by the <bpt id="2">&lt;strong&gt;</bpt>ListBlobItem.getUri<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">which can be thrown by the <bpt id="2">&lt;strong&gt;</bpt>ListBlobItem.getUri<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Include the</source>
            <target state="new">Include the</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>opening bracket, <bpt id="2">&lt;strong&gt;</bpt>{<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">opening bracket, <bpt id="2">&lt;strong&gt;</bpt>{<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>Create a local file named <bpt id="2">&lt;strong&gt;</bpt>index.html<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Create a local file named <bpt id="2">&lt;strong&gt;</bpt>index.html<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Write to the local file, adding in the <bpt id="2">&lt;strong&gt;</bpt>&lt;html&gt;<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>&lt;header&gt;<ept id="4">&lt;/strong&gt;</ept>, and</source>
            <target state="new">Write to the local file, adding in the <bpt id="2">&lt;strong&gt;</bpt>&lt;html&gt;<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>&lt;header&gt;<ept id="4">&lt;/strong&gt;</ept>, and</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>&lt;body&gt;<ept id="1">&lt;/strong&gt;</ept> elements.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>&lt;body&gt;<ept id="1">&lt;/strong&gt;</ept> elements.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>Iterate through the list of uploaded blobs.</source>
            <target state="new">Iterate through the list of uploaded blobs.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>For each blob, in the HTML</source>
            <target state="new">For each blob, in the HTML</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>page create an <bpt id="2">&lt;strong&gt;</bpt>&lt;img&gt;<ept id="2">&lt;/strong&gt;</ept> element that has its <bpt id="4">&lt;strong&gt;</bpt>src<ept id="4">&lt;/strong&gt;</ept> attribute sent to</source>
            <target state="new">page create an <bpt id="2">&lt;strong&gt;</bpt>&lt;img&gt;<ept id="2">&lt;/strong&gt;</ept> element that has its <bpt id="4">&lt;strong&gt;</bpt>src<ept id="4">&lt;/strong&gt;</ept> attribute sent to</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>the URI of the blob as it exists in your Azure storage account.</source>
            <target state="new">the URI of the blob as it exists in your Azure storage account.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>Although you added only one image in this sample, if you added more,</source>
            <target state="new">Although you added only one image in this sample, if you added more,</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>this code would iterate all of them.</source>
            <target state="new">this code would iterate all of them.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>For simplicity, this example assumes each uploaded blob is an image.</source>
            <target state="new">For simplicity, this example assumes each uploaded blob is an image.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>If</source>
            <target state="new">If</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>you've updated blobs other than images, or page blobs instead of block</source>
            <target state="new">you've updated blobs other than images, or page blobs instead of block</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>blobs, adjust the code as needed.</source>
            <target state="new">blobs, adjust the code as needed.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>Close the <bpt id="2">&lt;strong&gt;</bpt>&lt;body&gt;<ept id="2">&lt;/strong&gt;</ept> element and the <bpt id="4">&lt;strong&gt;</bpt>&lt;html&gt;<ept id="4">&lt;/strong&gt;</ept> element.</source>
            <target state="new">Close the <bpt id="2">&lt;strong&gt;</bpt>&lt;body&gt;<ept id="2">&lt;/strong&gt;</ept> element and the <bpt id="4">&lt;strong&gt;</bpt>&lt;html&gt;<ept id="4">&lt;/strong&gt;</ept> element.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>Close the local file.</source>
            <target state="new">Close the local file.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>Close <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Close <bpt id="2">&lt;strong&gt;</bpt>MakeHTMLPage<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>Close <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Close <bpt id="2">&lt;strong&gt;</bpt>StorageSample<ept id="2">&lt;/strong&gt;</ept> by inserting a close bracket: <bpt id="4">&lt;strong&gt;</bpt>}<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>The following is the complete code for this example.</source>
            <target state="new">The following is the complete code for this example.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>Remember to modify</source>
            <target state="new">Remember to modify</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>the placeholder values <bpt id="2">&lt;strong&gt;</bpt>your\_account\_name<ept id="2">&lt;/strong&gt;</ept> and</source>
            <target state="new">the placeholder values <bpt id="2">&lt;strong&gt;</bpt>your\_account\_name<ept id="2">&lt;/strong&gt;</ept> and</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>your\_account\_key<ept id="1">&lt;/strong&gt;</ept> to use your account name and account key,</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>your\_account\_key<ept id="1">&lt;/strong&gt;</ept> to use your account name and account key,</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>respectively.</source>
            <target state="new">respectively.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>In addition to uploading your local image file to Azure storage,</source>
            <target state="new">In addition to uploading your local image file to Azure storage,</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>the example code creates a local file namedindex.html, which you can</source>
            <target state="new">the example code creates a local file namedindex.html, which you can</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>open in your browser to see your uploaded image.</source>
            <target state="new">open in your browser to see your uploaded image.</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Because the code contains your account name and account key, ensure that</source>
            <target state="new">Because the code contains your account name and account key, ensure that</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>your source code is secure.</source>
            <target state="new">your source code is secure.</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>To delete a container</source>
            <target state="new">To delete a container</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>Because you are charged for storage, you may want to delete the</source>
            <target state="new">Because you are charged for storage, you may want to delete the</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>gettingstarted<ept id="1">&lt;/strong&gt;</ept> container after you are done experimenting with this</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>gettingstarted<ept id="1">&lt;/strong&gt;</ept> container after you are done experimenting with this</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>example.</source>
            <target state="new">example.</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>To delete a container, use the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.delete<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">To delete a container, use the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.delete<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source>method.</source>
            <target state="new">method.</target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>To call the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.delete<ept id="2">&lt;/strong&gt;</ept> method, the process of</source>
            <target state="new">To call the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.delete<ept id="2">&lt;/strong&gt;</ept> method, the process of</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>initializing <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>ClodBlobClient<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="6">&lt;/strong&gt;</ept> objects is the same as shown for the</source>
            <target state="new">initializing <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>ClodBlobClient<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>CloudBlobContainer<ept id="6">&lt;/strong&gt;</ept> objects is the same as shown for the</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>createIfNotExist<ept id="1">&lt;/strong&gt;</ept> method.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>createIfNotExist<ept id="1">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>The following is a complete example that</source>
            <target state="new">The following is a complete example that</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>deletes the container named <bpt id="2">&lt;strong&gt;</bpt>gettingstarted<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">deletes the container named <bpt id="2">&lt;strong&gt;</bpt>gettingstarted<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>For an overview of other blob storage classes and methods, see [How to</source>
            <target state="new">For an overview of other blob storage classes and methods, see [How to</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>use the blob storage service from Java].</source>
            <target state="new">use the blob storage service from Java].</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>Follow these links to learn more about more complex storage tasks.</source>
            <target state="new">Follow these links to learn more about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>