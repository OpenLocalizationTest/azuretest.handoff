<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:08:10 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7899ac46a94eeff0ee9fe1cb4d13ad49c377001</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Get started with delivering Video-on-Demand (VoD) content using .NET SDK</source>
            <target state="new">Get started with delivering Video-on-Demand (VoD) content using .NET SDK</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This tutorial walks you through the steps of implementing a Video-on-Demand (VoD) content delivery application with Azure Media Services using .NET.</source>
            <target state="new">This tutorial walks you through the steps of implementing a Video-on-Demand (VoD) content delivery application with Azure Media Services using .NET.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Get started with delivering Video-on-Demand (VoD) content using .NET SDK</source>
            <target state="new">Get started with delivering Video-on-Demand (VoD) content using .NET SDK</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/media-services-selector-get-started.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/media-services-selector-get-started.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>To complete this tutorial, you need an Azure account.</source>
            <target state="new">To complete this tutorial, you need an Azure account.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
            <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For details, see <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Azure Free Trial<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>.</source>
            <target state="new">For details, see <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Azure Free Trial<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This tutorial walks you through the steps of implementing a Video-on-Demand (VoD) content delivery application using Azure Media Services (AMS) SDK for .NET.</source>
            <target state="new">This tutorial walks you through the steps of implementing a Video-on-Demand (VoD) content delivery application using Azure Media Services (AMS) SDK for .NET.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The tutorial introduces the basic Media Services workflow and the most common programming objects and tasks required for Media Services development.</source>
            <target state="new">The tutorial introduces the basic Media Services workflow and the most common programming objects and tasks required for Media Services development.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>At the completion of the tutorial, you will be able to stream or progressively download a sample media file that you uploaded, encoded, and downloaded.</source>
            <target state="new">At the completion of the tutorial, you will be able to stream or progressively download a sample media file that you uploaded, encoded, and downloaded.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The following prerequisites are required to start developing with Media Services SDK for .NET.</source>
            <target state="new">The following prerequisites are required to start developing with Media Services SDK for .NET.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Operating Systems: Windows 8 or later, Windows 2008 R2, Windows 7.</source>
            <target state="new">Operating Systems: Windows 8 or later, Windows 2008 R2, Windows 7.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>.NET Framework 4.5 or .NET Framework 4.0</source>
            <target state="new">.NET Framework 4.5 or .NET Framework 4.0</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Visual Studio 2013, Visual Studio 2012, Visual Studio 2010 SP1 (Professional, Premium, Ultimate, or Express).</source>
            <target state="new">Visual Studio 2013, Visual Studio 2012, Visual Studio 2010 SP1 (Professional, Premium, Ultimate, or Express).</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The following tasks are shown in this Quickstart.</source>
            <target state="new">The following tasks are shown in this Quickstart.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Create a Media Services account (using the Azure portal).</source>
            <target state="new">Create a Media Services account (using the Azure portal).</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Configure streaming endpoint (using the portal).</source>
            <target state="new">Configure streaming endpoint (using the portal).</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Create and configure a Visual Studio project.</source>
            <target state="new">Create and configure a Visual Studio project.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Connect to the Media Services account.</source>
            <target state="new">Connect to the Media Services account.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Create a new asset and upload a video file.</source>
            <target state="new">Create a new asset and upload a video file.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Encode the source file into a set of adaptive bitrate MP4 files.</source>
            <target state="new">Encode the source file into a set of adaptive bitrate MP4 files.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Publish the asset and get URLs for streaming and progressive download.</source>
            <target state="new">Publish the asset and get URLs for streaming and progressive download.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Play your content.</source>
            <target state="new">Play your content.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Create a Media Services account using the portal</source>
            <target state="new">Create a Media Services account using the portal</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>New<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Media Service<ept id="4">&lt;/strong&gt;</ept>, and then click <bpt id="6">&lt;strong&gt;</bpt>Quick Create<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>New<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Media Service<ept id="4">&lt;/strong&gt;</ept>, and then click <bpt id="6">&lt;strong&gt;</bpt>Quick Create<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Media Services Quick Create<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Media Services Quick Create<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>NAME<ept id="2">&lt;/strong&gt;</ept>, enter the name of the new account.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>NAME<ept id="2">&lt;/strong&gt;</ept>, enter the name of the new account.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>A Media Services account name is all lower-case numbers or letters with no spaces, and is 3 - 24 characters in length.</source>
            <target state="new">A Media Services account name is all lower-case numbers or letters with no spaces, and is 3 - 24 characters in length.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>REGION<ept id="2">&lt;/strong&gt;</ept>, select the geographic region that will be used to store the metadata records for your Media Services account.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>REGION<ept id="2">&lt;/strong&gt;</ept>, select the geographic region that will be used to store the metadata records for your Media Services account.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Only the available Media Services regions appear in the drop-down list.</source>
            <target state="new">Only the available Media Services regions appear in the drop-down list.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="2">&lt;/strong&gt;</ept>, select a storage account to provide blob storage of the media content from your Media Services account.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="2">&lt;/strong&gt;</ept>, select a storage account to provide blob storage of the media content from your Media Services account.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>You can select an existing storage account in the same geographic region as your Media Services account, or you can create a new storage account.</source>
            <target state="new">You can select an existing storage account in the same geographic region as your Media Services account, or you can create a new storage account.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>A new storage account is created in the same region.</source>
            <target state="new">A new storage account is created in the same region.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>If you created a new storage account, in <bpt id="2">&lt;strong&gt;</bpt>NEW STORAGE ACCOUNT NAME<ept id="2">&lt;/strong&gt;</ept>, enter a name for the storage account.</source>
            <target state="new">If you created a new storage account, in <bpt id="2">&lt;strong&gt;</bpt>NEW STORAGE ACCOUNT NAME<ept id="2">&lt;/strong&gt;</ept>, enter a name for the storage account.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The rules for storage account names are the same as for Media Services accounts.</source>
            <target state="new">The rules for storage account names are the same as for Media Services accounts.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Quick Create<ept id="2">&lt;/strong&gt;</ept> at the bottom of the form.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Quick Create<ept id="2">&lt;/strong&gt;</ept> at the bottom of the form.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>You can monitor the status of the process in the message area at the bottom of the window.</source>
            <target state="new">You can monitor the status of the process in the message area at the bottom of the window.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Once your account is successfully created, the status changes to <bpt id="2">&lt;strong&gt;</bpt>Active<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Once your account is successfully created, the status changes to <bpt id="2">&lt;strong&gt;</bpt>Active<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>At the bottom of the page, the <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> button appears.</source>
            <target state="new">At the bottom of the page, the <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> button appears.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>When you click this button, a dialog with the Media Services account name and the primary and secondary keys is displayed.</source>
            <target state="new">When you click this button, a dialog with the Media Services account name and the primary and secondary keys is displayed.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>You will need the account name and the primary key information to programmatically access the Media Services account.</source>
            <target state="new">You will need the account name and the primary key information to programmatically access the Media Services account.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Media Services Page<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Media Services Page<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>When you double-click on the account name, the <bpt id="2">&lt;strong&gt;</bpt>Quickstart<ept id="2">&lt;/strong&gt;</ept> page is displayed by default.</source>
            <target state="new">When you double-click on the account name, the <bpt id="2">&lt;strong&gt;</bpt>Quickstart<ept id="2">&lt;/strong&gt;</ept> page is displayed by default.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This page enables you to do some management tasks that are also available on other pages of the portal.</source>
            <target state="new">This page enables you to do some management tasks that are also available on other pages of the portal.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>For example, you can upload a video file from this page or do it from the CONTENT page.</source>
            <target state="new">For example, you can upload a video file from this page or do it from the CONTENT page.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Configure streaming endpoint using the portal</source>
            <target state="new">Configure streaming endpoint using the portal</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>When working with Azure Media Services, one of the most common scenarios is delivering adaptive bitrate streaming to your clients.</source>
            <target state="new">When working with Azure Media Services, one of the most common scenarios is delivering adaptive bitrate streaming to your clients.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>With adaptive bitrate streaming, the client can switch to a higher or lower bitrate stream as the video is displayed based on the current network bandwidth, CPU utilization, and other factors.</source>
            <target state="new">With adaptive bitrate streaming, the client can switch to a higher or lower bitrate stream as the video is displayed based on the current network bandwidth, CPU utilization, and other factors.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Media Services supports the following adaptive bitrate streaming technologies: HTTP Live Streaming (HLS), Smooth Streaming, MPEG DASH, and HDS (for Adobe PrimeTime/Access licensees only).</source>
            <target state="new">Media Services supports the following adaptive bitrate streaming technologies: HTTP Live Streaming (HLS), Smooth Streaming, MPEG DASH, and HDS (for Adobe PrimeTime/Access licensees only).</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Media Services provides dynamic packaging which allows you to deliver your adaptive bitrate MP4 or Smooth Streaming encoded content in streaming formats supported by Media Services (MPEG DASH, HLS, Smooth Streaming, HDS) without you having to re-package into these streaming formats.</source>
            <target state="new">Media Services provides dynamic packaging which allows you to deliver your adaptive bitrate MP4 or Smooth Streaming encoded content in streaming formats supported by Media Services (MPEG DASH, HLS, Smooth Streaming, HDS) without you having to re-package into these streaming formats.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>To take advantage of dynamic packaging, you need to do the following:</source>
            <target state="new">To take advantage of dynamic packaging, you need to do the following:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Encode or transcode your mezzanine (source) file into a set of adaptive bitrate MP4 files or adaptive bitrate Smooth Streaming files (the encoding steps are demonstrated later in this tutorial),</source>
            <target state="new">Encode or transcode your mezzanine (source) file into a set of adaptive bitrate MP4 files or adaptive bitrate Smooth Streaming files (the encoding steps are demonstrated later in this tutorial),</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Get at least one streaming unit for the <bpt id="2">&lt;strong&gt;</bpt>streaming endpoint<ept id="2">&lt;/strong&gt;</ept> from which you plan to delivery your content.</source>
            <target state="new">Get at least one streaming unit for the <bpt id="2">&lt;strong&gt;</bpt>streaming endpoint<ept id="2">&lt;/strong&gt;</ept> from which you plan to delivery your content.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>With dynamic packaging, you only need to store and pay for the files in single storage format, and Media Services will build and serve the appropriate response based on requests from a client.</source>
            <target state="new">With dynamic packaging, you only need to store and pay for the files in single storage format, and Media Services will build and serve the appropriate response based on requests from a client.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>To change the number of streaming reserved units, do the following:</source>
            <target state="new">To change the number of streaming reserved units, do the following:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Media Services<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Media Services<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Then, click the name of the media service.</source>
            <target state="new">Then, click the name of the media service.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Select the STREAMING ENDPOINTS page.</source>
            <target state="new">Select the STREAMING ENDPOINTS page.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Then, click on the streaming endpoint that you want to modify.</source>
            <target state="new">Then, click on the streaming endpoint that you want to modify.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>To specify the number of streaming units, click the SCALE tab, and then move the <bpt id="2">&lt;strong&gt;</bpt>reserved capacity<ept id="2">&lt;/strong&gt;</ept> slider.</source>
            <target state="new">To specify the number of streaming units, click the SCALE tab, and then move the <bpt id="2">&lt;strong&gt;</bpt>reserved capacity<ept id="2">&lt;/strong&gt;</ept> slider.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Scale page<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Scale page<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Press <bpt id="2">&lt;strong&gt;</bpt>SAVE<ept id="2">&lt;/strong&gt;</ept> to save your changes.</source>
            <target state="new">Press <bpt id="2">&lt;strong&gt;</bpt>SAVE<ept id="2">&lt;/strong&gt;</ept> to save your changes.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The allocation of any new units takes around 20 minutes to complete.</source>
            <target state="new">The allocation of any new units takes around 20 minutes to complete.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Currently, going from any positive value of streaming units back to none can disable streaming for up to an hour.</source>
            <target state="new">Currently, going from any positive value of streaming units back to none can disable streaming for up to an hour.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>The highest number of units specified for the 24-hour period is used in calculating the cost.</source>
            <target state="new">The highest number of units specified for the 24-hour period is used in calculating the cost.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>For information about pricing details, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Media Services pricing details<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about pricing details, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Media Services pricing details<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Create and configure a Visual Studio project</source>
            <target state="new">Create and configure a Visual Studio project</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Create a new C# Console Application in Visual Studio 2013, Visual Studio 2012, or Visual Studio 2010 SP1.</source>
            <target state="new">Create a new C# Console Application in Visual Studio 2013, Visual Studio 2012, or Visual Studio 2010 SP1.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Enter the <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Location<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Solution name<ept id="6">&lt;/strong&gt;</ept>, and then click <bpt id="8">&lt;strong&gt;</bpt>OK<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">Enter the <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Location<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Solution name<ept id="6">&lt;/strong&gt;</ept>, and then click <bpt id="8">&lt;strong&gt;</bpt>OK<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Use the  <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>windowsazure.mediaservices.extensions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> Nuget package to install <bpt id="4">&lt;strong&gt;</bpt>Azure Media Services .NET SDK Extensions<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Use the  <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>windowsazure.mediaservices.extensions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> Nuget package to install <bpt id="4">&lt;strong&gt;</bpt>Azure Media Services .NET SDK Extensions<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>The Media Services .NET SDK Extensions is a set of extension methods and helper functions that will simplify your code and make it easier to develop with Media Services.</source>
            <target state="new">The Media Services .NET SDK Extensions is a set of extension methods and helper functions that will simplify your code and make it easier to develop with Media Services.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Installing this package, also installs <bpt id="2">&lt;strong&gt;</bpt>Media Services .NET SDK<ept id="2">&lt;/strong&gt;</ept> and adds all other required dependencies.</source>
            <target state="new">Installing this package, also installs <bpt id="2">&lt;strong&gt;</bpt>Media Services .NET SDK<ept id="2">&lt;/strong&gt;</ept> and adds all other required dependencies.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Add a reference to System.Configuration assembly.</source>
            <target state="new">Add a reference to System.Configuration assembly.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>This assembly contains the <bpt id="2">&lt;strong&gt;</bpt>System.Configuration.ConfigurationManager<ept id="2">&lt;/strong&gt;</ept> class that is used to access configuration files, for example, App.config.</source>
            <target state="new">This assembly contains the <bpt id="2">&lt;strong&gt;</bpt>System.Configuration.ConfigurationManager<ept id="2">&lt;/strong&gt;</ept> class that is used to access configuration files, for example, App.config.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Open the App.config file (add the file to your project if it was not added by default) and add an <bpt id="2">&lt;em&gt;</bpt>appSettings<ept id="2">&lt;/em&gt;</ept> section to the file.</source>
            <target state="new">Open the App.config file (add the file to your project if it was not added by default) and add an <bpt id="2">&lt;em&gt;</bpt>appSettings<ept id="2">&lt;/em&gt;</ept> section to the file.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Set the values for your Azure Media Services account name and account key, as shown in the following example.</source>
            <target state="new">Set the values for your Azure Media Services account name and account key, as shown in the following example.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>To obtain the account name and key information, open the Azure portal, select your media services account, and then click the <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">To obtain the account name and key information, open the Azure portal, select your media services account, and then click the <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>
 &lt;configuration&gt;
     &lt;appSettings&gt;
     &lt;add key="MediaServicesAccountName" value="Media-Services-Account-Name" /&gt;
         &lt;add key="MediaServicesAccountKey" value="Media-Services-Account-Key" /&gt;
     &lt;/appSettings&gt;
 &lt;/configuration&gt;
 </source>
            <target state="new">
 &lt;configuration&gt;
     &lt;appSettings&gt;
     &lt;add key="MediaServicesAccountName" value="Media-Services-Account-Name" /&gt;
         &lt;add key="MediaServicesAccountKey" value="Media-Services-Account-Key" /&gt;
     &lt;/appSettings&gt;
 &lt;/configuration&gt;
 </target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Overwrite the existing <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements at the beginning of the Program.cs file with the following code.</source>
            <target state="new">Overwrite the existing <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements at the beginning of the Program.cs file with the following code.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Create a new folder under the projects directory and copy an .mp4 or .wmv file that you want to encode and stream or progressively download.</source>
            <target state="new">Create a new folder under the projects directory and copy an .mp4 or .wmv file that you want to encode and stream or progressively download.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>In this example, the "C:\VideoFiles" path is used.</source>
            <target state="new">In this example, the "C:\VideoFiles" path is used.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Connect to the Media Services account</source>
            <target state="new">Connect to the Media Services account</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>When using Media Services with .NET, you must use the <bpt id="2">&lt;strong&gt;</bpt>CloudMediaContext<ept id="2">&lt;/strong&gt;</ept> class for most Media Services programming tasks: connecting to Media Services account; creating, updating, accessing, and deleting the following objects: assets, asset files, jobs, access policies, locators, etc.</source>
            <target state="new">When using Media Services with .NET, you must use the <bpt id="2">&lt;strong&gt;</bpt>CloudMediaContext<ept id="2">&lt;/strong&gt;</ept> class for most Media Services programming tasks: connecting to Media Services account; creating, updating, accessing, and deleting the following objects: assets, asset files, jobs, access policies, locators, etc.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Overwrite the default Program class with the following code.</source>
            <target state="new">Overwrite the default Program class with the following code.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>The code demonstrates how to read the connection values from the App.config file and how to create the <bpt id="2">&lt;strong&gt;</bpt>CloudMediaContext<ept id="2">&lt;/strong&gt;</ept> object in order to connect to Media Services.</source>
            <target state="new">The code demonstrates how to read the connection values from the App.config file and how to create the <bpt id="2">&lt;strong&gt;</bpt>CloudMediaContext<ept id="2">&lt;/strong&gt;</ept> object in order to connect to Media Services.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>For more information about connecting to Media Services, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connecting to Media Services with the Media Services SDK for .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about connecting to Media Services, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connecting to Media Services with the Media Services SDK for .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Main<ept id="2">&lt;/strong&gt;</ept> function calls methods that will be defined further in this section.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Main<ept id="2">&lt;/strong&gt;</ept> function calls methods that will be defined further in this section.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Create a new asset and upload a video file</source>
            <target state="new">Create a new asset and upload a video file</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>In Media Services, you upload (or ingest) your digital files into an asset.</source>
            <target state="new">In Media Services, you upload (or ingest) your digital files into an asset.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Asset<ept id="2">&lt;/strong&gt;</ept> entity can contain video, audio, images, thumbnail collections, text tracks, and closed caption files (and the metadata about these files.)</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Asset<ept id="2">&lt;/strong&gt;</ept> entity can contain video, audio, images, thumbnail collections, text tracks, and closed caption files (and the metadata about these files.)</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Once the files are uploaded, your content is stored securely in the cloud for further processing and streaming.</source>
            <target state="new">Once the files are uploaded, your content is stored securely in the cloud for further processing and streaming.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>The files in the asset are called <bpt id="2">&lt;strong&gt;</bpt>Asset Files<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The files in the asset are called <bpt id="2">&lt;strong&gt;</bpt>Asset Files<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>UploadFile<ept id="2">&lt;/strong&gt;</ept> method defined below calls <bpt id="4">&lt;strong&gt;</bpt>CreateFromFile<ept id="4">&lt;/strong&gt;</ept> (defined in .NET SDK Extensions).</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>UploadFile<ept id="2">&lt;/strong&gt;</ept> method defined below calls <bpt id="4">&lt;strong&gt;</bpt>CreateFromFile<ept id="4">&lt;/strong&gt;</ept> (defined in .NET SDK Extensions).</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CreateFromFile<ept id="1">&lt;/strong&gt;</ept> creates a new asset into which the specified source file is uploaded.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CreateFromFile<ept id="1">&lt;/strong&gt;</ept> creates a new asset into which the specified source file is uploaded.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>CreateFromFile<ept id="2">&lt;/strong&gt;</ept> method takes <bpt id="4">&lt;strong&gt;</bpt>AssetCreationOptions<ept id="4">&lt;/strong&gt;</ept> which lets you specify one of the following asset creation options:</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>CreateFromFile<ept id="2">&lt;/strong&gt;</ept> method takes <bpt id="4">&lt;strong&gt;</bpt>AssetCreationOptions<ept id="4">&lt;/strong&gt;</ept> which lets you specify one of the following asset creation options:</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>None<ept id="1">&lt;/strong&gt;</ept> - No encryption is used.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>None<ept id="1">&lt;/strong&gt;</ept> - No encryption is used.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>This is the default value.</source>
            <target state="new">This is the default value.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Note that when using this option, your content is not protected in transit or at rest in storage.</source>
            <target state="new">Note that when using this option, your content is not protected in transit or at rest in storage.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>If you plan to deliver an MP4 using progressive download, use this option.</source>
            <target state="new">If you plan to deliver an MP4 using progressive download, use this option.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>StorageEncrypted<ept id="1">&lt;/strong&gt;</ept> - Use this option to encrypt your clear content locally using Advanced Encryption Standard (AES)-256 bit encryption, which then uploads it to Azure Storage where it is stored encrypted at rest.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>StorageEncrypted<ept id="1">&lt;/strong&gt;</ept> - Use this option to encrypt your clear content locally using Advanced Encryption Standard (AES)-256 bit encryption, which then uploads it to Azure Storage where it is stored encrypted at rest.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Assets protected with Storage Encryption are automatically unencrypted and placed in an encrypted file system prior to encoding, and optionally re-encrypted prior to uploading back as a new output asset.</source>
            <target state="new">Assets protected with Storage Encryption are automatically unencrypted and placed in an encrypted file system prior to encoding, and optionally re-encrypted prior to uploading back as a new output asset.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>The primary use case for Storage Encryption is when you want to secure your high-quality input media files with strong encryption at rest on disk.</source>
            <target state="new">The primary use case for Storage Encryption is when you want to secure your high-quality input media files with strong encryption at rest on disk.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CommonEncryptionProtected<ept id="1">&lt;/strong&gt;</ept> - Use this option if you are uploading content that has already been encrypted and protected with Common Encryption or PlayReady DRM (for example, Smooth Streaming protected with PlayReady DRM).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CommonEncryptionProtected<ept id="1">&lt;/strong&gt;</ept> - Use this option if you are uploading content that has already been encrypted and protected with Common Encryption or PlayReady DRM (for example, Smooth Streaming protected with PlayReady DRM).</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>EnvelopeEncryptionProtected<ept id="1">&lt;/strong&gt;</ept> – Use this option if you are uploading HLS encrypted with AES.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>EnvelopeEncryptionProtected<ept id="1">&lt;/strong&gt;</ept> – Use this option if you are uploading HLS encrypted with AES.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Note that the files must have been encoded and encrypted by Transform Manager.</source>
            <target state="new">Note that the files must have been encoded and encrypted by Transform Manager.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>CreateFromFile<ept id="2">&lt;/strong&gt;</ept> method also lets you specify a callback in order to report the upload progress of the file.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>CreateFromFile<ept id="2">&lt;/strong&gt;</ept> method also lets you specify a callback in order to report the upload progress of the file.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>In the following example, we specify <bpt id="2">&lt;strong&gt;</bpt>None<ept id="2">&lt;/strong&gt;</ept> for the asset options.</source>
            <target state="new">In the following example, we specify <bpt id="2">&lt;strong&gt;</bpt>None<ept id="2">&lt;/strong&gt;</ept> for the asset options.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Add the following method to the Program class.</source>
            <target state="new">Add the following method to the Program class.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Encode the source file into a set of adaptive bitrate MP4 files</source>
            <target state="new">Encode the source file into a set of adaptive bitrate MP4 files</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>After ingesting assets into Media Services, media can be encoded, transmuxed, watermarked, and so on, before it is delivered to clients.</source>
            <target state="new">After ingesting assets into Media Services, media can be encoded, transmuxed, watermarked, and so on, before it is delivered to clients.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>These activities are scheduled and run against multiple background role instances to ensure high performance and availability.</source>
            <target state="new">These activities are scheduled and run against multiple background role instances to ensure high performance and availability.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>These activities are called Jobs, and each Job is comprised of atomic Tasks that do the actual work on the Asset file.</source>
            <target state="new">These activities are called Jobs, and each Job is comprised of atomic Tasks that do the actual work on the Asset file.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>As was mentioned earlier, when working with Azure Media Services, one of the most common scenarios is delivering adaptive bitrate streaming to your clients.</source>
            <target state="new">As was mentioned earlier, when working with Azure Media Services, one of the most common scenarios is delivering adaptive bitrate streaming to your clients.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Media Services can dynamically package a set of adaptive bitrate MP4 files into one of the following formats: HTTP Live Streaming (HLS), Smooth Streaming, MPEG DASH, and HDS (for Adobe PrimeTime/Access licensees only).</source>
            <target state="new">Media Services can dynamically package a set of adaptive bitrate MP4 files into one of the following formats: HTTP Live Streaming (HLS), Smooth Streaming, MPEG DASH, and HDS (for Adobe PrimeTime/Access licensees only).</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>To take advantage of dynamic packaging, you need to do the following:</source>
            <target state="new">To take advantage of dynamic packaging, you need to do the following:</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Encode or transcode your mezzanine (source) file into a set of adaptive bitrate MP4 files or adaptive bitrate Smooth Streaming files.</source>
            <target state="new">Encode or transcode your mezzanine (source) file into a set of adaptive bitrate MP4 files or adaptive bitrate Smooth Streaming files.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Get at least one streaming unit for the streaming endpoint from which you plan to delivery your content.</source>
            <target state="new">Get at least one streaming unit for the streaming endpoint from which you plan to delivery your content.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>The following code shows how to submit an encoding job.</source>
            <target state="new">The following code shows how to submit an encoding job.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>The job contains one task that specifies to transcode the mezzanine file into a set of adaptive bitrate MP4s using <bpt id="2">&lt;strong&gt;</bpt>Azure Media Encoder<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The job contains one task that specifies to transcode the mezzanine file into a set of adaptive bitrate MP4s using <bpt id="2">&lt;strong&gt;</bpt>Azure Media Encoder<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>The code submits the job and waits until it is completed.</source>
            <target state="new">The code submits the job and waits until it is completed.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Once the job is completed, you would be able to stream your asset or progressively download MP4 files that were created as a result of transcoding.</source>
            <target state="new">Once the job is completed, you would be able to stream your asset or progressively download MP4 files that were created as a result of transcoding.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Note that you do not need to have more than 0 streaming units in order to progressively download MP4 files.</source>
            <target state="new">Note that you do not need to have more than 0 streaming units in order to progressively download MP4 files.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Add the following method to the Program class.</source>
            <target state="new">Add the following method to the Program class.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Publish the asset and get URLs for streaming and progressive download</source>
            <target state="new">Publish the asset and get URLs for streaming and progressive download</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>To stream or download an asset, you first need to "publish" it by creating a locator.</source>
            <target state="new">To stream or download an asset, you first need to "publish" it by creating a locator.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Locators provide access to files contained in the asset.</source>
            <target state="new">Locators provide access to files contained in the asset.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Media Services supports two types of locators: OnDemandOrigin locators, used to stream media (for example, MPEG DASH, HLS, or Smooth Streaming) and Access Signature (SAS) locators, used to download media files.</source>
            <target state="new">Media Services supports two types of locators: OnDemandOrigin locators, used to stream media (for example, MPEG DASH, HLS, or Smooth Streaming) and Access Signature (SAS) locators, used to download media files.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>After you create the locators, you can build the URLs that are used to stream or download your files.</source>
            <target state="new">After you create the locators, you can build the URLs that are used to stream or download your files.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>A streaming URL for Smooth Streaming has the following format:</source>
            <target state="new">A streaming URL for Smooth Streaming has the following format:</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>A streaming URL for HLS has the following format:</source>
            <target state="new">A streaming URL for HLS has the following format:</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>A streaming URL for MPEG DASH has the following format:</source>
            <target state="new">A streaming URL for MPEG DASH has the following format:</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>A SAS URL used to download files has the following format:</source>
            <target state="new">A SAS URL used to download files has the following format:</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>Media Services .NET SDK extensions provide convenient helper methods that return formatted URLs for the published asset.</source>
            <target state="new">Media Services .NET SDK extensions provide convenient helper methods that return formatted URLs for the published asset.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>The following code uses .NET SDK Extensions to create locators and to get streaming and progressive download URLs.</source>
            <target state="new">The following code uses .NET SDK Extensions to create locators and to get streaming and progressive download URLs.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>The code also shows how to download files to a local folder.</source>
            <target state="new">The code also shows how to download files to a local folder.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Add the following method to the Program class.</source>
            <target state="new">Add the following method to the Program class.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Play your content</source>
            <target state="new">Play your content</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>Once you run the program defined in the previous section, the URLs similar to the following will be displayed in the console window.</source>
            <target state="new">Once you run the program defined in the previous section, the URLs similar to the following will be displayed in the console window.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Adaptive streaming URLs:</source>
            <target state="new">Adaptive streaming URLs:</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Smooth Streaming</source>
            <target state="new">Smooth Streaming</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>HLS</source>
            <target state="new">HLS</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>MPEG DASH</source>
            <target state="new">MPEG DASH</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>Progressive download URLs (audio and video).</source>
            <target state="new">Progressive download URLs (audio and video).</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>To stream you video, use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services Player<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To stream you video, use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services Player<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>To test progressive download, paste a URL into a browser (for example, Internet Explorer, Chrome, or Safari).</source>
            <target state="new">To test progressive download, paste a URL into a browser (for example, Internet Explorer, Chrome, or Safari).</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>Next step</source>
            <target state="new">Next step</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>To learn more about building Video-on-Demand applications, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build VoD applications<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more about building Video-on-Demand applications, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build VoD applications<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>Additional resources</source>
            <target state="new">Additional resources</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Azure Media Services 101 - Get your video online now!<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Azure Media Services 101 - Get your video online now!<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Azure Media Services 102 - Dynamic packaging and mobile devices<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Azure Media Services 102 - Dynamic packaging and mobile devices<bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>