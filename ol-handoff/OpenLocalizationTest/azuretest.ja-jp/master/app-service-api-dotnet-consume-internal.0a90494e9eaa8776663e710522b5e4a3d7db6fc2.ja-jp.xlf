<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 8:35:29 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15e04407166aecab9328c3c5e2eea97048c0ed0c</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Consume an internal API app in Azure App Service from a .NET client</source>
            <target state="new">Consume an internal API app in Azure App Service from a .NET client</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to consume an API app from a .NET API app in the same resource group, using the App Service SDK.</source>
            <target state="new">Learn how to consume an API app from a .NET API app in the same resource group, using the App Service SDK.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Consume an internal API app in Azure App Service from a .NET client</source>
            <target state="new">Consume an internal API app in Azure App Service from a .NET client</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This tutorial shows how to write code for an ASP.NET <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that calls another API app configured for <bpt id="4">&lt;strong&gt;</bpt>Internal<ept id="4">&lt;/strong&gt;</ept> access level.</source>
            <target state="new">This tutorial shows how to write code for an ASP.NET <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that calls another API app configured for <bpt id="4">&lt;strong&gt;</bpt>Internal<ept id="4">&lt;/strong&gt;</ept> access level.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Both API apps must be in the same resource group.</source>
            <target state="new">Both API apps must be in the same resource group.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The same code can be used to call an internal API app from a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>mobile app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The same code can be used to call an internal API app from a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>mobile app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>You'll build a ContactNames Web API.</source>
            <target state="new">You'll build a ContactNames Web API.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The Web API's Get method will call a ContactsList API app and return just the names out of the contact information provided by the ContactsList API app.</source>
            <target state="new">The Web API's Get method will call a ContactsList API app and return just the names out of the contact information provided by the ContactsList API app.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Here's the Swagger UI screen for a successful call to the ContactNames Get method.</source>
            <target state="new">Here's the Swagger UI screen for a successful call to the ContactNames Get method.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For information about how to call API apps that are configured for <bpt id="2">&lt;strong&gt;</bpt>Public (anonymous)<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>Public (authenticated)<ept id="4">&lt;/strong&gt;</ept> access levels, see <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about how to call API apps that are configured for <bpt id="2">&lt;strong&gt;</bpt>Public (anonymous)<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>Public (authenticated)<ept id="4">&lt;/strong&gt;</ept> access levels, see <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The tutorial assumes that you are familiar with how to create projects and add code to them in Visual Studio, and how to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>manage API apps in the Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The tutorial assumes that you are familiar with how to create projects and add code to them in Visual Studio, and how to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>manage API apps in the Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The project and code samples in this article are based on the API app project that you create and deploy in these articles:</source>
            <target state="new">The project and code samples in this article are based on the API app project that you create and deploy in these articles:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create an API app<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create an API app<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/install-sdk-2013-only.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/install-sdk-2013-only.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>This tutorial requires version 2.6 or later of the Azure SDK for .NET.</source>
            <target state="new">This tutorial requires version 2.6 or later of the Azure SDK for .NET.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Set up the target API app</source>
            <target state="new">Set up the target API app</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>If you haven't already done so, follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> tutorial to deploy the ContactsList sample project to an API app in your Azure subscription.</source>
            <target state="new">If you haven't already done so, follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> tutorial to deploy the ContactsList sample project to an API app in your Azure subscription.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, in the <bpt id="4">&lt;strong&gt;</bpt>API app<ept id="4">&lt;/strong&gt;</ept> blade for the ContactsList API app that you deployed earlier, click <bpt id="6">&lt;strong&gt;</bpt>Settings &gt; Application Settings<ept id="6">&lt;/strong&gt;</ept> and set <bpt id="8">&lt;strong&gt;</bpt>Access level<ept id="8">&lt;/strong&gt;</ept> to <bpt id="10">&lt;strong&gt;</bpt>Internal<ept id="10">&lt;/strong&gt;</ept>, and then click <bpt id="12">&lt;strong&gt;</bpt>Save<ept id="12">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure preview portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, in the <bpt id="4">&lt;strong&gt;</bpt>API app<ept id="4">&lt;/strong&gt;</ept> blade for the ContactsList API app that you deployed earlier, click <bpt id="6">&lt;strong&gt;</bpt>Settings &gt; Application Settings<ept id="6">&lt;/strong&gt;</ept> and set <bpt id="8">&lt;strong&gt;</bpt>Access level<ept id="8">&lt;/strong&gt;</ept> to <bpt id="10">&lt;strong&gt;</bpt>Internal<ept id="10">&lt;/strong&gt;</ept>, and then click <bpt id="12">&lt;strong&gt;</bpt>Save<ept id="12">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Create a new API app that will call the existing API app</source>
            <target state="new">Create a new API app that will call the existing API app</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In Visual Studio, create an API app project named ContactNames by using the Azure API app project template.</source>
            <target state="new">In Visual Studio, create an API app project named ContactNames by using the Azure API app project template.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>This is the same process that you followed in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but you'll add different code to the project later in this tutorial.</source>
            <target state="new">This is the same process that you followed in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but you'll add different code to the project later in this tutorial.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Add App Service SDK generated client code</source>
            <target state="new">Add App Service SDK generated client code</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The following steps are explained in more detail in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The following steps are explained in more detail in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept>, right-click the project (not the solution) and select <bpt id="4">&lt;strong&gt;</bpt>Add &gt; Azure API App Client<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept>, right-click the project (not the solution) and select <bpt id="4">&lt;strong&gt;</bpt>Add &gt; Azure API App Client<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Add Azure API App Client<ept id="2">&lt;/strong&gt;</ept> dialog, click <bpt id="4">&lt;strong&gt;</bpt>Download from Azure API App<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Add Azure API App Client<ept id="2">&lt;/strong&gt;</ept> dialog, click <bpt id="4">&lt;strong&gt;</bpt>Download from Azure API App<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>From the drop-down list, select the API app that you want to call.</source>
            <target state="new">From the drop-down list, select the API app that you want to call.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For this tutorial choose the ContactsList API app that you created earlier.</source>
            <target state="new">For this tutorial choose the ContactsList API app that you created earlier.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Enable Swagger UI</source>
            <target state="new">Enable Swagger UI</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>By default, API App projects are enabled with automatic <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Swagger<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt>Official Swagger information<ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> metadata generation, but the Azure API App new-project template disables the API test page.</source>
            <target state="new">By default, API App projects are enabled with automatic <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Swagger<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt>Official Swagger information<ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> metadata generation, but the Azure API App new-project template disables the API test page.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>In this section you enable the test page.</source>
            <target state="new">In this section you enable the test page.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Open the <bpt id="2">&lt;em&gt;</bpt>App_Start/SwaggerConfig.cs<ept id="2">&lt;/em&gt;</ept> file, and search for <bpt id="4">&lt;strong&gt;</bpt>EnableSwaggerUI<ept id="4">&lt;/strong&gt;</ept>:</source>
            <target state="new">Open the <bpt id="2">&lt;em&gt;</bpt>App_Start/SwaggerConfig.cs<ept id="2">&lt;/em&gt;</ept> file, and search for <bpt id="4">&lt;strong&gt;</bpt>EnableSwaggerUI<ept id="4">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Uncomment the following lines of code:</source>
            <target state="new">Uncomment the following lines of code:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Create a controller</source>
            <target state="new">Create a controller</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Right-click the <bpt id="2">&lt;strong&gt;</bpt>Controllers<ept id="2">&lt;/strong&gt;</ept> folder, and select <bpt id="4">&lt;strong&gt;</bpt>Add &gt; Controller<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click the <bpt id="2">&lt;strong&gt;</bpt>Controllers<ept id="2">&lt;/strong&gt;</ept> folder, and select <bpt id="4">&lt;strong&gt;</bpt>Add &gt; Controller<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Add Scaffold<ept id="2">&lt;/strong&gt;</ept> dialog, select the <bpt id="4">&lt;strong&gt;</bpt>Web API 2 Controller - Empty<ept id="4">&lt;/strong&gt;</ept> option, and click <bpt id="6">&lt;strong&gt;</bpt>Add<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Add Scaffold<ept id="2">&lt;/strong&gt;</ept> dialog, select the <bpt id="4">&lt;strong&gt;</bpt>Web API 2 Controller - Empty<ept id="4">&lt;/strong&gt;</ept> option, and click <bpt id="6">&lt;strong&gt;</bpt>Add<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Name the controller <bpt id="2">&lt;strong&gt;</bpt>ContactNamesController<ept id="2">&lt;/strong&gt;</ept>, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Name the controller <bpt id="2">&lt;strong&gt;</bpt>ContactNamesController<ept id="2">&lt;/strong&gt;</ept>, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Add code to call the API app</source>
            <target state="new">Add code to call the API app</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>To call an API app that has been protected by setting its access level to <bpt id="2">&lt;strong&gt;</bpt>Internal<ept id="2">&lt;/strong&gt;</ept>, you have to add</source>
            <target state="new">To call an API app that has been protected by setting its access level to <bpt id="2">&lt;strong&gt;</bpt>Internal<ept id="2">&lt;/strong&gt;</ept>, you have to add</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>internal authentication headers to HTTP requests.</source>
            <target state="new">internal authentication headers to HTTP requests.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>These headers inform the target API app that the source of the call is a peer API app calling from within the same resource group.</source>
            <target state="new">These headers inform the target API app that the source of the call is a peer API app calling from within the same resource group.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The App Service SDK generates client classes that simplify the code you write to call API app.</source>
            <target state="new">The App Service SDK generates client classes that simplify the code you write to call API app.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>To call a <bpt id="2">&lt;strong&gt;</bpt>Public (anonymous)<ept id="2">&lt;/strong&gt;</ept> API app all you have to do is create a client object and call methods on it, as in this example:</source>
            <target state="new">To call a <bpt id="2">&lt;strong&gt;</bpt>Public (anonymous)<ept id="2">&lt;/strong&gt;</ept> API app all you have to do is create a client object and call methods on it, as in this example:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>However, to add authentication headers you need access to the <bpt id="2">&lt;code&gt;</bpt>HttpRequestMessage<ept id="2">&lt;/code&gt;</ept> object and you don't have that here.</source>
            <target state="new">However, to add authentication headers you need access to the <bpt id="2">&lt;code&gt;</bpt>HttpRequestMessage<ept id="2">&lt;/code&gt;</ept> object and you don't have that here.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>To get access to the request and add the headers you have to create a <bpt id="2">&lt;code&gt;</bpt>DelegatingHandler<ept id="2">&lt;/code&gt;</ept> class and pass in an instance of it to the constructor of the generated client.</source>
            <target state="new">To get access to the request and add the headers you have to create a <bpt id="2">&lt;code&gt;</bpt>DelegatingHandler<ept id="2">&lt;/code&gt;</ept> class and pass in an instance of it to the constructor of the generated client.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Add to the project a class file named <bpt id="2">&lt;em&gt;</bpt>InternalCredentialHandler.cs<ept id="2">&lt;/em&gt;</ept>, and replace the template code with the following code.</source>
            <target state="new">Add to the project a class file named <bpt id="2">&lt;em&gt;</bpt>InternalCredentialHandler.cs<ept id="2">&lt;/em&gt;</ept>, and replace the template code with the following code.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This code calls <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> to add the authentication headers to every request sent by the generated client class:</source>
            <target state="new">This code calls <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> to add the authentication headers to every request sent by the generated client class:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>In <bpt id="2">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="2">&lt;/em&gt;</ept>, replace the template code with the following code.</source>
            <target state="new">In <bpt id="2">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="2">&lt;/em&gt;</ept>, replace the template code with the following code.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>This code passes in the handler to the constructor of the generated client class:</source>
            <target state="new">This code passes in the handler to the constructor of the generated client class:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Deploy</source>
            <target state="new">Deploy</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>You can't test by running locally.</source>
            <target state="new">You can't test by running locally.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>You have to deploy the code and run it in an Azure API app; otherwise you won't be able to add the right authentication headers, and the calls will be rejected.</source>
            <target state="new">You have to deploy the code and run it in an Azure API app; otherwise you won't be able to add the right authentication headers, and the calls will be rejected.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>The following deployment steps are explained in more detail in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The following deployment steps are explained in more detail in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Create a ContactNames API app.</source>
            <target state="new">Create a ContactNames API app.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept>, right-click the project (not the solution) and click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept>, right-click the project (not the solution) and click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Profile<ept id="2">&lt;/strong&gt;</ept> tab, and then click <bpt id="4">&lt;strong&gt;</bpt>Microsoft Azure API Apps<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Profile<ept id="2">&lt;/strong&gt;</ept> tab, and then click <bpt id="4">&lt;strong&gt;</bpt>Microsoft Azure API Apps<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>New<ept id="2">&lt;/strong&gt;</ept> to provision a new API App in your Azure subscription.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>New<ept id="2">&lt;/strong&gt;</ept> to provision a new API App in your Azure subscription.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Create an API App<ept id="2">&lt;/strong&gt;</ept> dialog, enter ContactNames as the <bpt id="4">&lt;strong&gt;</bpt>API App Name<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Create an API App<ept id="2">&lt;/strong&gt;</ept> dialog, enter ContactNames as the <bpt id="4">&lt;strong&gt;</bpt>API App Name<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>For the other values in the <bpt id="2">&lt;strong&gt;</bpt>Create an API App<ept id="2">&lt;/strong&gt;</ept> dialog, enter the same values that you entered earlier for the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For the other values in the <bpt id="2">&lt;strong&gt;</bpt>Create an API App<ept id="2">&lt;/strong&gt;</ept> dialog, enter the same values that you entered earlier for the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Deploy an API app<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Most importantly, make sure you create the new API app in the same resource group as the API app you're going to call.</source>
            <target state="new">Most importantly, make sure you create the new API app in the same resource group as the API app you're going to call.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Deploy your code to the new API app.</source>
            <target state="new">Deploy your code to the new API app.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Once the API app is provisioned, right-click the project in <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept> to re-open the publish dialog.</source>
            <target state="new">Once the API app is provisioned, right-click the project in <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept> to re-open the publish dialog.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Publish Web<ept id="2">&lt;/strong&gt;</ept> dialog, click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept> to begin the deployment process.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Publish Web<ept id="2">&lt;/strong&gt;</ept> dialog, click <bpt id="4">&lt;strong&gt;</bpt>Publish<ept id="4">&lt;/strong&gt;</ept> to begin the deployment process.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Test</source>
            <target state="new">Test</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>In this section you use the Swagger UI to test the new API app and verify that it can call the API app you created earlier.</source>
            <target state="new">In this section you use the Swagger UI to test the new API app and verify that it can call the API app you created earlier.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Open a browser to the new API app's URL.</source>
            <target state="new">Open a browser to the new API app's URL.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>With the default publish settings, when Visual Studio completes the publish process it automatically opens a browser to the URL of the API app.</source>
            <target state="new">With the default publish settings, when Visual Studio completes the publish process it automatically opens a browser to the URL of the API app.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>If that doesn't happen, or you have closed that browser window, follow these steps to get to the same URL:</source>
            <target state="new">If that doesn't happen, or you have closed that browser window, follow these steps to get to the same URL:</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>In the Azure preview portal, go to the API App blade for the new ContactsName API app.</source>
            <target state="new">In the Azure preview portal, go to the API App blade for the new ContactsName API app.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>URL<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>URL<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>In the browser address bar, add <bpt id="2">&lt;code&gt;</bpt>/swagger<ept id="2">&lt;/code&gt;</ept> to the end of the URL, and press Enter.</source>
            <target state="new">In the browser address bar, add <bpt id="2">&lt;code&gt;</bpt>/swagger<ept id="2">&lt;/code&gt;</ept> to the end of the URL, and press Enter.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>For example, the resulting URL will look like this:</source>
            <target state="new">For example, the resulting URL will look like this:</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>In the Swagger UI page, click <bpt id="2">&lt;strong&gt;</bpt>ContactNames &gt; Get &gt; Try it out!<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">In the Swagger UI page, click <bpt id="2">&lt;strong&gt;</bpt>ContactNames &gt; Get &gt; Try it out!<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>The page displays contact names in the Response Body section, which verifies that the ContactNames API app successfully retrieved data from the ContactsList API app.</source>
            <target state="new">The page displays contact names in the Response Body section, which verifies that the ContactNames API app successfully retrieved data from the ContactsList API app.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>If you want to verify that the <bpt id="2">&lt;strong&gt;</bpt>Internal<ept id="2">&lt;/strong&gt;</ept> setting is protecting the ContactsList API app, comment out the <bpt id="4">&lt;code&gt;</bpt>SignHttpRequest<ept id="4">&lt;/code&gt;</ept> call in <bpt id="6">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="6">&lt;/em&gt;</ept>, redeploy, run Swagger <bpt id="8">&lt;strong&gt;</bpt>Try it now<ept id="8">&lt;/strong&gt;</ept> again, and you'll get an error message.</source>
            <target state="new">If you want to verify that the <bpt id="2">&lt;strong&gt;</bpt>Internal<ept id="2">&lt;/strong&gt;</ept> setting is protecting the ContactsList API app, comment out the <bpt id="4">&lt;code&gt;</bpt>SignHttpRequest<ept id="4">&lt;/code&gt;</ept> call in <bpt id="6">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="6">&lt;/em&gt;</ept>, redeploy, run Swagger <bpt id="8">&lt;strong&gt;</bpt>Try it now<ept id="8">&lt;/strong&gt;</ept> again, and you'll get an error message.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Add code to call the API app by using HttpClient</source>
            <target state="new">Add code to call the API app by using HttpClient</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>The App Service SDK depends on Swagger API definitions to generate client classes.</source>
            <target state="new">The App Service SDK depends on Swagger API definitions to generate client classes.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>If you want to call an API app that has not implemented Swagger API definitions, you can do so using <bpt id="2">&lt;code&gt;</bpt>HttpClient<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">If you want to call an API app that has not implemented Swagger API definitions, you can do so using <bpt id="2">&lt;code&gt;</bpt>HttpClient<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>In this case, you still use the <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> method, but you call it directly on the <bpt id="4">&lt;code&gt;</bpt>HttpRequestMessage<ept id="4">&lt;/code&gt;</ept> object.</source>
            <target state="new">In this case, you still use the <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> method, but you call it directly on the <bpt id="4">&lt;code&gt;</bpt>HttpRequestMessage<ept id="4">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>In <bpt id="2">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="2">&lt;/em&gt;</ept>, add the following code before the <bpt id="4">&lt;code&gt;</bpt>return names;<ept id="4">&lt;/code&gt;</ept> statement in the <bpt id="6">&lt;code&gt;</bpt>Get<ept id="6">&lt;/code&gt;</ept> method.</source>
            <target state="new">In <bpt id="2">&lt;em&gt;</bpt>ContactNamesController.cs<ept id="2">&lt;/em&gt;</ept>, add the following code before the <bpt id="4">&lt;code&gt;</bpt>return names;<ept id="4">&lt;/code&gt;</ept> statement in the <bpt id="6">&lt;code&gt;</bpt>Get<ept id="6">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>This code passes in the incoming request object to the <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> method to sign the outgoing request object:</source>
            <target state="new">This code passes in the incoming request object to the <bpt id="2">&lt;code&gt;</bpt>SignHttpRequest<ept id="2">&lt;/code&gt;</ept> method to sign the outgoing request object:</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>In the Azure preview portal, go to the API app blade for the ContactsList API app, and copy the URL.</source>
            <target state="new">In the Azure preview portal, go to the API app blade for the ContactsList API app, and copy the URL.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Replace the placeholder string "{yourapiappurl}" in the controller code with the actual URL.</source>
            <target state="new">Replace the placeholder string "{yourapiappurl}" in the controller code with the actual URL.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>When you're done, that line of code will look like the following example.</source>
            <target state="new">When you're done, that line of code will look like the following example.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Deploy and test</source>
            <target state="new">Deploy and test</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Follow the same procedure you did earlier to deploy the API app code.</source>
            <target state="new">Follow the same procedure you did earlier to deploy the API app code.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Hint:<ept id="1">&lt;/strong&gt;</ept> You can bypass the <bpt id="3">&lt;strong&gt;</bpt>Publish Web<ept id="3">&lt;/strong&gt;</ept> dialog and redeploy by clicking a single button in the toolbar.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Hint:<ept id="1">&lt;/strong&gt;</ept> You can bypass the <bpt id="3">&lt;strong&gt;</bpt>Publish Web<ept id="3">&lt;/strong&gt;</ept> dialog and redeploy by clicking a single button in the toolbar.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>In Visual Studio, click <bpt id="2">&lt;strong&gt;</bpt>View &gt; Toolbars<ept id="2">&lt;/strong&gt;</ept>, and enable the <bpt id="4">&lt;strong&gt;</bpt>Web One Click Publish<ept id="4">&lt;/strong&gt;</ept> toolbar.</source>
            <target state="new">In Visual Studio, click <bpt id="2">&lt;strong&gt;</bpt>View &gt; Toolbars<ept id="2">&lt;/strong&gt;</ept>, and enable the <bpt id="4">&lt;strong&gt;</bpt>Web One Click Publish<ept id="4">&lt;/strong&gt;</ept> toolbar.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Follow the procedure you did earlier to use the Swagger UI.</source>
            <target state="new">Follow the procedure you did earlier to use the Swagger UI.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Since you left in the HttpClient code, the output this time shows a duplicate set of names.</source>
            <target state="new">Since you left in the HttpClient code, the output this time shows a duplicate set of names.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>This article has shown how to consume an internal API app from a .NET client.</source>
            <target state="new">This article has shown how to consume an internal API app from a .NET client.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>For information about how to consume API apps that are set to <bpt id="2">&lt;strong&gt;</bpt>Public (authenticated)<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Public (anonymous)<ept id="4">&lt;/strong&gt;</ept> access levels, see <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about how to consume API apps that are set to <bpt id="2">&lt;strong&gt;</bpt>Public (authenticated)<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Public (anonymous)<ept id="4">&lt;/strong&gt;</ept> access levels, see <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Consume an API app from a .NET client in Azure App Service<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>For additional examples of code that calls an API app from .NET clients, download the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Cards<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> sample application.</source>
            <target state="new">For additional examples of code that calls an API app from .NET clients, download the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Cards<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> sample application.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>For information about authentication in App Service, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authentication for API apps and mobile apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about authentication in App Service, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authentication for API apps and mobile apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>