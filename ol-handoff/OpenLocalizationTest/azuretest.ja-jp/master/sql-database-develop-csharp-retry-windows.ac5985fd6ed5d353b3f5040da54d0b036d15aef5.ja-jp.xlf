<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:31:55 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c7a12c12b4944c0a9d637d7405f8887bc489d25</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Code sample: Retry logic in C# for connecting to SQL Database | Microsoft Azure</source>
            <target state="new">Code sample: Retry logic in C# for connecting to SQL Database | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>C# sample includes robust retry logic for interacting with Azure SQL Database.</source>
            <target state="new">C# sample includes robust retry logic for interacting with Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Code sample: Retry logic in C# for connecting to SQL Database</source>
            <target state="new">Code sample: Retry logic in C# for connecting to SQL Database</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/sql-database-develop-includes-selector-language-platform-depth.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic provides a C# code sample that demonstrates custom retry logic.</source>
            <target state="new">This topic provides a C# code sample that demonstrates custom retry logic.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The retry logic is designed to gracefully process temporary errors or <bpt id="2">&lt;em&gt;</bpt>transient faults<ept id="2">&lt;/em&gt;</ept> that tend to go away if the program waits a few seconds and retries.</source>
            <target state="new">The retry logic is designed to gracefully process temporary errors or <bpt id="2">&lt;em&gt;</bpt>transient faults<ept id="2">&lt;/em&gt;</ept> that tend to go away if the program waits a few seconds and retries.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>ADO.NET classes that you use to connect to your local Microsoft SQL Server can also connect to Azure SQL Database.</source>
            <target state="new">ADO.NET classes that you use to connect to your local Microsoft SQL Server can also connect to Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>However, by themselves the ADO.NET classes cannot provide all the robustness and reliability necessary in production use.</source>
            <target state="new">However, by themselves the ADO.NET classes cannot provide all the robustness and reliability necessary in production use.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Your client program can encounter transient faults from which it should silently and gracefully recover on its own.</source>
            <target state="new">Your client program can encounter transient faults from which it should silently and gracefully recover on its own.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>A couple examples of transient faults:</source>
            <target state="new">A couple examples of transient faults:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>A connection over the Internet is subject to brief network outages, after which the connection can be recreated.</source>
            <target state="new">A connection over the Internet is subject to brief network outages, after which the connection can be recreated.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Cloud computing involves load balancing which can briefly block attempts to connect or query.</source>
            <target state="new">Cloud computing involves load balancing which can briefly block attempts to connect or query.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Identify transient errors</source>
            <target state="new">Identify transient errors</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Your program must distinguish between transient errors versus persistent errors.</source>
            <target state="new">Your program must distinguish between transient errors versus persistent errors.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>If you program has a misspelling of the target database name, the "No such database found" error will persist and will reoccur every time you rerun the program.</source>
            <target state="new">If you program has a misspelling of the target database name, the "No such database found" error will persist and will reoccur every time you rerun the program.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The list of error numbers that are categorized as transient faults is available at:</source>
            <target state="new">The list of error numbers that are categorized as transient faults is available at:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Error messages for SQL Database client programs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Error messages for SQL Database client programs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>See the section about <bpt id="2">&lt;em&gt;</bpt>Transient Errors, Connection-Loss Errors<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">See the section about <bpt id="2">&lt;em&gt;</bpt>Transient Errors, Connection-Loss Errors<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>C# code sample</source>
            <target state="new">C# code sample</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The C# code sample in the present topic contains custom detection and retry logic to handle transient errors.</source>
            <target state="new">The C# code sample in the present topic contains custom detection and retry logic to handle transient errors.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The code sample follows a few basic guidelines or recommendations that apply regardless of which technology you use to interact with Azure SQL Database.</source>
            <target state="new">The code sample follows a few basic guidelines or recommendations that apply regardless of which technology you use to interact with Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>You can see the general recommendations at:</source>
            <target state="new">You can see the general recommendations at:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Connecting to SQL Database: Links, Best Practices and Design Guidelines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Connecting to SQL Database: Links, Best Practices and Design Guidelines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The C# code sample consists of the two .cs files whose content is pasted into the sections that follow.</source>
            <target state="new">The C# code sample consists of the two .cs files whose content is pasted into the sections that follow.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Their file names are:</source>
            <target state="new">Their file names are:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Program.cs<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Program.cs<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Custom_SqlDatabaseTransientErrorDetectionStrategy.cs<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Custom_SqlDatabaseTransientErrorDetectionStrategy.cs<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Compile and run the code sample</source>
            <target state="new">Compile and run the code sample</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>You can compile the sample with the following steps:</source>
            <target state="new">You can compile the sample with the following steps:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In Visual Studio, create a new project from the C# Console Application template.</source>
            <target state="new">In Visual Studio, create a new project from the C# Console Application template.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Right-click your project, and then add the .cs for which source code is provided in this topic.</source>
            <target state="new">Right-click your project, and then add the .cs for which source code is provided in this topic.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In a <bpt id="2">&lt;code&gt;</bpt>cmd.exe<ept id="2">&lt;/code&gt;</ept> command window, run the program as shown next.</source>
            <target state="new">In a <bpt id="2">&lt;code&gt;</bpt>cmd.exe<ept id="2">&lt;/code&gt;</ept> command window, run the program as shown next.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Actual output from a run is also shown.</source>
            <target state="new">Actual output from a run is also shown.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The C# source code for the .cs files are in the following sections.</source>
            <target state="new">The C# source code for the .cs files are in the following sections.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Program.cs file</source>
            <target state="new">Program.cs file</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The demo program is designed so that:</source>
            <target state="new">The demo program is designed so that:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>A transient fault during an attempt to connect leads to a retry.</source>
            <target state="new">A transient fault during an attempt to connect leads to a retry.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>A transient error during a query command causes the program to discard the connection and create a new connection, before retrying the query command.</source>
            <target state="new">A transient error during a query command causes the program to discard the connection and create a new connection, before retrying the query command.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Microsoft neither recommends nor dis-recommends this design choice.</source>
            <target state="new">Microsoft neither recommends nor dis-recommends this design choice.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>The demo program illustrates some of the design flexibility that is available to you.</source>
            <target state="new">The demo program illustrates some of the design flexibility that is available to you.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Length of the source code</source>
            <target state="new">Length of the source code</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The long length of the <bpt id="2">&lt;code&gt;</bpt>Program.cs<ept id="2">&lt;/code&gt;</ept> file is due mostly to the logic that catches exceptions.</source>
            <target state="new">The long length of the <bpt id="2">&lt;code&gt;</bpt>Program.cs<ept id="2">&lt;/code&gt;</ept> file is due mostly to the logic that catches exceptions.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>A <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>shorter version<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> of this <bpt id="4">&lt;code&gt;</bpt>Program.cs<ept id="4">&lt;/code&gt;</ept> file is presented at the end in this topic, with all the retry logic and <bpt id="6">&lt;code&gt;</bpt>Exception<ept id="6">&lt;/code&gt;</ept> handling removed.</source>
            <target state="new">A <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>shorter version<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> of this <bpt id="4">&lt;code&gt;</bpt>Program.cs<ept id="4">&lt;/code&gt;</ept> file is presented at the end in this topic, with all the retry logic and <bpt id="6">&lt;code&gt;</bpt>Exception<ept id="6">&lt;/code&gt;</ept> handling removed.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Call stack</source>
            <target state="new">Call stack</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> method is in <bpt id="4">&lt;code&gt;</bpt>Program.cs<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> method is in <bpt id="4">&lt;code&gt;</bpt>Program.cs<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The call stack runs as follows:</source>
            <target state="new">The call stack runs as follows:</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Main<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>ConnectAndQuery<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Main<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>ConnectAndQuery<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>ConnectAndQuery<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>EstablishConnection<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>ConnectAndQuery<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>EstablishConnection<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>EstablishConnection<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>IssueQueryCommand<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>EstablishConnection<ept id="1">&lt;/code&gt;</ept> calls <bpt id="3">&lt;code&gt;</bpt>IssueQueryCommand<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Source code for Program.cs</source>
            <target state="new">Source code for Program.cs</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Custom_SqlDatabaseTransientErrorDetectionStrategy.cs code file</source>
            <target state="new">Custom_SqlDatabaseTransientErrorDetectionStrategy.cs code file</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>[<bpt id="2">&lt;code&gt;</bpt>SqlDatabaseTransientErrorDetectionStrategy<ept id="2">&lt;/code&gt;</ept>](http://msdn.microsoft.com/library/microsoft.practices.enterpriselibrary.transientfaulthandling.sqldatabasetransienterrordetectionstrategy.aspx) is a class in the Enterprise Library (EntLib) API.</source>
            <target state="new">[<bpt id="2">&lt;code&gt;</bpt>SqlDatabaseTransientErrorDetectionStrategy<ept id="2">&lt;/code&gt;</ept>](http://msdn.microsoft.com/library/microsoft.practices.enterpriselibrary.transientfaulthandling.sqldatabasetransienterrordetectionstrategy.aspx) is a class in the Enterprise Library (EntLib) API.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The present code sample uses the following custom class that borrows the idea of the EntLib class.</source>
            <target state="new">The present code sample uses the following custom class that borrows the idea of the EntLib class.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>&amp;nbsp;</source>
            <target state="new">&amp;nbsp;</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Short version of Program.cs</source>
            <target state="new">Short version of Program.cs</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The source code in this section is a shortened repeat of the longer <bpt id="2">&lt;code&gt;</bpt>Program.cs<ept id="2">&lt;/code&gt;</ept> file presented earlier.</source>
            <target state="new">The source code in this section is a shortened repeat of the longer <bpt id="2">&lt;code&gt;</bpt>Program.cs<ept id="2">&lt;/code&gt;</ept> file presented earlier.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>All the retry logic and all the exception handling has been removed.</source>
            <target state="new">All the retry logic and all the exception handling has been removed.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The short version makes it easier to see the ADO.NET calls, knowing that these usually work.</source>
            <target state="new">The short version makes it easier to see the ADO.NET calls, knowing that these usually work.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Usually no transient faults occur and no exception is thrown.</source>
            <target state="new">Usually no transient faults occur and no exception is thrown.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>And usually a skydiver does not need a backup parachute.</source>
            <target state="new">And usually a skydiver does not need a backup parachute.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Related links</source>
            <target state="new">Related links</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Client quick-start code samples to SQL Database<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Client quick-start code samples to SQL Database<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>