<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 8:51:43 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d6e3f7b3624f451e09ebd729df22af7918ff3aa</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to Manage Expiration of Cloud Service Content in the Azure Content Delivery Network (CDN)</source>
            <target state="new">How to Manage Expiration of Cloud Service Content in the Azure Content Delivery Network (CDN)</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to Manage Expiration of Cloud Service Content in the Azure Content Delivery Network (CDN)</source>
            <target state="new">How to Manage Expiration of Cloud Service Content in the Azure Content Delivery Network (CDN)</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Objects that benefit the most from Azure CDN caching are those that are accessed frequently during their time-to-live (TTL) period.</source>
            <target state="new">Objects that benefit the most from Azure CDN caching are those that are accessed frequently during their time-to-live (TTL) period.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>An object stays in the cache for the TTL period and then is refreshed from the cloud service after that time is elapsed.</source>
            <target state="new">An object stays in the cache for the TTL period and then is refreshed from the cloud service after that time is elapsed.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Then the process repeats.</source>
            <target state="new">Then the process repeats.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>If you do not provide cache values, the TTL of an object is 7 days.</source>
            <target state="new">If you do not provide cache values, the TTL of an object is 7 days.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For static content such as images and style sheets you can control the update frequency by including a web.config in the CDN folder containing the content and modifying the <bpt id="2">&lt;strong&gt;</bpt>clientCache<ept id="2">&lt;/strong&gt;</ept> settings to control the Cache-Control header for your content.</source>
            <target state="new">For static content such as images and style sheets you can control the update frequency by including a web.config in the CDN folder containing the content and modifying the <bpt id="2">&lt;strong&gt;</bpt>clientCache<ept id="2">&lt;/strong&gt;</ept> settings to control the Cache-Control header for your content.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The web.config settings will affect everything in the folder and all subfolders, unless overridden in another subfolder further down.</source>
            <target state="new">The web.config settings will affect everything in the folder and all subfolders, unless overridden in another subfolder further down.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For example, you can set a default time-to-live at the root to have all static content cached for 3 days, but have a subfolder that has more variable content with a cache setting of 6 hours.</source>
            <target state="new">For example, you can set a default time-to-live at the root to have all static content cached for 3 days, but have a subfolder that has more variable content with a cache setting of 6 hours.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The following XML shows and example of setting <bpt id="2">&lt;strong&gt;</bpt>clientCache<ept id="2">&lt;/strong&gt;</ept> to specify a maximum age of 3 days:</source>
            <target state="new">The following XML shows and example of setting <bpt id="2">&lt;strong&gt;</bpt>clientCache<ept id="2">&lt;/strong&gt;</ept> to specify a maximum age of 3 days:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Specifying <bpt id="2">&lt;strong&gt;</bpt>UseMaxAge<ept id="2">&lt;/strong&gt;</ept> adds a Cache-Control: max-age=<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> header to the response based on the value specified in the <bpt id="6">&lt;strong&gt;</bpt>CacheControlMaxAge<ept id="6">&lt;/strong&gt;</ept> attribute. The format of the timespan is for the <bpt id="8">&lt;strong&gt;</bpt>cacheControlMaxAge<ept id="8">&lt;/strong&gt;</ept> attribute is <bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>.<bpt id="12">&lt;html&gt;</bpt><ept id="12">&lt;/html&gt;</ept>:<bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>:<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept>. For more information on the <bpt id="18">&lt;strong&gt;</bpt>clientCache<ept id="18">&lt;/strong&gt;</ept> node, see [Client Cache <bpt id="20">&lt;html&gt;</bpt><ept id="20">&lt;/html&gt;</ept>](http://www.iis.net/ConfigReference/system.webServer/staticContent/clientCache).</source>
            <target state="new">Specifying <bpt id="2">&lt;strong&gt;</bpt>UseMaxAge<ept id="2">&lt;/strong&gt;</ept> adds a Cache-Control: max-age=<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> header to the response based on the value specified in the <bpt id="6">&lt;strong&gt;</bpt>CacheControlMaxAge<ept id="6">&lt;/strong&gt;</ept> attribute. The format of the timespan is for the <bpt id="8">&lt;strong&gt;</bpt>cacheControlMaxAge<ept id="8">&lt;/strong&gt;</ept> attribute is <bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>.<bpt id="12">&lt;html&gt;</bpt><ept id="12">&lt;/html&gt;</ept>:<bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>:<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept>. For more information on the <bpt id="18">&lt;strong&gt;</bpt>clientCache<ept id="18">&lt;/strong&gt;</ept> node, see [Client Cache <bpt id="20">&lt;html&gt;</bpt><ept id="20">&lt;/html&gt;</ept>](http://www.iis.net/ConfigReference/system.webServer/staticContent/clientCache).</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For content returned from applications such as .aspx pages, you can set the CDN caching behavior programmatically by setting the <bpt id="2">&lt;strong&gt;</bpt>HttpResponse.Cache<ept id="2">&lt;/strong&gt;</ept> property.</source>
            <target state="new">For content returned from applications such as .aspx pages, you can set the CDN caching behavior programmatically by setting the <bpt id="2">&lt;strong&gt;</bpt>HttpResponse.Cache<ept id="2">&lt;/strong&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For more information on the <bpt id="2">&lt;strong&gt;</bpt>HttpResponse.Cache<ept id="2">&lt;/strong&gt;</ept> property, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>HttpResponse.Cache Property<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>HttpCachePolicy Class<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information on the <bpt id="2">&lt;strong&gt;</bpt>HttpResponse.Cache<ept id="2">&lt;/strong&gt;</ept> property, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>HttpResponse.Cache Property<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>HttpCachePolicy Class<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>If you want to programmatically cache application content, make sure that the content is marked as cacheable by setting HttpCacheability to <bpt id="2">&lt;em&gt;</bpt>Public<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">If you want to programmatically cache application content, make sure that the content is marked as cacheable by setting HttpCacheability to <bpt id="2">&lt;em&gt;</bpt>Public<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Also, ensure that a cache validator is set.</source>
            <target state="new">Also, ensure that a cache validator is set.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The cache validator can be a Last Modified timestamp set by calling SetLastModified, or an etag value set by calling SetETag.</source>
            <target state="new">The cache validator can be a Last Modified timestamp set by calling SetLastModified, or an etag value set by calling SetETag.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Optionally, you can also specify a cache expiration time by calling SetExpires, or you can rely on the default cache heuristics described earlier in this document.</source>
            <target state="new">Optionally, you can also specify a cache expiration time by calling SetExpires, or you can rely on the default cache heuristics described earlier in this document.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>For example, to cache content for one hour, add the following:</source>
            <target state="new">For example, to cache content for one hour, add the following:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>[How to Manage Expiration of Blob Content in the Azure Content Delivery Network (CDN)](./cdn-manage-expiration-of-blob-content.md</source>
            <target state="new">[How to Manage Expiration of Blob Content in the Azure Content Delivery Network (CDN)](./cdn-manage-expiration-of-blob-content.md</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>)</source>
            <target state="new">)</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>