<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:20:49 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f152aee1e4672d7f444ede4e65392100bc954d8</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Store project code in source control | Microsoft Azure</source>
            <target state="new">Store project code in source control | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to store your server script files and modules in a local Git repo on your computer.</source>
            <target state="new">Learn how to store your server script files and modules in a local Git repo on your computer.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Store project code in source control</source>
            <target state="new">Store project code in source control</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This topic shows you how to use the source control provided by Azure Mobile Services to store your server scripts.</source>
            <target state="new">This topic shows you how to use the source control provided by Azure Mobile Services to store your server scripts.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Scripts and other JavaScript backend code files can be promoted from your local Git repository to your production mobile service.</source>
            <target state="new">Scripts and other JavaScript backend code files can be promoted from your local Git repository to your production mobile service.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>It also shows how to define shared code that can be required by multiple scripts and how to use the package.json file to add Node.js modules to your mobile service.</source>
            <target state="new">It also shows how to define shared code that can be required by multiple scripts and how to use the package.json file to add Node.js modules to your mobile service.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>To complete this tutorial, you must have already created a mobile service by completing either the [Get started with Mobile Services] or the [Add Mobile Services to an existing app] tutorial.</source>
            <target state="new">To complete this tutorial, you must have already created a mobile service by completing either the [Get started with Mobile Services] or the [Add Mobile Services to an existing app] tutorial.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enable source control in your mobile service</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enable source control in your mobile service</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-enable-source-control.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-enable-source-control.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Install Git and create the local repository</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Install Git and create the local repository</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Install Git on your local computer.</source>
            <target state="new">Install Git on your local computer.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The steps required to install Git vary between operating systems.</source>
            <target state="new">The steps required to install Git vary between operating systems.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>See [Installing Git] for operating system specific distributions and installation guidance.</source>
            <target state="new">See [Installing Git] for operating system specific distributions and installation guidance.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>On some operating systems, both a command-line and GUI version of Git are available.</source>
            <target state="new">On some operating systems, both a command-line and GUI version of Git are available.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The instructions provided in this article use the command-line version.</source>
            <target state="new">The instructions provided in this article use the command-line version.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Open a command-line, such as <bpt id="2">&lt;strong&gt;</bpt>GitBash<ept id="2">&lt;/strong&gt;</ept> (Windows) or <bpt id="4">&lt;strong&gt;</bpt>Bash<ept id="4">&lt;/strong&gt;</ept> (Unix Shell).</source>
            <target state="new">Open a command-line, such as <bpt id="2">&lt;strong&gt;</bpt>GitBash<ept id="2">&lt;/strong&gt;</ept> (Windows) or <bpt id="4">&lt;strong&gt;</bpt>Bash<ept id="4">&lt;/strong&gt;</ept> (Unix Shell).</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>On OS X systems you can access the command-line through the <bpt id="2">&lt;strong&gt;</bpt>Terminal<ept id="2">&lt;/strong&gt;</ept> application.</source>
            <target state="new">On OS X systems you can access the command-line through the <bpt id="2">&lt;strong&gt;</bpt>Terminal<ept id="2">&lt;/strong&gt;</ept> application.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>From the command line, change to the directory where you will store your scripts.</source>
            <target state="new">From the command line, change to the directory where you will store your scripts.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>For example, <bpt id="2">&lt;code&gt;</bpt>cd SourceControl<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, <bpt id="2">&lt;code&gt;</bpt>cd SourceControl<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Use the following command to create a local copy of your new Git repository, replacing <bpt id="2">&lt;code&gt;</bpt>&lt;your_git_URL&gt;<ept id="2">&lt;/code&gt;</ept> with the URL of the Git repository for your mobile service:</source>
            <target state="new">Use the following command to create a local copy of your new Git repository, replacing <bpt id="2">&lt;code&gt;</bpt>&lt;your_git_URL&gt;<ept id="2">&lt;/code&gt;</ept> with the URL of the Git repository for your mobile service:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>When prompted, type in the user name and password that you set when you enabled source control in your mobile service.</source>
            <target state="new">When prompted, type in the user name and password that you set when you enabled source control in your mobile service.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>After successful authentication, you will see a series of responses like this:</source>
            <target state="new">After successful authentication, you will see a series of responses like this:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Browse to the directory from which you ran the <bpt id="2">&lt;code&gt;</bpt>git clone<ept id="2">&lt;/code&gt;</ept> command, and notice the following directory structure:</source>
            <target state="new">Browse to the directory from which you ran the <bpt id="2">&lt;code&gt;</bpt>git clone<ept id="2">&lt;/code&gt;</ept> command, and notice the following directory structure:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>4<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>4<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In this case, a new directory is created with the name of the mobile service, which is the local repository for the data service.</source>
            <target state="new">In this case, a new directory is created with the name of the mobile service, which is the local repository for the data service.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Open the .\service\table subfolder and notice that it contains a TodoItem.json file, which is a JSON representation of the operation permissions on the TodoItem table.</source>
            <target state="new">Open the .\service\table subfolder and notice that it contains a TodoItem.json file, which is a JSON representation of the operation permissions on the TodoItem table.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>When server scripts have been defined on this table, you will also have one or more files named <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>TodoItem.<bpt id="4">&lt;em&gt;</bpt>&lt;operation&gt;<ept id="4">&lt;/em&gt;</ept>.js<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept> that contain the scripts for the given table operation.</source>
            <target state="new">When server scripts have been defined on this table, you will also have one or more files named <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>TodoItem.<bpt id="4">&lt;em&gt;</bpt>&lt;operation&gt;<ept id="4">&lt;/em&gt;</ept>.js<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept> that contain the scripts for the given table operation.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Scheduler and custom API scripts are maintained in separate folders with those respective names.</source>
            <target state="new">Scheduler and custom API scripts are maintained in separate folders with those respective names.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>For more information, see [Source control].</source>
            <target state="new">For more information, see [Source control].</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Now that you have created your local repository, you can make changes to server scripts and push the changes back to the mobile service.</source>
            <target state="new">Now that you have created your local repository, you can make changes to server scripts and push the changes back to the mobile service.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Deploy updated script files to your mobile service</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Deploy updated script files to your mobile service</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Browse to the .\service\table subfolder, and if a file todoitem.insert.js files doesn't already exist, create it now.</source>
            <target state="new">Browse to the .\service\table subfolder, and if a file todoitem.insert.js files doesn't already exist, create it now.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Open the new file todoitem.insert.js in a text editor and paste in the following code and save your changes:</source>
            <target state="new">Open the new file todoitem.insert.js in a text editor and paste in the following code and save your changes:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>This code simply writes the inserted item to the log.</source>
            <target state="new">This code simply writes the inserted item to the log.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>If this file already contains code, simply add some valid JavaScript code to this file, such as a call to <bpt id="2">&lt;code&gt;</bpt>console.log()<ept id="2">&lt;/code&gt;</ept>, then save your changes.</source>
            <target state="new">If this file already contains code, simply add some valid JavaScript code to this file, such as a call to <bpt id="2">&lt;code&gt;</bpt>console.log()<ept id="2">&lt;/code&gt;</ept>, then save your changes.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>In the Git command prompt, type the following command to start tracking the new script file:</source>
            <target state="new">In the Git command prompt, type the following command to start tracking the new script file:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Type the following command to commit changes:</source>
            <target state="new">Type the following command to commit changes:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Type the following command to upload the changes to the remote repository:</source>
            <target state="new">Type the following command to upload the changes to the remote repository:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>You should see a series of commands that indicates that the commit is deployed to the mobile service.</source>
            <target state="new">You should see a series of commands that indicates that the commit is deployed to the mobile service.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Back in the Management Portal, click the <bpt id="2">&lt;strong&gt;</bpt>Data<ept id="2">&lt;/strong&gt;</ept> tab, then click the <bpt id="4">&lt;strong&gt;</bpt>TodoItem<ept id="4">&lt;/strong&gt;</ept> table, click  <bpt id="6">&lt;strong&gt;</bpt>Script<ept id="6">&lt;/strong&gt;</ept>, then select the <bpt id="8">&lt;strong&gt;</bpt>Insert<ept id="8">&lt;/strong&gt;</ept> operation.</source>
            <target state="new">Back in the Management Portal, click the <bpt id="2">&lt;strong&gt;</bpt>Data<ept id="2">&lt;/strong&gt;</ept> tab, then click the <bpt id="4">&lt;strong&gt;</bpt>TodoItem<ept id="4">&lt;/strong&gt;</ept> table, click  <bpt id="6">&lt;strong&gt;</bpt>Script<ept id="6">&lt;/strong&gt;</ept>, then select the <bpt id="8">&lt;strong&gt;</bpt>Insert<ept id="8">&lt;/strong&gt;</ept> operation.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Notice that the displayed insert operation script is the same as the JavaScript code that you just uploaded to the repository.</source>
            <target state="new">Notice that the displayed insert operation script is the same as the JavaScript code that you just uploaded to the repository.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Leverage shared code and Node.js modules in your server scripts</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Leverage shared code and Node.js modules in your server scripts</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Mobile Services provides access to the full set of core Node.js modules, which you can use in your code by using the <bpt id="2">&lt;strong&gt;</bpt>require<ept id="2">&lt;/strong&gt;</ept> function.</source>
            <target state="new">Mobile Services provides access to the full set of core Node.js modules, which you can use in your code by using the <bpt id="2">&lt;strong&gt;</bpt>require<ept id="2">&lt;/strong&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Your mobile service can also use Node.js modules that are not part of the core Node.js package, and you can even define your own shared code as Node.js modules.</source>
            <target state="new">Your mobile service can also use Node.js modules that are not part of the core Node.js package, and you can even define your own shared code as Node.js modules.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>For more information about creating modules, see [Modules] in the Node.js API reference documentation.</source>
            <target state="new">For more information about creating modules, see [Modules] in the Node.js API reference documentation.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The recommended way to add Node.js modules to your mobile service is by adding references to the service's package.json file.</source>
            <target state="new">The recommended way to add Node.js modules to your mobile service is by adding references to the service's package.json file.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Next, you will add the [node-uuid] Node.js module to your mobile service by updating the package.json file.</source>
            <target state="new">Next, you will add the [node-uuid] Node.js module to your mobile service by updating the package.json file.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>When the update is pushed to Azure, the mobile service is restarted and the module is installed.</source>
            <target state="new">When the update is pushed to Azure, the mobile service is restarted and the module is installed.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>This module is then used to generate a new GUID value for the <bpt id="2">&lt;strong&gt;</bpt>uuid<ept id="2">&lt;/strong&gt;</ept> property on inserted items.</source>
            <target state="new">This module is then used to generate a new GUID value for the <bpt id="2">&lt;strong&gt;</bpt>uuid<ept id="2">&lt;/strong&gt;</ept> property on inserted items.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Navigate to the <bpt id="2">&lt;code&gt;</bpt>.\service<ept id="2">&lt;/code&gt;</ept> folder of your local Git repository, and open the package.json file in a text editor, and add the following field to the <bpt id="4">&lt;strong&gt;</bpt>dependencies<ept id="4">&lt;/strong&gt;</ept> object:</source>
            <target state="new">Navigate to the <bpt id="2">&lt;code&gt;</bpt>.\service<ept id="2">&lt;/code&gt;</ept> folder of your local Git repository, and open the package.json file in a text editor, and add the following field to the <bpt id="4">&lt;strong&gt;</bpt>dependencies<ept id="4">&lt;/strong&gt;</ept> object:</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>This update to the package.json file will cause a restart in your mobile service after the commit is pushed.</source>
            <target state="new">This update to the package.json file will cause a restart in your mobile service after the commit is pushed.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Now browse to the .\service\table subfolder, open the todoitem.insert.js file and modify it as follows:</source>
            <target state="new">Now browse to the .\service\table subfolder, open the todoitem.insert.js file and modify it as follows:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>This code adds a uuid column to the table, populating it with unique GUID identifiers.</source>
            <target state="new">This code adds a uuid column to the table, populating it with unique GUID identifiers.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>As in the previous section, type the following command in the Git command prompt:</source>
            <target state="new">As in the previous section, type the following command in the Git command prompt:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>This adds the new file, commits your changes, and pushes the new node-uuid module and changes to the todoitem.insert.js script to your mobile service.</source>
            <target state="new">This adds the new file, commits your changes, and pushes the new node-uuid module and changes to the todoitem.insert.js script to your mobile service.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Next steps</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Next steps</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Now that you have completed this tutorial you know how to store your scripts in source control.</source>
            <target state="new">Now that you have completed this tutorial you know how to store your scripts in source control.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Consider learning more about working with server scripts and with custom APIs:</source>
            <target state="new">Consider learning more about working with server scripts and with custom APIs:</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>[Work with server scripts in Mobile Services]</source>
            <target state="new">[Work with server scripts in Mobile Services]</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Shows how to work with server scripts, job scheduler, and custom APIs.</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept>Shows how to work with server scripts, job scheduler, and custom APIs.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>[Call a custom API from the client]</source>
            <target state="new">[Call a custom API from the client]</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> Shows how to create custom APIs that can be called from the client.</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> Shows how to create custom APIs that can be called from the client.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>