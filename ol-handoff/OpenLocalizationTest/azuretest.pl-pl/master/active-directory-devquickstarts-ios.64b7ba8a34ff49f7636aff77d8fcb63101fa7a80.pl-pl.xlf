<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 6:39:14 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49c4d6c3472c61e943ddd36544affc2b1bc8abd3</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure AD iOS Getting Started | Microsoft Azure</source>
            <target state="new">Azure AD iOS Getting Started | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to build an iOS application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</source>
            <target state="new">How to build an iOS application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Integrate Azure AD into an iOS App</source>
            <target state="new">Integrate Azure AD into an iOS App</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Azure AD provides the Active Directory Authentication Library, or ADAL, for iOS clients that need to access protected resources.</source>
            <target state="new">Azure AD provides the Active Directory Authentication Library, or ADAL, for iOS clients that need to access protected resources.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</source>
            <target state="new">ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>To demonstrate just how easy it is, here we’ll build a Objective C To-Do List application that:</source>
            <target state="new">To demonstrate just how easy it is, here we’ll build a Objective C To-Do List application that:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Gets access tokens for calling the Azure AD Graph API using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0 authentication protocol<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Gets access tokens for calling the Azure AD Graph API using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0 authentication protocol<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Searches a directory for users with a given alias.</source>
            <target state="new">Searches a directory for users with a given alias.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>To build the complete working application, you’ll need to:</source>
            <target state="new">To build the complete working application, you’ll need to:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Register your application with Azure AD.</source>
            <target state="new">Register your application with Azure AD.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Install &amp; Configure ADAL.</source>
            <target state="new">Install &amp; Configure ADAL.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Use ADAL to get tokens from Azure AD.</source>
            <target state="new">Use ADAL to get tokens from Azure AD.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app skeleton<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app skeleton<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>You'll also need an Azure AD tenant in which you can create users and register an application.</source>
            <target state="new">You'll also need an Azure AD tenant in which you can create users and register an application.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>1. Determine what your Redirect URI will be for iOS<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>1. Determine what your Redirect URI will be for iOS<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>In order to securely launch your applications in certain SSO scenarios we require that you create a <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept> in a particular format.</source>
            <target state="new">In order to securely launch your applications in certain SSO scenarios we require that you create a <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept> in a particular format.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>A Redirect URI is used to ensure that the tokens return to the correct application that asked for them.</source>
            <target state="new">A Redirect URI is used to ensure that the tokens return to the correct application that asked for them.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The iOS format for a Redirect URI is:</source>
            <target state="new">The iOS format for a Redirect URI is:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>$ vi Podfile</source>
            <target state="new">$ vi Podfile</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>source 'https://github.com/CocoaPods/Specs.git'</source>
            <target state="new">source 'https://github.com/CocoaPods/Specs.git'</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>link_with ['QuickStart']</source>
            <target state="new">link_with ['QuickStart']</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>xcodeproj 'QuickStart'</source>
            <target state="new">xcodeproj 'QuickStart'</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>pod 'ADALiOS'</source>
            <target state="new">pod 'ADALiOS'</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>$ pod install</source>
            <target state="new">$ pod install</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>...</source>
            <target state="new">...</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>$ open QuickStart.xcworkspace</source>
            <target state="new">$ open QuickStart.xcworkspace</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Now we need to use this token to search for users in the graph.</source>
            <target state="new">Now we need to use this token to search for users in the graph.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Find the <bpt id="2">&lt;code&gt;</bpt>// TODO: implement SearchUsersList<ept id="2">&lt;/code&gt;</ept> commentThis method makes a GET request to the Azure AD Graph API to query for users whose UPN begins with the given search term.</source>
            <target state="new">Find the <bpt id="2">&lt;code&gt;</bpt>// TODO: implement SearchUsersList<ept id="2">&lt;/code&gt;</ept> commentThis method makes a GET request to the Azure AD Graph API to query for users whose UPN begins with the given search term.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>But in order to query the Graph API, you need to include an access_token in the <bpt id="2">&lt;code&gt;</bpt>Authorization<ept id="2">&lt;/code&gt;</ept> header of the request - this is where ADAL comes in.</source>
            <target state="new">But in order to query the Graph API, you need to include an access_token in the <bpt id="2">&lt;code&gt;</bpt>Authorization<ept id="2">&lt;/code&gt;</ept> header of the request - this is where ADAL comes in.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>When your app requests a token by calling <bpt id="2">&lt;code&gt;</bpt>getToken(...)<ept id="2">&lt;/code&gt;</ept>, ADAL will attempt to return a token without asking the user for credentials.</source>
            <target state="new">When your app requests a token by calling <bpt id="2">&lt;code&gt;</bpt>getToken(...)<ept id="2">&lt;/code&gt;</ept>, ADAL will attempt to return a token without asking the user for credentials.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>If ADAL determines that the user needs to sign in to get a token, it will display a login dialog, collect the user's credentials, and return a token upon successful authentication.</source>
            <target state="new">If ADAL determines that the user needs to sign in to get a token, it will display a login dialog, collect the user's credentials, and return a token upon successful authentication.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>If ADAL is unable to return a token for any reason, it will throw an <bpt id="2">&lt;code&gt;</bpt>AdalException<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">If ADAL is unable to return a token for any reason, it will throw an <bpt id="2">&lt;code&gt;</bpt>AdalException<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Notice that the <bpt id="2">&lt;code&gt;</bpt>AuthenticationResult<ept id="2">&lt;/code&gt;</ept> object contains a <bpt id="4">&lt;code&gt;</bpt>tokenCacheStoreItem<ept id="4">&lt;/code&gt;</ept> object that can be used to collect information your app may need.</source>
            <target state="new">Notice that the <bpt id="2">&lt;code&gt;</bpt>AuthenticationResult<ept id="2">&lt;/code&gt;</ept> object contains a <bpt id="4">&lt;code&gt;</bpt>tokenCacheStoreItem<ept id="4">&lt;/code&gt;</ept> object that can be used to collect information your app may need.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In the QuickStart, <bpt id="2">&lt;code&gt;</bpt>tokenCacheStoreItem<ept id="2">&lt;/code&gt;</ept> is used to determine if authenitcation has already occurred.</source>
            <target state="new">In the QuickStart, <bpt id="2">&lt;code&gt;</bpt>tokenCacheStoreItem<ept id="2">&lt;/code&gt;</ept> is used to determine if authenitcation has already occurred.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Step 5: Build and Run the application</source>
            <target state="new">Step 5: Build and Run the application</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Congratulations!</source>
            <target state="new">Congratulations!</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>You now have a working iOS application that has the ability to authenticate users, securely call Web APIs using OAuth 2.0, and get basic information about the user.</source>
            <target state="new">You now have a working iOS application that has the ability to authenticate users, securely call Web APIs using OAuth 2.0, and get basic information about the user.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>If you haven't already, now is the time to populate your tenant with some users.</source>
            <target state="new">If you haven't already, now is the time to populate your tenant with some users.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Run your QuickStart app, and sign in with one of those users.</source>
            <target state="new">Run your QuickStart app, and sign in with one of those users.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Search for other users based on their UPN.</source>
            <target state="new">Search for other users based on their UPN.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Close the app, and re-run it.</source>
            <target state="new">Close the app, and re-run it.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Notice how the user's session remains intact.</source>
            <target state="new">Notice how the user's session remains intact.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>ADAL makes it easy to incorporate all of these common identity features into your application.</source>
            <target state="new">ADAL makes it easy to incorporate all of these common identity features into your application.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</source>
            <target state="new">It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>All you really need to know is a single API call, <bpt id="2">&lt;code&gt;</bpt>getToken<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">All you really need to know is a single API call, <bpt id="2">&lt;code&gt;</bpt>getToken<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>You can now move on to additional scenarios.</source>
            <target state="new">You can now move on to additional scenarios.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>You may want to try:</source>
            <target state="new">You may want to try:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a Node.JS Web API with Azure AD &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a Node.JS Web API with Azure AD &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>