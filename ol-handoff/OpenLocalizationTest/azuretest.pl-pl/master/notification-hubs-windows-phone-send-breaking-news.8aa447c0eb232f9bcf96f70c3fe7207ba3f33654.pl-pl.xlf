<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:33:03 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f321ee45c7eb2c06b8660c6108378372f74fcff1</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Use Notification Hubs to send breaking news (Windows Phone)</source>
            <target state="new">Use Notification Hubs to send breaking news (Windows Phone)</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Use  Azure Notification Hubs to use tag in registrations to send breaking news to a Windows Phone app.</source>
            <target state="new">Use  Azure Notification Hubs to use tag in registrations to send breaking news to a Windows Phone app.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Use Notification Hubs to send breaking news</source>
            <target state="new">Use Notification Hubs to send breaking news</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/notification-hubs-selector-breaking-news.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/notification-hubs-selector-breaking-news.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This topic shows you how to use Azure Notification Hubs to broadcast breaking news notifications to a Windows Phone 8.0/8.1 Silverlight app.</source>
            <target state="new">This topic shows you how to use Azure Notification Hubs to broadcast breaking news notifications to a Windows Phone 8.0/8.1 Silverlight app.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>If you are targeting Windows Store or Windows Phone 8.1 app, please refer to to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Windows Universal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version.</source>
            <target state="new">If you are targeting Windows Store or Windows Phone 8.1 app, please refer to to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Windows Universal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>When complete, you will be able to register for breaking news categories you are interested in, and receive only push notifications for those categories.</source>
            <target state="new">When complete, you will be able to register for breaking news categories you are interested in, and receive only push notifications for those categories.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This scenario is a common pattern for many apps where notifications have to be sent to groups of users that have previously declared interest in them, e.g. RSS reader, apps for music fans, etc.</source>
            <target state="new">This scenario is a common pattern for many apps where notifications have to be sent to groups of users that have previously declared interest in them, e.g. RSS reader, apps for music fans, etc.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Broadcast scenarios are enabled by including one or more <bpt id="2">&lt;em&gt;</bpt>tags<ept id="2">&lt;/em&gt;</ept> when creating a registration in the notification hub.</source>
            <target state="new">Broadcast scenarios are enabled by including one or more <bpt id="2">&lt;em&gt;</bpt>tags<ept id="2">&lt;/em&gt;</ept> when creating a registration in the notification hub.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>When notifications are sent to a tag, all devices that have registered for the tag will receive the notification.</source>
            <target state="new">When notifications are sent to a tag, all devices that have registered for the tag will receive the notification.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Because tags are simply strings, they do not have to be provisioned in advance.</source>
            <target state="new">Because tags are simply strings, they do not have to be provisioned in advance.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For more information about tags, refer to [Notification Hubs Guidance].</source>
            <target state="new">For more information about tags, refer to [Notification Hubs Guidance].</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>This topic builds on the app you created in [Get started with Notification Hubs].</source>
            <target state="new">This topic builds on the app you created in [Get started with Notification Hubs].</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Before starting this tutorial, you must have already completed [Get started with Notification Hubs].</source>
            <target state="new">Before starting this tutorial, you must have already completed [Get started with Notification Hubs].</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Add category selection to the app</source>
            <target state="new">Add category selection to the app</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The first step is to add the UI elements to your existing main page that enable the user to select categories to register.</source>
            <target state="new">The first step is to add the UI elements to your existing main page that enable the user to select categories to register.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The categories selected by a user are stored on the device.</source>
            <target state="new">The categories selected by a user are stored on the device.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>When the app starts, a device registration is created in your notification hub with the selected categories as tags.</source>
            <target state="new">When the app starts, a device registration is created in your notification hub with the selected categories as tags.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Open the MainPage.xaml project file, then replace the <bpt id="2">&lt;strong&gt;</bpt>Grid<ept id="2">&lt;/strong&gt;</ept> elements named <bpt id="4">&lt;code&gt;</bpt>TitlePanel<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>ContentPanel<ept id="6">&lt;/code&gt;</ept> with the following code:</source>
            <target state="new">Open the MainPage.xaml project file, then replace the <bpt id="2">&lt;strong&gt;</bpt>Grid<ept id="2">&lt;/strong&gt;</ept> elements named <bpt id="4">&lt;code&gt;</bpt>TitlePanel<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>ContentPanel<ept id="6">&lt;/code&gt;</ept> with the following code:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In the project, create a new class named <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept>, add the <bpt id="4">&lt;strong&gt;</bpt>public<ept id="4">&lt;/strong&gt;</ept> modifier to the class definition, then add the following <bpt id="6">&lt;strong&gt;</bpt>using<ept id="6">&lt;/strong&gt;</ept> statements to the new code file:</source>
            <target state="new">In the project, create a new class named <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept>, add the <bpt id="4">&lt;strong&gt;</bpt>public<ept id="4">&lt;/strong&gt;</ept> modifier to the class definition, then add the following <bpt id="6">&lt;strong&gt;</bpt>using<ept id="6">&lt;/strong&gt;</ept> statements to the new code file:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Copy the following code into the new <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class:</source>
            <target state="new">Copy the following code into the new <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This class uses the local storage to store the categories of news that this device has to receive.</source>
            <target state="new">This class uses the local storage to store the categories of news that this device has to receive.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>It also contains methods to register for these categories.</source>
            <target state="new">It also contains methods to register for these categories.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In the above code, replace the <bpt id="2">&lt;code&gt;</bpt>&lt;hub name&gt;<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>&lt;connection string with listen access&gt;<ept id="4">&lt;/code&gt;</ept> placeholders with your notification hub name and the connection string for <bpt id="6">&lt;em&gt;</bpt>DefaultListenSharedAccessSignature<ept id="6">&lt;/em&gt;</ept> that you obtained earlier.</source>
            <target state="new">In the above code, replace the <bpt id="2">&lt;code&gt;</bpt>&lt;hub name&gt;<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>&lt;connection string with listen access&gt;<ept id="4">&lt;/code&gt;</ept> placeholders with your notification hub name and the connection string for <bpt id="6">&lt;em&gt;</bpt>DefaultListenSharedAccessSignature<ept id="6">&lt;/em&gt;</ept> that you obtained earlier.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Because credentials that are distributed with a client app are not generally secure, you should only distribute the key for listen access with your client app.</source>
            <target state="new">Because credentials that are distributed with a client app are not generally secure, you should only distribute the key for listen access with your client app.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Listen access enables your app to register for notifications, but existing registrations cannot be modified and notifications cannot be sent.</source>
            <target state="new">Listen access enables your app to register for notifications, but existing registrations cannot be modified and notifications cannot be sent.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The full access key is used in a secured backend service for sending notifications and changing existing registrations.</source>
            <target state="new">The full access key is used in a secured backend service for sending notifications and changing existing registrations.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In the App.xaml.cs project file, add the following property to the <bpt id="2">&lt;strong&gt;</bpt>App<ept id="2">&lt;/strong&gt;</ept> class:</source>
            <target state="new">In the App.xaml.cs project file, add the following property to the <bpt id="2">&lt;strong&gt;</bpt>App<ept id="2">&lt;/strong&gt;</ept> class:</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>This property is used to create and access a <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> instance.</source>
            <target state="new">This property is used to create and access a <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> instance.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In your MainPage.xaml.cs, add the following line:</source>
            <target state="new">In your MainPage.xaml.cs, add the following line:</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In the MainPage.xaml.cs project file, add the following method:</source>
            <target state="new">In the MainPage.xaml.cs project file, add the following method:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>This method creates a list of categories and uses the <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class to store the list in the local storage and register the corresponding tags with your notification hub.</source>
            <target state="new">This method creates a list of categories and uses the <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class to store the list in the local storage and register the corresponding tags with your notification hub.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>When categories are changed, the registration is recreated with the new categories.</source>
            <target state="new">When categories are changed, the registration is recreated with the new categories.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Your app is now able to store a set of categories in local storage on the device and register with the notification hub whenever the user changes the selection of categories.</source>
            <target state="new">Your app is now able to store a set of categories in local storage on the device and register with the notification hub whenever the user changes the selection of categories.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Register for notifications</source>
            <target state="new">Register for notifications</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>These steps register with the notification hub on startup using the categories that have been stored in local storage.</source>
            <target state="new">These steps register with the notification hub on startup using the categories that have been stored in local storage.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Because the channel URI assigned by the Microsoft Push Notification Service (MPNS) can chance at any time, you should register for notifications frequently to avoid notification failures.</source>
            <target state="new">Because the channel URI assigned by the Microsoft Push Notification Service (MPNS) can chance at any time, you should register for notifications frequently to avoid notification failures.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>This example registers for notification every time that the app starts.</source>
            <target state="new">This example registers for notification every time that the app starts.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>For apps that are run frequently, more than once a day, you can probably skip registration to preserve bandwidth if less than a day has passed since the previous registration.</source>
            <target state="new">For apps that are run frequently, more than once a day, you can probably skip registration to preserve bandwidth if less than a day has passed since the previous registration.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Add the following code to the <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class:</source>
            <target state="new">Add the following code to the <bpt id="2">&lt;strong&gt;</bpt>Notifications<ept id="2">&lt;/strong&gt;</ept> class:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>This returns the categories defined in the class.</source>
            <target state="new">This returns the categories defined in the class.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Open the App.xaml.cs file and add the <bpt id="2">&lt;strong&gt;</bpt>async<ept id="2">&lt;/strong&gt;</ept> modifier to <bpt id="4">&lt;strong&gt;</bpt>Application_Launching<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">Open the App.xaml.cs file and add the <bpt id="2">&lt;strong&gt;</bpt>async<ept id="2">&lt;/strong&gt;</ept> modifier to <bpt id="4">&lt;strong&gt;</bpt>Application_Launching<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Application_Launching<ept id="2">&lt;/strong&gt;</ept> method, locate and replace the Notification Hubs registration code that you added in [Get started with Notification Hubs] with the following line of code:</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Application_Launching<ept id="2">&lt;/strong&gt;</ept> method, locate and replace the Notification Hubs registration code that you added in [Get started with Notification Hubs] with the following line of code:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>This makes sure that every time the app starts it retrieves the categories from local storage and requests a registeration for these categories.</source>
            <target state="new">This makes sure that every time the app starts it retrieves the categories from local storage and requests a registeration for these categories.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>In the MainPage.xaml.cs project file, add the following code that implements the <bpt id="2">&lt;strong&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/strong&gt;</ept> method:</source>
            <target state="new">In the MainPage.xaml.cs project file, add the following code that implements the <bpt id="2">&lt;strong&gt;</bpt>OnNavigatedTo<ept id="2">&lt;/strong&gt;</ept> method:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>This updates the main page based on the status of previously saved categories.</source>
            <target state="new">This updates the main page based on the status of previously saved categories.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>The app is now complete and can store a set of categories in the device local storage used to register with the notification hub whenever the user changes the selection of categories.</source>
            <target state="new">The app is now complete and can store a set of categories in the device local storage used to register with the notification hub whenever the user changes the selection of categories.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Next, we will define a backend that can send category notifications to this app.</source>
            <target state="new">Next, we will define a backend that can send category notifications to this app.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Send notifications from your back-end</source>
            <target state="new">Send notifications from your back-end</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/notification-hubs-back-end.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/notification-hubs-back-end.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Run the app and generate notifications</source>
            <target state="new">Run the app and generate notifications</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>In Visual Studio, press F5 to compile and start the app.</source>
            <target state="new">In Visual Studio, press F5 to compile and start the app.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Note that the app UI provides a set of toggles that lets you choose the categories to subscribe to.</source>
            <target state="new">Note that the app UI provides a set of toggles that lets you choose the categories to subscribe to.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Enable one or more categories toggles, then click <bpt id="2">&lt;strong&gt;</bpt>Subscribe<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Enable one or more categories toggles, then click <bpt id="2">&lt;strong&gt;</bpt>Subscribe<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>The app converts the selected categories into tags and requests a new device registration for the selected tags from the notification hub.</source>
            <target state="new">The app converts the selected categories into tags and requests a new device registration for the selected tags from the notification hub.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The registered categories are returned and displayed in a dialog.</source>
            <target state="new">The registered categories are returned and displayed in a dialog.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Send a new notification from the backend in one of the following ways:</source>
            <target state="new">Send a new notification from the backend in one of the following ways:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Console app:<ept id="1">&lt;/strong&gt;</ept> start the console app.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Console app:<ept id="1">&lt;/strong&gt;</ept> start the console app.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Java/PHP:<ept id="1">&lt;/strong&gt;</ept> run your app/script.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Java/PHP:<ept id="1">&lt;/strong&gt;</ept> run your app/script.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Notifications for the selected categories appear as toast notifications.</source>
            <target state="new">Notifications for the selected categories appear as toast notifications.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>You have completed this topic.</source>
            <target state="new">You have completed this topic.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>