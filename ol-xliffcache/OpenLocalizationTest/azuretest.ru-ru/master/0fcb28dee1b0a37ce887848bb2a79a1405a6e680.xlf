<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/20/2016 4:32:44 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fcb28dee1b0a37ce887848bb2a79a1405a6e680</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Stateful Reliable Service Diagnostics</source>
            <target state="new">Stateful Reliable Service Diagnostics</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Diagnostic Functionality for Stateful Reliable Services</source>
            <target state="new">Diagnostic Functionality for Stateful Reliable Services</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Diagnostic Functionality for Stateful Reliable Services</source>
            <target state="new">Diagnostic Functionality for Stateful Reliable Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The Stateful Reliable Services StatefulServiceBase class emits <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>EventSource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> events</source>
            <target state="new">The Stateful Reliable Services StatefulServiceBase class emits <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>EventSource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> events</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>that can be used for debugging the service, provide insights into how the runtime is operating and help with troubleshooting.</source>
            <target state="new">that can be used for debugging the service, provide insights into how the runtime is operating and help with troubleshooting.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>EventSource events</source>
            <target state="new">EventSource events</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The EventSource name for Stateful Reliable Service StatefulServiceBase class is "Microsoft-ServiceFabric-Services".</source>
            <target state="new">The EventSource name for Stateful Reliable Service StatefulServiceBase class is "Microsoft-ServiceFabric-Services".</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Events from this event source appear in the</source>
            <target state="new">Events from this event source appear in the</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Diagnostics Events<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> window when the service</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Diagnostics Events<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> window when the service</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>is being <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>debugged in Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">is being <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>debugged in Visual Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Service Fabric also offers the option of directing these events to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Service Fabric also offers the option of directing these events to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For more information on this, please see</source>
            <target state="new">For more information on this, please see</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>the article on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights setup for Service Fabric<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">the article on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Application Insights setup for Service Fabric<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Other examples of tools and technologies that help in collecting and/or viewing EventSource events are <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>PerfView<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>,</source>
            <target state="new">Other examples of tools and technologies that help in collecting and/or viewing EventSource events are <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>PerfView<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>,</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure Diagnostics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> and the</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure Diagnostics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> and the</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft TraceEvent Library<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft TraceEvent Library<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Events</source>
            <target state="new">Events</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Event Name</source>
            <target state="new">Event Name</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Event Id</source>
            <target state="new">Event Id</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Level</source>
            <target state="new">Level</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Event Description</source>
            <target state="new">Event Description</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>StatefulRunAsyncInvocation</source>
            <target state="new">StatefulRunAsyncInvocation</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>1</source>
            <target state="new">1</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Informational</source>
            <target state="new">Informational</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Emitted when service RunAsync task is started</source>
            <target state="new">Emitted when service RunAsync task is started</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>StatefulRunAsyncCancellation</source>
            <target state="new">StatefulRunAsyncCancellation</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>2</source>
            <target state="new">2</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Informational</source>
            <target state="new">Informational</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Emitted when service RunAsync task is cancelled</source>
            <target state="new">Emitted when service RunAsync task is cancelled</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>StatefulRunAsyncCompletion</source>
            <target state="new">StatefulRunAsyncCompletion</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>3</source>
            <target state="new">3</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Informational</source>
            <target state="new">Informational</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Emitted when service RunAsync task is completed</source>
            <target state="new">Emitted when service RunAsync task is completed</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>StatefulRunAsyncSlowCancellation</source>
            <target state="new">StatefulRunAsyncSlowCancellation</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>4</source>
            <target state="new">4</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Warning</source>
            <target state="new">Warning</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Emitted when service RunAsync task takes too long to complete cancellation</source>
            <target state="new">Emitted when service RunAsync task takes too long to complete cancellation</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>StatefulRunAsyncFailure</source>
            <target state="new">StatefulRunAsyncFailure</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>5</source>
            <target state="new">5</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Error</source>
            <target state="new">Error</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Emitted when service RunAsync task throws an exception</source>
            <target state="new">Emitted when service RunAsync task throws an exception</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Interpreting Events</source>
            <target state="new">Interpreting Events</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>StatefulRunAsyncInvocation, StatefulRunAsyncCompletion and StatefulRunAsyncCancellation events are useful to the service writer to understand the lifecycle of a service as well as the timing for when a</source>
            <target state="new">StatefulRunAsyncInvocation, StatefulRunAsyncCompletion and StatefulRunAsyncCancellation events are useful to the service writer to understand the lifecycle of a service as well as the timing for when a</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>service is started, cancelled and completed.</source>
            <target state="new">service is started, cancelled and completed.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This can be useful when debugging service issues or understanding the service lifecycle.</source>
            <target state="new">This can be useful when debugging service issues or understanding the service lifecycle.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Service writers should pay close attention</source>
            <target state="new">Service writers should pay close attention</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>to StatefulRunAsyncSlowCancellation and StatefulRunAsyncFailure events as they indicate issues with the service.</source>
            <target state="new">to StatefulRunAsyncSlowCancellation and StatefulRunAsyncFailure events as they indicate issues with the service.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>StatefulRunAsyncFailure is emitted whenever</source>
            <target state="new">StatefulRunAsyncFailure is emitted whenever</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>the service RunAsync() task throws an exception.</source>
            <target state="new">the service RunAsync() task throws an exception.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Typically an exception thrown indicates an error or bug in the service.</source>
            <target state="new">Typically an exception thrown indicates an error or bug in the service.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Additionally the exception causes the service to fail and thus moved to a</source>
            <target state="new">Additionally the exception causes the service to fail and thus moved to a</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>different node which can be an expensive operation and delay incoming requests while the service is moved.</source>
            <target state="new">different node which can be an expensive operation and delay incoming requests while the service is moved.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Service writers should determine the cause of the exception and if possible mitigate it.</source>
            <target state="new">Service writers should determine the cause of the exception and if possible mitigate it.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>StatefulRunAsyncSlowCancellation is emitted whenever a cancellation request for the RunAsync task takes longer than 4 seconds.</source>
            <target state="new">StatefulRunAsyncSlowCancellation is emitted whenever a cancellation request for the RunAsync task takes longer than 4 seconds.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>When a service takes too long to complete cancellation, it impacts</source>
            <target state="new">When a service takes too long to complete cancellation, it impacts</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>the ability for the service to be quickly restarted on another node and may impact overall availability of the service.</source>
            <target state="new">the ability for the service to be quickly restarted on another node and may impact overall availability of the service.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>