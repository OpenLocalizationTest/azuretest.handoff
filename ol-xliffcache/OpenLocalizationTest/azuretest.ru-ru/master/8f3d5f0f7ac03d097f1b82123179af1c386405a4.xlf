<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/22/2016 12:07:58 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f3d5f0f7ac03d097f1b82123179af1c386405a4</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Azure Service Bus with the WebJobs SDK</source>
            <target state="new">How to use Azure Service Bus with the WebJobs SDK</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Service Bus queues and topics with the WebJobs SDK.</source>
            <target state="new">Learn how to use Azure Service Bus queues and topics with the WebJobs SDK.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Azure Service Bus with the WebJobs SDK</source>
            <target state="new">How to use Azure Service Bus with the WebJobs SDK</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This guide provides C# code samples that show how to trigger a process when an Azure blob is created or updated.</source>
            <target state="new">This guide provides C# code samples that show how to trigger a process when an Azure blob is created or updated.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The code samples use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version 1.x.</source>
            <target state="new">The code samples use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version 1.x.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The guide assumes you know <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The guide assumes you know <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The code snippets only show functions, not the code that creates the <bpt id="2">&lt;code&gt;</bpt>JobHost<ept id="2">&lt;/code&gt;</ept> object as in this example:</source>
            <target state="new">The code snippets only show functions, not the code that creates the <bpt id="2">&lt;code&gt;</bpt>JobHost<ept id="2">&lt;/code&gt;</ept> object as in this example:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Prerequisites</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Prerequisites</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>To work with Service Bus you have to install the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.Azure.WebJobs.ServiceBus<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> NuGet package in addition to the other WebJobs SDK packages.</source>
            <target state="new">To work with Service Bus you have to install the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.Azure.WebJobs.ServiceBus<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> NuGet package in addition to the other WebJobs SDK packages.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>You also have to set the AzureWebJobsServiceBus connection string in addition to the storage connection strings.</source>
            <target state="new">You also have to set the AzureWebJobsServiceBus connection string in addition to the storage connection strings.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>You can do this in the <bpt id="2">&lt;code&gt;</bpt>connectionStrings<ept id="2">&lt;/code&gt;</ept> section of the App.config file, as shown in the following example:</source>
            <target state="new">You can do this in the <bpt id="2">&lt;code&gt;</bpt>connectionStrings<ept id="2">&lt;/code&gt;</ept> section of the App.config file, as shown in the following example:</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For a sample project that includes the Service Bus connection string setting in the App.config file, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a sample project that includes the Service Bus connection string setting in the App.config file, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The connection strings can also be set in the Azure runtime environment, which then overrides the App.config settings when the WebJob runs in Azure; for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The connection strings can also be set in the Azure runtime environment, which then overrides the App.config settings when the WebJob runs in Azure; for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to trigger a function when a Service Bus queue message is received</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to trigger a function when a Service Bus queue message is received</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>To write a function that the WebJobs SDK calls when a queue message is received, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="2">&lt;/code&gt;</ept> attribute.</source>
            <target state="new">To write a function that the WebJobs SDK calls when a queue message is received, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="2">&lt;/code&gt;</ept> attribute.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The attribute constructor takes a parameter that specifies the name of the queue to poll.</source>
            <target state="new">The attribute constructor takes a parameter that specifies the name of the queue to poll.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>How ServicebusTrigger works</source>
            <target state="new">How ServicebusTrigger works</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The SDK receives a message in <bpt id="2">&lt;code&gt;</bpt>PeekLock<ept id="2">&lt;/code&gt;</ept> mode and calls <bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept> on the message if the function finishes successfully, or calls <bpt id="6">&lt;code&gt;</bpt>Abandon<ept id="6">&lt;/code&gt;</ept> if the function fails.</source>
            <target state="new">The SDK receives a message in <bpt id="2">&lt;code&gt;</bpt>PeekLock<ept id="2">&lt;/code&gt;</ept> mode and calls <bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept> on the message if the function finishes successfully, or calls <bpt id="6">&lt;code&gt;</bpt>Abandon<ept id="6">&lt;/code&gt;</ept> if the function fails.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>If the function runs longer than the <bpt id="2">&lt;code&gt;</bpt>PeekLock<ept id="2">&lt;/code&gt;</ept> timeout, the lock is automatically renewed.</source>
            <target state="new">If the function runs longer than the <bpt id="2">&lt;code&gt;</bpt>PeekLock<ept id="2">&lt;/code&gt;</ept> timeout, the lock is automatically renewed.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Serice Bus does its own poison queue handling, so that is neither controlled by, nor configurable in, the WebJobs SDK.</source>
            <target state="new">Serice Bus does its own poison queue handling, so that is neither controlled by, nor configurable in, the WebJobs SDK.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>String queue message</source>
            <target state="new">String queue message</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The following code sample reads a queue message that contains a string and writes the string to the WebJobs SDK dashboard.</source>
            <target state="new">The following code sample reads a queue message that contains a string and writes the string to the WebJobs SDK dashboard.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note:<ept id="1">&lt;/strong&gt;</ept> If you are creating the queue messages in an application that doesn't use the WebJobs SDK, make sure to set <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>BrokeredMessage.ContentType<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> to "text/plain".</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note:<ept id="1">&lt;/strong&gt;</ept> If you are creating the queue messages in an application that doesn't use the WebJobs SDK, make sure to set <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>BrokeredMessage.ContentType<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> to "text/plain".</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>POCO queue message</source>
            <target state="new">POCO queue message</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The SDK will automatically deserialize a queue message that contains JSON for a POCO <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>(Plain Old CLR Object<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> type.</source>
            <target state="new">The SDK will automatically deserialize a queue message that contains JSON for a POCO <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>(Plain Old CLR Object<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> type.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The following code sample reads a queue message that contains a <bpt id="2">&lt;code&gt;</bpt>BlobInformation<ept id="2">&lt;/code&gt;</ept> object which has a <bpt id="4">&lt;code&gt;</bpt>BlobName<ept id="4">&lt;/code&gt;</ept> property:</source>
            <target state="new">The following code sample reads a queue message that contains a <bpt id="2">&lt;code&gt;</bpt>BlobInformation<ept id="2">&lt;/code&gt;</ept> object which has a <bpt id="4">&lt;code&gt;</bpt>BlobName<ept id="4">&lt;/code&gt;</ept> property:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>For code samples showing how to use properties of the POCO to work with blobs and tables in the same function, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>storage queues version of this article<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For code samples showing how to use properties of the POCO to work with blobs and tables in the same function, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>storage queues version of this article<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>If your code that creates the queue message doesn't use the WebJobs SDK, use code similar to the following example:</source>
            <target state="new">If your code that creates the queue message doesn't use the WebJobs SDK, use code similar to the following example:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Types ServiceBusTrigger works with</source>
            <target state="new">Types ServiceBusTrigger works with</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Besides <bpt id="2">&lt;code&gt;</bpt>string<ept id="2">&lt;/code&gt;</ept> and POCO  types, you can use the <bpt id="4">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="4">&lt;/code&gt;</ept> attribute with a byte array or a <bpt id="6">&lt;code&gt;</bpt>BrokeredMessage<ept id="6">&lt;/code&gt;</ept> object.</source>
            <target state="new">Besides <bpt id="2">&lt;code&gt;</bpt>string<ept id="2">&lt;/code&gt;</ept> and POCO  types, you can use the <bpt id="4">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="4">&lt;/code&gt;</ept> attribute with a byte array or a <bpt id="6">&lt;code&gt;</bpt>BrokeredMessage<ept id="6">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to create Service Bus queue messages</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to create Service Bus queue messages</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>To write a function that creates a new queue message use the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute and pass in the queue name to the attribute constructor.</source>
            <target state="new">To write a function that creates a new queue message use the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute and pass in the queue name to the attribute constructor.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Create a single queue message in a non-async function</source>
            <target state="new">Create a single queue message in a non-async function</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>The following code sample uses an output parameter to create a new message in the queue named "outputqueue" with the same content as the message received in the queue named "inputqueue".</source>
            <target state="new">The following code sample uses an output parameter to create a new message in the queue named "outputqueue" with the same content as the message received in the queue named "inputqueue".</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The output parameter for creating a single queue message can be any of the following types:</source>
            <target state="new">The output parameter for creating a single queue message can be any of the following types:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>string<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>string<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>byte[]<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>byte[]<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>BrokeredMessage<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>BrokeredMessage<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>A serializable POCO type that you define.</source>
            <target state="new">A serializable POCO type that you define.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Automatically serialized as JSON.</source>
            <target state="new">Automatically serialized as JSON.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For POCO type parameters, a queue message is always created when the function ends; if the parameter is null, the SDK creates a queue message that will return null when the message is received and deserialized.</source>
            <target state="new">For POCO type parameters, a queue message is always created when the function ends; if the parameter is null, the SDK creates a queue message that will return null when the message is received and deserialized.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>For the other types, if the parameter is null no queue message is created.</source>
            <target state="new">For the other types, if the parameter is null no queue message is created.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Create multiple queue messages or in async functions</source>
            <target state="new">Create multiple queue messages or in async functions</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>To create multiple messages, use  the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute with <bpt id="4">&lt;code&gt;</bpt>ICollector&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>IAsyncCollector&lt;T&gt;<ept id="6">&lt;/code&gt;</ept>, as shown in the following code sample:</source>
            <target state="new">To create multiple messages, use  the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute with <bpt id="4">&lt;code&gt;</bpt>ICollector&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>IAsyncCollector&lt;T&gt;<ept id="6">&lt;/code&gt;</ept>, as shown in the following code sample:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Each queue message is created immediately when the <bpt id="2">&lt;code&gt;</bpt>Add<ept id="2">&lt;/code&gt;</ept> method is called.</source>
            <target state="new">Each queue message is created immediately when the <bpt id="2">&lt;code&gt;</bpt>Add<ept id="2">&lt;/code&gt;</ept> method is called.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to work with Service Bus topics</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to work with Service Bus topics</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>To write a function that the SDK calls when a message is received on a Service Bus topic, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="2">&lt;/code&gt;</ept> attribute with the constructor that takes topic name and subscription name, as shown in the following code sample:</source>
            <target state="new">To write a function that the SDK calls when a message is received on a Service Bus topic, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBusTrigger<ept id="2">&lt;/code&gt;</ept> attribute with the constructor that takes topic name and subscription name, as shown in the following code sample:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>To create a message on a topic, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute with a topic name the same way you use it with a queue name.</source>
            <target state="new">To create a message on a topic, use the <bpt id="2">&lt;code&gt;</bpt>ServiceBus<ept id="2">&lt;/code&gt;</ept> attribute with a topic name the same way you use it with a queue name.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Related topics covered by the storage queues how-to article</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Related topics covered by the storage queues how-to article</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For information about WebJobs SDK scenarios not specific to Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about WebJobs SDK scenarios not specific to Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Topics covered in that article include the following:</source>
            <target state="new">Topics covered in that article include the following:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Async functions</source>
            <target state="new">Async functions</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Multiple instances</source>
            <target state="new">Multiple instances</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Graceful shutdown</source>
            <target state="new">Graceful shutdown</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Use WebJobs SDK attributes in the body of a function</source>
            <target state="new">Use WebJobs SDK attributes in the body of a function</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Set the SDK connection strings in code</source>
            <target state="new">Set the SDK connection strings in code</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Set values for WebJobs SDK constructor parameters in code</source>
            <target state="new">Set values for WebJobs SDK constructor parameters in code</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Trigger a function manually</source>
            <target state="new">Trigger a function manually</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Write logs</source>
            <target state="new">Write logs</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Next steps</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Next steps</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>This guide has provided code samples that show how to handle common scenarios for working with Azure Service Bus.</source>
            <target state="new">This guide has provided code samples that show how to handle common scenarios for working with Azure Service Bus.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>