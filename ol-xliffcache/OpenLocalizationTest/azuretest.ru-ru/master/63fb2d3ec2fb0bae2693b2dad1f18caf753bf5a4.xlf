<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/22/2016 1:16:37 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63fb2d3ec2fb0bae2693b2dad1f18caf753bf5a4</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Media Services REST API overview | Microsoft Azure</source>
            <target state="new">Media Services REST API overview | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Media Services REST API overview</source>
            <target state="new">Media Services REST API overview</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Media Services REST API overview</source>
            <target state="new">Media Services REST API overview</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/media-services-selector-setup.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/media-services-selector-setup.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Microsoft Azure Media Services is a service that accepts OData-based HTTP requests and can respond back in verbose JSON or atom+pub.</source>
            <target state="new">Microsoft Azure Media Services is a service that accepts OData-based HTTP requests and can respond back in verbose JSON or atom+pub.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Because Media Services conforms to Azure design guidelines, there is a set of required HTTP headers that each client must use when connecting to Media Services, as well as a set of optional headers that can be used.</source>
            <target state="new">Because Media Services conforms to Azure design guidelines, there is a set of required HTTP headers that each client must use when connecting to Media Services, as well as a set of optional headers that can be used.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The following sections describe the headers and HTTP verbs you can use when creating requests and receiving responses from Media Services.</source>
            <target state="new">The following sections describe the headers and HTTP verbs you can use when creating requests and receiving responses from Media Services.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Standard HTTP request headers supported by Media Services</source>
            <target state="new">Standard HTTP request headers supported by Media Services</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For every call you make into Media Services, there is a set of required headers you must include in your request and also a set of optional headers you may want to include.</source>
            <target state="new">For every call you make into Media Services, there is a set of required headers you must include in your request and also a set of optional headers you may want to include.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The following table lists the required headers:</source>
            <target state="new">The following table lists the required headers:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Header</source>
            <target state="new">Header</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Value</source>
            <target state="new">Value</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Authorization</source>
            <target state="new">Authorization</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Bearer</source>
            <target state="new">Bearer</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Bearer is the only accepted authorization mechanism.</source>
            <target state="new">Bearer is the only accepted authorization mechanism.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The value must also include the access token provided by ACS.</source>
            <target state="new">The value must also include the access token provided by ACS.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>x-ms-version</source>
            <target state="new">x-ms-version</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Decimal</source>
            <target state="new">Decimal</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>2.11</source>
            <target state="new">2.11</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>DataServiceVersion</source>
            <target state="new">DataServiceVersion</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Decimal</source>
            <target state="new">Decimal</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>3.0</source>
            <target state="new">3.0</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>MaxDataServiceVersion</source>
            <target state="new">MaxDataServiceVersion</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Decimal</source>
            <target state="new">Decimal</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>3.0</source>
            <target state="new">3.0</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Because Media Services uses OData to expose its underlying asset metadata repository through REST APIs, the DataServiceVersion and MaxDataServiceVersion headers should be included in any request; however, if they are not, then currently Media Services assumes the DataServiceVersion value in use is 3.0.</source>
            <target state="new">Because Media Services uses OData to expose its underlying asset metadata repository through REST APIs, the DataServiceVersion and MaxDataServiceVersion headers should be included in any request; however, if they are not, then currently Media Services assumes the DataServiceVersion value in use is 3.0.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The following is a set of optional headers:</source>
            <target state="new">The following is a set of optional headers:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Header</source>
            <target state="new">Header</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Value</source>
            <target state="new">Value</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Date</source>
            <target state="new">Date</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>RFC 1123 date</source>
            <target state="new">RFC 1123 date</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Timestamp of the request</source>
            <target state="new">Timestamp of the request</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Accept</source>
            <target state="new">Accept</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Content type</source>
            <target state="new">Content type</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The requested content type for the response such as the following:<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> -application/json;odata=verbose<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> - application/atom+xml<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept> Responses may have a different content type, such as a blob fetch, where a successful response will contain the blob stream as the payload.</source>
            <target state="new">The requested content type for the response such as the following:<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> -application/json;odata=verbose<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> - application/atom+xml<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept> Responses may have a different content type, such as a blob fetch, where a successful response will contain the blob stream as the payload.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Accept-Encoding</source>
            <target state="new">Accept-Encoding</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Gzip, deflate</source>
            <target state="new">Gzip, deflate</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>GZIP and DEFLATE encoding, when applicable.</source>
            <target state="new">GZIP and DEFLATE encoding, when applicable.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Note: For large resources, Media Services may ignore this header and return noncompressed data.</source>
            <target state="new">Note: For large resources, Media Services may ignore this header and return noncompressed data.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Accept-Language</source>
            <target state="new">Accept-Language</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>"en", "es", and so on.</source>
            <target state="new">"en", "es", and so on.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Specifies the preferred language for the response.</source>
            <target state="new">Specifies the preferred language for the response.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Accept-Charset</source>
            <target state="new">Accept-Charset</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Charset type like “UTF-8”</source>
            <target state="new">Charset type like “UTF-8”</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Default is UTF-8.</source>
            <target state="new">Default is UTF-8.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>X-HTTP-Method</source>
            <target state="new">X-HTTP-Method</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>HTTP Method</source>
            <target state="new">HTTP Method</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Allows clients or firewalls that do not support HTTP methods like PUT or DELETE to use these methods, tunneled via a GET call.</source>
            <target state="new">Allows clients or firewalls that do not support HTTP methods like PUT or DELETE to use these methods, tunneled via a GET call.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Content-Type</source>
            <target state="new">Content-Type</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Content type</source>
            <target state="new">Content type</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Content type of the request body in PUT or POST requests.</source>
            <target state="new">Content type of the request body in PUT or POST requests.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>client-request-id</source>
            <target state="new">client-request-id</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>A caller-defined value that identifies the given request. If specified, this value will be included in the response message as a way to map the request. <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Important<ept id="4">&lt;/strong&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Values should be capped at 2096b (2k).</source>
            <target state="new">A caller-defined value that identifies the given request. If specified, this value will be included in the response message as a way to map the request. <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Important<ept id="4">&lt;/strong&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Values should be capped at 2096b (2k).</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Standard HTTP response headers supported by Media Services</source>
            <target state="new">Standard HTTP response headers supported by Media Services</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>The following is a set of headers that may be returned to you depending on the resource you were requesting and the action you intended to perform.</source>
            <target state="new">The following is a set of headers that may be returned to you depending on the resource you were requesting and the action you intended to perform.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Header</source>
            <target state="new">Header</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Value</source>
            <target state="new">Value</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>request-id</source>
            <target state="new">request-id</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>A unique identifier for the current operation, service generated.</source>
            <target state="new">A unique identifier for the current operation, service generated.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>client-request-id</source>
            <target state="new">client-request-id</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>An identifier specified by the caller in the original request, if present.</source>
            <target state="new">An identifier specified by the caller in the original request, if present.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Date</source>
            <target state="new">Date</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>RFC 1123 date</source>
            <target state="new">RFC 1123 date</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The date that the request was processed.</source>
            <target state="new">The date that the request was processed.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Content-Type</source>
            <target state="new">Content-Type</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Varies</source>
            <target state="new">Varies</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>The content type of the response body.</source>
            <target state="new">The content type of the response body.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Content-Encoding</source>
            <target state="new">Content-Encoding</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Varies</source>
            <target state="new">Varies</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Gzip or deflate, as appropriate.</source>
            <target state="new">Gzip or deflate, as appropriate.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Standard HTTP verbs supported by Media Services</source>
            <target state="new">Standard HTTP verbs supported by Media Services</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>The following is a complete list of HTTP verbs that can be used when making HTTP requests:</source>
            <target state="new">The following is a complete list of HTTP verbs that can be used when making HTTP requests:</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Verb</source>
            <target state="new">Verb</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>GET</source>
            <target state="new">GET</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Returns the current value of an object.</source>
            <target state="new">Returns the current value of an object.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>POST</source>
            <target state="new">POST</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Creates an object based on the data provided, or submits a command.</source>
            <target state="new">Creates an object based on the data provided, or submits a command.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>PUT</source>
            <target state="new">PUT</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Replaces an object, or creates a named object (when applicable).</source>
            <target state="new">Replaces an object, or creates a named object (when applicable).</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>DELETE</source>
            <target state="new">DELETE</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Deletes an object.</source>
            <target state="new">Deletes an object.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>MERGE</source>
            <target state="new">MERGE</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Updates an existing object with named property changes.</source>
            <target state="new">Updates an existing object with named property changes.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>HEAD</source>
            <target state="new">HEAD</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Returns metadata of an object for a GET response.</source>
            <target state="new">Returns metadata of an object for a GET response.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Discovering Media Services model</source>
            <target state="new">Discovering Media Services model</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>To make Media Services entities more discoverable, the $metadata operation can be used.</source>
            <target state="new">To make Media Services entities more discoverable, the $metadata operation can be used.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>It allows you to retrieve all valid entity types, entity properties, associations, functions, actions, and so on.</source>
            <target state="new">It allows you to retrieve all valid entity types, entity properties, associations, functions, actions, and so on.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The following example shows how to construct the URI: https://media.windows.net/API/$metadata.</source>
            <target state="new">The following example shows how to construct the URI: https://media.windows.net/API/$metadata.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>You should append "?api-version=2.x" to the end of the URI if you want to view the metadata in a browser, or do not include the x-ms-version header in your request.</source>
            <target state="new">You should append "?api-version=2.x" to the end of the URI if you want to view the metadata in a browser, or do not include the x-ms-version header in your request.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>