<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/22/2016 1:07:38 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4338f0bbc2bc752d0b9424bf99b8df52df529ec0</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Quickstart tutorial for R language for Machine Learning | Microsoft Azure</source>
            <target state="new">Quickstart tutorial for R language for Machine Learning | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Use this R programming tutorial to get started quickly using the R language with Azure Machine Learning Studio to create a forecasting solution.</source>
            <target state="new">Use this R programming tutorial to get started quickly using the R language with Azure Machine Learning Studio to create a forecasting solution.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Quickstart tutorial for the R programming language for Azure Machine Learning</source>
            <target state="new">Quickstart tutorial for the R programming language for Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Stephen F Elston, Ph.D.</source>
            <target state="new">Stephen F Elston, Ph.D.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Introduction</source>
            <target state="new">Introduction</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This quickstart tutorial helps you quickly start extending Azure Machine Learning by using the R programming language.</source>
            <target state="new">This quickstart tutorial helps you quickly start extending Azure Machine Learning by using the R programming language.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Follow this R programming tutorial to create, test and execute R code within Azure Machine Learning.</source>
            <target state="new">Follow this R programming tutorial to create, test and execute R code within Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>As you work through tutorial, you will create a complete forecasting solution by using the R language in Azure Machine Learning.</source>
            <target state="new">As you work through tutorial, you will create a complete forecasting solution by using the R language in Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Microsoft Azure Machine Learning contains many powerful machine learning and data manipulation modules.</source>
            <target state="new">Microsoft Azure Machine Learning contains many powerful machine learning and data manipulation modules.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The powerful R language has been described as the lingua franca of analytics.</source>
            <target state="new">The powerful R language has been described as the lingua franca of analytics.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Happily, analytics and data manipulation in Azure Machine Learning can be extended by using R. This combination provides the scalability and ease of deployment of Azure Machine Learning with the flexibility and deep analytics of R.</source>
            <target state="new">Happily, analytics and data manipulation in Azure Machine Learning can be extended by using R. This combination provides the scalability and ease of deployment of Azure Machine Learning with the flexibility and deep analytics of R.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/machine-learning-free-trial.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/machine-learning-free-trial.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Forecasting and the dataset</source>
            <target state="new">Forecasting and the dataset</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Forecasting is a widely employed and quite useful analytical method.</source>
            <target state="new">Forecasting is a widely employed and quite useful analytical method.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Common uses range from predicting sales of seasonal items, determining optimal inventory levels, to predicting macroeconomic variables.</source>
            <target state="new">Common uses range from predicting sales of seasonal items, determining optimal inventory levels, to predicting macroeconomic variables.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Forecasting is typically done with time series models.</source>
            <target state="new">Forecasting is typically done with time series models.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Time series data is data in which the values have a time index.</source>
            <target state="new">Time series data is data in which the values have a time index.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The time index can be regular, e.g. every month or every minute, or irregular.</source>
            <target state="new">The time index can be regular, e.g. every month or every minute, or irregular.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>A time series model is based on time series data.</source>
            <target state="new">A time series model is based on time series data.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The R programming language contains a flexible framework and extensive analytics for time series data.</source>
            <target state="new">The R programming language contains a flexible framework and extensive analytics for time series data.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>In this quickstart guide we will be working with California dairy production and pricing data.</source>
            <target state="new">In this quickstart guide we will be working with California dairy production and pricing data.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>This data includes monthly information on the production of several dairy products and the price of milk fat, a benchmark commodity.</source>
            <target state="new">This data includes monthly information on the production of several dairy products and the price of milk fat, a benchmark commodity.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The data used in this article, along with R scripts, can be <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>downloaded here[download]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The data used in this article, along with R scripts, can be <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>downloaded here[download]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This data was originally synthesized from information available from the University of Wisconsin at http://future.aae.wisc.edu/tab/production.html.</source>
            <target state="new">This data was originally synthesized from information available from the University of Wisconsin at http://future.aae.wisc.edu/tab/production.html.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Organization</source>
            <target state="new">Organization</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>We will progress through several steps as you learn how to create, test and execute analytics and data manipulation R code in the Azure Machine Learning environment.</source>
            <target state="new">We will progress through several steps as you learn how to create, test and execute analytics and data manipulation R code in the Azure Machine Learning environment.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>First we will explore the basics of using the R language in the Azure Machine Learning Studio environment.</source>
            <target state="new">First we will explore the basics of using the R language in the Azure Machine Learning Studio environment.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Then we progress to discussing various aspects of I/O for data, R code and graphics in the Azure Machine Learning environment.</source>
            <target state="new">Then we progress to discussing various aspects of I/O for data, R code and graphics in the Azure Machine Learning environment.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>We will then construct the first part of our forecasting solution by creating code for data cleaning and transformation.</source>
            <target state="new">We will then construct the first part of our forecasting solution by creating code for data cleaning and transformation.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>With our data prepared we will perform an analysis of the correlations between several of the variables in our dataset.</source>
            <target state="new">With our data prepared we will perform an analysis of the correlations between several of the variables in our dataset.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Finally, we will create a seasonal time series forecasting model for milk production.</source>
            <target state="new">Finally, we will create a seasonal time series forecasting model for milk production.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Interact with R language in Machine Learning Studio</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Interact with R language in Machine Learning Studio</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>This section takes you through some basics of interacting with the R programming language in the Machine Learning Studio environment.</source>
            <target state="new">This section takes you through some basics of interacting with the R programming language in the Machine Learning Studio environment.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The R language provides a powerful tool to create customized analytics and data manipulation modules within the Azure Machine Learning environment.</source>
            <target state="new">The R language provides a powerful tool to create customized analytics and data manipulation modules within the Azure Machine Learning environment.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>I will use RStudio to develop, test and debug R code on a small scale.</source>
            <target state="new">I will use RStudio to develop, test and debug R code on a small scale.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>This code is then cut and paste into an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Machine Learning Studio ready to run.</source>
            <target state="new">This code is then cut and paste into an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Machine Learning Studio ready to run.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The Execute R Script module</source>
            <target state="new">The Execute R Script module</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Within Machine Learning Studio, R scripts are run within the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Within Machine Learning Studio, R scripts are run within the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>An example of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Machine Learning Studio is shown in Figure 1.</source>
            <target state="new">An example of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Machine Learning Studio is shown in Figure 1.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>R programming language: The Execute R Script module selected in Machine Learning Studio<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>R programming language: The Execute R Script module selected in Machine Learning Studio<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>*Figure 1.</source>
            <target state="new">*Figure 1.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The Machine Learning Studio environment showing the Execute R Script module selected.*</source>
            <target state="new">The Machine Learning Studio environment showing the Execute R Script module selected.*</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Referring to Figure 1, let's look at some of the key parts of the Machine Learning Studio environment for working with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Referring to Figure 1, let's look at some of the key parts of the Machine Learning Studio environment for working with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The modules in the experiment are shown in the center pane.</source>
            <target state="new">The modules in the experiment are shown in the center pane.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The upper part of the right pane contains a window to view and edit your R scripts.</source>
            <target state="new">The upper part of the right pane contains a window to view and edit your R scripts.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The lower part of right pane shows some properties of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The lower part of right pane shows some properties of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>You can view the error and output logs by clicking on the appropriate spots of this pane.</source>
            <target state="new">You can view the error and output logs by clicking on the appropriate spots of this pane.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>We will, of course, be discussing the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> in greater detail in the rest of this document.</source>
            <target state="new">We will, of course, be discussing the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> in greater detail in the rest of this document.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>When working with complex R functions, I recommend that you edit, test and debug in RStudio.</source>
            <target state="new">When working with complex R functions, I recommend that you edit, test and debug in RStudio.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>As with any software development, extend your code incrementally and test it on small simple test cases.</source>
            <target state="new">As with any software development, extend your code incrementally and test it on small simple test cases.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Then cut and paste your functions into the R script window of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Then cut and paste your functions into the R script window of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This approach allows you to harness both the RStudio integrated development environment (IDE) and the power of Azure Machine Learning.</source>
            <target state="new">This approach allows you to harness both the RStudio integrated development environment (IDE) and the power of Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Execute R code</source>
            <target state="new">Execute R code</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Any R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module will execute when you run the experiment by clicking on the <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Any R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module will execute when you run the experiment by clicking on the <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>When execution has completed, a check mark will appear on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> icon.</source>
            <target state="new">When execution has completed, a check mark will appear on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> icon.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Defensive R coding for Azure Machine Learning</source>
            <target state="new">Defensive R coding for Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>If you are developing R code for, say, a web service by using Azure Machine Learning, you should definitely plan how your code will deal with an unexpected data input and exceptions.</source>
            <target state="new">If you are developing R code for, say, a web service by using Azure Machine Learning, you should definitely plan how your code will deal with an unexpected data input and exceptions.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>To maintain clarity, I have not included much in the way of checking or exception handling in most of the code examples shown.</source>
            <target state="new">To maintain clarity, I have not included much in the way of checking or exception handling in most of the code examples shown.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>However, as we proceed I will give you several examples of functions by using R's exception handling capability.</source>
            <target state="new">However, as we proceed I will give you several examples of functions by using R's exception handling capability.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>If you need a more complete treatment of R exception handling, I recommend you read the applicable sections of the book by Wickham listed in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further Reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you need a more complete treatment of R exception handling, I recommend you read the applicable sections of the book by Wickham listed in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further Reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Debug and test R in Machine Learning Studio</source>
            <target state="new">Debug and test R in Machine Learning Studio</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>To reiterate, I recommend you test and debug your R code on a small scale in RStudio.</source>
            <target state="new">To reiterate, I recommend you test and debug your R code on a small scale in RStudio.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>However, there are cases where you will need to track down R code problems in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> itself.</source>
            <target state="new">However, there are cases where you will need to track down R code problems in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> itself.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>In addition, it is good practice to check your results in Machine Learning Studio.</source>
            <target state="new">In addition, it is good practice to check your results in Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Output from the execution of your R code and on the Azure Machine Learning platform is found primarily in output.log.</source>
            <target state="new">Output from the execution of your R code and on the Azure Machine Learning platform is found primarily in output.log.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Some additional information will be seen in error.log.</source>
            <target state="new">Some additional information will be seen in error.log.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>If an error occurs in Machine Learning Studio while running your R code, your first course of action should be to look at error.log.</source>
            <target state="new">If an error occurs in Machine Learning Studio while running your R code, your first course of action should be to look at error.log.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>This file can contain useful error messages to help you understand and correct your error.</source>
            <target state="new">This file can contain useful error messages to help you understand and correct your error.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>To view error.log, click on <bpt id="2">&lt;strong&gt;</bpt>View error log<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>properties pane<ept id="4">&lt;/strong&gt;</ept> for the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> containing the error.</source>
            <target state="new">To view error.log, click on <bpt id="2">&lt;strong&gt;</bpt>View error log<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>properties pane<ept id="4">&lt;/strong&gt;</ept> for the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> containing the error.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>For example, I ran the following R code, with an undefined variable y, in an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module:</source>
            <target state="new">For example, I ran the following R code, with an undefined variable y, in an <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module:</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>This code fails to execute, resulting in an error condition.</source>
            <target state="new">This code fails to execute, resulting in an error condition.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Clicking on <bpt id="2">&lt;strong&gt;</bpt>View error log<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>properties pane<ept id="4">&lt;/strong&gt;</ept> produces the display shown in Figure 2.</source>
            <target state="new">Clicking on <bpt id="2">&lt;strong&gt;</bpt>View error log<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>properties pane<ept id="4">&lt;/strong&gt;</ept> produces the display shown in Figure 2.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Error message pop up<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Error message pop up<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>*Figure 2.</source>
            <target state="new">*Figure 2.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Error message pop-up.*</source>
            <target state="new">Error message pop-up.*</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>It looks like we need to look in output.log to see the R error message.</source>
            <target state="new">It looks like we need to look in output.log to see the R error message.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Click on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and then click on the <bpt id="4">&lt;strong&gt;</bpt>View output.log<ept id="4">&lt;/strong&gt;</ept> item on the <bpt id="6">&lt;strong&gt;</bpt>properties pane<ept id="6">&lt;/strong&gt;</ept> to the right.</source>
            <target state="new">Click on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and then click on the <bpt id="4">&lt;strong&gt;</bpt>View output.log<ept id="4">&lt;/strong&gt;</ept> item on the <bpt id="6">&lt;strong&gt;</bpt>properties pane<ept id="6">&lt;/strong&gt;</ept> to the right.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>A new browser window opens, and I see the following.</source>
            <target state="new">A new browser window opens, and I see the following.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>This error message contains no surprises and clearly identifies the problem.</source>
            <target state="new">This error message contains no surprises and clearly identifies the problem.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>To inspect the value of any object in R, you can print these values to the output.log file.</source>
            <target state="new">To inspect the value of any object in R, you can print these values to the output.log file.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>The rules for examining object values are essentially the same as in an interactive R session.</source>
            <target state="new">The rules for examining object values are essentially the same as in an interactive R session.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>For example, if you type a variable name on a line, the value of the object will be printed to the output.log file.</source>
            <target state="new">For example, if you type a variable name on a line, the value of the object will be printed to the output.log file.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Packages in Machine Learning Studio</source>
            <target state="new">Packages in Machine Learning Studio</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Azure Machine Learning comes with over 350 preinstalled R language packages.</source>
            <target state="new">Azure Machine Learning comes with over 350 preinstalled R language packages.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>You can use the following code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module to retrieve a list of the preinstalled packages.</source>
            <target state="new">You can use the following code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module to retrieve a list of the preinstalled packages.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>If you don't understand the last line of this code at the moment, read on.</source>
            <target state="new">If you don't understand the last line of this code at the moment, read on.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>In the rest of this document we will extensively discuss using R in the Azure Machine Learning environment.</source>
            <target state="new">In the rest of this document we will extensively discuss using R in the Azure Machine Learning environment.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Introduction to RStudio</source>
            <target state="new">Introduction to RStudio</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>RStudio is a widely used IDE for R. I will use RStudio for editing, testing and debugging some of the R code used in this quick start guide.</source>
            <target state="new">RStudio is a widely used IDE for R. I will use RStudio for editing, testing and debugging some of the R code used in this quick start guide.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Once R code is tested and ready, you simply cut and paste from the RStudio editor into a Machine Learning Studio <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Once R code is tested and ready, you simply cut and paste from the RStudio editor into a Machine Learning Studio <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>If you do not have the R programming language installed on your desktop machine, I recommend you do so now.</source>
            <target state="new">If you do not have the R programming language installed on your desktop machine, I recommend you do so now.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Free downloads of open source R language are available at the Comprehensive R Archive Network (CRAN) at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://www.r-project.org/<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Free downloads of open source R language are available at the Comprehensive R Archive Network (CRAN) at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://www.r-project.org/<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>There are downloads available for Windows, Mac OS, and Linux/UNIX.</source>
            <target state="new">There are downloads available for Windows, Mac OS, and Linux/UNIX.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Choose a nearby mirror and follow the download directions.</source>
            <target state="new">Choose a nearby mirror and follow the download directions.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>In addition, CRAN contains a wealth of useful analytics and data manipulation packages.</source>
            <target state="new">In addition, CRAN contains a wealth of useful analytics and data manipulation packages.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>If you are new to RStudio, you should download and install the desktop version.</source>
            <target state="new">If you are new to RStudio, you should download and install the desktop version.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>You can find the RStudio downloads for Windows, Mac OS, and Linux/UNIX at http://www.rstudio.com/products/RStudio/.</source>
            <target state="new">You can find the RStudio downloads for Windows, Mac OS, and Linux/UNIX at http://www.rstudio.com/products/RStudio/.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Follow the directions provided to install RStudio on your desktop machine.</source>
            <target state="new">Follow the directions provided to install RStudio on your desktop machine.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>A tutorial introduction to RStudio is available at https://support.rstudio.com/hc/sections/200107586-Using-RStudio.</source>
            <target state="new">A tutorial introduction to RStudio is available at https://support.rstudio.com/hc/sections/200107586-Using-RStudio.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>I provide some additional information on using RStudio in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix A[appendixa]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">I provide some additional information on using RStudio in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix A[appendixa]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Get data in and out of the Execute R Script module</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Get data in and out of the Execute R Script module</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>In this section we will discuss how you get data into and out of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">In this section we will discuss how you get data into and out of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>We will review how to handle various data types read into and out of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">We will review how to handle various data types read into and out of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>The complete code for this section is in the zip file you downloaded earlier.</source>
            <target state="new">The complete code for this section is in the zip file you downloaded earlier.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Load and check data in Machine Learning Studio</source>
            <target state="new">Load and check data in Machine Learning Studio</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Load the dataset</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Load the dataset</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>We will start by loading the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv<ept id="2">&lt;/strong&gt;</ept> file into Azure Machine Learning Studio.</source>
            <target state="new">We will start by loading the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv<ept id="2">&lt;/strong&gt;</ept> file into Azure Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Start your Azure Machine Learning Studio environment.</source>
            <target state="new">Start your Azure Machine Learning Studio environment.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Click on the + at the lower left of your screen and select <bpt id="2">&lt;strong&gt;</bpt>Dataset<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click on the + at the lower left of your screen and select <bpt id="2">&lt;strong&gt;</bpt>Dataset<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>From Local File<ept id="2">&lt;/strong&gt;</ept>, and then <bpt id="4">&lt;strong&gt;</bpt>Browse<ept id="4">&lt;/strong&gt;</ept> to select the file.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>From Local File<ept id="2">&lt;/strong&gt;</ept>, and then <bpt id="4">&lt;strong&gt;</bpt>Browse<ept id="4">&lt;/strong&gt;</ept> to select the file.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>Make sure you have selected <bpt id="2">&lt;strong&gt;</bpt>Generic CSV file with header (.csv)<ept id="2">&lt;/strong&gt;</ept> as the type for the dataset.</source>
            <target state="new">Make sure you have selected <bpt id="2">&lt;strong&gt;</bpt>Generic CSV file with header (.csv)<ept id="2">&lt;/strong&gt;</ept> as the type for the dataset.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Click the check mark.</source>
            <target state="new">Click the check mark.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>After the dataset has been uploaded, you should see the new dataset by clicking on the <bpt id="2">&lt;strong&gt;</bpt>Datasets<ept id="2">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">After the dataset has been uploaded, you should see the new dataset by clicking on the <bpt id="2">&lt;strong&gt;</bpt>Datasets<ept id="2">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Create an experiment</source>
            <target state="new">Create an experiment</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Now that we have some data in Machine Learning Studio, we need to create an experiment to do the analysis.</source>
            <target state="new">Now that we have some data in Machine Learning Studio, we need to create an experiment to do the analysis.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>Click on the + at the lower left and select <bpt id="2">&lt;strong&gt;</bpt>Experiment<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>Blank Experiment<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click on the + at the lower left and select <bpt id="2">&lt;strong&gt;</bpt>Experiment<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>Blank Experiment<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>You can name your experiment by selecting, and modifying, the <bpt id="2">&lt;strong&gt;</bpt>Experiment created on ...<ept id="2">&lt;/strong&gt;</ept> title at the top of the page.</source>
            <target state="new">You can name your experiment by selecting, and modifying, the <bpt id="2">&lt;strong&gt;</bpt>Experiment created on ...<ept id="2">&lt;/strong&gt;</ept> title at the top of the page.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>For example, changing it to <bpt id="2">&lt;strong&gt;</bpt>CA Dairy Analysis<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">For example, changing it to <bpt id="2">&lt;strong&gt;</bpt>CA Dairy Analysis<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>On the left of the experiment page, expand <bpt id="2">&lt;strong&gt;</bpt>Saved Datasets<ept id="2">&lt;/strong&gt;</ept>, and then <bpt id="4">&lt;strong&gt;</bpt>My Datasets<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">On the left of the experiment page, expand <bpt id="2">&lt;strong&gt;</bpt>Saved Datasets<ept id="2">&lt;/strong&gt;</ept>, and then <bpt id="4">&lt;strong&gt;</bpt>My Datasets<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>You should see the <bpt id="2">&lt;strong&gt;</bpt>cadairydata.csv<ept id="2">&lt;/strong&gt;</ept> that you uploaded earlier.</source>
            <target state="new">You should see the <bpt id="2">&lt;strong&gt;</bpt>cadairydata.csv<ept id="2">&lt;/strong&gt;</ept> that you uploaded earlier.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Drag and drop the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> onto the experiment.</source>
            <target state="new">Drag and drop the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> onto the experiment.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Search experiment items<ept id="2">&lt;/strong&gt;</ept> box on the top of the left pane, type <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Search experiment items<ept id="2">&lt;/strong&gt;</ept> box on the top of the left pane, type <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>You will see the module appear in the search list.</source>
            <target state="new">You will see the module appear in the search list.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Drag and drop the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module onto your pallet.</source>
            <target state="new">Drag and drop the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module onto your pallet.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Connect the output of the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> to the leftmost input (<bpt id="4">&lt;strong&gt;</bpt>Dataset1<ept id="4">&lt;/strong&gt;</ept>) of the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Connect the output of the <bpt id="2">&lt;strong&gt;</bpt>csdairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> to the leftmost input (<bpt id="4">&lt;strong&gt;</bpt>Dataset1<ept id="4">&lt;/strong&gt;</ept>) of the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Don't forget to click on 'Save'!<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Don't forget to click on 'Save'!<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>At this point your experiment should look something like Figure 3.</source>
            <target state="new">At this point your experiment should look something like Figure 3.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>The CA Dairy Analysis experiment with dataset and Execute R Script module<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>The CA Dairy Analysis experiment with dataset and Execute R Script module<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>*Figure 3.</source>
            <target state="new">*Figure 3.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>The CA Dairy Analysis experiment with dataset and Execute R Script module.*</source>
            <target state="new">The CA Dairy Analysis experiment with dataset and Execute R Script module.*</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>Check on the data</source>
            <target state="new">Check on the data</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Let's have a look at the data we have loaded into our experiment.</source>
            <target state="new">Let's have a look at the data we have loaded into our experiment.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>In the experiment, click on the output of the <bpt id="2">&lt;strong&gt;</bpt>cadairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> and select <bpt id="4">&lt;strong&gt;</bpt>visualize<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the experiment, click on the output of the <bpt id="2">&lt;strong&gt;</bpt>cadairydata.csv dataset<ept id="2">&lt;/strong&gt;</ept> and select <bpt id="4">&lt;strong&gt;</bpt>visualize<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>You should see something like Figure 4.</source>
            <target state="new">You should see something like Figure 4.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the cadairydata.csv dataset<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the cadairydata.csv dataset<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>*Figure 4.</source>
            <target state="new">*Figure 4.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Summary of the cadairydata.csv dataset.*</source>
            <target state="new">Summary of the cadairydata.csv dataset.*</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>In this view we see a lot of useful information.</source>
            <target state="new">In this view we see a lot of useful information.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Feature Type<ept id="2">&lt;/strong&gt;</ept> row shows us what data types Azure Machine Learning Studio assigns to the columns in our dataset.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Feature Type<ept id="2">&lt;/strong&gt;</ept> row shows us what data types Azure Machine Learning Studio assigns to the columns in our dataset.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>We also see the first several rows of that dataset.</source>
            <target state="new">We also see the first several rows of that dataset.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Having a quick look like this is a good sanity check before we start to do any serious work.</source>
            <target state="new">Having a quick look like this is a good sanity check before we start to do any serious work.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>First R script</source>
            <target state="new">First R script</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>Let's create a simple first R script to experiment with in Azure Machine Learning Studio.</source>
            <target state="new">Let's create a simple first R script to experiment with in Azure Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>I have created and tested the following script in RStudio.</source>
            <target state="new">I have created and tested the following script in RStudio.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Now I need to transfer this script to Azure Machine Learning Studio.</source>
            <target state="new">Now I need to transfer this script to Azure Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>I could simply cut and paste.</source>
            <target state="new">I could simply cut and paste.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>However, in this case, I will transfer my R script via a zip file.</source>
            <target state="new">However, in this case, I will transfer my R script via a zip file.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Data input to the Execute R Script module</source>
            <target state="new">Data input to the Execute R Script module</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>Let's have a look at the inputs to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Let's have a look at the inputs to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>In this example we will read the California dairy data into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">In this example we will read the California dairy data into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>There are three possible inputs for the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">There are three possible inputs for the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>You may use any one or all of these inputs, depending on your application.</source>
            <target state="new">You may use any one or all of these inputs, depending on your application.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>It is also perfectly reasonable to use an R script that takes no input at all.</source>
            <target state="new">It is also perfectly reasonable to use an R script that takes no input at all.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>Let's look at each of these inputs, going from left to right.</source>
            <target state="new">Let's look at each of these inputs, going from left to right.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>You can see the names of each of the inputs by placing your cursor over the input and reading the tooltip.</source>
            <target state="new">You can see the names of each of the inputs by placing your cursor over the input and reading the tooltip.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>Script Bundle</source>
            <target state="new">Script Bundle</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>The Script Bundle input allows you to pass the contents of a zip file into <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">The Script Bundle input allows you to pass the contents of a zip file into <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>You can use one of the following commands to read the contents of the zip file into your R code.</source>
            <target state="new">You can use one of the following commands to read the contents of the zip file into your R code.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>Azure Machine Learning treats files in the zip as if they are in the src/ directory, so you need to prefix your file names with this directory name.</source>
            <target state="new">Azure Machine Learning treats files in the zip as if they are in the src/ directory, so you need to prefix your file names with this directory name.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>We already discussed loading datasets in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Loading the dataset<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">We already discussed loading datasets in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Loading the dataset<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>Once you have created and tested the R script shown in the previous section, do the following:</source>
            <target state="new">Once you have created and tested the R script shown in the previous section, do the following:</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>Save the R script into a .R file.</source>
            <target state="new">Save the R script into a .R file.</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>I call my script file "simpleplot.R".</source>
            <target state="new">I call my script file "simpleplot.R".</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Create a zip file and copy your script into this zip file.</source>
            <target state="new">Create a zip file and copy your script into this zip file.</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>Add your file to the <bpt id="2">&lt;strong&gt;</bpt>datasets<ept id="2">&lt;/strong&gt;</ept> in Machine Learning Studio, specifying the type as <bpt id="4">&lt;strong&gt;</bpt>zip<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Add your file to the <bpt id="2">&lt;strong&gt;</bpt>datasets<ept id="2">&lt;/strong&gt;</ept> in Machine Learning Studio, specifying the type as <bpt id="4">&lt;strong&gt;</bpt>zip<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>You should now see the zip file in your datasets.</source>
            <target state="new">You should now see the zip file in your datasets.</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>Drag and drop the zip file from <bpt id="2">&lt;strong&gt;</bpt>datasets<ept id="2">&lt;/strong&gt;</ept> onto the <bpt id="4">&lt;strong&gt;</bpt>ML Studio canvas<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Drag and drop the zip file from <bpt id="2">&lt;strong&gt;</bpt>datasets<ept id="2">&lt;/strong&gt;</ept> onto the <bpt id="4">&lt;strong&gt;</bpt>ML Studio canvas<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>Connect the output of the <bpt id="2">&lt;strong&gt;</bpt>zip data<ept id="2">&lt;/strong&gt;</ept> icon to the <bpt id="4">&lt;strong&gt;</bpt>Script Bundle<ept id="4">&lt;/strong&gt;</ept> input of the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Connect the output of the <bpt id="2">&lt;strong&gt;</bpt>zip data<ept id="2">&lt;/strong&gt;</ept> icon to the <bpt id="4">&lt;strong&gt;</bpt>Script Bundle<ept id="4">&lt;/strong&gt;</ept> input of the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>Type the <bpt id="2">&lt;code&gt;</bpt>source()<ept id="2">&lt;/code&gt;</ept> function with your zip file name into the code window for the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Type the <bpt id="2">&lt;code&gt;</bpt>source()<ept id="2">&lt;/code&gt;</ept> function with your zip file name into the code window for the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>In my case I typed <bpt id="2">&lt;code&gt;</bpt>source("src/SimplePlot.R")<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">In my case I typed <bpt id="2">&lt;code&gt;</bpt>source("src/SimplePlot.R")<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source>Make sure you click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Make sure you click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>Once these steps are complete, the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module will execute the R script in the zip file when the experiment is run.</source>
            <target state="new">Once these steps are complete, the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module will execute the R script in the zip file when the experiment is run.</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>At this point your experiment should look something like Figure 5.</source>
            <target state="new">At this point your experiment should look something like Figure 5.</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Experiment using zipped R script<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Experiment using zipped R script<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>*Figure 5.</source>
            <target state="new">*Figure 5.</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>Experiment using zipped R script.*</source>
            <target state="new">Experiment using zipped R script.*</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>Dataset1</source>
            <target state="new">Dataset1</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>You can pass a rectangular table of data to your R code by using the Dataset1 input.</source>
            <target state="new">You can pass a rectangular table of data to your R code by using the Dataset1 input.</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>In our simple script the <bpt id="2">&lt;code&gt;</bpt>maml.mapInputPort(1)<ept id="2">&lt;/code&gt;</ept> function reads the data from port 1.</source>
            <target state="new">In our simple script the <bpt id="2">&lt;code&gt;</bpt>maml.mapInputPort(1)<ept id="2">&lt;/code&gt;</ept> function reads the data from port 1.</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>This data is then assigned to a dataframe variable name in your code.</source>
            <target state="new">This data is then assigned to a dataframe variable name in your code.</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>In our simple script the first line of code performs the assignment.</source>
            <target state="new">In our simple script the first line of code performs the assignment.</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source>Execute your experiment by clicking on the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Execute your experiment by clicking on the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>When the execution finishes, click on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module and then click <bpt id="4">&lt;strong&gt;</bpt>View output log<ept id="4">&lt;/strong&gt;</ept> on the properties pane.</source>
            <target state="new">When the execution finishes, click on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module and then click <bpt id="4">&lt;strong&gt;</bpt>View output log<ept id="4">&lt;/strong&gt;</ept> on the properties pane.</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source>A new page should appear in your browser showing the contents of the output.log file.</source>
            <target state="new">A new page should appear in your browser showing the contents of the output.log file.</target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>When you scroll down you should see something like the following.</source>
            <target state="new">When you scroll down you should see something like the following.</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>These results are mostly as expected, with 228 observations and 9 columns in the dataframe.</source>
            <target state="new">These results are mostly as expected, with 228 observations and 9 columns in the dataframe.</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>We can see the column names, the R data type and a sample of each column.</source>
            <target state="new">We can see the column names, the R data type and a sample of each column.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source>This same printed output is conveniently available from the R Device output of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">This same printed output is conveniently available from the R Device output of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>We will discuss the outputs of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in the next section.</source>
            <target state="new">We will discuss the outputs of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in the next section.</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>Dataset2</source>
            <target state="new">Dataset2</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source>The behavior of the Dataset2 input is identical to that of Dataset1.</source>
            <target state="new">The behavior of the Dataset2 input is identical to that of Dataset1.</target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>Using this input you can pass a second rectangular table of data into your R code.</source>
            <target state="new">Using this input you can pass a second rectangular table of data into your R code.</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>The function <bpt id="2">&lt;code&gt;</bpt>maml.mapInputPort(2)<ept id="2">&lt;/code&gt;</ept>, with the argument 2, is used to pass this data.</source>
            <target state="new">The function <bpt id="2">&lt;code&gt;</bpt>maml.mapInputPort(2)<ept id="2">&lt;/code&gt;</ept>, with the argument 2, is used to pass this data.</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>Execute R Script outputs</source>
            <target state="new">Execute R Script outputs</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source>Output a dataframe</source>
            <target state="new">Output a dataframe</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>You can output the contents of an R dataframe as a rectangular table through the Result Dataset1 port by using the <bpt id="2">&lt;code&gt;</bpt>maml.mapOutputPort()<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">You can output the contents of an R dataframe as a rectangular table through the Result Dataset1 port by using the <bpt id="2">&lt;code&gt;</bpt>maml.mapOutputPort()<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>In our simple R script this is performed by the following line.</source>
            <target state="new">In our simple R script this is performed by the following line.</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source>After running the experiment, click on the Result Dataset1 output port and then click on <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">After running the experiment, click on the Result Dataset1 output port and then click on <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source>You should see something like Figure 6.</source>
            <target state="new">You should see something like Figure 6.</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>The visualization of the output of the California dairy data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>The visualization of the output of the California dairy data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source>*Figure 6.</source>
            <target state="new">*Figure 6.</target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source>The visualization of the output of the California dairy data.*</source>
            <target state="new">The visualization of the output of the California dairy data.*</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source>This output looks identical to the input, exactly as we expected.</source>
            <target state="new">This output looks identical to the input, exactly as we expected.</target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source>R Device output</source>
            <target state="new">R Device output</target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source>The Device output of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module contains messages and graphics output.</source>
            <target state="new">The Device output of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module contains messages and graphics output.</target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source>Both standard output and standard error messages from R are sent to the R Device output port.</source>
            <target state="new">Both standard output and standard error messages from R are sent to the R Device output port.</target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source>To view the R Device output, click on the port and then on <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To view the R Device output, click on the port and then on <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source>We see the standard output and standard error from the R script in Figure 7.</source>
            <target state="new">We see the standard output and standard error from the R script in Figure 7.</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Standard output and standard error from the R Device port<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Standard output and standard error from the R Device port<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source>*Figure 7.</source>
            <target state="new">*Figure 7.</target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source>Standard output and standard error from the R Device port.*</source>
            <target state="new">Standard output and standard error from the R Device port.*</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source>Scrolling down we see the graphics output from our R script in Figure 8.</source>
            <target state="new">Scrolling down we see the graphics output from our R script in Figure 8.</target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Graphics output from the R Device port<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Graphics output from the R Device port<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source>*Figure 8.</source>
            <target state="new">*Figure 8.</target>
          </trans-unit>
          <trans-unit id="315" xml:space="preserve">
            <source>Graphics output from the R Device port.*</source>
            <target state="new">Graphics output from the R Device port.*</target>
          </trans-unit>
          <trans-unit id="316" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data filtering and transformation</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data filtering and transformation</target>
          </trans-unit>
          <trans-unit id="317" xml:space="preserve">
            <source>In this section we will perform some basic data filtering and transformation operations on the California dairy data.</source>
            <target state="new">In this section we will perform some basic data filtering and transformation operations on the California dairy data.</target>
          </trans-unit>
          <trans-unit id="318" xml:space="preserve">
            <source>By the end of this section we will have data in a format suitable for building an analytic model.</source>
            <target state="new">By the end of this section we will have data in a format suitable for building an analytic model.</target>
          </trans-unit>
          <trans-unit id="319" xml:space="preserve">
            <source>More specifically, in this section we will perform several common data cleaning and transformation tasks: type transformation, filtering on dataframes, adding new computed columns, and value transformations.</source>
            <target state="new">More specifically, in this section we will perform several common data cleaning and transformation tasks: type transformation, filtering on dataframes, adding new computed columns, and value transformations.</target>
          </trans-unit>
          <trans-unit id="320" xml:space="preserve">
            <source>This background should help you deal with the many variations encountered in real-world problems.</source>
            <target state="new">This background should help you deal with the many variations encountered in real-world problems.</target>
          </trans-unit>
          <trans-unit id="321" xml:space="preserve">
            <source>The complete R code for this section is available in the zip file you downloaded earlier.</source>
            <target state="new">The complete R code for this section is available in the zip file you downloaded earlier.</target>
          </trans-unit>
          <trans-unit id="322" xml:space="preserve">
            <source>Type transformations</source>
            <target state="new">Type transformations</target>
          </trans-unit>
          <trans-unit id="323" xml:space="preserve">
            <source>Now that we can read the California dairy data into the R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, we need to ensure that the data in the columns has the intended type and format.</source>
            <target state="new">Now that we can read the California dairy data into the R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, we need to ensure that the data in the columns has the intended type and format.</target>
          </trans-unit>
          <trans-unit id="324" xml:space="preserve">
            <source>R is a dynamically typed language, which means that data types are coerced from one to another as required.</source>
            <target state="new">R is a dynamically typed language, which means that data types are coerced from one to another as required.</target>
          </trans-unit>
          <trans-unit id="325" xml:space="preserve">
            <source>The atomic data types in R include numeric, logical and character.</source>
            <target state="new">The atomic data types in R include numeric, logical and character.</target>
          </trans-unit>
          <trans-unit id="326" xml:space="preserve">
            <source>The factor type is used to compactly store categorical data.</source>
            <target state="new">The factor type is used to compactly store categorical data.</target>
          </trans-unit>
          <trans-unit id="327" xml:space="preserve">
            <source>You can find much more information on data types in the references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can find much more information on data types in the references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="328" xml:space="preserve">
            <source>When tabular data is read into R from an external source, it is always a good idea to check the resulting types in the columns.</source>
            <target state="new">When tabular data is read into R from an external source, it is always a good idea to check the resulting types in the columns.</target>
          </trans-unit>
          <trans-unit id="329" xml:space="preserve">
            <source>You may want a column of type character, but in many cases this will show up as factor or vice versa.</source>
            <target state="new">You may want a column of type character, but in many cases this will show up as factor or vice versa.</target>
          </trans-unit>
          <trans-unit id="330" xml:space="preserve">
            <source>In other cases a column you think should be numeric is represented by character data, e.g. '1.23' rather than 1.23 as a floating point number.</source>
            <target state="new">In other cases a column you think should be numeric is represented by character data, e.g. '1.23' rather than 1.23 as a floating point number.</target>
          </trans-unit>
          <trans-unit id="331" xml:space="preserve">
            <source>Fortunately, it is easy to convert one type to another, as long as mapping is possible.</source>
            <target state="new">Fortunately, it is easy to convert one type to another, as long as mapping is possible.</target>
          </trans-unit>
          <trans-unit id="332" xml:space="preserve">
            <source>For example, you cannot convert 'Nevada' into a numeric value, but you can convert it to a factor (categorical variable).</source>
            <target state="new">For example, you cannot convert 'Nevada' into a numeric value, but you can convert it to a factor (categorical variable).</target>
          </trans-unit>
          <trans-unit id="333" xml:space="preserve">
            <source>As another example, you can convert a numeric 1 into a character '1' or a factor.</source>
            <target state="new">As another example, you can convert a numeric 1 into a character '1' or a factor.</target>
          </trans-unit>
          <trans-unit id="334" xml:space="preserve">
            <source>The syntax for any of these conversions is simple: <bpt id="2">&lt;code&gt;</bpt>as.datatype()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">The syntax for any of these conversions is simple: <bpt id="2">&lt;code&gt;</bpt>as.datatype()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="335" xml:space="preserve">
            <source>These type conversion functions include the following.</source>
            <target state="new">These type conversion functions include the following.</target>
          </trans-unit>
          <trans-unit id="336" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>as.numeric()<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>as.numeric()<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="337" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>as.character()<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>as.character()<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="338" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>as.logical()<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>as.logical()<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="339" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>as.factor()<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>as.factor()<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="340" xml:space="preserve">
            <source>Looking at the data types of the columns we input in the previous section: all columns are of type numeric, except for the column labeled 'Month', which is of type character.</source>
            <target state="new">Looking at the data types of the columns we input in the previous section: all columns are of type numeric, except for the column labeled 'Month', which is of type character.</target>
          </trans-unit>
          <trans-unit id="341" xml:space="preserve">
            <source>Let's convert this to a factor and test the results.</source>
            <target state="new">Let's convert this to a factor and test the results.</target>
          </trans-unit>
          <trans-unit id="342" xml:space="preserve">
            <source>I have deleted the line that created the scatterplot matrix and added a line converting the 'Month' column to a factor.</source>
            <target state="new">I have deleted the line that created the scatterplot matrix and added a line converting the 'Month' column to a factor.</target>
          </trans-unit>
          <trans-unit id="343" xml:space="preserve">
            <source>In my experiment I will just cut and paste the R code into the code window of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> Module.</source>
            <target state="new">In my experiment I will just cut and paste the R code into the code window of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> Module.</target>
          </trans-unit>
          <trans-unit id="344" xml:space="preserve">
            <source>You could also update the zip file and upload it to Azure Machine Learning Studio, but this takes several steps.</source>
            <target state="new">You could also update the zip file and upload it to Azure Machine Learning Studio, but this takes several steps.</target>
          </trans-unit>
          <trans-unit id="345" xml:space="preserve">
            <source>Let's execute this code and look at the output.</source>
            <target state="new">Let's execute this code and look at the output.</target>
          </trans-unit>
          <trans-unit id="346" xml:space="preserve">
            <source>The output from <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device menu is shown in Figure 9.</source>
            <target state="new">The output from <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device menu is shown in Figure 9.</target>
          </trans-unit>
          <trans-unit id="347" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with a factor variable<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with a factor variable<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="348" xml:space="preserve">
            <source>*Figure 9.</source>
            <target state="new">*Figure 9.</target>
          </trans-unit>
          <trans-unit id="349" xml:space="preserve">
            <source>Summary of the dataframe with a factor variable.*</source>
            <target state="new">Summary of the dataframe with a factor variable.*</target>
          </trans-unit>
          <trans-unit id="350" xml:space="preserve">
            <source>The type for Month should now say '<bpt id="2">&lt;strong&gt;</bpt>Factor w/ 14 levels<ept id="2">&lt;/strong&gt;</ept>'.</source>
            <target state="new">The type for Month should now say '<bpt id="2">&lt;strong&gt;</bpt>Factor w/ 14 levels<ept id="2">&lt;/strong&gt;</ept>'.</target>
          </trans-unit>
          <trans-unit id="351" xml:space="preserve">
            <source>This is a problem since there are only 12 months in the year.</source>
            <target state="new">This is a problem since there are only 12 months in the year.</target>
          </trans-unit>
          <trans-unit id="352" xml:space="preserve">
            <source>You can also check to see that the type in <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> of the Result Dataset port is '<bpt id="4">&lt;strong&gt;</bpt>Categorical<ept id="4">&lt;/strong&gt;</ept>'.</source>
            <target state="new">You can also check to see that the type in <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> of the Result Dataset port is '<bpt id="4">&lt;strong&gt;</bpt>Categorical<ept id="4">&lt;/strong&gt;</ept>'.</target>
          </trans-unit>
          <trans-unit id="353" xml:space="preserve">
            <source>The problem is that the 'Month' column has not been coded systematically.</source>
            <target state="new">The problem is that the 'Month' column has not been coded systematically.</target>
          </trans-unit>
          <trans-unit id="354" xml:space="preserve">
            <source>In some cases a month is called April and in others it is abbreviated as Apr. We can solve this problem by trimming the string to 3 characters.</source>
            <target state="new">In some cases a month is called April and in others it is abbreviated as Apr. We can solve this problem by trimming the string to 3 characters.</target>
          </trans-unit>
          <trans-unit id="355" xml:space="preserve">
            <source>The line of code now looks like the following:</source>
            <target state="new">The line of code now looks like the following:</target>
          </trans-unit>
          <trans-unit id="356" xml:space="preserve">
            <source>Rerun the experiment and <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> the output at the R Device port with the results shown in Figure 10.</source>
            <target state="new">Rerun the experiment and <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> the output at the R Device port with the results shown in Figure 10.</target>
          </trans-unit>
          <trans-unit id="357" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with correct number of factor levels<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with correct number of factor levels<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="358" xml:space="preserve">
            <source>*Figure 10.</source>
            <target state="new">*Figure 10.</target>
          </trans-unit>
          <trans-unit id="359" xml:space="preserve">
            <source>Summary of the dataframe with correct number of factor levels.*</source>
            <target state="new">Summary of the dataframe with correct number of factor levels.*</target>
          </trans-unit>
          <trans-unit id="360" xml:space="preserve">
            <source>Our factor variable now has the desired 12 levels.</source>
            <target state="new">Our factor variable now has the desired 12 levels.</target>
          </trans-unit>
          <trans-unit id="361" xml:space="preserve">
            <source>Basic data frame filtering</source>
            <target state="new">Basic data frame filtering</target>
          </trans-unit>
          <trans-unit id="362" xml:space="preserve">
            <source>R dataframes support powerful filtering capabilities.</source>
            <target state="new">R dataframes support powerful filtering capabilities.</target>
          </trans-unit>
          <trans-unit id="363" xml:space="preserve">
            <source>Datasets can be subsetted by using logical filters on either rows or columns.</source>
            <target state="new">Datasets can be subsetted by using logical filters on either rows or columns.</target>
          </trans-unit>
          <trans-unit id="364" xml:space="preserve">
            <source>In many cases, complex filter criteria will be required.</source>
            <target state="new">In many cases, complex filter criteria will be required.</target>
          </trans-unit>
          <trans-unit id="365" xml:space="preserve">
            <source>The references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> contain extensive examples of filtering dataframes.</source>
            <target state="new">The references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> contain extensive examples of filtering dataframes.</target>
          </trans-unit>
          <trans-unit id="366" xml:space="preserve">
            <source>There is one bit of filtering we should do on our dataset.</source>
            <target state="new">There is one bit of filtering we should do on our dataset.</target>
          </trans-unit>
          <trans-unit id="367" xml:space="preserve">
            <source>If you look at the columns in the cadairydata dataframe, you will see two unnecessary columns.</source>
            <target state="new">If you look at the columns in the cadairydata dataframe, you will see two unnecessary columns.</target>
          </trans-unit>
          <trans-unit id="368" xml:space="preserve">
            <source>The first column just holds a row number, which is not very useful.</source>
            <target state="new">The first column just holds a row number, which is not very useful.</target>
          </trans-unit>
          <trans-unit id="369" xml:space="preserve">
            <source>The second column, Year.Month, contains redundant information.</source>
            <target state="new">The second column, Year.Month, contains redundant information.</target>
          </trans-unit>
          <trans-unit id="370" xml:space="preserve">
            <source>We can easily exclude these columns by using the following R code.</source>
            <target state="new">We can easily exclude these columns by using the following R code.</target>
          </trans-unit>
          <trans-unit id="371" xml:space="preserve">
            <source>From now on in this section, I will just show you the additional code I am adding in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">From now on in this section, I will just show you the additional code I am adding in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="372" xml:space="preserve">
            <source>I will add each new line <bpt id="2">&lt;strong&gt;</bpt>before<ept id="2">&lt;/strong&gt;</ept> the <bpt id="4">&lt;code&gt;</bpt>str()<ept id="4">&lt;/code&gt;</ept> function.</source>
            <target state="new">I will add each new line <bpt id="2">&lt;strong&gt;</bpt>before<ept id="2">&lt;/strong&gt;</ept> the <bpt id="4">&lt;code&gt;</bpt>str()<ept id="4">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="373" xml:space="preserve">
            <source>I use this function to verify my results in Azure Machine Learning Studio.</source>
            <target state="new">I use this function to verify my results in Azure Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="374" xml:space="preserve">
            <source>I add the following line to my R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">I add the following line to my R code in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="375" xml:space="preserve">
            <source>Run this code in your experiment and check the result with <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device port.</source>
            <target state="new">Run this code in your experiment and check the result with <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device port.</target>
          </trans-unit>
          <trans-unit id="376" xml:space="preserve">
            <source>These results are shown in Figure 11.</source>
            <target state="new">These results are shown in Figure 11.</target>
          </trans-unit>
          <trans-unit id="377" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with two columns removed<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with two columns removed<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="378" xml:space="preserve">
            <source>*Figure 11.</source>
            <target state="new">*Figure 11.</target>
          </trans-unit>
          <trans-unit id="379" xml:space="preserve">
            <source>Summary of the dataframe with two columns removed.*</source>
            <target state="new">Summary of the dataframe with two columns removed.*</target>
          </trans-unit>
          <trans-unit id="380" xml:space="preserve">
            <source>Good news!</source>
            <target state="new">Good news!</target>
          </trans-unit>
          <trans-unit id="381" xml:space="preserve">
            <source>We get the expected results.</source>
            <target state="new">We get the expected results.</target>
          </trans-unit>
          <trans-unit id="382" xml:space="preserve">
            <source>Add a new column</source>
            <target state="new">Add a new column</target>
          </trans-unit>
          <trans-unit id="383" xml:space="preserve">
            <source>To create time series models it will be convenient to have a column containing the months since the start of the time series.</source>
            <target state="new">To create time series models it will be convenient to have a column containing the months since the start of the time series.</target>
          </trans-unit>
          <trans-unit id="384" xml:space="preserve">
            <source>We will create a new column 'Month.Count'.</source>
            <target state="new">We will create a new column 'Month.Count'.</target>
          </trans-unit>
          <trans-unit id="385" xml:space="preserve">
            <source>To help organize the code we will create our first simple function, <bpt id="2">&lt;code&gt;</bpt>num.month()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">To help organize the code we will create our first simple function, <bpt id="2">&lt;code&gt;</bpt>num.month()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="386" xml:space="preserve">
            <source>We will then apply this function to create a new column in the dataframe.</source>
            <target state="new">We will then apply this function to create a new column in the dataframe.</target>
          </trans-unit>
          <trans-unit id="387" xml:space="preserve">
            <source>The new code is as follows.</source>
            <target state="new">The new code is as follows.</target>
          </trans-unit>
          <trans-unit id="388" xml:space="preserve">
            <source>Now run the updated experiment and use <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device port to view the results.</source>
            <target state="new">Now run the updated experiment and use <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> on the R Device port to view the results.</target>
          </trans-unit>
          <trans-unit id="389" xml:space="preserve">
            <source>These results are shown in Figure 12.</source>
            <target state="new">These results are shown in Figure 12.</target>
          </trans-unit>
          <trans-unit id="390" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with the additional column<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with the additional column<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="391" xml:space="preserve">
            <source>*Figure 12.</source>
            <target state="new">*Figure 12.</target>
          </trans-unit>
          <trans-unit id="392" xml:space="preserve">
            <source>Summary of the dataframe with the additional column.*</source>
            <target state="new">Summary of the dataframe with the additional column.*</target>
          </trans-unit>
          <trans-unit id="393" xml:space="preserve">
            <source>It looks like everything is working.</source>
            <target state="new">It looks like everything is working.</target>
          </trans-unit>
          <trans-unit id="394" xml:space="preserve">
            <source>We have the new column with the expected values in our dataframe.</source>
            <target state="new">We have the new column with the expected values in our dataframe.</target>
          </trans-unit>
          <trans-unit id="395" xml:space="preserve">
            <source>Value transformations</source>
            <target state="new">Value transformations</target>
          </trans-unit>
          <trans-unit id="396" xml:space="preserve">
            <source>In this section we will perform some simple transformations on the values in some of the columns of our dataframe.</source>
            <target state="new">In this section we will perform some simple transformations on the values in some of the columns of our dataframe.</target>
          </trans-unit>
          <trans-unit id="397" xml:space="preserve">
            <source>The R language supports nearly arbitrary value transformations.</source>
            <target state="new">The R language supports nearly arbitrary value transformations.</target>
          </trans-unit>
          <trans-unit id="398" xml:space="preserve">
            <source>The references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further Reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> contain extensive examples.</source>
            <target state="new">The references in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Appendix B - Further Reading<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> contain extensive examples.</target>
          </trans-unit>
          <trans-unit id="399" xml:space="preserve">
            <source>If you look at the values in the summaries of our dataframe you should see something odd here.</source>
            <target state="new">If you look at the values in the summaries of our dataframe you should see something odd here.</target>
          </trans-unit>
          <trans-unit id="400" xml:space="preserve">
            <source>Is more ice cream than milk produced in California?</source>
            <target state="new">Is more ice cream than milk produced in California?</target>
          </trans-unit>
          <trans-unit id="401" xml:space="preserve">
            <source>No, of course not, as this makes no sense, sad as this fact may be to some of us ice cream lovers.</source>
            <target state="new">No, of course not, as this makes no sense, sad as this fact may be to some of us ice cream lovers.</target>
          </trans-unit>
          <trans-unit id="402" xml:space="preserve">
            <source>The units are different.</source>
            <target state="new">The units are different.</target>
          </trans-unit>
          <trans-unit id="403" xml:space="preserve">
            <source>The price is in units of US pounds, milk is in units of 1 M US pounds, ice cream is in units of 1,000 US gallons, and cottage cheese is in units of 1,000 US pounds.</source>
            <target state="new">The price is in units of US pounds, milk is in units of 1 M US pounds, ice cream is in units of 1,000 US gallons, and cottage cheese is in units of 1,000 US pounds.</target>
          </trans-unit>
          <trans-unit id="404" xml:space="preserve">
            <source>Assuming ice cream weighs about 6.5 pounds per gallon, we can easily do the multiplication to convert these values so they are all in equal units of 1,000 pounds.</source>
            <target state="new">Assuming ice cream weighs about 6.5 pounds per gallon, we can easily do the multiplication to convert these values so they are all in equal units of 1,000 pounds.</target>
          </trans-unit>
          <trans-unit id="405" xml:space="preserve">
            <source>For our forecasting model we use a multiplicative model for trend and seasonal adjustment of this data.</source>
            <target state="new">For our forecasting model we use a multiplicative model for trend and seasonal adjustment of this data.</target>
          </trans-unit>
          <trans-unit id="406" xml:space="preserve">
            <source>A log transformation allows us to use a linear model, simplifying this process.</source>
            <target state="new">A log transformation allows us to use a linear model, simplifying this process.</target>
          </trans-unit>
          <trans-unit id="407" xml:space="preserve">
            <source>We can apply the log transformation in the same function where the multiplier is applied.</source>
            <target state="new">We can apply the log transformation in the same function where the multiplier is applied.</target>
          </trans-unit>
          <trans-unit id="408" xml:space="preserve">
            <source>In the following code, I define a new function, <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept>, and apply it to the rows containing the numerical values.</source>
            <target state="new">In the following code, I define a new function, <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept>, and apply it to the rows containing the numerical values.</target>
          </trans-unit>
          <trans-unit id="409" xml:space="preserve">
            <source>The R <bpt id="2">&lt;code&gt;</bpt>Map()<ept id="2">&lt;/code&gt;</ept> function is used to apply the <bpt id="4">&lt;code&gt;</bpt>log.transform()<ept id="4">&lt;/code&gt;</ept> function to the selected columns of the dataframe.</source>
            <target state="new">The R <bpt id="2">&lt;code&gt;</bpt>Map()<ept id="2">&lt;/code&gt;</ept> function is used to apply the <bpt id="4">&lt;code&gt;</bpt>log.transform()<ept id="4">&lt;/code&gt;</ept> function to the selected columns of the dataframe.</target>
          </trans-unit>
          <trans-unit id="410" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Map()<ept id="1">&lt;/code&gt;</ept> is similar to <bpt id="3">&lt;code&gt;</bpt>apply()<ept id="3">&lt;/code&gt;</ept> but allows for more than one list of arguments to the function.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Map()<ept id="1">&lt;/code&gt;</ept> is similar to <bpt id="3">&lt;code&gt;</bpt>apply()<ept id="3">&lt;/code&gt;</ept> but allows for more than one list of arguments to the function.</target>
          </trans-unit>
          <trans-unit id="411" xml:space="preserve">
            <source>Note that a list of multipliers supplies the second argument to the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">Note that a list of multipliers supplies the second argument to the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="412" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>na.omit()<ept id="2">&lt;/code&gt;</ept> function is used as a bit of cleanup to ensure we do not have missing or undefined values in the dataframe.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>na.omit()<ept id="2">&lt;/code&gt;</ept> function is used as a bit of cleanup to ensure we do not have missing or undefined values in the dataframe.</target>
          </trans-unit>
          <trans-unit id="413" xml:space="preserve">
            <source>There is quite a bit happening in the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">There is quite a bit happening in the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="414" xml:space="preserve">
            <source>Most of this code is checking for potential problems with the arguments or dealing with exceptions, which can still arise during the computations.</source>
            <target state="new">Most of this code is checking for potential problems with the arguments or dealing with exceptions, which can still arise during the computations.</target>
          </trans-unit>
          <trans-unit id="415" xml:space="preserve">
            <source>Only a few lines of this code actually do the computations.</source>
            <target state="new">Only a few lines of this code actually do the computations.</target>
          </trans-unit>
          <trans-unit id="416" xml:space="preserve">
            <source>The goal of the defensive programming is to prevent the failure of a single function that prevents processing from continuing.</source>
            <target state="new">The goal of the defensive programming is to prevent the failure of a single function that prevents processing from continuing.</target>
          </trans-unit>
          <trans-unit id="417" xml:space="preserve">
            <source>An abrupt failure of a long-running analysis can be quite frustrating for users.</source>
            <target state="new">An abrupt failure of a long-running analysis can be quite frustrating for users.</target>
          </trans-unit>
          <trans-unit id="418" xml:space="preserve">
            <source>To avoid this situation, default return values must be chosen that will limit damage to downstream processing.</source>
            <target state="new">To avoid this situation, default return values must be chosen that will limit damage to downstream processing.</target>
          </trans-unit>
          <trans-unit id="419" xml:space="preserve">
            <source>A message is also produced to alert users that something has gone wrong.</source>
            <target state="new">A message is also produced to alert users that something has gone wrong.</target>
          </trans-unit>
          <trans-unit id="420" xml:space="preserve">
            <source>If you are not used to defensive programming in R, all this code may seem a bit overwhelming.</source>
            <target state="new">If you are not used to defensive programming in R, all this code may seem a bit overwhelming.</target>
          </trans-unit>
          <trans-unit id="421" xml:space="preserve">
            <source>I will walk you through the major steps:</source>
            <target state="new">I will walk you through the major steps:</target>
          </trans-unit>
          <trans-unit id="422" xml:space="preserve">
            <source>A vector of four messages is defined.</source>
            <target state="new">A vector of four messages is defined.</target>
          </trans-unit>
          <trans-unit id="423" xml:space="preserve">
            <source>These messages are used to communicate information about some of the possible errors and exceptions that can occur with this code.</source>
            <target state="new">These messages are used to communicate information about some of the possible errors and exceptions that can occur with this code.</target>
          </trans-unit>
          <trans-unit id="424" xml:space="preserve">
            <source>I return a value of NA for each case.</source>
            <target state="new">I return a value of NA for each case.</target>
          </trans-unit>
          <trans-unit id="425" xml:space="preserve">
            <source>There are many other possibilities that might have fewer side effects.</source>
            <target state="new">There are many other possibilities that might have fewer side effects.</target>
          </trans-unit>
          <trans-unit id="426" xml:space="preserve">
            <source>I could return a vector of zeroes, or the original input vector, for example.</source>
            <target state="new">I could return a vector of zeroes, or the original input vector, for example.</target>
          </trans-unit>
          <trans-unit id="427" xml:space="preserve">
            <source>Checks are run on the arguments to the function.</source>
            <target state="new">Checks are run on the arguments to the function.</target>
          </trans-unit>
          <trans-unit id="428" xml:space="preserve">
            <source>In each case, if an error is detected, a default value is returned and a message is produced by the <bpt id="2">&lt;code&gt;</bpt>warming()<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">In each case, if an error is detected, a default value is returned and a message is produced by the <bpt id="2">&lt;code&gt;</bpt>warming()<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="429" xml:space="preserve">
            <source>I am using <bpt id="2">&lt;code&gt;</bpt>warning()<ept id="2">&lt;/code&gt;</ept> rather than <bpt id="4">&lt;code&gt;</bpt>stop()<ept id="4">&lt;/code&gt;</ept> as the latter will terminate execution, exactly what I am trying to avoid.</source>
            <target state="new">I am using <bpt id="2">&lt;code&gt;</bpt>warning()<ept id="2">&lt;/code&gt;</ept> rather than <bpt id="4">&lt;code&gt;</bpt>stop()<ept id="4">&lt;/code&gt;</ept> as the latter will terminate execution, exactly what I am trying to avoid.</target>
          </trans-unit>
          <trans-unit id="430" xml:space="preserve">
            <source>Note that I have written this code in a procedural style, as in this case a functional approach seemed complex and obscure.</source>
            <target state="new">Note that I have written this code in a procedural style, as in this case a functional approach seemed complex and obscure.</target>
          </trans-unit>
          <trans-unit id="431" xml:space="preserve">
            <source>The log computations are wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept> so that exceptions will not cause an abrupt halt to processing.</source>
            <target state="new">The log computations are wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept> so that exceptions will not cause an abrupt halt to processing.</target>
          </trans-unit>
          <trans-unit id="432" xml:space="preserve">
            <source>Without <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept> most errors raised by R functions result in a stop signal, which does just that.</source>
            <target state="new">Without <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept> most errors raised by R functions result in a stop signal, which does just that.</target>
          </trans-unit>
          <trans-unit id="433" xml:space="preserve">
            <source>Execute this R code in your experiment and have a look at the printed output in the output.log file.</source>
            <target state="new">Execute this R code in your experiment and have a look at the printed output in the output.log file.</target>
          </trans-unit>
          <trans-unit id="434" xml:space="preserve">
            <source>You will now see the transformed values of the four columns using <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> from the R Device menu, as shown in Figure 13.</source>
            <target state="new">You will now see the transformed values of the four columns using <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> from the R Device menu, as shown in Figure 13.</target>
          </trans-unit>
          <trans-unit id="435" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the transformed values in the dataframe<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the transformed values in the dataframe<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="436" xml:space="preserve">
            <source>*Figure 13.</source>
            <target state="new">*Figure 13.</target>
          </trans-unit>
          <trans-unit id="437" xml:space="preserve">
            <source>Summary of the transformed values in the dataframe.*</source>
            <target state="new">Summary of the transformed values in the dataframe.*</target>
          </trans-unit>
          <trans-unit id="438" xml:space="preserve">
            <source>We see the values have been transformed.</source>
            <target state="new">We see the values have been transformed.</target>
          </trans-unit>
          <trans-unit id="439" xml:space="preserve">
            <source>Milk production now greatly exceeds all other dairy product production, recalling that we are now looking at a log scale.</source>
            <target state="new">Milk production now greatly exceeds all other dairy product production, recalling that we are now looking at a log scale.</target>
          </trans-unit>
          <trans-unit id="440" xml:space="preserve">
            <source>At this point our data is cleaned up and we are ready for some modeling.</source>
            <target state="new">At this point our data is cleaned up and we are ready for some modeling.</target>
          </trans-unit>
          <trans-unit id="441" xml:space="preserve">
            <source>Looking at the visualization summary for the Result Dataset output of our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, you will see the 'Month' column is 'Categorical' with 12 unique values, again, just as we wanted.</source>
            <target state="new">Looking at the visualization summary for the Result Dataset output of our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, you will see the 'Month' column is 'Categorical' with 12 unique values, again, just as we wanted.</target>
          </trans-unit>
          <trans-unit id="442" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Time series objects and correlation analysis</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Time series objects and correlation analysis</target>
          </trans-unit>
          <trans-unit id="443" xml:space="preserve">
            <source>In this section we will explore a few basic R time series objects and analyze the correlations between some of the variables.</source>
            <target state="new">In this section we will explore a few basic R time series objects and analyze the correlations between some of the variables.</target>
          </trans-unit>
          <trans-unit id="444" xml:space="preserve">
            <source>Our goal is to output a dataframe containing the pairwise correlation information at several lags.</source>
            <target state="new">Our goal is to output a dataframe containing the pairwise correlation information at several lags.</target>
          </trans-unit>
          <trans-unit id="445" xml:space="preserve">
            <source>The complete R code for this section is in the zip file you downloaded earlier.</source>
            <target state="new">The complete R code for this section is in the zip file you downloaded earlier.</target>
          </trans-unit>
          <trans-unit id="446" xml:space="preserve">
            <source>Time series objects in R</source>
            <target state="new">Time series objects in R</target>
          </trans-unit>
          <trans-unit id="447" xml:space="preserve">
            <source>As already mentioned, time series are a series of data values indexed by time.</source>
            <target state="new">As already mentioned, time series are a series of data values indexed by time.</target>
          </trans-unit>
          <trans-unit id="448" xml:space="preserve">
            <source>R time series objects are used to create and manage the time index.</source>
            <target state="new">R time series objects are used to create and manage the time index.</target>
          </trans-unit>
          <trans-unit id="449" xml:space="preserve">
            <source>There are several advantages to using time series objects.</source>
            <target state="new">There are several advantages to using time series objects.</target>
          </trans-unit>
          <trans-unit id="450" xml:space="preserve">
            <source>Time series objects free you from the many details of managing the time series index values that are encapsulated in the object.</source>
            <target state="new">Time series objects free you from the many details of managing the time series index values that are encapsulated in the object.</target>
          </trans-unit>
          <trans-unit id="451" xml:space="preserve">
            <source>In addition, time series objects allow you to use the many time series methods for plotting, printing, modeling, etc.</source>
            <target state="new">In addition, time series objects allow you to use the many time series methods for plotting, printing, modeling, etc.</target>
          </trans-unit>
          <trans-unit id="452" xml:space="preserve">
            <source>The POSIXct time series class is commonly used and is relatively simple.</source>
            <target state="new">The POSIXct time series class is commonly used and is relatively simple.</target>
          </trans-unit>
          <trans-unit id="453" xml:space="preserve">
            <source>This time series class measures time from the start of the epoch, January 1, 1970.</source>
            <target state="new">This time series class measures time from the start of the epoch, January 1, 1970.</target>
          </trans-unit>
          <trans-unit id="454" xml:space="preserve">
            <source>We will use POSIXct time series objects in this example.</source>
            <target state="new">We will use POSIXct time series objects in this example.</target>
          </trans-unit>
          <trans-unit id="455" xml:space="preserve">
            <source>Other widely used R time series object classes include zoo and xts, extensible time series.</source>
            <target state="new">Other widely used R time series object classes include zoo and xts, extensible time series.</target>
          </trans-unit>
          <trans-unit id="456" xml:space="preserve">
            <source>Time series object example</source>
            <target state="new">Time series object example</target>
          </trans-unit>
          <trans-unit id="457" xml:space="preserve">
            <source>Let's get started with our example.</source>
            <target state="new">Let's get started with our example.</target>
          </trans-unit>
          <trans-unit id="458" xml:space="preserve">
            <source>Drag and drop a <bpt id="2">&lt;strong&gt;</bpt>new<ept id="2">&lt;/strong&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module into your experiment.</source>
            <target state="new">Drag and drop a <bpt id="2">&lt;strong&gt;</bpt>new<ept id="2">&lt;/strong&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module into your experiment.</target>
          </trans-unit>
          <trans-unit id="459" xml:space="preserve">
            <source>Connect the Result Dataset1 output port of the existing <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module to the Dataset1 input port of the new <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Connect the Result Dataset1 output port of the existing <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module to the Dataset1 input port of the new <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="460" xml:space="preserve">
            <source>As I did for the first examples, as we progress through the example, at some points I will show only the incremental additional lines of R code at each step.</source>
            <target state="new">As I did for the first examples, as we progress through the example, at some points I will show only the incremental additional lines of R code at each step.</target>
          </trans-unit>
          <trans-unit id="461" xml:space="preserve">
            <source>Reading the dataframe</source>
            <target state="new">Reading the dataframe</target>
          </trans-unit>
          <trans-unit id="462" xml:space="preserve">
            <source>As a first step, let's read in a dataframe and make sure we get the expected results.</source>
            <target state="new">As a first step, let's read in a dataframe and make sure we get the expected results.</target>
          </trans-unit>
          <trans-unit id="463" xml:space="preserve">
            <source>The following code should do the job.</source>
            <target state="new">The following code should do the job.</target>
          </trans-unit>
          <trans-unit id="464" xml:space="preserve">
            <source>Now, run the experiment.</source>
            <target state="new">Now, run the experiment.</target>
          </trans-unit>
          <trans-unit id="465" xml:space="preserve">
            <source>The output you see at the R Device port should look like Figure 14.</source>
            <target state="new">The output you see at the R Device port should look like Figure 14.</target>
          </trans-unit>
          <trans-unit id="466" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe in the Execute R Script module<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe in the Execute R Script module<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="467" xml:space="preserve">
            <source>*Figure 14.</source>
            <target state="new">*Figure 14.</target>
          </trans-unit>
          <trans-unit id="468" xml:space="preserve">
            <source>Summary of the dataframe in the Execute R Script module.*</source>
            <target state="new">Summary of the dataframe in the Execute R Script module.*</target>
          </trans-unit>
          <trans-unit id="469" xml:space="preserve">
            <source>This data is of the expected types and format.</source>
            <target state="new">This data is of the expected types and format.</target>
          </trans-unit>
          <trans-unit id="470" xml:space="preserve">
            <source>Note that the 'Month' column is of type factor and has the expected number of levels.</source>
            <target state="new">Note that the 'Month' column is of type factor and has the expected number of levels.</target>
          </trans-unit>
          <trans-unit id="471" xml:space="preserve">
            <source>Creating a time series object</source>
            <target state="new">Creating a time series object</target>
          </trans-unit>
          <trans-unit id="472" xml:space="preserve">
            <source>We need to add a time series object to our dataframe.</source>
            <target state="new">We need to add a time series object to our dataframe.</target>
          </trans-unit>
          <trans-unit id="473" xml:space="preserve">
            <source>Replace the current code with the following, which adds a new column of class POSIXct.</source>
            <target state="new">Replace the current code with the following, which adds a new column of class POSIXct.</target>
          </trans-unit>
          <trans-unit id="474" xml:space="preserve">
            <source>Now, check the R Device output.</source>
            <target state="new">Now, check the R Device output.</target>
          </trans-unit>
          <trans-unit id="475" xml:space="preserve">
            <source>It should look like Figure 15.</source>
            <target state="new">It should look like Figure 15.</target>
          </trans-unit>
          <trans-unit id="476" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with a time series object<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Summary of the dataframe with a time series object<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="477" xml:space="preserve">
            <source>*Figure 15.</source>
            <target state="new">*Figure 15.</target>
          </trans-unit>
          <trans-unit id="478" xml:space="preserve">
            <source>Summary of the dataframe with a time series object.*</source>
            <target state="new">Summary of the dataframe with a time series object.*</target>
          </trans-unit>
          <trans-unit id="479" xml:space="preserve">
            <source>We can see from the summary that the new column is in fact of class POSIXct.</source>
            <target state="new">We can see from the summary that the new column is in fact of class POSIXct.</target>
          </trans-unit>
          <trans-unit id="480" xml:space="preserve">
            <source>Exploring and transforming the data</source>
            <target state="new">Exploring and transforming the data</target>
          </trans-unit>
          <trans-unit id="481" xml:space="preserve">
            <source>Let's explore some of the variables in this dataset.</source>
            <target state="new">Let's explore some of the variables in this dataset.</target>
          </trans-unit>
          <trans-unit id="482" xml:space="preserve">
            <source>A scatterplot matrix is a good way to produce a quick look.</source>
            <target state="new">A scatterplot matrix is a good way to produce a quick look.</target>
          </trans-unit>
          <trans-unit id="483" xml:space="preserve">
            <source>I am replacing the <bpt id="2">&lt;code&gt;</bpt>str()<ept id="2">&lt;/code&gt;</ept> function in the previous R code with the following line.</source>
            <target state="new">I am replacing the <bpt id="2">&lt;code&gt;</bpt>str()<ept id="2">&lt;/code&gt;</ept> function in the previous R code with the following line.</target>
          </trans-unit>
          <trans-unit id="484" xml:space="preserve">
            <source>Run this code and see what happens.</source>
            <target state="new">Run this code and see what happens.</target>
          </trans-unit>
          <trans-unit id="485" xml:space="preserve">
            <source>The plot produced at the R Device port should look like Figure 16.</source>
            <target state="new">The plot produced at the R Device port should look like Figure 16.</target>
          </trans-unit>
          <trans-unit id="486" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Scatterplot matrix of selected variables<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Scatterplot matrix of selected variables<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="487" xml:space="preserve">
            <source>*Figure 16.</source>
            <target state="new">*Figure 16.</target>
          </trans-unit>
          <trans-unit id="488" xml:space="preserve">
            <source>Scatterplot matrix of selected variables.*</source>
            <target state="new">Scatterplot matrix of selected variables.*</target>
          </trans-unit>
          <trans-unit id="489" xml:space="preserve">
            <source>There is some odd-looking structure in the relationships between these variables.</source>
            <target state="new">There is some odd-looking structure in the relationships between these variables.</target>
          </trans-unit>
          <trans-unit id="490" xml:space="preserve">
            <source>Perhaps this arises from trends in the data and from the fact that we have not standardized the variables.</source>
            <target state="new">Perhaps this arises from trends in the data and from the fact that we have not standardized the variables.</target>
          </trans-unit>
          <trans-unit id="491" xml:space="preserve">
            <source>Correlation analysis</source>
            <target state="new">Correlation analysis</target>
          </trans-unit>
          <trans-unit id="492" xml:space="preserve">
            <source>To perform correlation analysis we need to both de-trend and standardize the variables.</source>
            <target state="new">To perform correlation analysis we need to both de-trend and standardize the variables.</target>
          </trans-unit>
          <trans-unit id="493" xml:space="preserve">
            <source>We could simply use the R <bpt id="2">&lt;code&gt;</bpt>scale()<ept id="2">&lt;/code&gt;</ept> function, which both centers and scales variables.</source>
            <target state="new">We could simply use the R <bpt id="2">&lt;code&gt;</bpt>scale()<ept id="2">&lt;/code&gt;</ept> function, which both centers and scales variables.</target>
          </trans-unit>
          <trans-unit id="494" xml:space="preserve">
            <source>This function might well run faster.</source>
            <target state="new">This function might well run faster.</target>
          </trans-unit>
          <trans-unit id="495" xml:space="preserve">
            <source>However, I want to show you an example of defensive programing in R.</source>
            <target state="new">However, I want to show you an example of defensive programing in R.</target>
          </trans-unit>
          <trans-unit id="496" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> function shown below performs both of these operations.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> function shown below performs both of these operations.</target>
          </trans-unit>
          <trans-unit id="497" xml:space="preserve">
            <source>The following two lines of code de-trend the data and then standardize the values.</source>
            <target state="new">The following two lines of code de-trend the data and then standardize the values.</target>
          </trans-unit>
          <trans-unit id="498" xml:space="preserve">
            <source>There is quite a bit happening in the <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> function.</source>
            <target state="new">There is quite a bit happening in the <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> function.</target>
          </trans-unit>
          <trans-unit id="499" xml:space="preserve">
            <source>Most of this code is checking for potential problems with the arguments or dealing with exceptions, which can still arise during the computations.</source>
            <target state="new">Most of this code is checking for potential problems with the arguments or dealing with exceptions, which can still arise during the computations.</target>
          </trans-unit>
          <trans-unit id="500" xml:space="preserve">
            <source>Only a few lines of this code actually do the computations.</source>
            <target state="new">Only a few lines of this code actually do the computations.</target>
          </trans-unit>
          <trans-unit id="501" xml:space="preserve">
            <source>We have already discussed an example of defensive programming in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Value transformations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">We have already discussed an example of defensive programming in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Value transformations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="502" xml:space="preserve">
            <source>Both computation blocks are wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Both computation blocks are wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="503" xml:space="preserve">
            <source>For some errors it makes sense to return the original input vector, and in other cases, I return a vector of zeros.</source>
            <target state="new">For some errors it makes sense to return the original input vector, and in other cases, I return a vector of zeros.</target>
          </trans-unit>
          <trans-unit id="504" xml:space="preserve">
            <source>Note that the linear regression used for de-trending is a time series regression.</source>
            <target state="new">Note that the linear regression used for de-trending is a time series regression.</target>
          </trans-unit>
          <trans-unit id="505" xml:space="preserve">
            <source>The predictor variable is a time series object.</source>
            <target state="new">The predictor variable is a time series object.</target>
          </trans-unit>
          <trans-unit id="506" xml:space="preserve">
            <source>Once <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> is defined we apply it to the variables of interest in our dataframe.</source>
            <target state="new">Once <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept> is defined we apply it to the variables of interest in our dataframe.</target>
          </trans-unit>
          <trans-unit id="507" xml:space="preserve">
            <source>We must coerce the resulting list created by <bpt id="2">&lt;code&gt;</bpt>lapply()<ept id="2">&lt;/code&gt;</ept> to data dataframe by using <bpt id="4">&lt;code&gt;</bpt>as.data.frame()<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">We must coerce the resulting list created by <bpt id="2">&lt;code&gt;</bpt>lapply()<ept id="2">&lt;/code&gt;</ept> to data dataframe by using <bpt id="4">&lt;code&gt;</bpt>as.data.frame()<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="508" xml:space="preserve">
            <source>Because of defensive aspects of <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept>, failure to process one of the variables will not prevent correct processing of the others.</source>
            <target state="new">Because of defensive aspects of <bpt id="2">&lt;code&gt;</bpt>ts.detrend()<ept id="2">&lt;/code&gt;</ept>, failure to process one of the variables will not prevent correct processing of the others.</target>
          </trans-unit>
          <trans-unit id="509" xml:space="preserve">
            <source>The final line of code creates a pairwise scatterplot.</source>
            <target state="new">The final line of code creates a pairwise scatterplot.</target>
          </trans-unit>
          <trans-unit id="510" xml:space="preserve">
            <source>After running the R code, the results of the scatterplot are shown in Figure 17.</source>
            <target state="new">After running the R code, the results of the scatterplot are shown in Figure 17.</target>
          </trans-unit>
          <trans-unit id="511" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Pairwise scatterplot of de-trended and standardized time series<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Pairwise scatterplot of de-trended and standardized time series<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="512" xml:space="preserve">
            <source>*Figure 17.</source>
            <target state="new">*Figure 17.</target>
          </trans-unit>
          <trans-unit id="513" xml:space="preserve">
            <source>Pairwise scatterplot of de-trended and standardized time series.*</source>
            <target state="new">Pairwise scatterplot of de-trended and standardized time series.*</target>
          </trans-unit>
          <trans-unit id="514" xml:space="preserve">
            <source>You can compare these results to those shown in Figure 17.</source>
            <target state="new">You can compare these results to those shown in Figure 17.</target>
          </trans-unit>
          <trans-unit id="515" xml:space="preserve">
            <source>With the trend removed and the variables standardized, we see a lot less structure in the relationships between these variables.</source>
            <target state="new">With the trend removed and the variables standardized, we see a lot less structure in the relationships between these variables.</target>
          </trans-unit>
          <trans-unit id="516" xml:space="preserve">
            <source>The code to compute the correlations as R ccf objects is as follows.</source>
            <target state="new">The code to compute the correlations as R ccf objects is as follows.</target>
          </trans-unit>
          <trans-unit id="517" xml:space="preserve">
            <source>Running this code produces the output shown in Figure 18.</source>
            <target state="new">Running this code produces the output shown in Figure 18.</target>
          </trans-unit>
          <trans-unit id="518" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>List of ccf objects from the pairwise correlation analysis<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>List of ccf objects from the pairwise correlation analysis<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="519" xml:space="preserve">
            <source>*Figure 18.</source>
            <target state="new">*Figure 18.</target>
          </trans-unit>
          <trans-unit id="520" xml:space="preserve">
            <source>List of ccf objects from the pairwise correlation analysis.*</source>
            <target state="new">List of ccf objects from the pairwise correlation analysis.*</target>
          </trans-unit>
          <trans-unit id="521" xml:space="preserve">
            <source>There is a correlation value for each lag.</source>
            <target state="new">There is a correlation value for each lag.</target>
          </trans-unit>
          <trans-unit id="522" xml:space="preserve">
            <source>None of these correlation values is large enough to be significant.</source>
            <target state="new">None of these correlation values is large enough to be significant.</target>
          </trans-unit>
          <trans-unit id="523" xml:space="preserve">
            <source>We can therefore conclude that we can model each variable independently.</source>
            <target state="new">We can therefore conclude that we can model each variable independently.</target>
          </trans-unit>
          <trans-unit id="524" xml:space="preserve">
            <source>Output a dataframe</source>
            <target state="new">Output a dataframe</target>
          </trans-unit>
          <trans-unit id="525" xml:space="preserve">
            <source>We have computed the pairwise correlations as a list of R ccf objects.</source>
            <target state="new">We have computed the pairwise correlations as a list of R ccf objects.</target>
          </trans-unit>
          <trans-unit id="526" xml:space="preserve">
            <source>This presents a bit of a problem as the Result Dataset output port really requires a dataframe.</source>
            <target state="new">This presents a bit of a problem as the Result Dataset output port really requires a dataframe.</target>
          </trans-unit>
          <trans-unit id="527" xml:space="preserve">
            <source>Further, the ccf object is itself a list and we want only the values in the first element of this list, the correlations at the various lags.</source>
            <target state="new">Further, the ccf object is itself a list and we want only the values in the first element of this list, the correlations at the various lags.</target>
          </trans-unit>
          <trans-unit id="528" xml:space="preserve">
            <source>The following code extracts the lag values from the list of ccf objects, which are themselves lists.</source>
            <target state="new">The following code extracts the lag values from the list of ccf objects, which are themselves lists.</target>
          </trans-unit>
          <trans-unit id="529" xml:space="preserve">
            <source>The first line of code is a bit tricky, and some explanation may help you understand it.</source>
            <target state="new">The first line of code is a bit tricky, and some explanation may help you understand it.</target>
          </trans-unit>
          <trans-unit id="530" xml:space="preserve">
            <source>Working from the inside out we have the following:</source>
            <target state="new">Working from the inside out we have the following:</target>
          </trans-unit>
          <trans-unit id="531" xml:space="preserve">
            <source>The '<bpt id="2">&lt;strong&gt;</bpt>[[<ept id="2">&lt;/strong&gt;</ept>' operator with the argument '<bpt id="4">&lt;strong&gt;</bpt>1<ept id="4">&lt;/strong&gt;</ept>' selects the vector of correlations at the lags from the first element of the ccf object list.</source>
            <target state="new">The '<bpt id="2">&lt;strong&gt;</bpt>[[<ept id="2">&lt;/strong&gt;</ept>' operator with the argument '<bpt id="4">&lt;strong&gt;</bpt>1<ept id="4">&lt;/strong&gt;</ept>' selects the vector of correlations at the lags from the first element of the ccf object list.</target>
          </trans-unit>
          <trans-unit id="532" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>do.call()<ept id="2">&lt;/code&gt;</ept> function applies the <bpt id="4">&lt;code&gt;</bpt>rbind()<ept id="4">&lt;/code&gt;</ept> function over the elements of the list returns by <bpt id="6">&lt;code&gt;</bpt>lapply()<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>do.call()<ept id="2">&lt;/code&gt;</ept> function applies the <bpt id="4">&lt;code&gt;</bpt>rbind()<ept id="4">&lt;/code&gt;</ept> function over the elements of the list returns by <bpt id="6">&lt;code&gt;</bpt>lapply()<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="533" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>data.frame()<ept id="2">&lt;/code&gt;</ept> function coerces the result produced by <bpt id="4">&lt;code&gt;</bpt>do.call()<ept id="4">&lt;/code&gt;</ept> to a dataframe.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>data.frame()<ept id="2">&lt;/code&gt;</ept> function coerces the result produced by <bpt id="4">&lt;code&gt;</bpt>do.call()<ept id="4">&lt;/code&gt;</ept> to a dataframe.</target>
          </trans-unit>
          <trans-unit id="534" xml:space="preserve">
            <source>Note that the row names are in a column of the dataframe.</source>
            <target state="new">Note that the row names are in a column of the dataframe.</target>
          </trans-unit>
          <trans-unit id="535" xml:space="preserve">
            <source>Doing so preserves the row names when they are output from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Doing so preserves the row names when they are output from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="536" xml:space="preserve">
            <source>Running the code produces the output shown in Figure 19 when I <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> the output at the Result Dataset port.</source>
            <target state="new">Running the code produces the output shown in Figure 19 when I <bpt id="2">&lt;strong&gt;</bpt>Visualize<ept id="2">&lt;/strong&gt;</ept> the output at the Result Dataset port.</target>
          </trans-unit>
          <trans-unit id="537" xml:space="preserve">
            <source>The row names are in the first column, as intended.</source>
            <target state="new">The row names are in the first column, as intended.</target>
          </trans-unit>
          <trans-unit id="538" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Results output from the correlation analysis<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Results output from the correlation analysis<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="539" xml:space="preserve">
            <source>*Figure 19.</source>
            <target state="new">*Figure 19.</target>
          </trans-unit>
          <trans-unit id="540" xml:space="preserve">
            <source>Results output from the correlation analysis.*</source>
            <target state="new">Results output from the correlation analysis.*</target>
          </trans-unit>
          <trans-unit id="541" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Time series example: seasonal forecasting</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Time series example: seasonal forecasting</target>
          </trans-unit>
          <trans-unit id="542" xml:space="preserve">
            <source>Our data is now in a form suitable for analysis, and we have determined there are no significant correlations between the variables.</source>
            <target state="new">Our data is now in a form suitable for analysis, and we have determined there are no significant correlations between the variables.</target>
          </trans-unit>
          <trans-unit id="543" xml:space="preserve">
            <source>Let's move on and create a time series forecasting model.</source>
            <target state="new">Let's move on and create a time series forecasting model.</target>
          </trans-unit>
          <trans-unit id="544" xml:space="preserve">
            <source>Using this model we will forecast California milk production for the 12 months of 2013.</source>
            <target state="new">Using this model we will forecast California milk production for the 12 months of 2013.</target>
          </trans-unit>
          <trans-unit id="545" xml:space="preserve">
            <source>Our forecasting model will have two components, a trend component and a seasonal component.</source>
            <target state="new">Our forecasting model will have two components, a trend component and a seasonal component.</target>
          </trans-unit>
          <trans-unit id="546" xml:space="preserve">
            <source>The complete forecast is the product of these two components.</source>
            <target state="new">The complete forecast is the product of these two components.</target>
          </trans-unit>
          <trans-unit id="547" xml:space="preserve">
            <source>This type of model is known as a multiplicative model.</source>
            <target state="new">This type of model is known as a multiplicative model.</target>
          </trans-unit>
          <trans-unit id="548" xml:space="preserve">
            <source>The alternative is an additive model.</source>
            <target state="new">The alternative is an additive model.</target>
          </trans-unit>
          <trans-unit id="549" xml:space="preserve">
            <source>We have already applied a log transformation to the variables of interest, which makes this analysis tractable.</source>
            <target state="new">We have already applied a log transformation to the variables of interest, which makes this analysis tractable.</target>
          </trans-unit>
          <trans-unit id="550" xml:space="preserve">
            <source>The complete R code for this section is in the zip file you downloaded earlier.</source>
            <target state="new">The complete R code for this section is in the zip file you downloaded earlier.</target>
          </trans-unit>
          <trans-unit id="551" xml:space="preserve">
            <source>Creating the dataframe for analysis</source>
            <target state="new">Creating the dataframe for analysis</target>
          </trans-unit>
          <trans-unit id="552" xml:space="preserve">
            <source>Start by adding a <bpt id="2">&lt;strong&gt;</bpt>new<ept id="2">&lt;/strong&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module to your experiment.</source>
            <target state="new">Start by adding a <bpt id="2">&lt;strong&gt;</bpt>new<ept id="2">&lt;/strong&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module to your experiment.</target>
          </trans-unit>
          <trans-unit id="553" xml:space="preserve">
            <source>Connect the <bpt id="2">&lt;strong&gt;</bpt>Result Dataset<ept id="2">&lt;/strong&gt;</ept> output of the existing <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module to the <bpt id="6">&lt;strong&gt;</bpt>Dataset1<ept id="6">&lt;/strong&gt;</ept> input of the new module.</source>
            <target state="new">Connect the <bpt id="2">&lt;strong&gt;</bpt>Result Dataset<ept id="2">&lt;/strong&gt;</ept> output of the existing <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module to the <bpt id="6">&lt;strong&gt;</bpt>Dataset1<ept id="6">&lt;/strong&gt;</ept> input of the new module.</target>
          </trans-unit>
          <trans-unit id="554" xml:space="preserve">
            <source>The result should look something like Figure 20.</source>
            <target state="new">The result should look something like Figure 20.</target>
          </trans-unit>
          <trans-unit id="555" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>The experiment with the new Execute R Script module added<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>The experiment with the new Execute R Script module added<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="556" xml:space="preserve">
            <source>*Figure 20.</source>
            <target state="new">*Figure 20.</target>
          </trans-unit>
          <trans-unit id="557" xml:space="preserve">
            <source>The experiment with the new Execute R Script module added.*</source>
            <target state="new">The experiment with the new Execute R Script module added.*</target>
          </trans-unit>
          <trans-unit id="558" xml:space="preserve">
            <source>As with the correlation analysis we just completed, we need to add a column with a POSIXct time series object.</source>
            <target state="new">As with the correlation analysis we just completed, we need to add a column with a POSIXct time series object.</target>
          </trans-unit>
          <trans-unit id="559" xml:space="preserve">
            <source>The following code will do just this.</source>
            <target state="new">The following code will do just this.</target>
          </trans-unit>
          <trans-unit id="560" xml:space="preserve">
            <source>Run this code and look at the R Device output port.</source>
            <target state="new">Run this code and look at the R Device output port.</target>
          </trans-unit>
          <trans-unit id="561" xml:space="preserve">
            <source>The result should look like Figure 21.</source>
            <target state="new">The result should look like Figure 21.</target>
          </trans-unit>
          <trans-unit id="562" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>A summary of the dataframe<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>A summary of the dataframe<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="563" xml:space="preserve">
            <source>*Figure 21.</source>
            <target state="new">*Figure 21.</target>
          </trans-unit>
          <trans-unit id="564" xml:space="preserve">
            <source>A summary of the dataframe.*</source>
            <target state="new">A summary of the dataframe.*</target>
          </trans-unit>
          <trans-unit id="565" xml:space="preserve">
            <source>With this result, we are ready to start our analysis.</source>
            <target state="new">With this result, we are ready to start our analysis.</target>
          </trans-unit>
          <trans-unit id="566" xml:space="preserve">
            <source>Create a training dataset</source>
            <target state="new">Create a training dataset</target>
          </trans-unit>
          <trans-unit id="567" xml:space="preserve">
            <source>With the dataframe constructed we need to create a training dataset.</source>
            <target state="new">With the dataframe constructed we need to create a training dataset.</target>
          </trans-unit>
          <trans-unit id="568" xml:space="preserve">
            <source>This data will include all of the observations except the last 12, of the year 2013, which is our test dataset.</source>
            <target state="new">This data will include all of the observations except the last 12, of the year 2013, which is our test dataset.</target>
          </trans-unit>
          <trans-unit id="569" xml:space="preserve">
            <source>The following code subsets the dataframe and creates plots of the dairy production and price variables.</source>
            <target state="new">The following code subsets the dataframe and creates plots of the dairy production and price variables.</target>
          </trans-unit>
          <trans-unit id="570" xml:space="preserve">
            <source>I then create plots of the four production and price variables.</source>
            <target state="new">I then create plots of the four production and price variables.</target>
          </trans-unit>
          <trans-unit id="571" xml:space="preserve">
            <source>An anonymous function is used to define some augments for plot, and then iterate over the list of the other two arguments with <bpt id="2">&lt;code&gt;</bpt>Map()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">An anonymous function is used to define some augments for plot, and then iterate over the list of the other two arguments with <bpt id="2">&lt;code&gt;</bpt>Map()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="572" xml:space="preserve">
            <source>If you are thinking that a for loop would have worked fine here, you are correct.</source>
            <target state="new">If you are thinking that a for loop would have worked fine here, you are correct.</target>
          </trans-unit>
          <trans-unit id="573" xml:space="preserve">
            <source>But, since R is a functional language I am showing you a functional approach.</source>
            <target state="new">But, since R is a functional language I am showing you a functional approach.</target>
          </trans-unit>
          <trans-unit id="574" xml:space="preserve">
            <source>Running the code produces the series of time series plots from the R Device output shown in Figure 22.</source>
            <target state="new">Running the code produces the series of time series plots from the R Device output shown in Figure 22.</target>
          </trans-unit>
          <trans-unit id="575" xml:space="preserve">
            <source>Note that the time axis is in units of dates, a nice benefit of the time series plot method.</source>
            <target state="new">Note that the time axis is in units of dates, a nice benefit of the time series plot method.</target>
          </trans-unit>
          <trans-unit id="576" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>First of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>First of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="577" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Second of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Second of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="578" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Third of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Third of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="579" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Fourth of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Fourth of time series plots of California dairy production and price data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="580" xml:space="preserve">
            <source>*Figure 22.</source>
            <target state="new">*Figure 22.</target>
          </trans-unit>
          <trans-unit id="581" xml:space="preserve">
            <source>Time series plots of California dairy production and price data.*</source>
            <target state="new">Time series plots of California dairy production and price data.*</target>
          </trans-unit>
          <trans-unit id="582" xml:space="preserve">
            <source>A trend model</source>
            <target state="new">A trend model</target>
          </trans-unit>
          <trans-unit id="583" xml:space="preserve">
            <source>Having created a time series object and having had a look at the data, let's start to construct a trend model for the California milk production data.</source>
            <target state="new">Having created a time series object and having had a look at the data, let's start to construct a trend model for the California milk production data.</target>
          </trans-unit>
          <trans-unit id="584" xml:space="preserve">
            <source>We can do this with a time series regression.</source>
            <target state="new">We can do this with a time series regression.</target>
          </trans-unit>
          <trans-unit id="585" xml:space="preserve">
            <source>However, it is clear from the plot that we will need more than a slope and intercept to accurately model the observed trend in the training data.</source>
            <target state="new">However, it is clear from the plot that we will need more than a slope and intercept to accurately model the observed trend in the training data.</target>
          </trans-unit>
          <trans-unit id="586" xml:space="preserve">
            <source>Given the small scale of the data, I will build the model for trend in RStudio and then cut and paste the resulting model into Azure Machine Learning.</source>
            <target state="new">Given the small scale of the data, I will build the model for trend in RStudio and then cut and paste the resulting model into Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="587" xml:space="preserve">
            <source>RStudio provides an interactive environment for this type of interactive analysis.</source>
            <target state="new">RStudio provides an interactive environment for this type of interactive analysis.</target>
          </trans-unit>
          <trans-unit id="588" xml:space="preserve">
            <source>As a first attempt, I will try a polynomial regression with powers up to 3.</source>
            <target state="new">As a first attempt, I will try a polynomial regression with powers up to 3.</target>
          </trans-unit>
          <trans-unit id="589" xml:space="preserve">
            <source>There is a real danger of over-fitting these kinds of models.</source>
            <target state="new">There is a real danger of over-fitting these kinds of models.</target>
          </trans-unit>
          <trans-unit id="590" xml:space="preserve">
            <source>Therefore, it is best to avoid high order terms.</source>
            <target state="new">Therefore, it is best to avoid high order terms.</target>
          </trans-unit>
          <trans-unit id="591" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>I()<ept id="2">&lt;/code&gt;</ept> function inhibits interpretation of the contents (interprets the contents 'as is') and allows you to write a literally interpreted function in a regression equation.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>I()<ept id="2">&lt;/code&gt;</ept> function inhibits interpretation of the contents (interprets the contents 'as is') and allows you to write a literally interpreted function in a regression equation.</target>
          </trans-unit>
          <trans-unit id="592" xml:space="preserve">
            <source>This generates the following.</source>
            <target state="new">This generates the following.</target>
          </trans-unit>
          <trans-unit id="593" xml:space="preserve">
            <source>From P values (Pr(&gt;|t|)) in this output, we can see that the squared term may not be significant.</source>
            <target state="new">From P values (Pr(&gt;|t|)) in this output, we can see that the squared term may not be significant.</target>
          </trans-unit>
          <trans-unit id="594" xml:space="preserve">
            <source>I will use the <bpt id="2">&lt;code&gt;</bpt>update()<ept id="2">&lt;/code&gt;</ept> function to modify this model by dropping the squared term.</source>
            <target state="new">I will use the <bpt id="2">&lt;code&gt;</bpt>update()<ept id="2">&lt;/code&gt;</ept> function to modify this model by dropping the squared term.</target>
          </trans-unit>
          <trans-unit id="595" xml:space="preserve">
            <source>This generates the following.</source>
            <target state="new">This generates the following.</target>
          </trans-unit>
          <trans-unit id="596" xml:space="preserve">
            <source>This looks better.</source>
            <target state="new">This looks better.</target>
          </trans-unit>
          <trans-unit id="597" xml:space="preserve">
            <source>All of the terms are significant.</source>
            <target state="new">All of the terms are significant.</target>
          </trans-unit>
          <trans-unit id="598" xml:space="preserve">
            <source>However, the 2e-16 value is a default value, and should not be taken too seriously.</source>
            <target state="new">However, the 2e-16 value is a default value, and should not be taken too seriously.</target>
          </trans-unit>
          <trans-unit id="599" xml:space="preserve">
            <source>As a sanity test, let's make a time series plot of the California dairy production data with the trend curve shown.</source>
            <target state="new">As a sanity test, let's make a time series plot of the California dairy production data with the trend curve shown.</target>
          </trans-unit>
          <trans-unit id="600" xml:space="preserve">
            <source>I have added the following code in the Azure Machine Learning <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> model (not RStudio) to create the model and make a plot.</source>
            <target state="new">I have added the following code in the Azure Machine Learning <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> model (not RStudio) to create the model and make a plot.</target>
          </trans-unit>
          <trans-unit id="601" xml:space="preserve">
            <source>The result is shown in Figure 23.</source>
            <target state="new">The result is shown in Figure 23.</target>
          </trans-unit>
          <trans-unit id="602" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>California milk production data with trend model shown<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>California milk production data with trend model shown<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="603" xml:space="preserve">
            <source>*Figure 23.</source>
            <target state="new">*Figure 23.</target>
          </trans-unit>
          <trans-unit id="604" xml:space="preserve">
            <source>California milk production data with trend model shown.*</source>
            <target state="new">California milk production data with trend model shown.*</target>
          </trans-unit>
          <trans-unit id="605" xml:space="preserve">
            <source>It looks like the trend model fits the data fairly well.</source>
            <target state="new">It looks like the trend model fits the data fairly well.</target>
          </trans-unit>
          <trans-unit id="606" xml:space="preserve">
            <source>Further, there does not seem to be evidence of over-fitting, such as odd wiggles in the model curve.</source>
            <target state="new">Further, there does not seem to be evidence of over-fitting, such as odd wiggles in the model curve.</target>
          </trans-unit>
          <trans-unit id="607" xml:space="preserve">
            <source>Seasonal model</source>
            <target state="new">Seasonal model</target>
          </trans-unit>
          <trans-unit id="608" xml:space="preserve">
            <source>With a trend model in hand, we need to push on and include the seasonal effects.</source>
            <target state="new">With a trend model in hand, we need to push on and include the seasonal effects.</target>
          </trans-unit>
          <trans-unit id="609" xml:space="preserve">
            <source>We will use the month of the year as a dummy variable in the linear model to capture the month-by-month effect.</source>
            <target state="new">We will use the month of the year as a dummy variable in the linear model to capture the month-by-month effect.</target>
          </trans-unit>
          <trans-unit id="610" xml:space="preserve">
            <source>Note that when you introduce factor variables into a model, the intercept must not be computed.</source>
            <target state="new">Note that when you introduce factor variables into a model, the intercept must not be computed.</target>
          </trans-unit>
          <trans-unit id="611" xml:space="preserve">
            <source>If you do not do this, the formula is over-specified and R will drop one of the desired factors but keep the intercept term.</source>
            <target state="new">If you do not do this, the formula is over-specified and R will drop one of the desired factors but keep the intercept term.</target>
          </trans-unit>
          <trans-unit id="612" xml:space="preserve">
            <source>Since we have a satisfactory trend model we can use the <bpt id="2">&lt;code&gt;</bpt>update()<ept id="2">&lt;/code&gt;</ept> function to add the new terms to the existing model.</source>
            <target state="new">Since we have a satisfactory trend model we can use the <bpt id="2">&lt;code&gt;</bpt>update()<ept id="2">&lt;/code&gt;</ept> function to add the new terms to the existing model.</target>
          </trans-unit>
          <trans-unit id="613" xml:space="preserve">
            <source>The -1 in the update formula drops the intercept term.</source>
            <target state="new">The -1 in the update formula drops the intercept term.</target>
          </trans-unit>
          <trans-unit id="614" xml:space="preserve">
            <source>Continuing in RStudio for the moment:</source>
            <target state="new">Continuing in RStudio for the moment:</target>
          </trans-unit>
          <trans-unit id="615" xml:space="preserve">
            <source>This generates the following.</source>
            <target state="new">This generates the following.</target>
          </trans-unit>
          <trans-unit id="616" xml:space="preserve">
            <source>We see that the model no longer has an intercept term and has 12 significant month factors.</source>
            <target state="new">We see that the model no longer has an intercept term and has 12 significant month factors.</target>
          </trans-unit>
          <trans-unit id="617" xml:space="preserve">
            <source>This is exactly what we wanted to see.</source>
            <target state="new">This is exactly what we wanted to see.</target>
          </trans-unit>
          <trans-unit id="618" xml:space="preserve">
            <source>Let's make another time series plot of the California dairy production data to see how well the seasonal model is working.</source>
            <target state="new">Let's make another time series plot of the California dairy production data to see how well the seasonal model is working.</target>
          </trans-unit>
          <trans-unit id="619" xml:space="preserve">
            <source>I have added the following code in the Azure Machine Learning <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to create the model and make a plot.</source>
            <target state="new">I have added the following code in the Azure Machine Learning <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Execute R Script[execute-r-script]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to create the model and make a plot.</target>
          </trans-unit>
          <trans-unit id="620" xml:space="preserve">
            <source>Running this code in Azure Machine Learning produces the plot shown in Figure 24.</source>
            <target state="new">Running this code in Azure Machine Learning produces the plot shown in Figure 24.</target>
          </trans-unit>
          <trans-unit id="621" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>California milk production with model including seasonal effects<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>California milk production with model including seasonal effects<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="622" xml:space="preserve">
            <source>*Figure 24.</source>
            <target state="new">*Figure 24.</target>
          </trans-unit>
          <trans-unit id="623" xml:space="preserve">
            <source>California milk production with model including seasonal effects.*</source>
            <target state="new">California milk production with model including seasonal effects.*</target>
          </trans-unit>
          <trans-unit id="624" xml:space="preserve">
            <source>The fit to the data shown in Figure 24 is rather encouraging.</source>
            <target state="new">The fit to the data shown in Figure 24 is rather encouraging.</target>
          </trans-unit>
          <trans-unit id="625" xml:space="preserve">
            <source>Both the trend and the seasonal effect (monthly variation) look reasonable.</source>
            <target state="new">Both the trend and the seasonal effect (monthly variation) look reasonable.</target>
          </trans-unit>
          <trans-unit id="626" xml:space="preserve">
            <source>As another check on our model, let's have a look at the residuals.</source>
            <target state="new">As another check on our model, let's have a look at the residuals.</target>
          </trans-unit>
          <trans-unit id="627" xml:space="preserve">
            <source>The following code computes the predicted values from our two models, computes the residuals for the seasonal model, and then plots these residuals for the training data.</source>
            <target state="new">The following code computes the predicted values from our two models, computes the residuals for the seasonal model, and then plots these residuals for the training data.</target>
          </trans-unit>
          <trans-unit id="628" xml:space="preserve">
            <source>The residual plot is shown in Figure 25.</source>
            <target state="new">The residual plot is shown in Figure 25.</target>
          </trans-unit>
          <trans-unit id="629" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Residuals of the seasonal model for the training data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Residuals of the seasonal model for the training data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="630" xml:space="preserve">
            <source>*Figure 25.</source>
            <target state="new">*Figure 25.</target>
          </trans-unit>
          <trans-unit id="631" xml:space="preserve">
            <source>Residuals of the seasonal model for the training data.*</source>
            <target state="new">Residuals of the seasonal model for the training data.*</target>
          </trans-unit>
          <trans-unit id="632" xml:space="preserve">
            <source>These residuals look reasonable.</source>
            <target state="new">These residuals look reasonable.</target>
          </trans-unit>
          <trans-unit id="633" xml:space="preserve">
            <source>There is no particular structure, except the effect of the 2008-2009 recession, which our model does not account for particularly well.</source>
            <target state="new">There is no particular structure, except the effect of the 2008-2009 recession, which our model does not account for particularly well.</target>
          </trans-unit>
          <trans-unit id="634" xml:space="preserve">
            <source>The plot shown in Figure 25 is useful for detecting any time-dependent patterns in the residuals.</source>
            <target state="new">The plot shown in Figure 25 is useful for detecting any time-dependent patterns in the residuals.</target>
          </trans-unit>
          <trans-unit id="635" xml:space="preserve">
            <source>The explicit approach of computing and plotting the residuals I used places the residuals in time order on the plot.</source>
            <target state="new">The explicit approach of computing and plotting the residuals I used places the residuals in time order on the plot.</target>
          </trans-unit>
          <trans-unit id="636" xml:space="preserve">
            <source>If, on the other hand, I had plotted <bpt id="2">&lt;code&gt;</bpt>milk.lm$residuals<ept id="2">&lt;/code&gt;</ept>, the plot would not have been in time order.</source>
            <target state="new">If, on the other hand, I had plotted <bpt id="2">&lt;code&gt;</bpt>milk.lm$residuals<ept id="2">&lt;/code&gt;</ept>, the plot would not have been in time order.</target>
          </trans-unit>
          <trans-unit id="637" xml:space="preserve">
            <source>You can also use <bpt id="2">&lt;code&gt;</bpt>plot.lm()<ept id="2">&lt;/code&gt;</ept> to produce a series of diagnostic plots.</source>
            <target state="new">You can also use <bpt id="2">&lt;code&gt;</bpt>plot.lm()<ept id="2">&lt;/code&gt;</ept> to produce a series of diagnostic plots.</target>
          </trans-unit>
          <trans-unit id="638" xml:space="preserve">
            <source>This code produces a series of diagnostic plots shown in Figure 26.</source>
            <target state="new">This code produces a series of diagnostic plots shown in Figure 26.</target>
          </trans-unit>
          <trans-unit id="639" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>First of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>First of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="640" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Second of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Second of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="641" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Third of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Third of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="642" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Fourth of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Fourth of diagnostic plots for the seasonal model<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="643" xml:space="preserve">
            <source>*Figure 26.</source>
            <target state="new">*Figure 26.</target>
          </trans-unit>
          <trans-unit id="644" xml:space="preserve">
            <source>Diagnostic plots for the seasonal model.*</source>
            <target state="new">Diagnostic plots for the seasonal model.*</target>
          </trans-unit>
          <trans-unit id="645" xml:space="preserve">
            <source>There are a few highly influential points identified in these plots, but nothing to cause great concern.</source>
            <target state="new">There are a few highly influential points identified in these plots, but nothing to cause great concern.</target>
          </trans-unit>
          <trans-unit id="646" xml:space="preserve">
            <source>Further, we can see from the Normal Q-Q plot that the residuals are close to normally distributed, an important assumption for linear models.</source>
            <target state="new">Further, we can see from the Normal Q-Q plot that the residuals are close to normally distributed, an important assumption for linear models.</target>
          </trans-unit>
          <trans-unit id="647" xml:space="preserve">
            <source>Forecasting and model evaluation</source>
            <target state="new">Forecasting and model evaluation</target>
          </trans-unit>
          <trans-unit id="648" xml:space="preserve">
            <source>There is just one more thing to do to complete our example.</source>
            <target state="new">There is just one more thing to do to complete our example.</target>
          </trans-unit>
          <trans-unit id="649" xml:space="preserve">
            <source>We need to compute forecasts and measure the error against the actual data.</source>
            <target state="new">We need to compute forecasts and measure the error against the actual data.</target>
          </trans-unit>
          <trans-unit id="650" xml:space="preserve">
            <source>Our forecast will be for the 12 months of 2013.</source>
            <target state="new">Our forecast will be for the 12 months of 2013.</target>
          </trans-unit>
          <trans-unit id="651" xml:space="preserve">
            <source>We can compute an error measure for this forecast to the actual data that is not part of our training dataset.</source>
            <target state="new">We can compute an error measure for this forecast to the actual data that is not part of our training dataset.</target>
          </trans-unit>
          <trans-unit id="652" xml:space="preserve">
            <source>Additionally, we can compare performance on the 18 years of training data to the 12 months of test data.</source>
            <target state="new">Additionally, we can compare performance on the 18 years of training data to the 12 months of test data.</target>
          </trans-unit>
          <trans-unit id="653" xml:space="preserve">
            <source>A number of metrics are used to measure the performance of time series models.</source>
            <target state="new">A number of metrics are used to measure the performance of time series models.</target>
          </trans-unit>
          <trans-unit id="654" xml:space="preserve">
            <source>In our case we will use the root mean square (RMS) error.</source>
            <target state="new">In our case we will use the root mean square (RMS) error.</target>
          </trans-unit>
          <trans-unit id="655" xml:space="preserve">
            <source>The following function computes the RMS error between two series.</source>
            <target state="new">The following function computes the RMS error between two series.</target>
          </trans-unit>
          <trans-unit id="656" xml:space="preserve">
            <source>As with the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function we discussed in the "Value transformations" section, there is quite a lot of error checking and exception recovery code in this function.</source>
            <target state="new">As with the <bpt id="2">&lt;code&gt;</bpt>log.transform()<ept id="2">&lt;/code&gt;</ept> function we discussed in the "Value transformations" section, there is quite a lot of error checking and exception recovery code in this function.</target>
          </trans-unit>
          <trans-unit id="657" xml:space="preserve">
            <source>The principles employed are the same.</source>
            <target state="new">The principles employed are the same.</target>
          </trans-unit>
          <trans-unit id="658" xml:space="preserve">
            <source>The work is done in two places wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">The work is done in two places wrapped in <bpt id="2">&lt;code&gt;</bpt>tryCatch()<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="659" xml:space="preserve">
            <source>First, the time series are exponentiated, since we have been working with the logs of the values.</source>
            <target state="new">First, the time series are exponentiated, since we have been working with the logs of the values.</target>
          </trans-unit>
          <trans-unit id="660" xml:space="preserve">
            <source>Second, the actual RMS error is computed.</source>
            <target state="new">Second, the actual RMS error is computed.</target>
          </trans-unit>
          <trans-unit id="661" xml:space="preserve">
            <source>Equipped with a function to measure the RMS error, let's build and output a dataframe containing the RMS errors.</source>
            <target state="new">Equipped with a function to measure the RMS error, let's build and output a dataframe containing the RMS errors.</target>
          </trans-unit>
          <trans-unit id="662" xml:space="preserve">
            <source>We will include terms for the trend model alone and the complete model with seasonal factors.</source>
            <target state="new">We will include terms for the trend model alone and the complete model with seasonal factors.</target>
          </trans-unit>
          <trans-unit id="663" xml:space="preserve">
            <source>The following code does the job by using the two linear models we have constructed.</source>
            <target state="new">The following code does the job by using the two linear models we have constructed.</target>
          </trans-unit>
          <trans-unit id="664" xml:space="preserve">
            <source>Running this code produces the output shown in Figure 27 at the Result Dataset output port.</source>
            <target state="new">Running this code produces the output shown in Figure 27 at the Result Dataset output port.</target>
          </trans-unit>
          <trans-unit id="665" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Comparison of RMS errors for the models<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Comparison of RMS errors for the models<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="666" xml:space="preserve">
            <source>*Figure 27.</source>
            <target state="new">*Figure 27.</target>
          </trans-unit>
          <trans-unit id="667" xml:space="preserve">
            <source>Comparison of RMS errors for the models.*</source>
            <target state="new">Comparison of RMS errors for the models.*</target>
          </trans-unit>
          <trans-unit id="668" xml:space="preserve">
            <source>From these results, we see that adding the seasonal factors to the model reduces the RMS error significantly.</source>
            <target state="new">From these results, we see that adding the seasonal factors to the model reduces the RMS error significantly.</target>
          </trans-unit>
          <trans-unit id="669" xml:space="preserve">
            <source>Not too surprisingly, the RMS error for the training data is a bit less than for the forecast.</source>
            <target state="new">Not too surprisingly, the RMS error for the training data is a bit less than for the forecast.</target>
          </trans-unit>
          <trans-unit id="670" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>APPENDIX A: Guide to RStudio</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>APPENDIX A: Guide to RStudio</target>
          </trans-unit>
          <trans-unit id="671" xml:space="preserve">
            <source>RStudio is quite well documented, so in this appendix I will provide some links to the key sections of the RStudio documentation to get you started.</source>
            <target state="new">RStudio is quite well documented, so in this appendix I will provide some links to the key sections of the RStudio documentation to get you started.</target>
          </trans-unit>
          <trans-unit id="672" xml:space="preserve">
            <source>Creating projects</source>
            <target state="new">Creating projects</target>
          </trans-unit>
          <trans-unit id="673" xml:space="preserve">
            <source>You can organize and manage your R code into projects by using RStudio.</source>
            <target state="new">You can organize and manage your R code into projects by using RStudio.</target>
          </trans-unit>
          <trans-unit id="674" xml:space="preserve">
            <source>The documentation that uses projects can be found at https://support.rstudio.com/hc/articles/200526207-Using-Projects.</source>
            <target state="new">The documentation that uses projects can be found at https://support.rstudio.com/hc/articles/200526207-Using-Projects.</target>
          </trans-unit>
          <trans-unit id="675" xml:space="preserve">
            <source>I recommend that you follow these directions and create a project for the R code examples in this document.</source>
            <target state="new">I recommend that you follow these directions and create a project for the R code examples in this document.</target>
          </trans-unit>
          <trans-unit id="676" xml:space="preserve">
            <source>Editing and executing R code</source>
            <target state="new">Editing and executing R code</target>
          </trans-unit>
          <trans-unit id="677" xml:space="preserve">
            <source>RStudio provides an integrated environment for editing and executing R code.</source>
            <target state="new">RStudio provides an integrated environment for editing and executing R code.</target>
          </trans-unit>
          <trans-unit id="678" xml:space="preserve">
            <source>Documentation can be found at https://support.rstudio.com/hc/articles/200484448-Editing-and-Executing-Code.</source>
            <target state="new">Documentation can be found at https://support.rstudio.com/hc/articles/200484448-Editing-and-Executing-Code.</target>
          </trans-unit>
          <trans-unit id="679" xml:space="preserve">
            <source>Debugging</source>
            <target state="new">Debugging</target>
          </trans-unit>
          <trans-unit id="680" xml:space="preserve">
            <source>RStudio includes powerful debugging capabilities.</source>
            <target state="new">RStudio includes powerful debugging capabilities.</target>
          </trans-unit>
          <trans-unit id="681" xml:space="preserve">
            <source>Documentation for these features is at https://support.rstudio.com/hc/articles/200713843-Debugging-with-RStudio.</source>
            <target state="new">Documentation for these features is at https://support.rstudio.com/hc/articles/200713843-Debugging-with-RStudio.</target>
          </trans-unit>
          <trans-unit id="682" xml:space="preserve">
            <source>The breakpoint troubleshooting features are documented at https://support.rstudio.com/hc/articles/200534337-Breakpoint-Troubleshooting.</source>
            <target state="new">The breakpoint troubleshooting features are documented at https://support.rstudio.com/hc/articles/200534337-Breakpoint-Troubleshooting.</target>
          </trans-unit>
          <trans-unit id="683" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>APPENDIX B: Further reading</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>APPENDIX B: Further reading</target>
          </trans-unit>
          <trans-unit id="684" xml:space="preserve">
            <source>This R programming tutorial covers the basics of what you need to use the R language with Azure Machine Learning Studio.</source>
            <target state="new">This R programming tutorial covers the basics of what you need to use the R language with Azure Machine Learning Studio.</target>
          </trans-unit>
          <trans-unit id="685" xml:space="preserve">
            <source>If you are not familiar with R, two introductions are available on CRAN:</source>
            <target state="new">If you are not familiar with R, two introductions are available on CRAN:</target>
          </trans-unit>
          <trans-unit id="686" xml:space="preserve">
            <source>R for Beginners by Emmanuel Paradis is a good place to start at http://cran.r-project.org/doc/contrib/Paradis-rdebuts_en.pdf.</source>
            <target state="new">R for Beginners by Emmanuel Paradis is a good place to start at http://cran.r-project.org/doc/contrib/Paradis-rdebuts_en.pdf.</target>
          </trans-unit>
          <trans-unit id="687" xml:space="preserve">
            <source>An Introduction to R by W. N.</source>
            <target state="new">An Introduction to R by W. N.</target>
          </trans-unit>
          <trans-unit id="688" xml:space="preserve">
            <source>Venables et. al.</source>
            <target state="new">Venables et. al.</target>
          </trans-unit>
          <trans-unit id="689" xml:space="preserve">
            <source>goes into a bit more depth, at http://cran.r-project.org/doc/manuals/R-intro.html.</source>
            <target state="new">goes into a bit more depth, at http://cran.r-project.org/doc/manuals/R-intro.html.</target>
          </trans-unit>
          <trans-unit id="690" xml:space="preserve">
            <source>There are many books on R that can help you get started.</source>
            <target state="new">There are many books on R that can help you get started.</target>
          </trans-unit>
          <trans-unit id="691" xml:space="preserve">
            <source>Here are a few I find useful:</source>
            <target state="new">Here are a few I find useful:</target>
          </trans-unit>
          <trans-unit id="692" xml:space="preserve">
            <source>The Art of R Programming: A Tour of Statistical Software Design by Norman Matloff is an excellent introduction to programming in R.</source>
            <target state="new">The Art of R Programming: A Tour of Statistical Software Design by Norman Matloff is an excellent introduction to programming in R.</target>
          </trans-unit>
          <trans-unit id="693" xml:space="preserve">
            <source>R Cookbook by Paul Teetor provides a problem and solution approach to using R.</source>
            <target state="new">R Cookbook by Paul Teetor provides a problem and solution approach to using R.</target>
          </trans-unit>
          <trans-unit id="694" xml:space="preserve">
            <source>R in Action by Robert Kabacoff is another useful introductory book.</source>
            <target state="new">R in Action by Robert Kabacoff is another useful introductory book.</target>
          </trans-unit>
          <trans-unit id="695" xml:space="preserve">
            <source>The companion Quick R website is a useful resource at http://www.statmethods.net/.</source>
            <target state="new">The companion Quick R website is a useful resource at http://www.statmethods.net/.</target>
          </trans-unit>
          <trans-unit id="696" xml:space="preserve">
            <source>R Inferno by Patrick Burns is a surprisingly humorous book that deals with a number of tricky and difficult topics that can be encountered when programming in R. The book is available for free at http://www.burns-stat.com/documents/books/the-r-inferno/.</source>
            <target state="new">R Inferno by Patrick Burns is a surprisingly humorous book that deals with a number of tricky and difficult topics that can be encountered when programming in R. The book is available for free at http://www.burns-stat.com/documents/books/the-r-inferno/.</target>
          </trans-unit>
          <trans-unit id="697" xml:space="preserve">
            <source>If you want a deep dive into advanced topics in R, have a look at the book Advanced R by Hadley Wickham.</source>
            <target state="new">If you want a deep dive into advanced topics in R, have a look at the book Advanced R by Hadley Wickham.</target>
          </trans-unit>
          <trans-unit id="698" xml:space="preserve">
            <source>The online version of this book is available for free at http://adv-r.had.co.nz/.</source>
            <target state="new">The online version of this book is available for free at http://adv-r.had.co.nz/.</target>
          </trans-unit>
          <trans-unit id="699" xml:space="preserve">
            <source>A catalogue of R time series packages can be found in the CRAN Task View for time series analysis: http://cran.r-project.org/web/views/TimeSeries.html.</source>
            <target state="new">A catalogue of R time series packages can be found in the CRAN Task View for time series analysis: http://cran.r-project.org/web/views/TimeSeries.html.</target>
          </trans-unit>
          <trans-unit id="700" xml:space="preserve">
            <source>For information on specific time series object packages, you should refer to the documentation for that package.</source>
            <target state="new">For information on specific time series object packages, you should refer to the documentation for that package.</target>
          </trans-unit>
          <trans-unit id="701" xml:space="preserve">
            <source>The book Introductory Time Series with R by Paul Cowpertwait and Andrew Metcalfe provides an introduction to using R for time series analysis.</source>
            <target state="new">The book Introductory Time Series with R by Paul Cowpertwait and Andrew Metcalfe provides an introduction to using R for time series analysis.</target>
          </trans-unit>
          <trans-unit id="702" xml:space="preserve">
            <source>Many more theoretical texts provide R examples.</source>
            <target state="new">Many more theoretical texts provide R examples.</target>
          </trans-unit>
          <trans-unit id="703" xml:space="preserve">
            <source>Some great internet resources:</source>
            <target state="new">Some great internet resources:</target>
          </trans-unit>
          <trans-unit id="704" xml:space="preserve">
            <source>DataCamp: DataCamp teaches R in the comfort of your browser with video lessons and coding exercises.</source>
            <target state="new">DataCamp: DataCamp teaches R in the comfort of your browser with video lessons and coding exercises.</target>
          </trans-unit>
          <trans-unit id="705" xml:space="preserve">
            <source>There are interactive tutorials on the latest R techniques and packages.</source>
            <target state="new">There are interactive tutorials on the latest R techniques and packages.</target>
          </trans-unit>
          <trans-unit id="706" xml:space="preserve">
            <source>Take the free interactive R tutorial at https://www.datacamp.com/courses/introduction-to-r</source>
            <target state="new">Take the free interactive R tutorial at https://www.datacamp.com/courses/introduction-to-r</target>
          </trans-unit>
          <trans-unit id="707" xml:space="preserve">
            <source>A quick R tutorial by Kelly Black from Clarkson University http://www.cyclismo.org/tutorial/R/</source>
            <target state="new">A quick R tutorial by Kelly Black from Clarkson University http://www.cyclismo.org/tutorial/R/</target>
          </trans-unit>
          <trans-unit id="708" xml:space="preserve">
            <source>60+ R resources listed at http://www.computerworld.com/article/2497464/business-intelligence-60-r-resources-to-improve-your-data-skills.html</source>
            <target state="new">60+ R resources listed at http://www.computerworld.com/article/2497464/business-intelligence-60-r-resources-to-improve-your-data-skills.html</target>
          </trans-unit>
          <trans-unit id="709" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>