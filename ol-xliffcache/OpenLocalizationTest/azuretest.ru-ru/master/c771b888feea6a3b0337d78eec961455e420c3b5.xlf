<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/20/2016 4:15:48 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c771b888feea6a3b0337d78eec961455e420c3b5</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Notification Hubs Localized Breaking News Tutorial for iOS</source>
            <target state="new">Notification Hubs Localized Breaking News Tutorial for iOS</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Service Bus Notification Hubs to send localized breaking news notifications (iOS).</source>
            <target state="new">Learn how to use Azure Service Bus Notification Hubs to send localized breaking news notifications (iOS).</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Use Notification Hubs to send localized breaking news to iOS devices</source>
            <target state="new">Use Notification Hubs to send localized breaking news to iOS devices</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic shows you how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Azure Notification Hubs to broadcast breaking news notifications that have been localized by language and device.</source>
            <target state="new">This topic shows you how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Azure Notification Hubs to broadcast breaking news notifications that have been localized by language and device.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In this tutorial you start with the Windows Store app created in [Use Notification Hubs to send breaking news].</source>
            <target state="new">In this tutorial you start with the Windows Store app created in [Use Notification Hubs to send breaking news].</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>When complete, you will be able to register for categories you are interested in, specify a language in which to receive the notifications, and receive only push notifications for the selected categories in that language.</source>
            <target state="new">When complete, you will be able to register for categories you are interested in, specify a language in which to receive the notifications, and receive only push notifications for the selected categories in that language.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>There are two parts to this scenario:</source>
            <target state="new">There are two parts to this scenario:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>iOS app allows client devices to specify a language, and to subscribe to different breaking news categories;</source>
            <target state="new">iOS app allows client devices to specify a language, and to subscribe to different breaking news categories;</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>the back-end broadcasts the notifications, using the <bpt id="2">&lt;strong&gt;</bpt>tag<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>template<ept id="4">&lt;/strong&gt;</ept> feautres of Azure Notification Hubs.</source>
            <target state="new">the back-end broadcasts the notifications, using the <bpt id="2">&lt;strong&gt;</bpt>tag<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>template<ept id="4">&lt;/strong&gt;</ept> feautres of Azure Notification Hubs.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>You must have already completed the [Use Notification Hubs to send breaking news] tutorial and have the code available, because this tutorial builds directly upon that code.</source>
            <target state="new">You must have already completed the [Use Notification Hubs to send breaking news] tutorial and have the code available, because this tutorial builds directly upon that code.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>You also need Visual Studio 2012.</source>
            <target state="new">You also need Visual Studio 2012.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Template concepts</source>
            <target state="new">Template concepts</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In [Use Notification Hubs to send breaking news] you built an app that used <bpt id="2">&lt;strong&gt;</bpt>tags<ept id="2">&lt;/strong&gt;</ept> to subscribe to notifications for different news categories.</source>
            <target state="new">In [Use Notification Hubs to send breaking news] you built an app that used <bpt id="2">&lt;strong&gt;</bpt>tags<ept id="2">&lt;/strong&gt;</ept> to subscribe to notifications for different news categories.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Many apps, however, target multiple markets and require localization.</source>
            <target state="new">Many apps, however, target multiple markets and require localization.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>This means that the content of the notifications themselves have to be localized and delivered to the correct set of devices.</source>
            <target state="new">This means that the content of the notifications themselves have to be localized and delivered to the correct set of devices.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>In this topic we will show how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Notification Hubs to easily deliver localized breaking news notifications.</source>
            <target state="new">In this topic we will show how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Notification Hubs to easily deliver localized breaking news notifications.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Note: one way to send localized notifications is to create multiple versions of each tag.</source>
            <target state="new">Note: one way to send localized notifications is to create multiple versions of each tag.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>For instance, to support English, French, and Mandarin, we would need three different tags for world news: "world_en", "world_fr", and "world_ch".</source>
            <target state="new">For instance, to support English, French, and Mandarin, we would need three different tags for world news: "world_en", "world_fr", and "world_ch".</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>We would then have to send a localized version of the world news to each of these tags.</source>
            <target state="new">We would then have to send a localized version of the world news to each of these tags.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In this topic we use templates to avoid the proliferation of tags and the requirement of sending multiple messages.</source>
            <target state="new">In this topic we use templates to avoid the proliferation of tags and the requirement of sending multiple messages.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>At a high level, templates are a way to specify how a specific device should receive a notification.</source>
            <target state="new">At a high level, templates are a way to specify how a specific device should receive a notification.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The template specifies the exact payload format by referring to properties that are part of the message sent by your app back-end.</source>
            <target state="new">The template specifies the exact payload format by referring to properties that are part of the message sent by your app back-end.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In our case, we will send a locale-agnostic message containing all supported languages:</source>
            <target state="new">In our case, we will send a locale-agnostic message containing all supported languages:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Then we will ensure that devices register with a template that refers to the correct property.</source>
            <target state="new">Then we will ensure that devices register with a template that refers to the correct property.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>For instance,  an iOS app that wants to register for French news will register the following:</source>
            <target state="new">For instance,  an iOS app that wants to register for French news will register the following:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Templates are a very powerful feature you can learn more about in our [Notification Hubs Guidance] article.</source>
            <target state="new">Templates are a very powerful feature you can learn more about in our [Notification Hubs Guidance] article.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>A reference for the template expression language is in our [How To: Service Bus Notification Hubs (iOS Apps)].</source>
            <target state="new">A reference for the template expression language is in our [How To: Service Bus Notification Hubs (iOS Apps)].</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>The app user interface</source>
            <target state="new">The app user interface</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>We will now modify the Breaking News app that you created in the topic [Use Notification Hubs to send breaking news] to send localized breaking news using templates.</source>
            <target state="new">We will now modify the Breaking News app that you created in the topic [Use Notification Hubs to send breaking news] to send localized breaking news using templates.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In your MainStoryboard_iPhone.storyboard, add a Segmented Control with the three languages we support: English, French, and Mandarin.</source>
            <target state="new">In your MainStoryboard_iPhone.storyboard, add a Segmented Control with the three languages we support: English, French, and Mandarin.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Then make sure to add an IBOutlet in your ViewController.h as shown below:</source>
            <target state="new">Then make sure to add an IBOutlet in your ViewController.h as shown below:</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Building the iOS app</source>
            <target state="new">Building the iOS app</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In order to adapt your client apps to receive localized messages, you have to replace your <bpt id="2">&lt;em&gt;</bpt>native<ept id="2">&lt;/em&gt;</ept> registrations (i.e. registrations that do you specify a template) with template registrations.</source>
            <target state="new">In order to adapt your client apps to receive localized messages, you have to replace your <bpt id="2">&lt;em&gt;</bpt>native<ept id="2">&lt;/em&gt;</ept> registrations (i.e. registrations that do you specify a template) with template registrations.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>In your Notification.h add the <bpt id="2">&lt;em&gt;</bpt>retrieveLocale<ept id="2">&lt;/em&gt;</ept> method, and modify the store and subscribe methods as shown below:</source>
            <target state="new">In your Notification.h add the <bpt id="2">&lt;em&gt;</bpt>retrieveLocale<ept id="2">&lt;/em&gt;</ept> method, and modify the store and subscribe methods as shown below:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>In your Notification.m, modify the <bpt id="2">&lt;em&gt;</bpt>storeCategoriesAndSubscribe<ept id="2">&lt;/em&gt;</ept> method, by adding the locale parameter and storing it in the user defaults:</source>
            <target state="new">In your Notification.m, modify the <bpt id="2">&lt;em&gt;</bpt>storeCategoriesAndSubscribe<ept id="2">&lt;/em&gt;</ept> method, by adding the locale parameter and storing it in the user defaults:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Then modify the <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method to include the locale:</source>
            <target state="new">Then modify the <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method to include the locale:</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Note how we are now using the method <bpt id="2">&lt;em&gt;</bpt>registerTemplateWithDeviceToken<ept id="2">&lt;/em&gt;</ept>, instead of <bpt id="4">&lt;em&gt;</bpt>registerNativeWithDeviceToken<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">Note how we are now using the method <bpt id="2">&lt;em&gt;</bpt>registerTemplateWithDeviceToken<ept id="2">&lt;/em&gt;</ept>, instead of <bpt id="4">&lt;em&gt;</bpt>registerNativeWithDeviceToken<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>When we register for a template we have to provide the json template and also a name for the template (as our app might want to register different templates).</source>
            <target state="new">When we register for a template we have to provide the json template and also a name for the template (as our app might want to register different templates).</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Make sure to register your categories as tags, as we want to make sure to receive the notifciations for those news.</source>
            <target state="new">Make sure to register your categories as tags, as we want to make sure to receive the notifciations for those news.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Finally, add a method to retrieve the locale from the user default settings:</source>
            <target state="new">Finally, add a method to retrieve the locale from the user default settings:</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Now that we modified our Notifications class, we have to make sure that our ViewController makes use of the new UISegmentControl.</source>
            <target state="new">Now that we modified our Notifications class, we have to make sure that our ViewController makes use of the new UISegmentControl.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Add the following line in the <bpt id="2">&lt;em&gt;</bpt>viewDidLoad<ept id="2">&lt;/em&gt;</ept> method to make sure to show the locale that is currently selected:</source>
            <target state="new">Add the following line in the <bpt id="2">&lt;em&gt;</bpt>viewDidLoad<ept id="2">&lt;/em&gt;</ept> method to make sure to show the locale that is currently selected:</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Then, in your <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method, change your call to the <bpt id="4">&lt;em&gt;</bpt>storeCategoriesAndSubscribe<ept id="4">&lt;/em&gt;</ept> to the following:</source>
            <target state="new">Then, in your <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method, change your call to the <bpt id="4">&lt;em&gt;</bpt>storeCategoriesAndSubscribe<ept id="4">&lt;/em&gt;</ept> to the following:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Finally, you have to update the <bpt id="2">&lt;em&gt;</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="2">&lt;/em&gt;</ept> method in your AppDelegate.m, so that you can correctly refresh your registration when your app starts.</source>
            <target state="new">Finally, you have to update the <bpt id="2">&lt;em&gt;</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="2">&lt;/em&gt;</ept> method in your AppDelegate.m, so that you can correctly refresh your registration when your app starts.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Change your call to the <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method of notifications with the following:</source>
            <target state="new">Change your call to the <bpt id="2">&lt;em&gt;</bpt>subscribe<ept id="2">&lt;/em&gt;</ept> method of notifications with the following:</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Send localized notifications from your back-end</source>
            <target state="new">Send localized notifications from your back-end</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/notification-hubs-localized-back-end.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/notification-hubs-localized-back-end.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>For more information on using templates, see:</source>
            <target state="new">For more information on using templates, see:</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>[Notify users with Notification Hubs: ASP.NET]</source>
            <target state="new">[Notify users with Notification Hubs: ASP.NET]</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>[Notify users with Notification Hubs: Mobile Services]</source>
            <target state="new">[Notify users with Notification Hubs: Mobile Services]</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>[Notification Hubs Guidance]</source>
            <target state="new">[Notification Hubs Guidance]</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>A reference for the template expression language is in [Notification Hubs How-To for iOS].</source>
            <target state="new">A reference for the template expression language is in [Notification Hubs How-To for iOS].</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>