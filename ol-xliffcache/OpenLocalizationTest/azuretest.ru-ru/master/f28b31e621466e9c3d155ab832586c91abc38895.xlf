<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="2/22/2016 12:24:31 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f28b31e621466e9c3d155ab832586c91abc38895</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Background jobs guidance | Microsoft Azure</source>
            <target state="new">Background jobs guidance | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Guidance on background tasks that run independently of the user interface.</source>
            <target state="new">Guidance on background tasks that run independently of the user interface.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Background jobs guidance</source>
            <target state="new">Background jobs guidance</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Many types of applications require background tasks that run independently of the user interface (UI).</source>
            <target state="new">Many types of applications require background tasks that run independently of the user interface (UI).</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Examples include batch jobs, intensive processing tasks, and long running processes such as workflows.</source>
            <target state="new">Examples include batch jobs, intensive processing tasks, and long running processes such as workflows.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Background jobs can be executed without requiring user interaction; the application can start the job and then continue to process interactive requests from users.</source>
            <target state="new">Background jobs can be executed without requiring user interaction; the application can start the job and then continue to process interactive requests from users.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This can help to minimize the load on the application UI, which can improve availability and reduce interactive response times.</source>
            <target state="new">This can help to minimize the load on the application UI, which can improve availability and reduce interactive response times.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For example, if an application is required to generate thumbnails of images uploaded by users, it can do this as a background job and save the thumbnail to storage when complete without the user needing to wait for the process to complete.</source>
            <target state="new">For example, if an application is required to generate thumbnails of images uploaded by users, it can do this as a background job and save the thumbnail to storage when complete without the user needing to wait for the process to complete.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In the same way, a user placing an order can initiate a background workflow that processes the order, while the UI allows the user to continue browsing the website.</source>
            <target state="new">In the same way, a user placing an order can initiate a background workflow that processes the order, while the UI allows the user to continue browsing the website.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>When the background job is complete, it can update the stored orders data and send an email to the user confirming the order.</source>
            <target state="new">When the background job is complete, it can update the stored orders data and send an email to the user confirming the order.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>When considering whether to implement a task as a background job, the main criteria is whether the task can run without user interaction and without the UI needing to wait for the job to complete.</source>
            <target state="new">When considering whether to implement a task as a background job, the main criteria is whether the task can run without user interaction and without the UI needing to wait for the job to complete.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Tasks that require the user or the UI to wait while they are completed may not be appropriate as background jobs.</source>
            <target state="new">Tasks that require the user or the UI to wait while they are completed may not be appropriate as background jobs.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Types of background jobs</source>
            <target state="new">Types of background jobs</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Background jobs typically have one or more of the following characteristics:</source>
            <target state="new">Background jobs typically have one or more of the following characteristics:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>CPU intensive jobs such as mathematical calculations, structural model analysis, and more.</source>
            <target state="new">CPU intensive jobs such as mathematical calculations, structural model analysis, and more.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>I/O intensive jobs such as executing a series of storage transactions or indexing files.</source>
            <target state="new">I/O intensive jobs such as executing a series of storage transactions or indexing files.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Batch jobs such as nightly data updates or scheduled processing.</source>
            <target state="new">Batch jobs such as nightly data updates or scheduled processing.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Long running workflows such as order fulfillment or provisioning services and systems.</source>
            <target state="new">Long running workflows such as order fulfillment or provisioning services and systems.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Sensitive data processing where the task is handed off to a more secure location for processing.</source>
            <target state="new">Sensitive data processing where the task is handed off to a more secure location for processing.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>For example, you may not want to process sensitive data within a web role, and instead use a pattern such as <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to transfer the data to an isolated background role that has access to protected storage.</source>
            <target state="new">For example, you may not want to process sensitive data within a web role, and instead use a pattern such as <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to transfer the data to an isolated background role that has access to protected storage.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Triggers</source>
            <target state="new">Triggers</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Background jobs can be initiated in several different ways.</source>
            <target state="new">Background jobs can be initiated in several different ways.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Effectively, all of them fall into one of the following categories:</source>
            <target state="new">Effectively, all of them fall into one of the following categories:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Event driven triggers**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Event driven triggers**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The task is started in response to an event, typically an action taken by a user or a step in a workflow.</source>
            <target state="new">The task is started in response to an event, typically an action taken by a user or a step in a workflow.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Schedule driven triggers**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Schedule driven triggers**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The task is invoked on a schedule based on a timer.</source>
            <target state="new">The task is invoked on a schedule based on a timer.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>This may be a recurring schedule, or a one-off invocation specified for a later time</source>
            <target state="new">This may be a recurring schedule, or a one-off invocation specified for a later time</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Event driven triggers</source>
            <target state="new">Event driven triggers</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Event driven invocation uses a trigger to start the background task.</source>
            <target state="new">Event driven invocation uses a trigger to start the background task.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Examples of using event driven triggers include:</source>
            <target state="new">Examples of using event driven triggers include:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The UI or another job places a message in a queue.</source>
            <target state="new">The UI or another job places a message in a queue.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>The message contains data about an action that has taken place, such as the user placing an order.</source>
            <target state="new">The message contains data about an action that has taken place, such as the user placing an order.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The background task listens on this queue and detects the arrival of a new message.</source>
            <target state="new">The background task listens on this queue and detects the arrival of a new message.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>It reads the message and uses the data in it as the input to the background job.</source>
            <target state="new">It reads the message and uses the data in it as the input to the background job.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The UI or another job saves or updates a value in storage.</source>
            <target state="new">The UI or another job saves or updates a value in storage.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The background task monitors the storage and detects changes.</source>
            <target state="new">The background task monitors the storage and detects changes.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>It reads the data and uses it as the input to the background job.</source>
            <target state="new">It reads the data and uses it as the input to the background job.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The UI or another job makes a request to an endpoint, such as an HTTPS URI, or an API exposed as a web service.</source>
            <target state="new">The UI or another job makes a request to an endpoint, such as an HTTPS URI, or an API exposed as a web service.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>It passes the data required to complete the background task as part of the request.</source>
            <target state="new">It passes the data required to complete the background task as part of the request.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>The endpoint or web service invokes the background task, which uses the data as its input.</source>
            <target state="new">The endpoint or web service invokes the background task, which uses the data as its input.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Typical examples of tasks suited to event driven invocation include image processing, workflows, sending information to remote services, sending email messages, provisioning new users in multi-tenant applications, and more.</source>
            <target state="new">Typical examples of tasks suited to event driven invocation include image processing, workflows, sending information to remote services, sending email messages, provisioning new users in multi-tenant applications, and more.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Schedule driven triggers</source>
            <target state="new">Schedule driven triggers</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Schedule driven invocation uses a timer to start the background task.</source>
            <target state="new">Schedule driven invocation uses a timer to start the background task.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Examples of using schedule driven triggers include:</source>
            <target state="new">Examples of using schedule driven triggers include:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>A timer running locally within the application or as part of the application’s operating system invokes a background task on a regular basis.</source>
            <target state="new">A timer running locally within the application or as part of the application’s operating system invokes a background task on a regular basis.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>A timer running in a different application, or a timer service such as Azure Scheduler, sends a request to an API or web service on a regular basis.</source>
            <target state="new">A timer running in a different application, or a timer service such as Azure Scheduler, sends a request to an API or web service on a regular basis.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>The API or web service invokes the background task.</source>
            <target state="new">The API or web service invokes the background task.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>A separate process or application starts a timer that causes the background task to be invoked once after a specified time delay, or at a specific time.</source>
            <target state="new">A separate process or application starts a timer that causes the background task to be invoked once after a specified time delay, or at a specific time.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Typical examples of tasks suited to schedule driven invocation include batch processing routines such as updating related products lists for users based on their recent behavior, routine data processing tasks such as updating indexes or generating accumulated results, analyzing data for daily reports, data retention cleanup, data consistency checks, and more.</source>
            <target state="new">Typical examples of tasks suited to schedule driven invocation include batch processing routines such as updating related products lists for users based on their recent behavior, routine data processing tasks such as updating indexes or generating accumulated results, analyzing data for daily reports, data retention cleanup, data consistency checks, and more.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>If you use a schedule driven task that must run as a single instance, be aware of the following:</source>
            <target state="new">If you use a schedule driven task that must run as a single instance, be aware of the following:</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>If the compute instance that is running the scheduler (such as a Virtual Machine using Windows Scheduled Tasks) is scaled, you will have multiple instances of the scheduler running and these could start multiple instances of the task.</source>
            <target state="new">If the compute instance that is running the scheduler (such as a Virtual Machine using Windows Scheduled Tasks) is scaled, you will have multiple instances of the scheduler running and these could start multiple instances of the task.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>If tasks run for longer than the period between scheduler events, the scheduler may start another instance of the task while the previous one is still running.</source>
            <target state="new">If tasks run for longer than the period between scheduler events, the scheduler may start another instance of the task while the previous one is still running.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Returning results</source>
            <target state="new">Returning results</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Background jobs execute asynchronously in a separate process, or even a separate location, from the UI or the process that invoked the background task.</source>
            <target state="new">Background jobs execute asynchronously in a separate process, or even a separate location, from the UI or the process that invoked the background task.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Ideally, background tasks are “fire and forget” operations, and their execution progress has no impact on the UI or the calling process.</source>
            <target state="new">Ideally, background tasks are “fire and forget” operations, and their execution progress has no impact on the UI or the calling process.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>This means that the calling process does not wait for completion of the tasks, and therefore cannot automatically detect when the task ends.</source>
            <target state="new">This means that the calling process does not wait for completion of the tasks, and therefore cannot automatically detect when the task ends.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>If you require a background task to communicate with the calling task to indicate progress or completion, you must implement a mechanism for this.</source>
            <target state="new">If you require a background task to communicate with the calling task to indicate progress or completion, you must implement a mechanism for this.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Some examples are:</source>
            <target state="new">Some examples are:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Write status indicator value to storage that is accessible to the UI or caller task, which can monitor or check this value when required.</source>
            <target state="new">Write status indicator value to storage that is accessible to the UI or caller task, which can monitor or check this value when required.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Other data that the background task must return to the caller can be placed into the same storage.</source>
            <target state="new">Other data that the background task must return to the caller can be placed into the same storage.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Establish a reply queue that the UI or caller listens on.</source>
            <target state="new">Establish a reply queue that the UI or caller listens on.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The background task can send messages to the queue indicating status and completion.</source>
            <target state="new">The background task can send messages to the queue indicating status and completion.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Data that the background task must return to the caller can be placed into the messages.</source>
            <target state="new">Data that the background task must return to the caller can be placed into the messages.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>If you are using Azure Service Bus, you can use the <bpt id="2">&lt;strong&gt;</bpt>ReplyTo<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>CorrelationId<ept id="4">&lt;/strong&gt;</ept> properties to implement this capability.</source>
            <target state="new">If you are using Azure Service Bus, you can use the <bpt id="2">&lt;strong&gt;</bpt>ReplyTo<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>CorrelationId<ept id="4">&lt;/strong&gt;</ept> properties to implement this capability.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Correlation in Service Bus Brokered Messaging<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Correlation in Service Bus Brokered Messaging<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Expose an API or endpoint from the background task that the UI or caller can access to obtain status information.</source>
            <target state="new">Expose an API or endpoint from the background task that the UI or caller can access to obtain status information.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Data that the background task must return to the caller can be included in the response.</source>
            <target state="new">Data that the background task must return to the caller can be included in the response.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Have the background task call back to the UI or caller through an API to indicate status at predefined points or on completion.</source>
            <target state="new">Have the background task call back to the UI or caller through an API to indicate status at predefined points or on completion.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>This might be through events raised locally, or through a publish and subscribe mechanism.</source>
            <target state="new">This might be through events raised locally, or through a publish and subscribe mechanism.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Data that the background task must return to the caller can be included in the request or event payload.</source>
            <target state="new">Data that the background task must return to the caller can be included in the request or event payload.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Hosting environment</source>
            <target state="new">Hosting environment</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>You can host background tasks using a range of different Azure platform services:</source>
            <target state="new">You can host background tasks using a range of different Azure platform services:</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Web Sites**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Web Sites**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>You can use WebJobs to execute custom jobs based on a range of different types of script or executable program within the context of the website.</source>
            <target state="new">You can use WebJobs to execute custom jobs based on a range of different types of script or executable program within the context of the website.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Cloud Services web and worker roles**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Cloud Services web and worker roles**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>You can write code within a role that executes as a background task.</source>
            <target state="new">You can write code within a role that executes as a background task.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Virtual Machines**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Azure Virtual Machines**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>If you have a Windows service or you want to use the Windows Task Scheduler, it is common to host your background tasks within a dedicated virtual machine.</source>
            <target state="new">If you have a Windows service or you want to use the Windows Task Scheduler, it is common to host your background tasks within a dedicated virtual machine.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>The following sections describe each of these options in more detail, and include considerations to help you choose the appropriate option.</source>
            <target state="new">The following sections describe each of these options in more detail, and include considerations to help you choose the appropriate option.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Azure Web Sites and WebJobs</source>
            <target state="new">Azure Web Sites and WebJobs</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>You can use Azure WebJobs to execute custom jobs as background tasks within an Azure Web Sites hosted application.</source>
            <target state="new">You can use Azure WebJobs to execute custom jobs as background tasks within an Azure Web Sites hosted application.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>WebJobs can run scripts or executable programs within the context of your website as a continuous process, or in response to a trigger event from Azure Scheduler or external factors such as changes to storage blobs and message queues.</source>
            <target state="new">WebJobs can run scripts or executable programs within the context of your website as a continuous process, or in response to a trigger event from Azure Scheduler or external factors such as changes to storage blobs and message queues.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Jobs can be started and stopped on demand, and shut down gracefully.</source>
            <target state="new">Jobs can be started and stopped on demand, and shut down gracefully.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>If a continuously running WebJob fails, it is automatically restarted.</source>
            <target state="new">If a continuously running WebJob fails, it is automatically restarted.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Retry and error actions are configurable.</source>
            <target state="new">Retry and error actions are configurable.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>When configuring a WebJob:</source>
            <target state="new">When configuring a WebJob:</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>If you want the job to respond to an event driven trigger, it should be configured as <bpt id="2">&lt;strong&gt;</bpt>Run continuously<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">If you want the job to respond to an event driven trigger, it should be configured as <bpt id="2">&lt;strong&gt;</bpt>Run continuously<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The script or program is stored in the folder named site/wwwroot/app_data/jobs/continuous.</source>
            <target state="new">The script or program is stored in the folder named site/wwwroot/app_data/jobs/continuous.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>If you want the job to respond to a schedule driven trigger, it should be configured as <bpt id="2">&lt;strong&gt;</bpt>Run on a schedule<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">If you want the job to respond to a schedule driven trigger, it should be configured as <bpt id="2">&lt;strong&gt;</bpt>Run on a schedule<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>The script or program is stored in the folder named site/wwwroot/app_data/jobs/triggered.</source>
            <target state="new">The script or program is stored in the folder named site/wwwroot/app_data/jobs/triggered.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>If you choose the <bpt id="2">&lt;strong&gt;</bpt>Run on demand<ept id="2">&lt;/strong&gt;</ept> option when you configure a job, it will execute the same code as the <bpt id="4">&lt;strong&gt;</bpt>Run on a schedule<ept id="4">&lt;/strong&gt;</ept> option when you start it.</source>
            <target state="new">If you choose the <bpt id="2">&lt;strong&gt;</bpt>Run on demand<ept id="2">&lt;/strong&gt;</ept> option when you configure a job, it will execute the same code as the <bpt id="4">&lt;strong&gt;</bpt>Run on a schedule<ept id="4">&lt;/strong&gt;</ept> option when you start it.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Azure WebJobs run within the sandbox of the website, which means they can access environment variables, and share information such as connection strings with the website.</source>
            <target state="new">Azure WebJobs run within the sandbox of the website, which means they can access environment variables, and share information such as connection strings with the website.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The job has access to the unique identifier of the machine running the job.</source>
            <target state="new">The job has access to the unique identifier of the machine running the job.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>The connection string named <bpt id="2">&lt;strong&gt;</bpt>AzureJobsStorage<ept id="2">&lt;/strong&gt;</ept> provides access to Azure storage queues, blobs, and tables for application data, and Service Bus for messaging and communication.</source>
            <target state="new">The connection string named <bpt id="2">&lt;strong&gt;</bpt>AzureJobsStorage<ept id="2">&lt;/strong&gt;</ept> provides access to Azure storage queues, blobs, and tables for application data, and Service Bus for messaging and communication.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>The connection string named <bpt id="2">&lt;strong&gt;</bpt>AzureJobsDashboard<ept id="2">&lt;/strong&gt;</ept> provides access to the job action log files.</source>
            <target state="new">The connection string named <bpt id="2">&lt;strong&gt;</bpt>AzureJobsDashboard<ept id="2">&lt;/strong&gt;</ept> provides access to the job action log files.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Azure WebJobs have the following characteristics:</source>
            <target state="new">Azure WebJobs have the following characteristics:</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Security<ept id="1">&lt;/strong&gt;</ept>: WebJobs are protected by the deployment credentials of the website.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Security<ept id="1">&lt;/strong&gt;</ept>: WebJobs are protected by the deployment credentials of the website.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Supported file types<ept id="1">&lt;/strong&gt;</ept>: WebJobs can be defined using command scripts (.cmd), batch files (.bat), PowerShell scripts (.ps1), bash shell scripts (.sh), PHP scripts (.php), Python scripts (.py), JavaScript code (.js), and executable programs (.exe, .jar, and more).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Supported file types<ept id="1">&lt;/strong&gt;</ept>: WebJobs can be defined using command scripts (.cmd), batch files (.bat), PowerShell scripts (.ps1), bash shell scripts (.sh), PHP scripts (.php), Python scripts (.py), JavaScript code (.js), and executable programs (.exe, .jar, and more).</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Deployment<ept id="1">&lt;/strong&gt;</ept>: Scripts and executables can be deployed using the Azure portal, created and deployed by using the <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>WebJobsVs<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> add-in for Visual Studio or the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio 2013 Update 4<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept>, by using the <bpt id="7CapsExtId1">&lt;link&gt;</bpt><bpt id="7CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs SDK<ept id="7CapsExtId2">&lt;/linkText&gt;</ept><bpt id="7CapsExtId3">&lt;title&gt;</bpt><ept id="7CapsExtId3">&lt;/title&gt;</ept><ept id="7CapsExtId1">&lt;/link&gt;</ept>, or by copying them directly to the following locations:</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Deployment<ept id="1">&lt;/strong&gt;</ept>: Scripts and executables can be deployed using the Azure portal, created and deployed by using the <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>WebJobsVs<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> add-in for Visual Studio or the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>Visual Studio 2013 Update 4<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept>, by using the <bpt id="7CapsExtId1">&lt;link&gt;</bpt><bpt id="7CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs SDK<ept id="7CapsExtId2">&lt;/linkText&gt;</ept><bpt id="7CapsExtId3">&lt;title&gt;</bpt><ept id="7CapsExtId3">&lt;/title&gt;</ept><ept id="7CapsExtId1">&lt;/link&gt;</ept>, or by copying them directly to the following locations:</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>for triggered execution: site/wwwroot/app_data/jobs/triggered/{job name}</source>
            <target state="new">for triggered execution: site/wwwroot/app_data/jobs/triggered/{job name}</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>for continuous execution: site/wwwroot/app_data/jobs/continuous/{job name}</source>
            <target state="new">for continuous execution: site/wwwroot/app_data/jobs/continuous/{job name}</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Logging<ept id="1">&lt;/strong&gt;</ept>: Console.Out is treated (marked) as INFO and Console.Error as ERROR.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Logging<ept id="1">&lt;/strong&gt;</ept>: Console.Out is treated (marked) as INFO and Console.Error as ERROR.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Monitoring and diagnostics information can be accessed using the Azure portal, and log files can be downloaded directly from the site.</source>
            <target state="new">Monitoring and diagnostics information can be accessed using the Azure portal, and log files can be downloaded directly from the site.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>They are saved in the following locations:</source>
            <target state="new">They are saved in the following locations:</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>for triggered execution: Vfs/data/jobs/continuous/jobName</source>
            <target state="new">for triggered execution: Vfs/data/jobs/continuous/jobName</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>for continuous execution: Vfs/data/jobs/triggered/jobName</source>
            <target state="new">for continuous execution: Vfs/data/jobs/triggered/jobName</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Configuration<ept id="1">&lt;/strong&gt;</ept>: WebJobs can be configured using the portal, the REST API, and PowerShell.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Configuration<ept id="1">&lt;/strong&gt;</ept>: WebJobs can be configured using the portal, the REST API, and PowerShell.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>A configuration file named settings.job in the same root directory as the job script can be used to provide configuration information for a job.</source>
            <target state="new">A configuration file named settings.job in the same root directory as the job script can be used to provide configuration information for a job.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>{ "stopping_wait_time": 60 }</source>
            <target state="new">{ "stopping_wait_time": 60 }</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>{ "is_singleton": true }</source>
            <target state="new">{ "is_singleton": true }</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Considerations</source>
            <target state="new">Considerations</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>By default, WebJobs scale with the website.</source>
            <target state="new">By default, WebJobs scale with the website.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>However, jobs can be configured to run on single instance by setting the <bpt id="2">&lt;strong&gt;</bpt>is_singleton<ept id="2">&lt;/strong&gt;</ept> configuration property to true.</source>
            <target state="new">However, jobs can be configured to run on single instance by setting the <bpt id="2">&lt;strong&gt;</bpt>is_singleton<ept id="2">&lt;/strong&gt;</ept> configuration property to true.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Single instance WebJobs are useful for tasks that you do not want to scale or run as simultaneous multiple instances, such as re-indexing, data analysis, and similar tasks.</source>
            <target state="new">Single instance WebJobs are useful for tasks that you do not want to scale or run as simultaneous multiple instances, such as re-indexing, data analysis, and similar tasks.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>To minimize the impact of jobs on the performance of the website, consider creating an empty Azure Web Sites instance in a new App Service Plan to host WebJobs that may be long running or resource intensive.</source>
            <target state="new">To minimize the impact of jobs on the performance of the website, consider creating an empty Azure Web Sites instance in a new App Service Plan to host WebJobs that may be long running or resource intensive.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>More information</source>
            <target state="new">More information</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> lists the many useful resources, downloads, and samples for WebJobs.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> lists the many useful resources, downloads, and samples for WebJobs.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Azure Cloud Services web and worker roles</source>
            <target state="new">Azure Cloud Services web and worker roles</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Background tasks can be executed within a web role or in a separate worker role.</source>
            <target state="new">Background tasks can be executed within a web role or in a separate worker role.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>The decision whether to use a worker role should be based on consideration of scalability and elasticity requirements, task lifetime, release cadence, security, fault tolerance, contention, complexity, and the logical architecture.</source>
            <target state="new">The decision whether to use a worker role should be based on consideration of scalability and elasticity requirements, task lifetime, release cadence, security, fault tolerance, contention, complexity, and the logical architecture.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>There are several ways to implement background tasks within a Cloud Services role:</source>
            <target state="new">There are several ways to implement background tasks within a Cloud Services role:</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Create an implementation of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class in the role and use its methods to execute background tasks.</source>
            <target state="new">Create an implementation of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class in the role and use its methods to execute background tasks.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>The tasks run in the context of WaIISHost.exe, and can use the <bpt id="2">&lt;strong&gt;</bpt>GetSetting<ept id="2">&lt;/strong&gt;</ept> method of the <bpt id="4">&lt;strong&gt;</bpt>CloudConfigurationManager<ept id="4">&lt;/strong&gt;</ept> class to load configuration settings.</source>
            <target state="new">The tasks run in the context of WaIISHost.exe, and can use the <bpt id="2">&lt;strong&gt;</bpt>GetSetting<ept id="2">&lt;/strong&gt;</ept> method of the <bpt id="4">&lt;strong&gt;</bpt>CloudConfigurationManager<ept id="4">&lt;/strong&gt;</ept> class to load configuration settings.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lifecycle (Cloud Services)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lifecycle (Cloud Services)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Use startup tasks to execute background tasks when the application starts.</source>
            <target state="new">Use startup tasks to execute background tasks when the application starts.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>To force the tasks to continue to run in the background set the <bpt id="2">&lt;strong&gt;</bpt>taskType<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>background<ept id="4">&lt;/strong&gt;</ept> (if you do not do this, the application startup process will halt and wait for the task to finish).</source>
            <target state="new">To force the tasks to continue to run in the background set the <bpt id="2">&lt;strong&gt;</bpt>taskType<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>background<ept id="4">&lt;/strong&gt;</ept> (if you do not do this, the application startup process will halt and wait for the task to finish).</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>Use the WebJobs SDK to implement background tasks as WebJobs that are initiated as a startup task.</source>
            <target state="new">Use the WebJobs SDK to implement background tasks as WebJobs that are initiated as a startup task.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Use a startup task to install a Windows service that executes one or more background tasks.</source>
            <target state="new">Use a startup task to install a Windows service that executes one or more background tasks.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>You must set the <bpt id="2">&lt;strong&gt;</bpt>taskType<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>background<ept id="4">&lt;/strong&gt;</ept> so that the service executes in the background.</source>
            <target state="new">You must set the <bpt id="2">&lt;strong&gt;</bpt>taskType<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>background<ept id="4">&lt;/strong&gt;</ept> so that the service executes in the background.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Running background tasks in the web role</source>
            <target state="new">Running background tasks in the web role</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>The main advantage of running background tasks in the web role is the saving in hosting costs because there is no requirement to deploy additional roles.</source>
            <target state="new">The main advantage of running background tasks in the web role is the saving in hosting costs because there is no requirement to deploy additional roles.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Running background tasks in a worker role</source>
            <target state="new">Running background tasks in a worker role</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Running background tasks in a worker role has several advantages:</source>
            <target state="new">Running background tasks in a worker role has several advantages:</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>It allows you to manage scaling separately for each type of role.</source>
            <target state="new">It allows you to manage scaling separately for each type of role.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>For example, you may need more instances of a web role to support the current load, but fewer instances of the worker role that executes background tasks.</source>
            <target state="new">For example, you may need more instances of a web role to support the current load, but fewer instances of the worker role that executes background tasks.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>Scaling background task compute instances separately from the UI roles can reduce hosting cost, while maintaining acceptable performance.</source>
            <target state="new">Scaling background task compute instances separately from the UI roles can reduce hosting cost, while maintaining acceptable performance.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>It offloads the processing overhead for background tasks from the web role.</source>
            <target state="new">It offloads the processing overhead for background tasks from the web role.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>The web role that provides the UI can remain responsive, and it may mean fewer instances are required to support a given volume of requests from users.</source>
            <target state="new">The web role that provides the UI can remain responsive, and it may mean fewer instances are required to support a given volume of requests from users.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>It allows you to implement separation of concerns.</source>
            <target state="new">It allows you to implement separation of concerns.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Each role type can implement a specific set of clearly defined and related tasks.</source>
            <target state="new">Each role type can implement a specific set of clearly defined and related tasks.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>This makes designing and maintaining the code easier because there is less interdependence of code and functionality between each role.</source>
            <target state="new">This makes designing and maintaining the code easier because there is less interdependence of code and functionality between each role.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>It can help to isolate sensitive processes and data.</source>
            <target state="new">It can help to isolate sensitive processes and data.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>For example, web roles that implement the UI do not need to have access to data that is managed and controlled by a worker role.</source>
            <target state="new">For example, web roles that implement the UI do not need to have access to data that is managed and controlled by a worker role.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>This can be useful in strengthening security, especially when using a pattern such as the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">This can be useful in strengthening security, especially when using a pattern such as the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>Considerations</source>
            <target state="new">Considerations</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>Consider the following points when choosing how and where to deploy background tasks when using Cloud Services web and worker roles:</source>
            <target state="new">Consider the following points when choosing how and where to deploy background tasks when using Cloud Services web and worker roles:</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>Hosting background tasks in an existing web role can save the cost of running a separate worker role just for these tasks, but it is likely to affect the performance and availability of the application if there is contention for processing and other resources.</source>
            <target state="new">Hosting background tasks in an existing web role can save the cost of running a separate worker role just for these tasks, but it is likely to affect the performance and availability of the application if there is contention for processing and other resources.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>Using a separate worker role protects the web role from the impact of long running or resource intensive background tasks.</source>
            <target state="new">Using a separate worker role protects the web role from the impact of long running or resource intensive background tasks.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>If you host background tasks using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, you can easily move this to another role.</source>
            <target state="new">If you host background tasks using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, you can easily move this to another role.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>For example, if you create the class in a web role and later decide you need to run the tasks in a worker role, you can move the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class implementation into the worker role.</source>
            <target state="new">For example, if you create the class in a web role and later decide you need to run the tasks in a worker role, you can move the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class implementation into the worker role.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>Startup tasks are designed to execute a program or a script.</source>
            <target state="new">Startup tasks are designed to execute a program or a script.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>Deploying a background job as an executable program may be more difficult, especially if it also requires deployment of dependent assemblies.</source>
            <target state="new">Deploying a background job as an executable program may be more difficult, especially if it also requires deployment of dependent assemblies.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>It may be easier to deploy and use a script to define a background job when using startup tasks.</source>
            <target state="new">It may be easier to deploy and use a script to define a background job when using startup tasks.</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>Exceptions that cause a background task to fail have a different impact depending on the way that they are hosted:</source>
            <target state="new">Exceptions that cause a background task to fail have a different impact depending on the way that they are hosted:</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>If you use the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class approach, a failed task will cause the role to restart so that the task automatically restarts.</source>
            <target state="new">If you use the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class approach, a failed task will cause the role to restart so that the task automatically restarts.</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>This can affect availability of the application.</source>
            <target state="new">This can affect availability of the application.</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>To prevent this, ensure that you include robust exception handling within the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class and all the background tasks.</source>
            <target state="new">To prevent this, ensure that you include robust exception handling within the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class and all the background tasks.</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Use code to restart tasks that fail where this is appropriate, and throw the exception to restart the role only if you cannot gracefully recover from the failure within your code.</source>
            <target state="new">Use code to restart tasks that fail where this is appropriate, and throw the exception to restart the role only if you cannot gracefully recover from the failure within your code.</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>If you use startup tasks, you are responsible for managing the task execution and checking if it fails.</source>
            <target state="new">If you use startup tasks, you are responsible for managing the task execution and checking if it fails.</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>Managing and monitoring startup tasks is more difficult than using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class approach.</source>
            <target state="new">Managing and monitoring startup tasks is more difficult than using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class approach.</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>However, the Azure WebJobs SDK include a dashboard to make it easier to manage WebJobs that you initiate through startup tasks.</source>
            <target state="new">However, the Azure WebJobs SDK include a dashboard to make it easier to manage WebJobs that you initiate through startup tasks.</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>More information</source>
            <target state="new">More information</target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>Azure Virtual Machines</source>
            <target state="new">Azure Virtual Machines</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>Background tasks may be implemented in a way that prevents them from being deployed to Azure Web Sites or Cloud Services, or this may not convenient.</source>
            <target state="new">Background tasks may be implemented in a way that prevents them from being deployed to Azure Web Sites or Cloud Services, or this may not convenient.</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>Typical examples are Windows services, and third party utilities and executable programs.</source>
            <target state="new">Typical examples are Windows services, and third party utilities and executable programs.</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>It may also include programs written for an execution environment different to that hosting the application; for example, it may be a Unix or Linux program that you want to execute from a Windows or .NET application.</source>
            <target state="new">It may also include programs written for an execution environment different to that hosting the application; for example, it may be a Unix or Linux program that you want to execute from a Windows or .NET application.</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>You can choose from a range of operating systems for an Azure virtual machine, and run your service or executable on that virtual machine.</source>
            <target state="new">You can choose from a range of operating systems for an Azure virtual machine, and run your service or executable on that virtual machine.</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>To help you choose when to use Virtual Machines, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Websites, Cloud Services and Virtual Machines comparison<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To help you choose when to use Virtual Machines, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Websites, Cloud Services and Virtual Machines comparison<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>For information about the options for <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Virtual Machines, see Virtual Machine and Cloud Service Sizes for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about the options for <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Virtual Machines, see Virtual Machine and Cloud Service Sizes for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>For more information about the operating systems and pre-built images available for Virtual Machines, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Virtual Machines Gallery<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about the operating systems and pre-built images available for Virtual Machines, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Virtual Machines Gallery<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>To initiate the background task in a separate virtual machine, you have a range of options:</source>
            <target state="new">To initiate the background task in a separate virtual machine, you have a range of options:</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source>You can execute the task on demand directly from your application by sending a request to an endpoint that the task exposes, passing in any data that the task requires.</source>
            <target state="new">You can execute the task on demand directly from your application by sending a request to an endpoint that the task exposes, passing in any data that the task requires.</target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>This endpoint invokes the task.</source>
            <target state="new">This endpoint invokes the task.</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source>You can configure the task to run on a schedule using a scheduler or timer available in your chosen operating system.</source>
            <target state="new">You can configure the task to run on a schedule using a scheduler or timer available in your chosen operating system.</target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>For example, on Windows you can use Windows Task Scheduler to execute scripts and tasks or, if you have SQL Server installed on the virtual machine, you can use the SQL Server Agent to execute scripts and tasks.</source>
            <target state="new">For example, on Windows you can use Windows Task Scheduler to execute scripts and tasks or, if you have SQL Server installed on the virtual machine, you can use the SQL Server Agent to execute scripts and tasks.</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>You can use Azure Scheduler to initiate the task by adding a message to a queue that the task listens on, or by sending a request to an API that the task exposes.</source>
            <target state="new">You can use Azure Scheduler to initiate the task by adding a message to a queue that the task listens on, or by sending a request to an API that the task exposes.</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>See the earlier section <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Triggers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information about how you can initiate background tasks.</source>
            <target state="new">See the earlier section <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Triggers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information about how you can initiate background tasks.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source>Considerations</source>
            <target state="new">Considerations</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>Consider the following points when deciding whether to deploy background tasks in an Azure virtual machine:</source>
            <target state="new">Consider the following points when deciding whether to deploy background tasks in an Azure virtual machine:</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>Hosting background tasks in a separate Azure virtual machine provides flexibility and allows precise control over initiation, execution, scheduling, and resource allocation.</source>
            <target state="new">Hosting background tasks in a separate Azure virtual machine provides flexibility and allows precise control over initiation, execution, scheduling, and resource allocation.</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source>However, it will increase runtime cost if a virtual machine must be deployed just to run background tasks.</source>
            <target state="new">However, it will increase runtime cost if a virtual machine must be deployed just to run background tasks.</target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>There is no facility to monitor the tasks in the Azure portal, and no automated restart capability for failed tasks, although you can monitor the basic status of the virtual machine and manage it using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management Cmdlets<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">There is no facility to monitor the tasks in the Azure portal, and no automated restart capability for failed tasks, although you can monitor the basic status of the virtual machine and manage it using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management Cmdlets<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>However, there are no facilities to control processes and threads in compute nodes.</source>
            <target state="new">However, there are no facilities to control processes and threads in compute nodes.</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>Typically, using a virtual machine will require additional effort to implement a mechanism that collects data from instrumentation in the task, and from the operating system in the virtual machine.</source>
            <target state="new">Typically, using a virtual machine will require additional effort to implement a mechanism that collects data from instrumentation in the task, and from the operating system in the virtual machine.</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source>One solution that may be appropriate is to use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>System Center Management Pack for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">One solution that may be appropriate is to use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>System Center Management Pack for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>You might consider creating monitoring probes that are exposed through HTTP endpoints.</source>
            <target state="new">You might consider creating monitoring probes that are exposed through HTTP endpoints.</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>The code for these probes could perform health checks, collect operational information and statistics, or collate error information, and return it to a management application.</source>
            <target state="new">The code for these probes could perform health checks, collect operational information and statistics, or collate error information, and return it to a management application.</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Health Endpoint Monitoring Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Health Endpoint Monitoring Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source>More information</source>
            <target state="new">More information</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Virtual Machines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> on the Azure website</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Virtual Machines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> on the Azure website</target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Virtual Machines FAQ<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Virtual Machines FAQ<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source>Design considerations</source>
            <target state="new">Design considerations</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source>There are several fundamental factors to consider when designing background tasks.</source>
            <target state="new">There are several fundamental factors to consider when designing background tasks.</target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source>The following sections discuss partitioning, conflicts, and coordination.</source>
            <target state="new">The following sections discuss partitioning, conflicts, and coordination.</target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source>Partitioning</source>
            <target state="new">Partitioning</target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source>If you decide to include background tasks within an existing compute instance (such as a website, web role, existing worker role, or virtual machine), you must consider how this will affect the quality attributes of the compute instance and the background task itself.</source>
            <target state="new">If you decide to include background tasks within an existing compute instance (such as a website, web role, existing worker role, or virtual machine), you must consider how this will affect the quality attributes of the compute instance and the background task itself.</target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source>These factors will help you to decide whether to co-locate the tasks with the existing compute instance, or separate them out into a separate compute instance:</source>
            <target state="new">These factors will help you to decide whether to co-locate the tasks with the existing compute instance, or separate them out into a separate compute instance:</target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Availability<ept id="1">&lt;/strong&gt;</ept>: Background tasks may not need to have the same level of availability as other parts of the application, in particular the UI and other parts directly involved in user interaction.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Availability<ept id="1">&lt;/strong&gt;</ept>: Background tasks may not need to have the same level of availability as other parts of the application, in particular the UI and other parts directly involved in user interaction.</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source>Background tasks may be more tolerant of latency, retried connection failures, and other factors that affect availability because the operations can be queued.</source>
            <target state="new">Background tasks may be more tolerant of latency, retried connection failures, and other factors that affect availability because the operations can be queued.</target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source>However, there must be sufficient capacity to prevent backing up of requests that could block queues and affect the application as a whole.</source>
            <target state="new">However, there must be sufficient capacity to prevent backing up of requests that could block queues and affect the application as a whole.</target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Scalability<ept id="1">&lt;/strong&gt;</ept>: Background tasks are likely to have a different scalability requirement to the UI and the interactive parts of the application.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Scalability<ept id="1">&lt;/strong&gt;</ept>: Background tasks are likely to have a different scalability requirement to the UI and the interactive parts of the application.</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source>Scaling the UI may be necessary to meet peaks in demand, while outstanding background tasks could be completed during less busy times by a fewer number of compute instances.</source>
            <target state="new">Scaling the UI may be necessary to meet peaks in demand, while outstanding background tasks could be completed during less busy times by a fewer number of compute instances.</target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Resiliency<ept id="1">&lt;/strong&gt;</ept>: Failure of a compute instance that just hosts background tasks may not fatally affect the application as a whole if the requests for these tasks can be queued or postponed until the task is available again.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Resiliency<ept id="1">&lt;/strong&gt;</ept>: Failure of a compute instance that just hosts background tasks may not fatally affect the application as a whole if the requests for these tasks can be queued or postponed until the task is available again.</target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source>If the compute instance and/or tasks can be restarted within an appropriate interval, users of the application may not be affected.</source>
            <target state="new">If the compute instance and/or tasks can be restarted within an appropriate interval, users of the application may not be affected.</target>
          </trans-unit>
          <trans-unit id="315" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Security<ept id="1">&lt;/strong&gt;</ept>: Background tasks may have different security requirements or restrictions than the UI or other parts of the application.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Security<ept id="1">&lt;/strong&gt;</ept>: Background tasks may have different security requirements or restrictions than the UI or other parts of the application.</target>
          </trans-unit>
          <trans-unit id="316" xml:space="preserve">
            <source>By using a separate compute instance, you can specify a different security environment for the tasks.</source>
            <target state="new">By using a separate compute instance, you can specify a different security environment for the tasks.</target>
          </trans-unit>
          <trans-unit id="317" xml:space="preserve">
            <source>You can also use patterns such as Gatekeeper to isolate the background compute instances from the UI in order to maximize security and separation.</source>
            <target state="new">You can also use patterns such as Gatekeeper to isolate the background compute instances from the UI in order to maximize security and separation.</target>
          </trans-unit>
          <trans-unit id="318" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Performance<ept id="1">&lt;/strong&gt;</ept>: You can choose the type of compute instance for background tasks to specifically match the performance requirements of the tasks.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Performance<ept id="1">&lt;/strong&gt;</ept>: You can choose the type of compute instance for background tasks to specifically match the performance requirements of the tasks.</target>
          </trans-unit>
          <trans-unit id="319" xml:space="preserve">
            <source>This may mean using a less expensive compute option if the tasks do not require the same processing capabilities as the UI, or a larger instance if they require additional capacity and resources.</source>
            <target state="new">This may mean using a less expensive compute option if the tasks do not require the same processing capabilities as the UI, or a larger instance if they require additional capacity and resources.</target>
          </trans-unit>
          <trans-unit id="320" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Manageability<ept id="1">&lt;/strong&gt;</ept>: Background tasks may have a different development and deployment rhythm from the main application code or the UI.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Manageability<ept id="1">&lt;/strong&gt;</ept>: Background tasks may have a different development and deployment rhythm from the main application code or the UI.</target>
          </trans-unit>
          <trans-unit id="321" xml:space="preserve">
            <source>Deploying them to a separate compute instance can simplify updates and versioning.</source>
            <target state="new">Deploying them to a separate compute instance can simplify updates and versioning.</target>
          </trans-unit>
          <trans-unit id="322" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Cost<ept id="1">&lt;/strong&gt;</ept>: Adding compute instances to execute background tasks increases hosting costs.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Cost<ept id="1">&lt;/strong&gt;</ept>: Adding compute instances to execute background tasks increases hosting costs.</target>
          </trans-unit>
          <trans-unit id="323" xml:space="preserve">
            <source>You should carefully consider the trade-off between additional capacity and these extra costs.</source>
            <target state="new">You should carefully consider the trade-off between additional capacity and these extra costs.</target>
          </trans-unit>
          <trans-unit id="324" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Leader Election pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Competing Consumers pattern<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Leader Election pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Competing Consumers pattern<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="325" xml:space="preserve">
            <source>Conflicts</source>
            <target state="new">Conflicts</target>
          </trans-unit>
          <trans-unit id="326" xml:space="preserve">
            <source>If you have multiple instances of a background job, it is possible that they will compete for access to resources and services such as databases and storage.</source>
            <target state="new">If you have multiple instances of a background job, it is possible that they will compete for access to resources and services such as databases and storage.</target>
          </trans-unit>
          <trans-unit id="327" xml:space="preserve">
            <source>This concurrent access can result in resource contention, which may cause conflicts in availability of the services and in the integrity of data in storage.</source>
            <target state="new">This concurrent access can result in resource contention, which may cause conflicts in availability of the services and in the integrity of data in storage.</target>
          </trans-unit>
          <trans-unit id="328" xml:space="preserve">
            <source>Resource contention can be resolved by using a pessimistic locking approach to prevent competing instances of a task from concurrently accessing a service, or corrupting data.</source>
            <target state="new">Resource contention can be resolved by using a pessimistic locking approach to prevent competing instances of a task from concurrently accessing a service, or corrupting data.</target>
          </trans-unit>
          <trans-unit id="329" xml:space="preserve">
            <source>Another approach to resolve conflicts is to define background tasks as a singleton, so that there is only ever one instance running.</source>
            <target state="new">Another approach to resolve conflicts is to define background tasks as a singleton, so that there is only ever one instance running.</target>
          </trans-unit>
          <trans-unit id="330" xml:space="preserve">
            <source>However, this eliminates the reliability and performance benefits that a multiple-instance configuration could provide, especially if the UI can supply sufficient work to keep more than one background task busy.</source>
            <target state="new">However, this eliminates the reliability and performance benefits that a multiple-instance configuration could provide, especially if the UI can supply sufficient work to keep more than one background task busy.</target>
          </trans-unit>
          <trans-unit id="331" xml:space="preserve">
            <source>It is vital to ensure that the background task can automatically restart, and that it has sufficient capacity to cope with peaks in demand.</source>
            <target state="new">It is vital to ensure that the background task can automatically restart, and that it has sufficient capacity to cope with peaks in demand.</target>
          </trans-unit>
          <trans-unit id="332" xml:space="preserve">
            <source>This may be achieved by allocating a compute instance with sufficient resources, by implementing a queueing mechanism that can store requests for later execution when demand decreases, or by a combination of these techniques.</source>
            <target state="new">This may be achieved by allocating a compute instance with sufficient resources, by implementing a queueing mechanism that can store requests for later execution when demand decreases, or by a combination of these techniques.</target>
          </trans-unit>
          <trans-unit id="333" xml:space="preserve">
            <source>Coordination</source>
            <target state="new">Coordination</target>
          </trans-unit>
          <trans-unit id="334" xml:space="preserve">
            <source>The background tasks may be complex, and require multiple individual tasks to execute to produce a result or to fulfil all the requirements.</source>
            <target state="new">The background tasks may be complex, and require multiple individual tasks to execute to produce a result or to fulfil all the requirements.</target>
          </trans-unit>
          <trans-unit id="335" xml:space="preserve">
            <source>It is common in these scenarios to divide the task into smaller discreet steps or subtasks that can be executed by multiple consumers.</source>
            <target state="new">It is common in these scenarios to divide the task into smaller discreet steps or subtasks that can be executed by multiple consumers.</target>
          </trans-unit>
          <trans-unit id="336" xml:space="preserve">
            <source>Multi-step jobs can be more efficient and more flexible because individual steps may be reusable in multiple jobs.</source>
            <target state="new">Multi-step jobs can be more efficient and more flexible because individual steps may be reusable in multiple jobs.</target>
          </trans-unit>
          <trans-unit id="337" xml:space="preserve">
            <source>It is also easy to add, remove, or modify the order of the steps.</source>
            <target state="new">It is also easy to add, remove, or modify the order of the steps.</target>
          </trans-unit>
          <trans-unit id="338" xml:space="preserve">
            <source>Coordinating multiple tasks and steps can be challenging, but there are three common patterns you can use to guide your implementation of a solution:</source>
            <target state="new">Coordinating multiple tasks and steps can be challenging, but there are three common patterns you can use to guide your implementation of a solution:</target>
          </trans-unit>
          <trans-unit id="339" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Decomposing a task into multiple reusable steps<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Decomposing a task into multiple reusable steps<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="340" xml:space="preserve">
            <source>An application may be required to perform a variety of tasks of varying complexity on the information that it processes.</source>
            <target state="new">An application may be required to perform a variety of tasks of varying complexity on the information that it processes.</target>
          </trans-unit>
          <trans-unit id="341" xml:space="preserve">
            <source>A straightforward but inflexible approach to implementing this application could be to perform this processing as monolithic module.</source>
            <target state="new">A straightforward but inflexible approach to implementing this application could be to perform this processing as monolithic module.</target>
          </trans-unit>
          <trans-unit id="342" xml:space="preserve">
            <source>However, this approach is likely to reduce the opportunities for refactoring the code, optimizing it, or reusing it if parts of the same processing are required elsewhere within the application.</source>
            <target state="new">However, this approach is likely to reduce the opportunities for refactoring the code, optimizing it, or reusing it if parts of the same processing are required elsewhere within the application.</target>
          </trans-unit>
          <trans-unit id="343" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Pipes and Filters Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Pipes and Filters Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="344" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Managing execution of the steps for a task<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Managing execution of the steps for a task<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="345" xml:space="preserve">
            <source>An application may perform tasks that comprise a number of steps, some of which may invoke remote services or access remote resources.</source>
            <target state="new">An application may perform tasks that comprise a number of steps, some of which may invoke remote services or access remote resources.</target>
          </trans-unit>
          <trans-unit id="346" xml:space="preserve">
            <source>The individual steps may be independent of each other, but they are orchestrated by the application logic that implements the task.</source>
            <target state="new">The individual steps may be independent of each other, but they are orchestrated by the application logic that implements the task.</target>
          </trans-unit>
          <trans-unit id="347" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="348" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Managing recovery for steps of a task that fail<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Managing recovery for steps of a task that fail<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="349" xml:space="preserve">
            <source>An application may need to undo the work performed by a series of steps, which together define an eventually consistent operation, if one or more of the steps fail.</source>
            <target state="new">An application may need to undo the work performed by a series of steps, which together define an eventually consistent operation, if one or more of the steps fail.</target>
          </trans-unit>
          <trans-unit id="350" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compensating Transaction Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compensating Transaction Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="351" xml:space="preserve">
            <source>Lifecycle (Cloud Services)</source>
            <target state="new">Lifecycle (Cloud Services)</target>
          </trans-unit>
          <trans-unit id="352" xml:space="preserve">
            <source>If you decide to implement background jobs for Cloud Services applications that use web and worker roles by using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, it is important to understand the lifecycle of this class in order to use it correctly.</source>
            <target state="new">If you decide to implement background jobs for Cloud Services applications that use web and worker roles by using the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, it is important to understand the lifecycle of this class in order to use it correctly.</target>
          </trans-unit>
          <trans-unit id="353" xml:space="preserve">
            <source>Web and worker roles go through a set of distinct phases as they start, run, and stop.</source>
            <target state="new">Web and worker roles go through a set of distinct phases as they start, run, and stop.</target>
          </trans-unit>
          <trans-unit id="354" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class exposes a series of events that indicate when these stages are occurring.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class exposes a series of events that indicate when these stages are occurring.</target>
          </trans-unit>
          <trans-unit id="355" xml:space="preserve">
            <source>You use these to initialize, run, and stop your custom background tasks.</source>
            <target state="new">You use these to initialize, run, and stop your custom background tasks.</target>
          </trans-unit>
          <trans-unit id="356" xml:space="preserve">
            <source>The complete cycle is:</source>
            <target state="new">The complete cycle is:</target>
          </trans-unit>
          <trans-unit id="357" xml:space="preserve">
            <source>Azure loads the role assembly and searches it for a class that derives from <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Azure loads the role assembly and searches it for a class that derives from <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="358" xml:space="preserve">
            <source>If it finds this class, it calls <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.OnStart()<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">If it finds this class, it calls <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.OnStart()<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="359" xml:space="preserve">
            <source>You override this method to initialize your background tasks.</source>
            <target state="new">You override this method to initialize your background tasks.</target>
          </trans-unit>
          <trans-unit id="360" xml:space="preserve">
            <source>After the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> method completes, Azure calls <bpt id="4">&lt;strong&gt;</bpt>Application_Start()<ept id="4">&lt;/strong&gt;</ept> in the application’s Global file if this is present (for example, Global.asax in a web role running ASP.NET).</source>
            <target state="new">After the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> method completes, Azure calls <bpt id="4">&lt;strong&gt;</bpt>Application_Start()<ept id="4">&lt;/strong&gt;</ept> in the application’s Global file if this is present (for example, Global.asax in a web role running ASP.NET).</target>
          </trans-unit>
          <trans-unit id="361" xml:space="preserve">
            <source>Azure calls <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.Run()<ept id="2">&lt;/strong&gt;</ept> on a new foreground thread that executes in parallel with <bpt id="4">&lt;strong&gt;</bpt>OnStart()<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Azure calls <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.Run()<ept id="2">&lt;/strong&gt;</ept> on a new foreground thread that executes in parallel with <bpt id="4">&lt;strong&gt;</bpt>OnStart()<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="362" xml:space="preserve">
            <source>You override this method to start your background tasks.</source>
            <target state="new">You override this method to start your background tasks.</target>
          </trans-unit>
          <trans-unit id="363" xml:space="preserve">
            <source>When the Run method ends, Azure first calls <bpt id="2">&lt;strong&gt;</bpt>Application_End()<ept id="2">&lt;/strong&gt;</ept> in the application’s Global file if this is present, and then calls <bpt id="4">&lt;strong&gt;</bpt>RoleEntryPoint.OnStop()<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">When the Run method ends, Azure first calls <bpt id="2">&lt;strong&gt;</bpt>Application_End()<ept id="2">&lt;/strong&gt;</ept> in the application’s Global file if this is present, and then calls <bpt id="4">&lt;strong&gt;</bpt>RoleEntryPoint.OnStop()<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="364" xml:space="preserve">
            <source>You override the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method to stop your background tasks, clean up resources, dispose of objects, and close connections that the tasks may have used.</source>
            <target state="new">You override the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method to stop your background tasks, clean up resources, dispose of objects, and close connections that the tasks may have used.</target>
          </trans-unit>
          <trans-unit id="365" xml:space="preserve">
            <source>The Azure worker role host process is stopped.</source>
            <target state="new">The Azure worker role host process is stopped.</target>
          </trans-unit>
          <trans-unit id="366" xml:space="preserve">
            <source>At this point, the role will be recycled and will restart.</source>
            <target state="new">At this point, the role will be recycled and will restart.</target>
          </trans-unit>
          <trans-unit id="367" xml:space="preserve">
            <source>For more details and an example of using the methods of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more details and an example of using the methods of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="368" xml:space="preserve">
            <source>Considerations</source>
            <target state="new">Considerations</target>
          </trans-unit>
          <trans-unit id="369" xml:space="preserve">
            <source>Consider the following points when planning how you will run background tasks in a web or worker role:</source>
            <target state="new">Consider the following points when planning how you will run background tasks in a web or worker role:</target>
          </trans-unit>
          <trans-unit id="370" xml:space="preserve">
            <source>The default <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method implementation in the <bpt id="4">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="4">&lt;/strong&gt;</ept> class contains a call to <bpt id="6">&lt;strong&gt;</bpt>Thread.Sleep(Timeout.Infinite)<ept id="6">&lt;/strong&gt;</ept> that keeps the role alive indefinitely.</source>
            <target state="new">The default <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method implementation in the <bpt id="4">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="4">&lt;/strong&gt;</ept> class contains a call to <bpt id="6">&lt;strong&gt;</bpt>Thread.Sleep(Timeout.Infinite)<ept id="6">&lt;/strong&gt;</ept> that keeps the role alive indefinitely.</target>
          </trans-unit>
          <trans-unit id="371" xml:space="preserve">
            <source>If you override the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method (which is typically necessary to execute background tasks) you must not allow your code to exit from the method unless you want to recycle the role instance.</source>
            <target state="new">If you override the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method (which is typically necessary to execute background tasks) you must not allow your code to exit from the method unless you want to recycle the role instance.</target>
          </trans-unit>
          <trans-unit id="372" xml:space="preserve">
            <source>A typical implementation of the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method includes code to start each of the background tasks, and a loop construct that periodically checks the state of all the background tasks.</source>
            <target state="new">A typical implementation of the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method includes code to start each of the background tasks, and a loop construct that periodically checks the state of all the background tasks.</target>
          </trans-unit>
          <trans-unit id="373" xml:space="preserve">
            <source>It can restart any that fail, or monitor for cancellation tokens that indicate jobs have completed.</source>
            <target state="new">It can restart any that fail, or monitor for cancellation tokens that indicate jobs have completed.</target>
          </trans-unit>
          <trans-unit id="374" xml:space="preserve">
            <source>If a background task throws an unhandled exception, that task should be recycled while allowing any other background tasks in the role to continue running.</source>
            <target state="new">If a background task throws an unhandled exception, that task should be recycled while allowing any other background tasks in the role to continue running.</target>
          </trans-unit>
          <trans-unit id="375" xml:space="preserve">
            <source>However, if the exception is caused by corruption of objects outside the task, such as shared storage, the exception should be handled by your <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, all tasks should be cancelled, and the <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> method allowed to end.</source>
            <target state="new">However, if the exception is caused by corruption of objects outside the task, such as shared storage, the exception should be handled by your <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class, all tasks should be cancelled, and the <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> method allowed to end.</target>
          </trans-unit>
          <trans-unit id="376" xml:space="preserve">
            <source>Azure will then restart the role.</source>
            <target state="new">Azure will then restart the role.</target>
          </trans-unit>
          <trans-unit id="377" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method to pause or kill background tasks and clean up resources.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method to pause or kill background tasks and clean up resources.</target>
          </trans-unit>
          <trans-unit id="378" xml:space="preserve">
            <source>This may involve stopping long-running or multi-step tasks, and it is vital to consider how this can be done to avoid data inconsistencies.</source>
            <target state="new">This may involve stopping long-running or multi-step tasks, and it is vital to consider how this can be done to avoid data inconsistencies.</target>
          </trans-unit>
          <trans-unit id="379" xml:space="preserve">
            <source>If a role instance stops for any reason other than a user-initiated shutdown, the code running in the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method must complete within five minutes before it is forcibly terminated.</source>
            <target state="new">If a role instance stops for any reason other than a user-initiated shutdown, the code running in the <bpt id="2">&lt;strong&gt;</bpt>OnStop<ept id="2">&lt;/strong&gt;</ept> method must complete within five minutes before it is forcibly terminated.</target>
          </trans-unit>
          <trans-unit id="380" xml:space="preserve">
            <source>Ensure that your code can complete in that time, or can tolerate not running to completion.</source>
            <target state="new">Ensure that your code can complete in that time, or can tolerate not running to completion.</target>
          </trans-unit>
          <trans-unit id="381" xml:space="preserve">
            <source>The Azure load balancer starts directing traffic to the role instance when the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.OnStart<ept id="2">&lt;/strong&gt;</ept> method returns true.</source>
            <target state="new">The Azure load balancer starts directing traffic to the role instance when the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint.OnStart<ept id="2">&lt;/strong&gt;</ept> method returns true.</target>
          </trans-unit>
          <trans-unit id="382" xml:space="preserve">
            <source>Therefore, consider putting all your initialization code in the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> method so that role instances that do not successfully initialize will not receive any traffic.</source>
            <target state="new">Therefore, consider putting all your initialization code in the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> method so that role instances that do not successfully initialize will not receive any traffic.</target>
          </trans-unit>
          <trans-unit id="383" xml:space="preserve">
            <source>You can use startup tasks in addition to the methods of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class.</source>
            <target state="new">You can use startup tasks in addition to the methods of the <bpt id="2">&lt;strong&gt;</bpt>RoleEntryPoint<ept id="2">&lt;/strong&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="384" xml:space="preserve">
            <source>You should use startup tasks to initialize any settings you need to change in the Azure load balancer because these tasks will execute before the role receives any requests.</source>
            <target state="new">You should use startup tasks to initialize any settings you need to change in the Azure load balancer because these tasks will execute before the role receives any requests.</target>
          </trans-unit>
          <trans-unit id="385" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Run Startup Tasks in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="386" xml:space="preserve">
            <source>If there is an error in a startup task, it may force the role to continually restart.</source>
            <target state="new">If there is an error in a startup task, it may force the role to continually restart.</target>
          </trans-unit>
          <trans-unit id="387" xml:space="preserve">
            <source>This can prevent you from performing a VIP swap back to a previously staged version because the swap requires exclusive access to the role, and this cannot be obtained while the role is restarting.</source>
            <target state="new">This can prevent you from performing a VIP swap back to a previously staged version because the swap requires exclusive access to the role, and this cannot be obtained while the role is restarting.</target>
          </trans-unit>
          <trans-unit id="388" xml:space="preserve">
            <source>To resolve this:</source>
            <target state="new">To resolve this:</target>
          </trans-unit>
          <trans-unit id="389" xml:space="preserve">
            <source>Add the following code to the beginning of the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> methods in your role:</source>
            <target state="new">Add the following code to the beginning of the <bpt id="2">&lt;strong&gt;</bpt>OnStart<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Run<ept id="4">&lt;/strong&gt;</ept> methods in your role:</target>
          </trans-unit>
          <trans-unit id="390" xml:space="preserve">
            <source>Add the definition of the <bpt id="2">&lt;strong&gt;</bpt>Freeze<ept id="2">&lt;/strong&gt;</ept> setting as a Boolean value to the ServiceDefinition.csdef and ServiceConfiguration.*.cscfg files for the role and set it to <bpt id="4">&lt;strong&gt;</bpt>false<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Add the definition of the <bpt id="2">&lt;strong&gt;</bpt>Freeze<ept id="2">&lt;/strong&gt;</ept> setting as a Boolean value to the ServiceDefinition.csdef and ServiceConfiguration.*.cscfg files for the role and set it to <bpt id="4">&lt;strong&gt;</bpt>false<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="391" xml:space="preserve">
            <source>If the role goes into a repeated restart mode, you can change the setting to <bpt id="2">&lt;strong&gt;</bpt>true<ept id="2">&lt;/strong&gt;</ept> to freeze role execution and allow it to be swapped with a previous version.</source>
            <target state="new">If the role goes into a repeated restart mode, you can change the setting to <bpt id="2">&lt;strong&gt;</bpt>true<ept id="2">&lt;/strong&gt;</ept> to freeze role execution and allow it to be swapped with a previous version.</target>
          </trans-unit>
          <trans-unit id="392" xml:space="preserve">
            <source>Resiliency considerations</source>
            <target state="new">Resiliency considerations</target>
          </trans-unit>
          <trans-unit id="393" xml:space="preserve">
            <source>Background tasks must be resilient in order to provide reliable services to the application.</source>
            <target state="new">Background tasks must be resilient in order to provide reliable services to the application.</target>
          </trans-unit>
          <trans-unit id="394" xml:space="preserve">
            <source>When planning and designing background tasks, consider the following points:</source>
            <target state="new">When planning and designing background tasks, consider the following points:</target>
          </trans-unit>
          <trans-unit id="395" xml:space="preserve">
            <source>Background tasks must be able to gracefully handle role or service restarts without corrupting data or introducing inconsistency into the application.</source>
            <target state="new">Background tasks must be able to gracefully handle role or service restarts without corrupting data or introducing inconsistency into the application.</target>
          </trans-unit>
          <trans-unit id="396" xml:space="preserve">
            <source>For long-running or multi-step tasks, consider using _check pointing_ by saving the state of jobs in persistent storage, or as messages in a queue if this is appropriate.</source>
            <target state="new">For long-running or multi-step tasks, consider using _check pointing_ by saving the state of jobs in persistent storage, or as messages in a queue if this is appropriate.</target>
          </trans-unit>
          <trans-unit id="397" xml:space="preserve">
            <source>For example, you can persist state information in a message in a queue and incrementally update this state information with the task progress so that the task can be processed from the last known good checkpoint instead of restarting from the beginning.</source>
            <target state="new">For example, you can persist state information in a message in a queue and incrementally update this state information with the task progress so that the task can be processed from the last known good checkpoint instead of restarting from the beginning.</target>
          </trans-unit>
          <trans-unit id="398" xml:space="preserve">
            <source>When using Azure Service Bus queues, you can use message sessions to enable the same scenario.</source>
            <target state="new">When using Azure Service Bus queues, you can use message sessions to enable the same scenario.</target>
          </trans-unit>
          <trans-unit id="399" xml:space="preserve">
            <source>Sessions allow you to save and retrieve the application processing state by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SetState<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>GetState<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> methods.</source>
            <target state="new">Sessions allow you to save and retrieve the application processing state by using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SetState<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>GetState<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> methods.</target>
          </trans-unit>
          <trans-unit id="400" xml:space="preserve">
            <source>For more information about designing reliable multi-step processes and workflows, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about designing reliable multi-step processes and workflows, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="401" xml:space="preserve">
            <source>When using web or worker roles to host multiple background tasks, design your override of the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method to monitor for failed or stalled tasks, and restart them.</source>
            <target state="new">When using web or worker roles to host multiple background tasks, design your override of the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method to monitor for failed or stalled tasks, and restart them.</target>
          </trans-unit>
          <trans-unit id="402" xml:space="preserve">
            <source>Where this is not practical, and you are using a worker role, force the worker role to restart by exiting from the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">Where this is not practical, and you are using a worker role, force the worker role to restart by exiting from the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="403" xml:space="preserve">
            <source>When using queues to communicate with background tasks, the queues can act as a buffer to store requests sent to the tasks while the application is under higher than usual load.</source>
            <target state="new">When using queues to communicate with background tasks, the queues can act as a buffer to store requests sent to the tasks while the application is under higher than usual load.</target>
          </trans-unit>
          <trans-unit id="404" xml:space="preserve">
            <source>This allows the tasks to catch up with the UI during less busy periods.</source>
            <target state="new">This allows the tasks to catch up with the UI during less busy periods.</target>
          </trans-unit>
          <trans-unit id="405" xml:space="preserve">
            <source>It also means that recycling the role will not block the UI.</source>
            <target state="new">It also means that recycling the role will not block the UI.</target>
          </trans-unit>
          <trans-unit id="406" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Queue-Based Load Leveling Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Queue-Based Load Leveling Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="407" xml:space="preserve">
            <source>If some tasks are more important than others, consider implementing the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Priority Queue Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to ensure that these tasks run before less important ones.</source>
            <target state="new">If some tasks are more important than others, consider implementing the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Priority Queue Pattern<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to ensure that these tasks run before less important ones.</target>
          </trans-unit>
          <trans-unit id="408" xml:space="preserve">
            <source>Background tasks that are initiated by, or otherwise process messages must be designed to handle inconsistencies such as messages arriving out of order, messages that repeatedly cause an error (often referred to as _poison messages_), and messages that are delivered more than once.</source>
            <target state="new">Background tasks that are initiated by, or otherwise process messages must be designed to handle inconsistencies such as messages arriving out of order, messages that repeatedly cause an error (often referred to as _poison messages_), and messages that are delivered more than once.</target>
          </trans-unit>
          <trans-unit id="409" xml:space="preserve">
            <source>Consider the following:</source>
            <target state="new">Consider the following:</target>
          </trans-unit>
          <trans-unit id="410" xml:space="preserve">
            <source>Messages that must be processed in a specific order, such as those that change data based on its existing value (for example, adding a value to an existing value), may not arrive in the original order they were sent.</source>
            <target state="new">Messages that must be processed in a specific order, such as those that change data based on its existing value (for example, adding a value to an existing value), may not arrive in the original order they were sent.</target>
          </trans-unit>
          <trans-unit id="411" xml:space="preserve">
            <source>Alternatively, they may be handled by different instances of a background task in a different order due to varying loads on each instance.</source>
            <target state="new">Alternatively, they may be handled by different instances of a background task in a different order due to varying loads on each instance.</target>
          </trans-unit>
          <trans-unit id="412" xml:space="preserve">
            <source>Messages that must be processed in a specific order should include a sequence number, key, or some other indicator that background tasks can use to ensure they are processed in the correct order.</source>
            <target state="new">Messages that must be processed in a specific order should include a sequence number, key, or some other indicator that background tasks can use to ensure they are processed in the correct order.</target>
          </trans-unit>
          <trans-unit id="413" xml:space="preserve">
            <source>If you are using Azure Service Bus, you can use message sessions to guarantee the order of delivery.</source>
            <target state="new">If you are using Azure Service Bus, you can use message sessions to guarantee the order of delivery.</target>
          </trans-unit>
          <trans-unit id="414" xml:space="preserve">
            <source>However, it is usually more efficient where possible to design the process so that the message order is not important.</source>
            <target state="new">However, it is usually more efficient where possible to design the process so that the message order is not important.</target>
          </trans-unit>
          <trans-unit id="415" xml:space="preserve">
            <source>Typically, a background task will peek messages in the queue, which temporarily hides them from other message consumers, and then delete the messages after they have been successfully processed.</source>
            <target state="new">Typically, a background task will peek messages in the queue, which temporarily hides them from other message consumers, and then delete the messages after they have been successfully processed.</target>
          </trans-unit>
          <trans-unit id="416" xml:space="preserve">
            <source>If a background task fails when processing a message, that message will reappear on the queue after the peek timeout expires, and will be processed by another instance of the task or during the next processing cycle of this instance.</source>
            <target state="new">If a background task fails when processing a message, that message will reappear on the queue after the peek timeout expires, and will be processed by another instance of the task or during the next processing cycle of this instance.</target>
          </trans-unit>
          <trans-unit id="417" xml:space="preserve">
            <source>If the message consistently causes an error in the consumer, it will block the task, the queue, and eventually the application itself when the queue becomes full.</source>
            <target state="new">If the message consistently causes an error in the consumer, it will block the task, the queue, and eventually the application itself when the queue becomes full.</target>
          </trans-unit>
          <trans-unit id="418" xml:space="preserve">
            <source>Therefore, it is vital to detect and remove poison messages from the queue.</source>
            <target state="new">Therefore, it is vital to detect and remove poison messages from the queue.</target>
          </trans-unit>
          <trans-unit id="419" xml:space="preserve">
            <source>If you are using Azure Service Bus, messages that cause an error can be moved automatically or manually to an associated dead letter queue.</source>
            <target state="new">If you are using Azure Service Bus, messages that cause an error can be moved automatically or manually to an associated dead letter queue.</target>
          </trans-unit>
          <trans-unit id="420" xml:space="preserve">
            <source>Queues are guaranteed at _least once_ delivery mechanisms, but they may deliver the same message more than once.</source>
            <target state="new">Queues are guaranteed at _least once_ delivery mechanisms, but they may deliver the same message more than once.</target>
          </trans-unit>
          <trans-unit id="421" xml:space="preserve">
            <source>In addition, if a background task fails after processing a message but before deleting it from the queue, the message will become available for processing again.</source>
            <target state="new">In addition, if a background task fails after processing a message but before deleting it from the queue, the message will become available for processing again.</target>
          </trans-unit>
          <trans-unit id="422" xml:space="preserve">
            <source>Background tasks should be idempotent, which means that processing the same message more than once does not cause an error or inconsistency in the application’s data.</source>
            <target state="new">Background tasks should be idempotent, which means that processing the same message more than once does not cause an error or inconsistency in the application’s data.</target>
          </trans-unit>
          <trans-unit id="423" xml:space="preserve">
            <source>Some operations are naturally idempotent, such as setting a stored value to a specific new value.</source>
            <target state="new">Some operations are naturally idempotent, such as setting a stored value to a specific new value.</target>
          </trans-unit>
          <trans-unit id="424" xml:space="preserve">
            <source>However, operations such as adding a value to an existing stored value without checking that the stored value is still the same as when the message was originally sent will cause inconsistencies.</source>
            <target state="new">However, operations such as adding a value to an existing stored value without checking that the stored value is still the same as when the message was originally sent will cause inconsistencies.</target>
          </trans-unit>
          <trans-unit id="425" xml:space="preserve">
            <source>Azure Service Bus queues can be configured to automatically remove duplicated messages.</source>
            <target state="new">Azure Service Bus queues can be configured to automatically remove duplicated messages.</target>
          </trans-unit>
          <trans-unit id="426" xml:space="preserve">
            <source>Some messaging systems, such as Azure storage queues and Azure Service Bus queues, support a de-queue count property that indicates the number of times a message has been read from the queue.</source>
            <target state="new">Some messaging systems, such as Azure storage queues and Azure Service Bus queues, support a de-queue count property that indicates the number of times a message has been read from the queue.</target>
          </trans-unit>
          <trans-unit id="427" xml:space="preserve">
            <source>This can be useful in handling repeated and poison messages.</source>
            <target state="new">This can be useful in handling repeated and poison messages.</target>
          </trans-unit>
          <trans-unit id="428" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Asynchronous Messaging Primer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Idempotency Patterns<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Asynchronous Messaging Primer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Idempotency Patterns<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="429" xml:space="preserve">
            <source>Scaling and performance considerations</source>
            <target state="new">Scaling and performance considerations</target>
          </trans-unit>
          <trans-unit id="430" xml:space="preserve">
            <source>Background tasks must offer sufficient performance to ensure they do not block the application, or cause inconsistencies due to delayed operation when the system is under load.</source>
            <target state="new">Background tasks must offer sufficient performance to ensure they do not block the application, or cause inconsistencies due to delayed operation when the system is under load.</target>
          </trans-unit>
          <trans-unit id="431" xml:space="preserve">
            <source>Typically, performance is improved by scaling the compute instances that host the background tasks.</source>
            <target state="new">Typically, performance is improved by scaling the compute instances that host the background tasks.</target>
          </trans-unit>
          <trans-unit id="432" xml:space="preserve">
            <source>When planning and designing background tasks, consider the following points around scalability and performance:</source>
            <target state="new">When planning and designing background tasks, consider the following points around scalability and performance:</target>
          </trans-unit>
          <trans-unit id="433" xml:space="preserve">
            <source>Azure supports autoscaling (both scaling out and scaling back in) based on current demand and load, or on a predefined schedule, for Web Sites, Cloud Services web and worker roles, and Virtual Machines hosted deployments.</source>
            <target state="new">Azure supports autoscaling (both scaling out and scaling back in) based on current demand and load, or on a predefined schedule, for Web Sites, Cloud Services web and worker roles, and Virtual Machines hosted deployments.</target>
          </trans-unit>
          <trans-unit id="434" xml:space="preserve">
            <source>Use this feature to ensure the application as a whole has sufficient performance capabilities while minimizing runtime costs.</source>
            <target state="new">Use this feature to ensure the application as a whole has sufficient performance capabilities while minimizing runtime costs.</target>
          </trans-unit>
          <trans-unit id="435" xml:space="preserve">
            <source>Where background tasks have a different performance capability from the other parts of a Cloud Services application (for example, the UI or components such as the data access layer), hosting the background tasks together in a separate worker role allows the UI and background task roles to scale independently to manage the load.</source>
            <target state="new">Where background tasks have a different performance capability from the other parts of a Cloud Services application (for example, the UI or components such as the data access layer), hosting the background tasks together in a separate worker role allows the UI and background task roles to scale independently to manage the load.</target>
          </trans-unit>
          <trans-unit id="436" xml:space="preserve">
            <source>If multiple background tasks have significantly different performance capabilities from each other, consider dividing them into separate worker roles and scaling each role type independently, but note that this may increase runtime costs compared to combining all the tasks into fewer roles.</source>
            <target state="new">If multiple background tasks have significantly different performance capabilities from each other, consider dividing them into separate worker roles and scaling each role type independently, but note that this may increase runtime costs compared to combining all the tasks into fewer roles.</target>
          </trans-unit>
          <trans-unit id="437" xml:space="preserve">
            <source>Simply scaling the roles may not be sufficient to prevent loss of performance under load.</source>
            <target state="new">Simply scaling the roles may not be sufficient to prevent loss of performance under load.</target>
          </trans-unit>
          <trans-unit id="438" xml:space="preserve">
            <source>You may also need to scale storage queues and other resources to prevent a single point of the overall processing chain becoming a bottleneck.</source>
            <target state="new">You may also need to scale storage queues and other resources to prevent a single point of the overall processing chain becoming a bottleneck.</target>
          </trans-unit>
          <trans-unit id="439" xml:space="preserve">
            <source>Also, consider other limitations, such as the maximum throughput of storage and other services the application and the background tasks rely on.</source>
            <target state="new">Also, consider other limitations, such as the maximum throughput of storage and other services the application and the background tasks rely on.</target>
          </trans-unit>
          <trans-unit id="440" xml:space="preserve">
            <source>Background tasks must be designed for scaling.</source>
            <target state="new">Background tasks must be designed for scaling.</target>
          </trans-unit>
          <trans-unit id="441" xml:space="preserve">
            <source>For example, they must be able to dynamically detect the number of storage queues in use in order to listen on or send messages to the appropriate queue.</source>
            <target state="new">For example, they must be able to dynamically detect the number of storage queues in use in order to listen on or send messages to the appropriate queue.</target>
          </trans-unit>
          <trans-unit id="442" xml:space="preserve">
            <source>By default, WebJobs scale with their associated Azure Web Sites instance.</source>
            <target state="new">By default, WebJobs scale with their associated Azure Web Sites instance.</target>
          </trans-unit>
          <trans-unit id="443" xml:space="preserve">
            <source>However, if you want a WebJob to run as only a single instance, you can create a Settings.job file containing the JSON data <bpt id="2">&lt;strong&gt;</bpt>{ "is_singleton": true }<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">However, if you want a WebJob to run as only a single instance, you can create a Settings.job file containing the JSON data <bpt id="2">&lt;strong&gt;</bpt>{ "is_singleton": true }<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="444" xml:space="preserve">
            <source>This forces Azure to only run one instance of the WebJob, even if there are multiple instances of the associated website, which can be a useful technique for scheduled jobs that must run as only a single instance.</source>
            <target state="new">This forces Azure to only run one instance of the WebJob, even if there are multiple instances of the associated website, which can be a useful technique for scheduled jobs that must run as only a single instance.</target>
          </trans-unit>
          <trans-unit id="445" xml:space="preserve">
            <source>Related patterns</source>
            <target state="new">Related patterns</target>
          </trans-unit>
          <trans-unit id="446" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Asynchronous Messaging Primer<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Asynchronous Messaging Primer<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="447" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Autoscaling Guidance<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Autoscaling Guidance<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="448" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compensating Transaction Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compensating Transaction Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="449" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Competing Consumers Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Competing Consumers Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="450" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Partitioning Guidance<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Partitioning Guidance<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="451" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Compute Resource Consolidation Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="452" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Gatekeeper Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="453" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Leader Election Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Leader Election Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="454" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Pipes and Filters Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Pipes and Filters Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="455" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Priority Queue Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Priority Queue Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="456" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Queue-Based Load Leveling Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Queue-Based Load Leveling Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="457" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Agent Supervisor Pattern<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="458" xml:space="preserve">
            <source>More information</source>
            <target state="new">More information</target>
          </trans-unit>
          <trans-unit id="459" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scaling Azure Applications with Worker Roles<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scaling Azure Applications with Worker Roles<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="460" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Executing Background Tasks<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Executing Background Tasks<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="461" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Role Startup Life Cycle<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (blog post)</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Role Startup Life Cycle<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (blog post)</target>
          </trans-unit>
          <trans-unit id="462" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Cloud Services Role Lifecycle<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (video)</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Cloud Services Role Lifecycle<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (video)</target>
          </trans-unit>
          <trans-unit id="463" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with the Azure WebJobs SDK<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="464" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Queues and Service Bus Queues - Compared and Contrasted<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Queues and Service Bus Queues - Compared and Contrasted<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="465" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How To Enable Diagnostics in a Cloud Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How To Enable Diagnostics in a Cloud Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="466" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>