<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/22/2016 6:06:18 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">575c7e042be371f228ca6075ea7879f647756a7a</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>App Model v2.0 | Microsoft Azure</source>
            <target state="new">App Model v2.0 | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to build a .NET MVC Web Api that accepts tokens from both personal Microsoft Account and work or school accounts.</source>
            <target state="new">How to build a .NET MVC Web Api that accepts tokens from both personal Microsoft Account and work or school accounts.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>App model v2.0 preview: Secure an MVC web API</source>
            <target state="new">App model v2.0 preview: Secure an MVC web API</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>With the v2.0 app model, you can protecet a Web API using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> access tokens, enabling users with both personal Microsoft account and work or school accounts to securely access your Web API.</source>
            <target state="new">With the v2.0 app model, you can protecet a Web API using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OAuth 2.0<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> access tokens, enabling users with both personal Microsoft account and work or school accounts to securely access your Web API.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This information applies to the v2.0 app model public preview.</source>
            <target state="new">This information applies to the v2.0 app model public preview.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>In ASP.NET web APIs, you can accomplish this using Microsoft’s OWIN middleware included in .NET Framework 4.5.</source>
            <target state="new">In ASP.NET web APIs, you can accomplish this using Microsoft’s OWIN middleware included in .NET Framework 4.5.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Here we’ll use OWIN to build a "To Do List" MVC Web API that:</source>
            <target state="new">Here we’ll use OWIN to build a "To Do List" MVC Web API that:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Allows clients to create and read tasks from a user's To-Do list.</source>
            <target state="new">Allows clients to create and read tasks from a user's To-Do list.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Designates which API's are protected.</source>
            <target state="new">Designates which API's are protected.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Validates that the Web API calls contain a valid Access Token.</source>
            <target state="new">Validates that the Web API calls contain a valid Access Token.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>In order to do this, you’ll need to:</source>
            <target state="new">In order to do this, you’ll need to:</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Register an app with Azure AD</source>
            <target state="new">Register an app with Azure AD</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Set up your app to use the OWIN authentication pipeline.</source>
            <target state="new">Set up your app to use the OWIN authentication pipeline.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Configure a client app to call the To Do List Web API</source>
            <target state="new">Configure a client app to call the To Do List Web API</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The code for this tutorial is maintained <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>on GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The code for this tutorial is maintained <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>on GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>To follow along, you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or clone the skeleton:</source>
            <target state="new">To follow along, you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or clone the skeleton:</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>git clone --branch skeleton https://github.com/AzureADQuickStarts/AppModelv2-WebAPI-DotNet.git<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>git clone --branch skeleton https://github.com/AzureADQuickStarts/AppModelv2-WebAPI-DotNet.git<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The completed app is provided at the end of this tutorial as well.</source>
            <target state="new">The completed app is provided at the end of this tutorial as well.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>1. Register an App</source>
            <target state="new">1. Register an App</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Create a new app at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or follow these <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>detailed steps<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Create a new app at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or follow these <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>detailed steps<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Make sure to:</source>
            <target state="new">Make sure to:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Copy down the <bpt id="2">&lt;strong&gt;</bpt>Application Id<ept id="2">&lt;/strong&gt;</ept> assigned to your app, you'll need it soon.</source>
            <target state="new">Copy down the <bpt id="2">&lt;strong&gt;</bpt>Application Id<ept id="2">&lt;/strong&gt;</ept> assigned to your app, you'll need it soon.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This visual studio solution also contains a "TodoListClient", which is a simple WPF app.</source>
            <target state="new">This visual studio solution also contains a "TodoListClient", which is a simple WPF app.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The TodoListClient is used to demonstrate how a user signs-in and how a client can issue requests to your Web API.</source>
            <target state="new">The TodoListClient is used to demonstrate how a user signs-in and how a client can issue requests to your Web API.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In this case, both the TodoListClient and the TodoListService are represented by the same app.</source>
            <target state="new">In this case, both the TodoListClient and the TodoListService are represented by the same app.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>To configure the TodoListClient, you should also:</source>
            <target state="new">To configure the TodoListClient, you should also:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Add the <bpt id="2">&lt;strong&gt;</bpt>Mobile<ept id="2">&lt;/strong&gt;</ept> platform for your app.</source>
            <target state="new">Add the <bpt id="2">&lt;strong&gt;</bpt>Mobile<ept id="2">&lt;/strong&gt;</ept> platform for your app.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Copy down the <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept> from the portal.</source>
            <target state="new">Copy down the <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept> from the portal.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>You must use the default value of <bpt id="2">&lt;code&gt;</bpt>urn:ietf:wg:oauth:2.0:oob<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">You must use the default value of <bpt id="2">&lt;code&gt;</bpt>urn:ietf:wg:oauth:2.0:oob<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>2. Set up your app to use the OWIN authentication pipeline</source>
            <target state="new">2. Set up your app to use the OWIN authentication pipeline</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Now that you’ve registered an app, you need to set up your app to communicate with the v2.0 endpoint in order to validate incoming requests &amp; tokens.</source>
            <target state="new">Now that you’ve registered an app, you need to set up your app to communicate with the v2.0 endpoint in order to validate incoming requests &amp; tokens.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>To begin, open the solution and add the OWIN middleware NuGet packages to the TodoListService project using the Package Manager Console.</source>
            <target state="new">To begin, open the solution and add the OWIN middleware NuGet packages to the TodoListService project using the Package Manager Console.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Add an OWIN Startup class to the TodoListService project called <bpt id="2">&lt;code&gt;</bpt>Startup.cs<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Add an OWIN Startup class to the TodoListService project called <bpt id="2">&lt;code&gt;</bpt>Startup.cs<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Right click on the project --&gt; <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept> --&gt; <bpt id="4">&lt;strong&gt;</bpt>New Item<ept id="4">&lt;/strong&gt;</ept> --&gt; Search for “OWIN”.</source>
            <target state="new">Right click on the project --&gt; <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept> --&gt; <bpt id="4">&lt;strong&gt;</bpt>New Item<ept id="4">&lt;/strong&gt;</ept> --&gt; Search for “OWIN”.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The OWIN middleware will invoke the <bpt id="2">&lt;code&gt;</bpt>Configuration(…)<ept id="2">&lt;/code&gt;</ept> method when your app starts.</source>
            <target state="new">The OWIN middleware will invoke the <bpt id="2">&lt;code&gt;</bpt>Configuration(…)<ept id="2">&lt;/code&gt;</ept> method when your app starts.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Change the class declaration to <bpt id="2">&lt;code&gt;</bpt>public partial class Startup<ept id="2">&lt;/code&gt;</ept> - we’ve already implemented part of this class for you in another file.</source>
            <target state="new">Change the class declaration to <bpt id="2">&lt;code&gt;</bpt>public partial class Startup<ept id="2">&lt;/code&gt;</ept> - we’ve already implemented part of this class for you in another file.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>Configuration(…)<ept id="2">&lt;/code&gt;</ept> method, make a call to ConfgureAuth(…)</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>Configuration(…)<ept id="2">&lt;/code&gt;</ept> method, make a call to ConfgureAuth(…)</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>to set up authentication for your web app.</source>
            <target state="new">to set up authentication for your web app.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Open the file <bpt id="2">&lt;code&gt;</bpt>App_Start\Startup.Auth.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>ConfigureAuth(…)<ept id="4">&lt;/code&gt;</ept> method, which will set up the Web API to accept tokens from the v2.0 endpoint.</source>
            <target state="new">Open the file <bpt id="2">&lt;code&gt;</bpt>App_Start\Startup.Auth.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>ConfigureAuth(…)<ept id="4">&lt;/code&gt;</ept> method, which will set up the Web API to accept tokens from the v2.0 endpoint.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Now you can use <bpt id="2">&lt;code&gt;</bpt>[Authorize]<ept id="2">&lt;/code&gt;</ept> attributes to protect your controllers and actions with OAuth 2.0 bearer authentication.</source>
            <target state="new">Now you can use <bpt id="2">&lt;code&gt;</bpt>[Authorize]<ept id="2">&lt;/code&gt;</ept> attributes to protect your controllers and actions with OAuth 2.0 bearer authentication.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Decorate the <bpt id="2">&lt;code&gt;</bpt>Controllers\TodoListController.cs<ept id="2">&lt;/code&gt;</ept> class with an authorize tag.</source>
            <target state="new">Decorate the <bpt id="2">&lt;code&gt;</bpt>Controllers\TodoListController.cs<ept id="2">&lt;/code&gt;</ept> class with an authorize tag.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>This will force the user to sign in before accessing that page.</source>
            <target state="new">This will force the user to sign in before accessing that page.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>When an authorized caller successfully invokes one of the <bpt id="2">&lt;code&gt;</bpt>TodoListController<ept id="2">&lt;/code&gt;</ept> APIs, the action might need access to information about the caller.</source>
            <target state="new">When an authorized caller successfully invokes one of the <bpt id="2">&lt;code&gt;</bpt>TodoListController<ept id="2">&lt;/code&gt;</ept> APIs, the action might need access to information about the caller.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>OWIN provides access to the claims inside the bearer token via the <bpt id="2">&lt;code&gt;</bpt>ClaimsPrincpal<ept id="2">&lt;/code&gt;</ept> object.</source>
            <target state="new">OWIN provides access to the claims inside the bearer token via the <bpt id="2">&lt;code&gt;</bpt>ClaimsPrincpal<ept id="2">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Finally, open the <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept> file in the root of the TodoListService project, and enter your configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</source>
            <target state="new">Finally, open the <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept> file in the root of the TodoListService project, and enter your configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Your <bpt id="2">&lt;code&gt;</bpt>ida:Audience<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Application Id<ept id="4">&lt;/strong&gt;</ept> of the app that you entered in the portal.</source>
            <target state="new">Your <bpt id="2">&lt;code&gt;</bpt>ida:Audience<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Application Id<ept id="4">&lt;/strong&gt;</ept> of the app that you entered in the portal.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>3. Configure a client app &amp; Run the service</source>
            <target state="new">3. Configure a client app &amp; Run the service</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Before you can see the Todo List Service in action, you need to configure the Todo List Client so it can get tokens from the v2.0 endpoint and make calls to the service.</source>
            <target state="new">Before you can see the Todo List Service in action, you need to configure the Todo List Client so it can get tokens from the v2.0 endpoint and make calls to the service.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>In the TodoListClient project, open <bpt id="2">&lt;code&gt;</bpt>App.config<ept id="2">&lt;/code&gt;</ept> and enter your configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</source>
            <target state="new">In the TodoListClient project, open <bpt id="2">&lt;code&gt;</bpt>App.config<ept id="2">&lt;/code&gt;</ept> and enter your configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Your <bpt id="2">&lt;code&gt;</bpt>ida:ClientId<ept id="2">&lt;/code&gt;</ept> Application Id you copied from the portal.</source>
            <target state="new">Your <bpt id="2">&lt;code&gt;</bpt>ida:ClientId<ept id="2">&lt;/code&gt;</ept> Application Id you copied from the portal.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ida:RedirectUri<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Redirect Uri<ept id="4">&lt;/strong&gt;</ept> from the portal.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ida:RedirectUri<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Redirect Uri<ept id="4">&lt;/strong&gt;</ept> from the portal.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Finally, clean, build and run each project!</source>
            <target state="new">Finally, clean, build and run each project!</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>You now have a .NET MVC Web API that accepts tokens from both personal Microsoft accounts and work or school accounts.</source>
            <target state="new">You now have a .NET MVC Web API that accepts tokens from both personal Microsoft accounts and work or school accounts.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Sign into the TodoListClient, and call your web api to add tasks to the user's To-Do list.</source>
            <target state="new">Sign into the TodoListClient, and call your web api to add tasks to the user's To-Do list.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>For reference, the completed sample (without your configuration values) <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or you can clone it from GitHub:</source>
            <target state="new">For reference, the completed sample (without your configuration values) <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or you can clone it from GitHub:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebAPI-DotNet.git<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebAPI-DotNet.git<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>You can now move onto additional topics.</source>
            <target state="new">You can now move onto additional topics.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>You may want to try:</source>
            <target state="new">You may want to try:</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Calling a Web API from a Web App with the v2.0 app model &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Calling a Web API from a Web App with the v2.0 app model &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>For additional resources, check out:</source>
            <target state="new">For additional resources, check out:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>