<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:33:27 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59d5a18e7fe230d536c8017365968ff9a1c0fc3c</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Notification Hubs Localized Breaking News Tutorial</source>
            <target state="new">Notification Hubs Localized Breaking News Tutorial</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Service Bus Notification Hubs to send localized breaking news notifications.</source>
            <target state="new">Learn how to use Azure Service Bus Notification Hubs to send localized breaking news notifications.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Use Notification Hubs to send localized breaking news</source>
            <target state="new">Use Notification Hubs to send localized breaking news</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This topic shows you how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Azure Notification Hubs to broadcast breaking news notifications that have been localized by language and device.</source>
            <target state="new">This topic shows you how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Azure Notification Hubs to broadcast breaking news notifications that have been localized by language and device.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In this tutorial you start with the Windows Store app created in [Use Notification Hubs to send breaking news].</source>
            <target state="new">In this tutorial you start with the Windows Store app created in [Use Notification Hubs to send breaking news].</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>When complete, you will be able to register for categories you are interested in, specify a language in which to receive the notifications, and receive only push notifications for the selected categories in that language.</source>
            <target state="new">When complete, you will be able to register for categories you are interested in, specify a language in which to receive the notifications, and receive only push notifications for the selected categories in that language.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>There are two parts to this scenario:</source>
            <target state="new">There are two parts to this scenario:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>the Windows Store app allows client devices to specify a language, and to subscribe to different breaking news categories;</source>
            <target state="new">the Windows Store app allows client devices to specify a language, and to subscribe to different breaking news categories;</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>the back-end broadcasts the notifications, using the <bpt id="2">&lt;strong&gt;</bpt>tag<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>template<ept id="4">&lt;/strong&gt;</ept> feautres of Azure Notification Hubs.</source>
            <target state="new">the back-end broadcasts the notifications, using the <bpt id="2">&lt;strong&gt;</bpt>tag<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>template<ept id="4">&lt;/strong&gt;</ept> feautres of Azure Notification Hubs.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>You must have already completed the [Use Notification Hubs to send breaking news] tutorial and have the code available, because this tutorial builds directly upon that code.</source>
            <target state="new">You must have already completed the [Use Notification Hubs to send breaking news] tutorial and have the code available, because this tutorial builds directly upon that code.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>You also need Visual Studio 2012.</source>
            <target state="new">You also need Visual Studio 2012.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Template concepts</source>
            <target state="new">Template concepts</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In [Use Notification Hubs to send breaking news] you built an app that used <bpt id="2">&lt;strong&gt;</bpt>tags<ept id="2">&lt;/strong&gt;</ept> to subscribe to notifications for different news categories.</source>
            <target state="new">In [Use Notification Hubs to send breaking news] you built an app that used <bpt id="2">&lt;strong&gt;</bpt>tags<ept id="2">&lt;/strong&gt;</ept> to subscribe to notifications for different news categories.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Many apps, however, target multiple markets and require localization.</source>
            <target state="new">Many apps, however, target multiple markets and require localization.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>This means that the content of the notifications themselves have to be localized and delivered to the correct set of devices.</source>
            <target state="new">This means that the content of the notifications themselves have to be localized and delivered to the correct set of devices.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>In this topic we will show how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Notification Hubs to easily deliver localized breaking news notifications.</source>
            <target state="new">In this topic we will show how to use the <bpt id="2">&lt;strong&gt;</bpt>template<ept id="2">&lt;/strong&gt;</ept> feature of Notification Hubs to easily deliver localized breaking news notifications.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Note: one way to send localized notifications is to create multiple versions of each tag.</source>
            <target state="new">Note: one way to send localized notifications is to create multiple versions of each tag.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>For instance, to support English, French, and Mandarin, we would need three different tags for world news: "world_en", "world_fr", and "world_ch".</source>
            <target state="new">For instance, to support English, French, and Mandarin, we would need three different tags for world news: "world_en", "world_fr", and "world_ch".</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>We would then have to send a localized version of the world news to each of these tags.</source>
            <target state="new">We would then have to send a localized version of the world news to each of these tags.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In this topic we use templates to avoid the proliferation of tags and the requirement of sending multiple messages.</source>
            <target state="new">In this topic we use templates to avoid the proliferation of tags and the requirement of sending multiple messages.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>At a high level, templates are a way to specify how a specific device should receive a notification.</source>
            <target state="new">At a high level, templates are a way to specify how a specific device should receive a notification.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The template specifies the exact payload format by referring to properties that are part of the message sent by your app back-end.</source>
            <target state="new">The template specifies the exact payload format by referring to properties that are part of the message sent by your app back-end.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In our case, we will send a locale-agnostic message containing all supported languages:</source>
            <target state="new">In our case, we will send a locale-agnostic message containing all supported languages:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Then we will ensure that devices register with a template that refers to the correct property.</source>
            <target state="new">Then we will ensure that devices register with a template that refers to the correct property.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>For instance, a Windows Store app that wants to receive a simple toast message will register for the following template:</source>
            <target state="new">For instance, a Windows Store app that wants to receive a simple toast message will register for the following template:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Templates are a very powerful feature you can learn more about in our [Notification Hubs Guidance] article.</source>
            <target state="new">Templates are a very powerful feature you can learn more about in our [Notification Hubs Guidance] article.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>A reference for the template expression language is in our [Notification Hubs How-To for Windows Store].</source>
            <target state="new">A reference for the template expression language is in our [Notification Hubs How-To for Windows Store].</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>The app user interface</source>
            <target state="new">The app user interface</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>We will now modify the Breaking News app that you created in the topic [Use Notification Hubs to send breaking news] to send localized breaking news using templates.</source>
            <target state="new">We will now modify the Breaking News app that you created in the topic [Use Notification Hubs to send breaking news] to send localized breaking news using templates.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In order to adapt your client apps to receive localized messages, you have to replace your <bpt id="2">&lt;em&gt;</bpt>native<ept id="2">&lt;/em&gt;</ept> registrations (i.e. registrations that do you specify a template) with template registrations.</source>
            <target state="new">In order to adapt your client apps to receive localized messages, you have to replace your <bpt id="2">&lt;em&gt;</bpt>native<ept id="2">&lt;/em&gt;</ept> registrations (i.e. registrations that do you specify a template) with template registrations.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In your Windows Store app:</source>
            <target state="new">In your Windows Store app:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Change your MainPage.xaml to include a locale combobox:</source>
            <target state="new">Change your MainPage.xaml to include a locale combobox:</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Building the Windows Store client app</source>
            <target state="new">Building the Windows Store client app</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>In your Notifications class, add a locale parameter to your  <bpt id="2">&lt;em&gt;</bpt>StoreCategoriesAndSubscribe<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>SubscribeToCateories<ept id="4">&lt;/em&gt;</ept> methods.</source>
            <target state="new">In your Notifications class, add a locale parameter to your  <bpt id="2">&lt;em&gt;</bpt>StoreCategoriesAndSubscribe<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>SubscribeToCateories<ept id="4">&lt;/em&gt;</ept> methods.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Note that instead of calling the <bpt id="2">&lt;em&gt;</bpt>RegisterNativeAsync<ept id="2">&lt;/em&gt;</ept> method we call <bpt id="4">&lt;em&gt;</bpt>RegisterTemplateAsync<ept id="4">&lt;/em&gt;</ept>: we are registering a specific notification format in which the template depends on the locale.</source>
            <target state="new">Note that instead of calling the <bpt id="2">&lt;em&gt;</bpt>RegisterNativeAsync<ept id="2">&lt;/em&gt;</ept> method we call <bpt id="4">&lt;em&gt;</bpt>RegisterTemplateAsync<ept id="4">&lt;/em&gt;</ept>: we are registering a specific notification format in which the template depends on the locale.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>We also provide a name for the template ("newsTemplate"), because we might want to register more than one template (for instance one for toast notifications and one for tiles) and we need to name them in order to be able to update or delete them.</source>
            <target state="new">We also provide a name for the template ("newsTemplate"), because we might want to register more than one template (for instance one for toast notifications and one for tiles) and we need to name them in order to be able to update or delete them.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Note that if a device registers multiple templates with the same tag, an incoming message targeting that tag will result in multiple notifications delivered to the device (one for each template).</source>
            <target state="new">Note that if a device registers multiple templates with the same tag, an incoming message targeting that tag will result in multiple notifications delivered to the device (one for each template).</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>This behavior is useful when the same logical message has to result in multiple visual notifications, for instance showing both a badge and a toast in a Windows Store application.</source>
            <target state="new">This behavior is useful when the same logical message has to result in multiple visual notifications, for instance showing both a badge and a toast in a Windows Store application.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Add the following method to retrieve the stored locale:</source>
            <target state="new">Add the following method to retrieve the stored locale:</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>In your MainPage.xaml.cs, update your button click handler by retrieving the current value of the Locale combobox and providing it to the call to the Notifications class, as shown:</source>
            <target state="new">In your MainPage.xaml.cs, update your button click handler by retrieving the current value of the Locale combobox and providing it to the call to the Notifications class, as shown:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Finally, in your App.xaml.cs file, make sure to update your call to the</source>
            <target state="new">Finally, in your App.xaml.cs file, make sure to update your call to the</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Notifications singleton in the <bpt id="2">&lt;em&gt;</bpt>OnLaunched<ept id="2">&lt;/em&gt;</ept> method:</source>
            <target state="new">Notifications singleton in the <bpt id="2">&lt;em&gt;</bpt>OnLaunched<ept id="2">&lt;/em&gt;</ept> method:</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Send localized notifications from your back-end</source>
            <target state="new">Send localized notifications from your back-end</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/notification-hubs-localized-back-end.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/notification-hubs-localized-back-end.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>For more information on using templates, see [Notify users with Notification Hubs: ASP.NET], [Notify users with Notification Hubs: Mobile Services] and also see [Notification Hubs Guidance].</source>
            <target state="new">For more information on using templates, see [Notify users with Notification Hubs: ASP.NET], [Notify users with Notification Hubs: Mobile Services] and also see [Notification Hubs Guidance].</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>A reference for the template expression language is [Notification Hubs How-To for Windows Store].</source>
            <target state="new">A reference for the template expression language is [Notification Hubs How-To for Windows Store].</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>