<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/22/2016 6:10:47 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b01d13cc3dd76f60dd56f6452e41fd4ce055a96f</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to delegate user registration and product subscription</source>
            <target state="new">How to delegate user registration and product subscription</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to delegate user registration and product subscription to a third party in Azure API Management.</source>
            <target state="new">Learn how to delegate user registration and product subscription to a third party in Azure API Management.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to delegate user registration and product subscription</source>
            <target state="new">How to delegate user registration and product subscription</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Delegation allows you to use your existing website for handling developer sign-in/sign-up and subscription to products as opposed to using the built-in functionality in the developer portal.</source>
            <target state="new">Delegation allows you to use your existing website for handling developer sign-in/sign-up and subscription to products as opposed to using the built-in functionality in the developer portal.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This enables your website to own the user data and perform the validation of these steps in a custom way.</source>
            <target state="new">This enables your website to own the user data and perform the validation of these steps in a custom way.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Delegating developer sign-in and sign-up</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Delegating developer sign-in and sign-up</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>To delegate developer sign-in and sign-up to your existing website you will need to create a special delegation endpoint on your site that acts as the entry-point for any such request initiated from the API Management developer portal.</source>
            <target state="new">To delegate developer sign-in and sign-up to your existing website you will need to create a special delegation endpoint on your site that acts as the entry-point for any such request initiated from the API Management developer portal.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The final workflow will be as follows:</source>
            <target state="new">The final workflow will be as follows:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Developer clicks on the sign-in or sign-up link at the API Management developer portal</source>
            <target state="new">Developer clicks on the sign-in or sign-up link at the API Management developer portal</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Browser is redirected to the delegation endpoint</source>
            <target state="new">Browser is redirected to the delegation endpoint</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Delegation endpoint in return redirects to or presents UI asking user to sign-in or sign-up</source>
            <target state="new">Delegation endpoint in return redirects to or presents UI asking user to sign-in or sign-up</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>On success, the user is redirected back to the API Management developer portal page they started from</source>
            <target state="new">On success, the user is redirected back to the API Management developer portal page they started from</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>To begin, let's first set-up API Management to route requests via your delegation endpoint. In the API Management publisher portal, click on <bpt id="2">&lt;strong&gt;</bpt>Security<ept id="2">&lt;/strong&gt;</ept> and then click the <bpt id="4">&lt;strong&gt;</bpt>Delegation<ept id="4">&lt;/strong&gt;</ept> tab. Click the checkbox to enable 'Delegate sign-in &amp; sign-up'.</source>
            <target state="new">To begin, let's first set-up API Management to route requests via your delegation endpoint. In the API Management publisher portal, click on <bpt id="2">&lt;strong&gt;</bpt>Security<ept id="2">&lt;/strong&gt;</ept> and then click the <bpt id="4">&lt;strong&gt;</bpt>Delegation<ept id="4">&lt;/strong&gt;</ept> tab. Click the checkbox to enable 'Delegate sign-in &amp; sign-up'.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Delegation page<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Delegation page<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Decide what the URL of your special delegation endpoint will be and enter it in the <bpt id="2">&lt;strong&gt;</bpt>Delegation endpoint URL<ept id="2">&lt;/strong&gt;</ept> field.</source>
            <target state="new">Decide what the URL of your special delegation endpoint will be and enter it in the <bpt id="2">&lt;strong&gt;</bpt>Delegation endpoint URL<ept id="2">&lt;/strong&gt;</ept> field.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Within the <bpt id="2">&lt;strong&gt;</bpt>Delegation authentication key<ept id="2">&lt;/strong&gt;</ept> field enter a secret that will be used to compute a signature provided to you for verification to ensure that the request is indeed coming from Azure API Management.</source>
            <target state="new">Within the <bpt id="2">&lt;strong&gt;</bpt>Delegation authentication key<ept id="2">&lt;/strong&gt;</ept> field enter a secret that will be used to compute a signature provided to you for verification to ensure that the request is indeed coming from Azure API Management.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>You can click the <bpt id="2">&lt;strong&gt;</bpt>generate<ept id="2">&lt;/strong&gt;</ept> button to have API Managemnet randomly generate a key for you.</source>
            <target state="new">You can click the <bpt id="2">&lt;strong&gt;</bpt>generate<ept id="2">&lt;/strong&gt;</ept> button to have API Managemnet randomly generate a key for you.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Now you need to create the <bpt id="2">&lt;strong&gt;</bpt>delegation endpoint<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Now you need to create the <bpt id="2">&lt;strong&gt;</bpt>delegation endpoint<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>It has to perform a number of actions:</source>
            <target state="new">It has to perform a number of actions:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Receive a request in the following form:</source>
            <target state="new">Receive a request in the following form:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>http://www.yourwebsite.com/apimdelegation?operation=SignIn&amp;returnUrl={URL of source page}&amp;salt={string}&amp;sig={string}<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>http://www.yourwebsite.com/apimdelegation?operation=SignIn&amp;returnUrl={URL of source page}&amp;salt={string}&amp;sig={string}<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Query parameters for the sign-in / sign-up case:</source>
            <target state="new">Query parameters for the sign-in / sign-up case:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is - it can only be <bpt id="3">&lt;strong&gt;</bpt>SignIn<ept id="3">&lt;/strong&gt;</ept> in this case</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is - it can only be <bpt id="3">&lt;strong&gt;</bpt>SignIn<ept id="3">&lt;/strong&gt;</ept> in this case</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>returnUrl<ept id="1">&lt;/strong&gt;</ept>: the URL of the page where the user clicked on a sign-in or sign-up link</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>returnUrl<ept id="1">&lt;/strong&gt;</ept>: the URL of the page where the user clicked on a sign-in or sign-up link</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Verify that the request is coming from Azure API Management (optional, but highly recommended for security)</source>
            <target state="new">Verify that the request is coming from Azure API Management (optional, but highly recommended for security)</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Compute an HMAC-SHA512 hash of a string based on the <bpt id="2">&lt;strong&gt;</bpt>returnUrl<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>salt<ept id="4">&lt;/strong&gt;</ept> query parameters ([example code provided below]):</source>
            <target state="new">Compute an HMAC-SHA512 hash of a string based on the <bpt id="2">&lt;strong&gt;</bpt>returnUrl<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>salt<ept id="4">&lt;/strong&gt;</ept> query parameters ([example code provided below]):</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>HMAC(<bpt id="2">&lt;strong&gt;</bpt>salt<ept id="2">&lt;/strong&gt;</ept> + '\n' + <bpt id="4">&lt;strong&gt;</bpt>returnUrl<ept id="4">&lt;/strong&gt;</ept>)</source>
            <target state="new">HMAC(<bpt id="2">&lt;strong&gt;</bpt>salt<ept id="2">&lt;/strong&gt;</ept> + '\n' + <bpt id="4">&lt;strong&gt;</bpt>returnUrl<ept id="4">&lt;/strong&gt;</ept>)</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Compare the above-computed hash to the value of the <bpt id="2">&lt;strong&gt;</bpt>sig<ept id="2">&lt;/strong&gt;</ept> query parameter.</source>
            <target state="new">Compare the above-computed hash to the value of the <bpt id="2">&lt;strong&gt;</bpt>sig<ept id="2">&lt;/strong&gt;</ept> query parameter.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>If the two hashes match, move on to the next step, otherwise deny the request.</source>
            <target state="new">If the two hashes match, move on to the next step, otherwise deny the request.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Verify that you are receiving a request for sign-in/sign-up: the <bpt id="2">&lt;strong&gt;</bpt>operation<ept id="2">&lt;/strong&gt;</ept> query parameter will be set to "<bpt id="4">&lt;strong&gt;</bpt>SignIn<ept id="4">&lt;/strong&gt;</ept>".</source>
            <target state="new">Verify that you are receiving a request for sign-in/sign-up: the <bpt id="2">&lt;strong&gt;</bpt>operation<ept id="2">&lt;/strong&gt;</ept> query parameter will be set to "<bpt id="4">&lt;strong&gt;</bpt>SignIn<ept id="4">&lt;/strong&gt;</ept>".</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Present the user with UI to sign-in or sign-up</source>
            <target state="new">Present the user with UI to sign-in or sign-up</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>If the user is signing-up you have to create a corresponding account for them in API Management.</source>
            <target state="new">If the user is signing-up you have to create a corresponding account for them in API Management.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>[Create a user] with the API Management REST API.</source>
            <target state="new">[Create a user] with the API Management REST API.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>When doing so, ensure that you set the user ID to the same it is in your user store or to an ID that you can keep track of.</source>
            <target state="new">When doing so, ensure that you set the user ID to the same it is in your user store or to an ID that you can keep track of.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>When the user is successfully authenticated:</source>
            <target state="new">When the user is successfully authenticated:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>[request a single-sign-on (SSO) token] via the API Management REST API</source>
            <target state="new">[request a single-sign-on (SSO) token] via the API Management REST API</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>append a returnUrl query parameter to the SSO URL you have received from the API call above:</source>
            <target state="new">append a returnUrl query parameter to the SSO URL you have received from the API call above:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>e.g. https://customer.portal.azure-api.net/signin-sso?token&amp;returnUrl=/return/url</source>
            <target state="new">e.g. https://customer.portal.azure-api.net/signin-sso?token&amp;returnUrl=/return/url</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>redirect the user to the above produced URL</source>
            <target state="new">redirect the user to the above produced URL</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>In addition to the <bpt id="2">&lt;strong&gt;</bpt>SignIn<ept id="2">&lt;/strong&gt;</ept> operation, you can also perform account management by following the previous steps and using one of the following operations.</source>
            <target state="new">In addition to the <bpt id="2">&lt;strong&gt;</bpt>SignIn<ept id="2">&lt;/strong&gt;</ept> operation, you can also perform account management by following the previous steps and using one of the following operations.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>ChangePassword<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>ChangePassword<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>ChangeProfile<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>ChangeProfile<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CloseAccount<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CloseAccount<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>You must pass the following query parameters for account management operations.</source>
            <target state="new">You must pass the following query parameters for account management operations.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is (ChangePassword, ChangeProfile, or CloseAccount)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is (ChangePassword, ChangeProfile, or CloseAccount)</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>userId<ept id="1">&lt;/strong&gt;</ept>: the user id of the account to manage</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>userId<ept id="1">&lt;/strong&gt;</ept>: the user id of the account to manage</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Delegating product subscription</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Delegating product subscription</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Delegating product subscription works similarly to delegating user sign-in/-up.</source>
            <target state="new">Delegating product subscription works similarly to delegating user sign-in/-up.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The final workflow would be as follows:</source>
            <target state="new">The final workflow would be as follows:</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Developer selects a product in the API Management developer portal and clicks on the Subscribe button</source>
            <target state="new">Developer selects a product in the API Management developer portal and clicks on the Subscribe button</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Browser is redirected to the delegation endpoint</source>
            <target state="new">Browser is redirected to the delegation endpoint</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Delegation endpoint performs required product subscription steps - this is up to you and may entail redirecting to another page to request billing information, asking additional questions, or simply storing the information and not requiring any user action</source>
            <target state="new">Delegation endpoint performs required product subscription steps - this is up to you and may entail redirecting to another page to request billing information, asking additional questions, or simply storing the information and not requiring any user action</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>On success, the user is redirected back to the API Management developer portal page they started from</source>
            <target state="new">On success, the user is redirected back to the API Management developer portal page they started from</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>To enable the functionality, on the <bpt id="2">&lt;strong&gt;</bpt>Delegation<ept id="2">&lt;/strong&gt;</ept> page click <bpt id="4">&lt;strong&gt;</bpt>Delegate product subscription<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">To enable the functionality, on the <bpt id="2">&lt;strong&gt;</bpt>Delegation<ept id="2">&lt;/strong&gt;</ept> page click <bpt id="4">&lt;strong&gt;</bpt>Delegate product subscription<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Then ensure the delegation endpoint performs the following actions:</source>
            <target state="new">Then ensure the delegation endpoint performs the following actions:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Receive a request in the following form:</source>
            <target state="new">Receive a request in the following form:</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>http://www.yourwebsite.com/apimdelegation?operation={operation}&amp;productId={product to subscribe to}&amp;userId={user making request}&amp;salt={string}&amp;sig={string}<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>http://www.yourwebsite.com/apimdelegation?operation={operation}&amp;productId={product to subscribe to}&amp;userId={user making request}&amp;salt={string}&amp;sig={string}<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Query parameters for the product subscription case:</source>
            <target state="new">Query parameters for the product subscription case:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>operation<ept id="1">&lt;/strong&gt;</ept>: identifies what type of delegation request it is.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>For product subscription requests the valid options are:</source>
            <target state="new">For product subscription requests the valid options are:</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>"Subscribe": a request to subscribe the user to a given product with provided ID (see below)</source>
            <target state="new">"Subscribe": a request to subscribe the user to a given product with provided ID (see below)</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>"Unsubscribe": a request to unsubscribe a user from a product</source>
            <target state="new">"Unsubscribe": a request to unsubscribe a user from a product</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>"Renew": a requst to renew a subscription (e.g. that may be expiring)</source>
            <target state="new">"Renew": a requst to renew a subscription (e.g. that may be expiring)</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>productId<ept id="1">&lt;/strong&gt;</ept>: the ID of the product the user requested to subscribe to</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>productId<ept id="1">&lt;/strong&gt;</ept>: the ID of the product the user requested to subscribe to</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>userId<ept id="1">&lt;/strong&gt;</ept>: the ID of the user for whom the request is made</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>userId<ept id="1">&lt;/strong&gt;</ept>: the ID of the user for whom the request is made</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>salt<ept id="1">&lt;/strong&gt;</ept>: a special salt string used for computing a security hash</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>sig<ept id="1">&lt;/strong&gt;</ept>: a computed security hash to be used for comparison to your own computed hash</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Verify that the request is coming from Azure API Management (optional, but highly recommended for security)</source>
            <target state="new">Verify that the request is coming from Azure API Management (optional, but highly recommended for security)</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Compute an HMAC-SHA512 of a string based on the <bpt id="2">&lt;strong&gt;</bpt>productId<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>userId<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>salt<ept id="6">&lt;/strong&gt;</ept> query parameters:</source>
            <target state="new">Compute an HMAC-SHA512 of a string based on the <bpt id="2">&lt;strong&gt;</bpt>productId<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>userId<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>salt<ept id="6">&lt;/strong&gt;</ept> query parameters:</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>HMAC(<bpt id="2">&lt;strong&gt;</bpt>salt<ept id="2">&lt;/strong&gt;</ept> + '\n' + <bpt id="4">&lt;strong&gt;</bpt>productId<ept id="4">&lt;/strong&gt;</ept> + '\n' + <bpt id="6">&lt;strong&gt;</bpt>userId<ept id="6">&lt;/strong&gt;</ept>)</source>
            <target state="new">HMAC(<bpt id="2">&lt;strong&gt;</bpt>salt<ept id="2">&lt;/strong&gt;</ept> + '\n' + <bpt id="4">&lt;strong&gt;</bpt>productId<ept id="4">&lt;/strong&gt;</ept> + '\n' + <bpt id="6">&lt;strong&gt;</bpt>userId<ept id="6">&lt;/strong&gt;</ept>)</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Compare the above-computed hash to the value of the <bpt id="2">&lt;strong&gt;</bpt>sig<ept id="2">&lt;/strong&gt;</ept> query parameter.</source>
            <target state="new">Compare the above-computed hash to the value of the <bpt id="2">&lt;strong&gt;</bpt>sig<ept id="2">&lt;/strong&gt;</ept> query parameter.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>If the two hashes match, move on to the next step, otherwise deny the request.</source>
            <target state="new">If the two hashes match, move on to the next step, otherwise deny the request.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Perform any product subscription processing based on the type of operation requested in <bpt id="2">&lt;strong&gt;</bpt>operation<ept id="2">&lt;/strong&gt;</ept> - e.g. billing, further questions, etc.</source>
            <target state="new">Perform any product subscription processing based on the type of operation requested in <bpt id="2">&lt;strong&gt;</bpt>operation<ept id="2">&lt;/strong&gt;</ept> - e.g. billing, further questions, etc.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>On successfully subscribing the user to the product on your side, subscribe the user to the API Management product by [calling the REST API for product subscription].</source>
            <target state="new">On successfully subscribing the user to the product on your side, subscribe the user to the API Management product by [calling the REST API for product subscription].</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Redirect the user back to the <bpt id="2">&lt;strong&gt;</bpt>returnUrl<ept id="2">&lt;/strong&gt;</ept> provided when receiving the request.</source>
            <target state="new">Redirect the user back to the <bpt id="2">&lt;strong&gt;</bpt>returnUrl<ept id="2">&lt;/strong&gt;</ept> provided when receiving the request.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept> Example Code</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept> Example Code</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>These code samples show how to take the <bpt id="2">&lt;em&gt;</bpt>delegation validation key<ept id="2">&lt;/em&gt;</ept>, which is set in the Delegation screen of the API Management portal, to create a HMAC which is then used to validate the signature, proving the validity of the passed returnUrl.</source>
            <target state="new">These code samples show how to take the <bpt id="2">&lt;em&gt;</bpt>delegation validation key<ept id="2">&lt;/em&gt;</ept>, which is set in the Delegation screen of the API Management portal, to create a HMAC which is then used to validate the signature, proving the validity of the passed returnUrl.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>The same code works for the productId and userId with slight modification.</source>
            <target state="new">The same code works for the productId and userId with slight modification.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>C# code to generate hash of returnUrl<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>C# code to generate hash of returnUrl<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>NodeJS code to generate hash of returnUrl<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>NodeJS code to generate hash of returnUrl<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>For more information on delegation, see the following video.</source>
            <target state="new">For more information on delegation, see the following video.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source><ph id="1">&lt;video [AZURE.VIDEO delegating-user-authentication-and-product-subscription-to-a-3rd-party-site]/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;video [AZURE.VIDEO delegating-user-authentication-and-product-subscription-to-a-3rd-party-site]/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>