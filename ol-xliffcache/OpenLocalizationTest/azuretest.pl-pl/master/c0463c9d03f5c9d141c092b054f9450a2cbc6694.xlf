<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 10:08:57 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0463c9d03f5c9d141c092b054f9450a2cbc6694</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to deploy a SQL Database to SQL Azure</source>
            <target state="new">How to deploy a SQL Database to SQL Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Deploy a SQL Server database to Azure SQL Database using the Wizard in SQL Server 2016 Management Studio.</source>
            <target state="new">Deploy a SQL Server database to Azure SQL Database using the Wizard in SQL Server 2016 Management Studio.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to Deploy a SQL Server database to Azure SQL Database</source>
            <target state="new">How to Deploy a SQL Server database to Azure SQL Database</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>In this article, you'll use the <bpt id="2">&lt;strong&gt;</bpt>Deploy Database to Azure SQL Database wizard<ept id="2">&lt;/strong&gt;</ept> to upload a sample database to Azure SQL Database.</source>
            <target state="new">In this article, you'll use the <bpt id="2">&lt;strong&gt;</bpt>Deploy Database to Azure SQL Database wizard<ept id="2">&lt;/strong&gt;</ept> to upload a sample database to Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>You must download <bpt id="2">&lt;strong&gt;</bpt>SQL Server 2016 Management Studio (CTP 2.1)<ept id="2">&lt;/strong&gt;</ept> for this tutorial.</source>
            <target state="new">You must download <bpt id="2">&lt;strong&gt;</bpt>SQL Server 2016 Management Studio (CTP 2.1)<ept id="2">&lt;/strong&gt;</ept> for this tutorial.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Estimated time to completion: 15 minutes (includes download time)</source>
            <target state="new">Estimated time to completion: 15 minutes (includes download time)</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This tutorial uses a "school" sample database that is purposefully simple; all of its objects are compatible with Azure SQL Database, eliminating the need to modify or prepare the database for migration.</source>
            <target state="new">This tutorial uses a "school" sample database that is purposefully simple; all of its objects are compatible with Azure SQL Database, eliminating the need to modify or prepare the database for migration.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>If you are migrating a more complex existing database, you could also consider using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Database Migration Wizard<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and see this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>overview<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you are migrating a more complex existing database, you could also consider using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Database Migration Wizard<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and see this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>overview<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure account<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure account<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For a free trial, see this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>offer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a free trial, see this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>offer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>**SQL Server Management Studio**<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Download <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>**SQL Server Management Studio**<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>(For more information about the tool, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Management Studio - June 2015 Release Notes<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">(For more information about the tool, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Management Studio - June 2015 Release Notes<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>An existing <bpt id="2">&lt;strong&gt;</bpt>Azure SQL Database server<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">An existing <bpt id="2">&lt;strong&gt;</bpt>Azure SQL Database server<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In order to create a server, you must create at least one database first.</source>
            <target state="new">In order to create a server, you must create at least one database first.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>When you create a database, you have the choice of creating it on a new server, or on an existing server.</source>
            <target state="new">When you create a database, you have the choice of creating it on a new server, or on an existing server.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>For instructions on creating a new database (on a new server), see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first Azure SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions on creating a new database (on a new server), see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first Azure SQL Database<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Create the school database on an on-premises server</source>
            <target state="new">Create the school database on an on-premises server</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Run these scripts in SQL Server Management Studio (SSMS) to create an on-premises version of the "school" database.</source>
            <target state="new">Run these scripts in SQL Server Management Studio (SSMS) to create an on-premises version of the "school" database.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>In SSMS, connect to an on-premises server.</source>
            <target state="new">In SSMS, connect to an on-premises server.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>Databases<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>New Database<ept id="4">&lt;/strong&gt;</ept>, and enter <bpt id="6">&lt;em&gt;</bpt>school<ept id="6">&lt;/em&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>Databases<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>New Database<ept id="4">&lt;/strong&gt;</ept>, and enter <bpt id="6">&lt;em&gt;</bpt>school<ept id="6">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Right-click on <bpt id="2">&lt;em&gt;</bpt>school<ept id="2">&lt;/em&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>New Query<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click on <bpt id="2">&lt;em&gt;</bpt>school<ept id="2">&lt;/em&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>New Query<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Copy and execute this script:</source>
            <target state="new">Copy and execute this script:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>
    -- Create the Department table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Department]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Department](
        <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>DepartmentID[int]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Name[nvarchar]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Budget[money]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="8CapsExtId1">&lt;link&gt;</bpt><bpt id="8CapsExtId2">&lt;linkText&gt;</bpt>StartDate[datetime]<ept id="8CapsExtId2">&lt;/linkText&gt;</ept><bpt id="8CapsExtId3">&lt;title&gt;</bpt><ept id="8CapsExtId3">&lt;/title&gt;</ept><ept id="8CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Administrator[int]<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept> NULL,
     CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED 
    (
    [DepartmentID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Create the Person table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Person]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Person](
        <bpt id="12CapsExtId1">&lt;link&gt;</bpt><bpt id="12CapsExtId2">&lt;linkText&gt;</bpt>PersonID[int]<ept id="12CapsExtId2">&lt;/linkText&gt;</ept><bpt id="12CapsExtId3">&lt;title&gt;</bpt><ept id="12CapsExtId3">&lt;/title&gt;</ept><ept id="12CapsExtId1">&lt;/link&gt;</ept> IDENTITY(1,1) NOT NULL,
        <bpt id="14CapsExtId1">&lt;link&gt;</bpt><bpt id="14CapsExtId2">&lt;linkText&gt;</bpt>LastName[nvarchar]<ept id="14CapsExtId2">&lt;/linkText&gt;</ept><bpt id="14CapsExtId3">&lt;title&gt;</bpt><ept id="14CapsExtId3">&lt;/title&gt;</ept><ept id="14CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="16CapsExtId1">&lt;link&gt;</bpt><bpt id="16CapsExtId2">&lt;linkText&gt;</bpt>FirstName[nvarchar]<ept id="16CapsExtId2">&lt;/linkText&gt;</ept><bpt id="16CapsExtId3">&lt;title&gt;</bpt><ept id="16CapsExtId3">&lt;/title&gt;</ept><ept id="16CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="18CapsExtId1">&lt;link&gt;</bpt><bpt id="18CapsExtId2">&lt;linkText&gt;</bpt>HireDate[datetime]<ept id="18CapsExtId2">&lt;/linkText&gt;</ept><bpt id="18CapsExtId3">&lt;title&gt;</bpt><ept id="18CapsExtId3">&lt;/title&gt;</ept><ept id="18CapsExtId1">&lt;/link&gt;</ept> NULL,
        <bpt id="20CapsExtId1">&lt;link&gt;</bpt><bpt id="20CapsExtId2">&lt;linkText&gt;</bpt>EnrollmentDate[datetime]<ept id="20CapsExtId2">&lt;/linkText&gt;</ept><bpt id="20CapsExtId3">&lt;title&gt;</bpt><ept id="20CapsExtId3">&lt;/title&gt;</ept><ept id="20CapsExtId1">&lt;/link&gt;</ept> NULL,
     CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
    (
    [PersonID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the OnsiteCourse table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OnsiteCourse]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OnsiteCourse](
        <bpt id="22CapsExtId1">&lt;link&gt;</bpt><bpt id="22CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="22CapsExtId2">&lt;/linkText&gt;</ept><bpt id="22CapsExtId3">&lt;title&gt;</bpt><ept id="22CapsExtId3">&lt;/title&gt;</ept><ept id="22CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="24CapsExtId1">&lt;link&gt;</bpt><bpt id="24CapsExtId2">&lt;linkText&gt;</bpt>Location[nvarchar]<ept id="24CapsExtId2">&lt;/linkText&gt;</ept><bpt id="24CapsExtId3">&lt;title&gt;</bpt><ept id="24CapsExtId3">&lt;/title&gt;</ept><ept id="24CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="26CapsExtId1">&lt;link&gt;</bpt><bpt id="26CapsExtId2">&lt;linkText&gt;</bpt>Days[nvarchar]<ept id="26CapsExtId2">&lt;/linkText&gt;</ept><bpt id="26CapsExtId3">&lt;title&gt;</bpt><ept id="26CapsExtId3">&lt;/title&gt;</ept><ept id="26CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="28CapsExtId1">&lt;link&gt;</bpt><bpt id="28CapsExtId2">&lt;linkText&gt;</bpt>Time[smalldatetime]<ept id="28CapsExtId2">&lt;/linkText&gt;</ept><bpt id="28CapsExtId3">&lt;title&gt;</bpt><ept id="28CapsExtId3">&lt;/title&gt;</ept><ept id="28CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_OnsiteCourse] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the OnlineCourse table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OnlineCourse]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OnlineCourse](
        <bpt id="30CapsExtId1">&lt;link&gt;</bpt><bpt id="30CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="30CapsExtId2">&lt;/linkText&gt;</ept><bpt id="30CapsExtId3">&lt;title&gt;</bpt><ept id="30CapsExtId3">&lt;/title&gt;</ept><ept id="30CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="32CapsExtId1">&lt;link&gt;</bpt><bpt id="32CapsExtId2">&lt;linkText&gt;</bpt>URL[nvarchar]<ept id="32CapsExtId2">&lt;/linkText&gt;</ept><bpt id="32CapsExtId3">&lt;title&gt;</bpt><ept id="32CapsExtId3">&lt;/title&gt;</ept><ept id="32CapsExtId1">&lt;/link&gt;</ept>(100) NOT NULL,
     CONSTRAINT [PK_OnlineCourse] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    --Create the StudentGrade table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[StudentGrade]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[StudentGrade](
        <bpt id="34CapsExtId1">&lt;link&gt;</bpt><bpt id="34CapsExtId2">&lt;linkText&gt;</bpt>EnrollmentID[int]<ept id="34CapsExtId2">&lt;/linkText&gt;</ept><bpt id="34CapsExtId3">&lt;title&gt;</bpt><ept id="34CapsExtId3">&lt;/title&gt;</ept><ept id="34CapsExtId1">&lt;/link&gt;</ept> IDENTITY(1,1) NOT NULL,
        <bpt id="36CapsExtId1">&lt;link&gt;</bpt><bpt id="36CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="36CapsExtId2">&lt;/linkText&gt;</ept><bpt id="36CapsExtId3">&lt;title&gt;</bpt><ept id="36CapsExtId3">&lt;/title&gt;</ept><ept id="36CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="38CapsExtId1">&lt;link&gt;</bpt><bpt id="38CapsExtId2">&lt;linkText&gt;</bpt>StudentID[int]<ept id="38CapsExtId2">&lt;/linkText&gt;</ept><bpt id="38CapsExtId3">&lt;title&gt;</bpt><ept id="38CapsExtId3">&lt;/title&gt;</ept><ept id="38CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="40CapsExtId1">&lt;link&gt;</bpt><bpt id="40CapsExtId2">&lt;linkText&gt;</bpt>Grade[decimal]<ept id="40CapsExtId2">&lt;/linkText&gt;</ept><bpt id="40CapsExtId3">&lt;title&gt;</bpt><ept id="40CapsExtId3">&lt;/title&gt;</ept><ept id="40CapsExtId1">&lt;/link&gt;</ept>(3, 2) NULL,
     CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED 
    (
        [EnrollmentID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the CourseInstructor table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[CourseInstructor]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[CourseInstructor](
        <bpt id="42CapsExtId1">&lt;link&gt;</bpt><bpt id="42CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="42CapsExtId2">&lt;/linkText&gt;</ept><bpt id="42CapsExtId3">&lt;title&gt;</bpt><ept id="42CapsExtId3">&lt;/title&gt;</ept><ept id="42CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="44CapsExtId1">&lt;link&gt;</bpt><bpt id="44CapsExtId2">&lt;linkText&gt;</bpt>PersonID[int]<ept id="44CapsExtId2">&lt;/linkText&gt;</ept><bpt id="44CapsExtId3">&lt;title&gt;</bpt><ept id="44CapsExtId3">&lt;/title&gt;</ept><ept id="44CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_CourseInstructor] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC,
        [PersonID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the Course table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Course]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Course](
        <bpt id="46CapsExtId1">&lt;link&gt;</bpt><bpt id="46CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="46CapsExtId2">&lt;/linkText&gt;</ept><bpt id="46CapsExtId3">&lt;title&gt;</bpt><ept id="46CapsExtId3">&lt;/title&gt;</ept><ept id="46CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="48CapsExtId1">&lt;link&gt;</bpt><bpt id="48CapsExtId2">&lt;linkText&gt;</bpt>Title[nvarchar]<ept id="48CapsExtId2">&lt;/linkText&gt;</ept><bpt id="48CapsExtId3">&lt;title&gt;</bpt><ept id="48CapsExtId3">&lt;/title&gt;</ept><ept id="48CapsExtId1">&lt;/link&gt;</ept>(100) NOT NULL,
        <bpt id="50CapsExtId1">&lt;link&gt;</bpt><bpt id="50CapsExtId2">&lt;linkText&gt;</bpt>Credits[int]<ept id="50CapsExtId2">&lt;/linkText&gt;</ept><bpt id="50CapsExtId3">&lt;title&gt;</bpt><ept id="50CapsExtId3">&lt;/title&gt;</ept><ept id="50CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="52CapsExtId1">&lt;link&gt;</bpt><bpt id="52CapsExtId2">&lt;linkText&gt;</bpt>DepartmentID[int]<ept id="52CapsExtId2">&lt;/linkText&gt;</ept><bpt id="52CapsExtId3">&lt;title&gt;</bpt><ept id="52CapsExtId3">&lt;/title&gt;</ept><ept id="52CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_School.Course] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Create the OfficeAssignment table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OfficeAssignment]')
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OfficeAssignment](
        <bpt id="54CapsExtId1">&lt;link&gt;</bpt><bpt id="54CapsExtId2">&lt;linkText&gt;</bpt>InstructorID[int]<ept id="54CapsExtId2">&lt;/linkText&gt;</ept><bpt id="54CapsExtId3">&lt;title&gt;</bpt><ept id="54CapsExtId3">&lt;/title&gt;</ept><ept id="54CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="56CapsExtId1">&lt;link&gt;</bpt><bpt id="56CapsExtId2">&lt;linkText&gt;</bpt>Location[nvarchar]<ept id="56CapsExtId2">&lt;/linkText&gt;</ept><bpt id="56CapsExtId3">&lt;title&gt;</bpt><ept id="56CapsExtId3">&lt;/title&gt;</ept><ept id="56CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="58CapsExtId1">&lt;link&gt;</bpt><bpt id="58CapsExtId2">&lt;linkText&gt;</bpt>Timestamp[timestamp]<ept id="58CapsExtId2">&lt;/linkText&gt;</ept><bpt id="58CapsExtId3">&lt;title&gt;</bpt><ept id="58CapsExtId3">&lt;/title&gt;</ept><ept id="58CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_OfficeAssignment] PRIMARY KEY CLUSTERED 
    (
        [InstructorID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Define the relationship between OnsiteCourse and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_OnsiteCourse_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[OnsiteCourse]'))
    ALTER TABLE [dbo].[OnsiteCourse]  WITH CHECK ADD  
       CONSTRAINT [FK_OnsiteCourse_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[OnsiteCourse] CHECK 
       CONSTRAINT [FK_OnsiteCourse_Course];
    GO

    -- Define the relationship between OnlineCourse and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_OnlineCourse_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[OnlineCourse]'))
    ALTER TABLE [dbo].[OnlineCourse]  WITH CHECK ADD  
       CONSTRAINT [FK_OnlineCourse_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[OnlineCourse] CHECK 
       CONSTRAINT [FK_OnlineCourse_Course];
    GO
    -- Define the relationship between StudentGrade and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_StudentGrade_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[StudentGrade]'))
    ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  
       CONSTRAINT [FK_StudentGrade_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[StudentGrade] CHECK 
       CONSTRAINT [FK_StudentGrade_Course];
    GO

    --Define the relationship between StudentGrade and Student.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_StudentGrade_Student]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[StudentGrade]'))   
    ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  
       CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[StudentGrade] CHECK 
       CONSTRAINT [FK_StudentGrade_Student];
    GO

    -- Define the relationship between CourseInstructor and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
     WHERE object_id = OBJECT_ID(N'[dbo].[FK_CourseInstructor_Course]')
     AND parent_object_id = OBJECT_ID(N'[dbo].[CourseInstructor]'))
    ALTER TABLE [dbo].[CourseInstructor]  WITH CHECK ADD  
     CONSTRAINT [FK_CourseInstructor_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[CourseInstructor] CHECK 
      CONSTRAINT [FK_CourseInstructor_Course];
    GO

    -- Define the relationship between CourseInstructor and Person.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
      WHERE object_id = OBJECT_ID(N'[dbo].[FK_CourseInstructor_Person]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[CourseInstructor]'))
    ALTER TABLE [dbo].[CourseInstructor]  WITH CHECK ADD  
      CONSTRAINT [FK_CourseInstructor_Person] FOREIGN KEY([PersonID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[CourseInstructor] CHECK 
     CONSTRAINT [FK_CourseInstructor_Person];
    GO

    -- Define the relationship between Course and Department.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_Course_Department]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[Course]'))
    ALTER TABLE [dbo].[Course]  WITH CHECK ADD  
       CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])
    REFERENCES [dbo].[Department] ([DepartmentID]);
    GO
    ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department];
    GO

    --Define the relationship between OfficeAssignment and Person.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
      WHERE object_id = OBJECT_ID(N'[dbo].[FK_OfficeAssignment_Person]')
      AND parent_object_id = OBJECT_ID(N'[dbo].[OfficeAssignment]'))
    ALTER TABLE [dbo].[OfficeAssignment]  WITH CHECK ADD  
      CONSTRAINT [FK_OfficeAssignment_Person] FOREIGN KEY([InstructorID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[OfficeAssignment] CHECK 
     CONSTRAINT [FK_OfficeAssignment_Person];
    GO
</source>
            <target state="new">
    -- Create the Department table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Department]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Department](
        <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>DepartmentID[int]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Name[nvarchar]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Budget[money]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="8CapsExtId1">&lt;link&gt;</bpt><bpt id="8CapsExtId2">&lt;linkText&gt;</bpt>StartDate[datetime]<ept id="8CapsExtId2">&lt;/linkText&gt;</ept><bpt id="8CapsExtId3">&lt;title&gt;</bpt><ept id="8CapsExtId3">&lt;/title&gt;</ept><ept id="8CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Administrator[int]<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept> NULL,
     CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED 
    (
    [DepartmentID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Create the Person table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Person]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Person](
        <bpt id="12CapsExtId1">&lt;link&gt;</bpt><bpt id="12CapsExtId2">&lt;linkText&gt;</bpt>PersonID[int]<ept id="12CapsExtId2">&lt;/linkText&gt;</ept><bpt id="12CapsExtId3">&lt;title&gt;</bpt><ept id="12CapsExtId3">&lt;/title&gt;</ept><ept id="12CapsExtId1">&lt;/link&gt;</ept> IDENTITY(1,1) NOT NULL,
        <bpt id="14CapsExtId1">&lt;link&gt;</bpt><bpt id="14CapsExtId2">&lt;linkText&gt;</bpt>LastName[nvarchar]<ept id="14CapsExtId2">&lt;/linkText&gt;</ept><bpt id="14CapsExtId3">&lt;title&gt;</bpt><ept id="14CapsExtId3">&lt;/title&gt;</ept><ept id="14CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="16CapsExtId1">&lt;link&gt;</bpt><bpt id="16CapsExtId2">&lt;linkText&gt;</bpt>FirstName[nvarchar]<ept id="16CapsExtId2">&lt;/linkText&gt;</ept><bpt id="16CapsExtId3">&lt;title&gt;</bpt><ept id="16CapsExtId3">&lt;/title&gt;</ept><ept id="16CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="18CapsExtId1">&lt;link&gt;</bpt><bpt id="18CapsExtId2">&lt;linkText&gt;</bpt>HireDate[datetime]<ept id="18CapsExtId2">&lt;/linkText&gt;</ept><bpt id="18CapsExtId3">&lt;title&gt;</bpt><ept id="18CapsExtId3">&lt;/title&gt;</ept><ept id="18CapsExtId1">&lt;/link&gt;</ept> NULL,
        <bpt id="20CapsExtId1">&lt;link&gt;</bpt><bpt id="20CapsExtId2">&lt;linkText&gt;</bpt>EnrollmentDate[datetime]<ept id="20CapsExtId2">&lt;/linkText&gt;</ept><bpt id="20CapsExtId3">&lt;title&gt;</bpt><ept id="20CapsExtId3">&lt;/title&gt;</ept><ept id="20CapsExtId1">&lt;/link&gt;</ept> NULL,
     CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
    (
    [PersonID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the OnsiteCourse table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OnsiteCourse]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OnsiteCourse](
        <bpt id="22CapsExtId1">&lt;link&gt;</bpt><bpt id="22CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="22CapsExtId2">&lt;/linkText&gt;</ept><bpt id="22CapsExtId3">&lt;title&gt;</bpt><ept id="22CapsExtId3">&lt;/title&gt;</ept><ept id="22CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="24CapsExtId1">&lt;link&gt;</bpt><bpt id="24CapsExtId2">&lt;linkText&gt;</bpt>Location[nvarchar]<ept id="24CapsExtId2">&lt;/linkText&gt;</ept><bpt id="24CapsExtId3">&lt;title&gt;</bpt><ept id="24CapsExtId3">&lt;/title&gt;</ept><ept id="24CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="26CapsExtId1">&lt;link&gt;</bpt><bpt id="26CapsExtId2">&lt;linkText&gt;</bpt>Days[nvarchar]<ept id="26CapsExtId2">&lt;/linkText&gt;</ept><bpt id="26CapsExtId3">&lt;title&gt;</bpt><ept id="26CapsExtId3">&lt;/title&gt;</ept><ept id="26CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="28CapsExtId1">&lt;link&gt;</bpt><bpt id="28CapsExtId2">&lt;linkText&gt;</bpt>Time[smalldatetime]<ept id="28CapsExtId2">&lt;/linkText&gt;</ept><bpt id="28CapsExtId3">&lt;title&gt;</bpt><ept id="28CapsExtId3">&lt;/title&gt;</ept><ept id="28CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_OnsiteCourse] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the OnlineCourse table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OnlineCourse]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OnlineCourse](
        <bpt id="30CapsExtId1">&lt;link&gt;</bpt><bpt id="30CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="30CapsExtId2">&lt;/linkText&gt;</ept><bpt id="30CapsExtId3">&lt;title&gt;</bpt><ept id="30CapsExtId3">&lt;/title&gt;</ept><ept id="30CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="32CapsExtId1">&lt;link&gt;</bpt><bpt id="32CapsExtId2">&lt;linkText&gt;</bpt>URL[nvarchar]<ept id="32CapsExtId2">&lt;/linkText&gt;</ept><bpt id="32CapsExtId3">&lt;title&gt;</bpt><ept id="32CapsExtId3">&lt;/title&gt;</ept><ept id="32CapsExtId1">&lt;/link&gt;</ept>(100) NOT NULL,
     CONSTRAINT [PK_OnlineCourse] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    --Create the StudentGrade table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[StudentGrade]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[StudentGrade](
        <bpt id="34CapsExtId1">&lt;link&gt;</bpt><bpt id="34CapsExtId2">&lt;linkText&gt;</bpt>EnrollmentID[int]<ept id="34CapsExtId2">&lt;/linkText&gt;</ept><bpt id="34CapsExtId3">&lt;title&gt;</bpt><ept id="34CapsExtId3">&lt;/title&gt;</ept><ept id="34CapsExtId1">&lt;/link&gt;</ept> IDENTITY(1,1) NOT NULL,
        <bpt id="36CapsExtId1">&lt;link&gt;</bpt><bpt id="36CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="36CapsExtId2">&lt;/linkText&gt;</ept><bpt id="36CapsExtId3">&lt;title&gt;</bpt><ept id="36CapsExtId3">&lt;/title&gt;</ept><ept id="36CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="38CapsExtId1">&lt;link&gt;</bpt><bpt id="38CapsExtId2">&lt;linkText&gt;</bpt>StudentID[int]<ept id="38CapsExtId2">&lt;/linkText&gt;</ept><bpt id="38CapsExtId3">&lt;title&gt;</bpt><ept id="38CapsExtId3">&lt;/title&gt;</ept><ept id="38CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="40CapsExtId1">&lt;link&gt;</bpt><bpt id="40CapsExtId2">&lt;linkText&gt;</bpt>Grade[decimal]<ept id="40CapsExtId2">&lt;/linkText&gt;</ept><bpt id="40CapsExtId3">&lt;title&gt;</bpt><ept id="40CapsExtId3">&lt;/title&gt;</ept><ept id="40CapsExtId1">&lt;/link&gt;</ept>(3, 2) NULL,
     CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED 
    (
        [EnrollmentID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the CourseInstructor table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[CourseInstructor]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[CourseInstructor](
        <bpt id="42CapsExtId1">&lt;link&gt;</bpt><bpt id="42CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="42CapsExtId2">&lt;/linkText&gt;</ept><bpt id="42CapsExtId3">&lt;title&gt;</bpt><ept id="42CapsExtId3">&lt;/title&gt;</ept><ept id="42CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="44CapsExtId1">&lt;link&gt;</bpt><bpt id="44CapsExtId2">&lt;linkText&gt;</bpt>PersonID[int]<ept id="44CapsExtId2">&lt;/linkText&gt;</ept><bpt id="44CapsExtId3">&lt;title&gt;</bpt><ept id="44CapsExtId3">&lt;/title&gt;</ept><ept id="44CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_CourseInstructor] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC,
        [PersonID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    ) 
    END;
    GO

    -- Create the Course table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[Course]') 
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[Course](
        <bpt id="46CapsExtId1">&lt;link&gt;</bpt><bpt id="46CapsExtId2">&lt;linkText&gt;</bpt>CourseID[int]<ept id="46CapsExtId2">&lt;/linkText&gt;</ept><bpt id="46CapsExtId3">&lt;title&gt;</bpt><ept id="46CapsExtId3">&lt;/title&gt;</ept><ept id="46CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="48CapsExtId1">&lt;link&gt;</bpt><bpt id="48CapsExtId2">&lt;linkText&gt;</bpt>Title[nvarchar]<ept id="48CapsExtId2">&lt;/linkText&gt;</ept><bpt id="48CapsExtId3">&lt;title&gt;</bpt><ept id="48CapsExtId3">&lt;/title&gt;</ept><ept id="48CapsExtId1">&lt;/link&gt;</ept>(100) NOT NULL,
        <bpt id="50CapsExtId1">&lt;link&gt;</bpt><bpt id="50CapsExtId2">&lt;linkText&gt;</bpt>Credits[int]<ept id="50CapsExtId2">&lt;/linkText&gt;</ept><bpt id="50CapsExtId3">&lt;title&gt;</bpt><ept id="50CapsExtId3">&lt;/title&gt;</ept><ept id="50CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="52CapsExtId1">&lt;link&gt;</bpt><bpt id="52CapsExtId2">&lt;linkText&gt;</bpt>DepartmentID[int]<ept id="52CapsExtId2">&lt;/linkText&gt;</ept><bpt id="52CapsExtId3">&lt;title&gt;</bpt><ept id="52CapsExtId3">&lt;/title&gt;</ept><ept id="52CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_School.Course] PRIMARY KEY CLUSTERED 
    (
        [CourseID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Create the OfficeAssignment table.
    IF NOT EXISTS (SELECT * FROM sys.objects 
        WHERE object_id = OBJECT_ID(N'[dbo].[OfficeAssignment]')
        AND type in (N'U'))
    BEGIN
    CREATE TABLE [dbo].[OfficeAssignment](
        <bpt id="54CapsExtId1">&lt;link&gt;</bpt><bpt id="54CapsExtId2">&lt;linkText&gt;</bpt>InstructorID[int]<ept id="54CapsExtId2">&lt;/linkText&gt;</ept><bpt id="54CapsExtId3">&lt;title&gt;</bpt><ept id="54CapsExtId3">&lt;/title&gt;</ept><ept id="54CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
        <bpt id="56CapsExtId1">&lt;link&gt;</bpt><bpt id="56CapsExtId2">&lt;linkText&gt;</bpt>Location[nvarchar]<ept id="56CapsExtId2">&lt;/linkText&gt;</ept><bpt id="56CapsExtId3">&lt;title&gt;</bpt><ept id="56CapsExtId3">&lt;/title&gt;</ept><ept id="56CapsExtId1">&lt;/link&gt;</ept>(50) NOT NULL,
        <bpt id="58CapsExtId1">&lt;link&gt;</bpt><bpt id="58CapsExtId2">&lt;linkText&gt;</bpt>Timestamp[timestamp]<ept id="58CapsExtId2">&lt;/linkText&gt;</ept><bpt id="58CapsExtId3">&lt;title&gt;</bpt><ept id="58CapsExtId3">&lt;/title&gt;</ept><ept id="58CapsExtId1">&lt;/link&gt;</ept> NOT NULL,
     CONSTRAINT [PK_OfficeAssignment] PRIMARY KEY CLUSTERED 
    (
        [InstructorID] ASC
    )WITH (IGNORE_DUP_KEY = OFF)
    )
    END;
    GO

    -- Define the relationship between OnsiteCourse and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_OnsiteCourse_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[OnsiteCourse]'))
    ALTER TABLE [dbo].[OnsiteCourse]  WITH CHECK ADD  
       CONSTRAINT [FK_OnsiteCourse_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[OnsiteCourse] CHECK 
       CONSTRAINT [FK_OnsiteCourse_Course];
    GO

    -- Define the relationship between OnlineCourse and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_OnlineCourse_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[OnlineCourse]'))
    ALTER TABLE [dbo].[OnlineCourse]  WITH CHECK ADD  
       CONSTRAINT [FK_OnlineCourse_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[OnlineCourse] CHECK 
       CONSTRAINT [FK_OnlineCourse_Course];
    GO
    -- Define the relationship between StudentGrade and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_StudentGrade_Course]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[StudentGrade]'))
    ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  
       CONSTRAINT [FK_StudentGrade_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[StudentGrade] CHECK 
       CONSTRAINT [FK_StudentGrade_Course];
    GO

    --Define the relationship between StudentGrade and Student.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_StudentGrade_Student]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[StudentGrade]'))   
    ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  
       CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[StudentGrade] CHECK 
       CONSTRAINT [FK_StudentGrade_Student];
    GO

    -- Define the relationship between CourseInstructor and Course.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
     WHERE object_id = OBJECT_ID(N'[dbo].[FK_CourseInstructor_Course]')
     AND parent_object_id = OBJECT_ID(N'[dbo].[CourseInstructor]'))
    ALTER TABLE [dbo].[CourseInstructor]  WITH CHECK ADD  
     CONSTRAINT [FK_CourseInstructor_Course] FOREIGN KEY([CourseID])
    REFERENCES [dbo].[Course] ([CourseID]);
    GO
    ALTER TABLE [dbo].[CourseInstructor] CHECK 
      CONSTRAINT [FK_CourseInstructor_Course];
    GO

    -- Define the relationship between CourseInstructor and Person.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
      WHERE object_id = OBJECT_ID(N'[dbo].[FK_CourseInstructor_Person]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[CourseInstructor]'))
    ALTER TABLE [dbo].[CourseInstructor]  WITH CHECK ADD  
      CONSTRAINT [FK_CourseInstructor_Person] FOREIGN KEY([PersonID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[CourseInstructor] CHECK 
     CONSTRAINT [FK_CourseInstructor_Person];
    GO

    -- Define the relationship between Course and Department.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
       WHERE object_id = OBJECT_ID(N'[dbo].[FK_Course_Department]')
       AND parent_object_id = OBJECT_ID(N'[dbo].[Course]'))
    ALTER TABLE [dbo].[Course]  WITH CHECK ADD  
       CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])
    REFERENCES [dbo].[Department] ([DepartmentID]);
    GO
    ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department];
    GO

    --Define the relationship between OfficeAssignment and Person.
    IF NOT EXISTS (SELECT * FROM sys.foreign_keys 
      WHERE object_id = OBJECT_ID(N'[dbo].[FK_OfficeAssignment_Person]')
      AND parent_object_id = OBJECT_ID(N'[dbo].[OfficeAssignment]'))
    ALTER TABLE [dbo].[OfficeAssignment]  WITH CHECK ADD  
      CONSTRAINT [FK_OfficeAssignment_Person] FOREIGN KEY([InstructorID])
    REFERENCES [dbo].[Person] ([PersonID]);
    GO
    ALTER TABLE [dbo].[OfficeAssignment] CHECK 
     CONSTRAINT [FK_OfficeAssignment_Person];
    GO
</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Next, copy and execute the Insert Data script.</source>
            <target state="new">Next, copy and execute the Insert Data script.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>
    -- Insert data into the Person table.
    SET IDENTITY_INSERT dbo.Person ON;
    GO
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (1, 'Abercrombie', 'Kim', '1995-03-11', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (2, 'Barzdukas', 'Gytis', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (3, 'Justice', 'Peggy', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (4, 'Fakhouri', 'Fadi', '2002-08-06', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (5, 'Harui', 'Roger', '1998-07-01', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (6, 'Li', 'Yan', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (7, 'Norman', 'Laura', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (8, 'Olivotto', 'Nino', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (9, 'Tang', 'Wayne', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (10, 'Alonso', 'Meredith', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (11, 'Lopez', 'Sophia', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (12, 'Browning', 'Meredith', null, '2000-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (13, 'Anand', 'Arturo', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (14, 'Walker', 'Alexandra', null, '2000-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (15, 'Powell', 'Carson', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (16, 'Jai', 'Damien', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (17, 'Carlson', 'Robyn', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (18, 'Zheng', 'Roger', '2004-02-12', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (19, 'Bryant', 'Carson', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (20, 'Suarez', 'Robyn', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (21, 'Holt', 'Roger', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (22, 'Alexander', 'Carson', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (23, 'Morgan', 'Isaiah', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (24, 'Martin', 'Randall', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (25, 'Kapoor', 'Candace', '2001-01-15', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (26, 'Rogers', 'Cody', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (27, 'Serrano', 'Stacy', '1999-06-01', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (28, 'White', 'Anthony', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (29, 'Griffin', 'Rachel', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (30, 'Shan', 'Alicia', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (31, 'Stewart', 'Jasmine', '1997-10-12', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (32, 'Xu', 'Kristen', '2001-7-23', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (33, 'Gao', 'Erica', null, '2003-01-30');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (34, 'Van Houten', 'Roger', '2000-12-07', null);
    GO
    SET IDENTITY_INSERT dbo.Person OFF;
    GO
    -- Insert data into the Department table.
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (1, 'Engineering', 350000.00, '2007-09-01', 2);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (2, 'English', 120000.00, '2007-09-01', 6);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (4, 'Economics', 200000.00, '2007-09-01', 4);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (7, 'Mathematics', 250000.00, '2007-09-01', 3);
    GO
    -- Insert data into the Course table.
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1050, 'Chemistry', 4, 1);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1061, 'Physics', 4, 1);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1045, 'Calculus', 4, 7);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2030, 'Poetry', 2, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2021, 'Composition', 3, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2042, 'Literature', 4, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4022, 'Microeconomics', 3, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4041, 'Macroeconomics', 3, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4061, 'Quantitative', 2, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (3141, 'Trigonometry', 4, 7);
    GO
    -- Insert data into the OnlineCourse table.
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (2030, 'http://www.fineartschool.net/Poetry');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (2021, 'http://www.fineartschool.net/Composition');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (4041, 'http://www.fineartschool.net/Macroeconomics');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (3141, 'http://www.fineartschool.net/Trigonometry');
    --Insert data into OnsiteCourse table.
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1050, '123 Smith', 'MTWH', '11:30');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1061, '234 Smith', 'TWHF', '13:15');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1045, '121 Smith','MWHF', '15:30');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (4061, '22 Williams', 'TH', '11:15');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (2042, '225 Adams', 'MTWH', '11:00');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (4022, '23 Williams', 'MWF', '9:00');
    -- Insert data into the CourseInstructor table.
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1050, 1);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1061, 31);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1045, 5);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2030, 4);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2021, 27);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2042, 25);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4022, 18);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4041, 32);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4061, 34);
    GO
    --Insert data into the OfficeAssignment table.
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (1, '17 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (4, '29 Adams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (5, '37 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (18, '143 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (25, '57 Adams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (27, '271 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (31, '131 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (32, '203 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (34, '213 Smith');
    -- Insert data into the StudentGrade table.
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 2, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2030, 2, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 3, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2030, 3, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 6, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 6, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 7, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 7, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 8, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 8, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 9, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 10, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 11, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 12, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 12, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 14, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 13, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 13, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 14, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 15, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 16, 2);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 17, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 19, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 20, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 21, 2);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 22, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 22, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 22, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 23, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1045, 23, 1.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 24, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 25, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 26, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 26, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 27, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1045, 28, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 28, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 29, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 30, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 30, 4);
    GO
</source>
            <target state="new">
    -- Insert data into the Person table.
    SET IDENTITY_INSERT dbo.Person ON;
    GO
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (1, 'Abercrombie', 'Kim', '1995-03-11', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (2, 'Barzdukas', 'Gytis', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (3, 'Justice', 'Peggy', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (4, 'Fakhouri', 'Fadi', '2002-08-06', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (5, 'Harui', 'Roger', '1998-07-01', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (6, 'Li', 'Yan', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (7, 'Norman', 'Laura', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (8, 'Olivotto', 'Nino', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (9, 'Tang', 'Wayne', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (10, 'Alonso', 'Meredith', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (11, 'Lopez', 'Sophia', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (12, 'Browning', 'Meredith', null, '2000-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (13, 'Anand', 'Arturo', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (14, 'Walker', 'Alexandra', null, '2000-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (15, 'Powell', 'Carson', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (16, 'Jai', 'Damien', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (17, 'Carlson', 'Robyn', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (18, 'Zheng', 'Roger', '2004-02-12', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (19, 'Bryant', 'Carson', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (20, 'Suarez', 'Robyn', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (21, 'Holt', 'Roger', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (22, 'Alexander', 'Carson', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (23, 'Morgan', 'Isaiah', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (24, 'Martin', 'Randall', null, '2005-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (25, 'Kapoor', 'Candace', '2001-01-15', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (26, 'Rogers', 'Cody', null, '2002-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (27, 'Serrano', 'Stacy', '1999-06-01', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (28, 'White', 'Anthony', null, '2001-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (29, 'Griffin', 'Rachel', null, '2004-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (30, 'Shan', 'Alicia', null, '2003-09-01');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (31, 'Stewart', 'Jasmine', '1997-10-12', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (32, 'Xu', 'Kristen', '2001-7-23', null);
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (33, 'Gao', 'Erica', null, '2003-01-30');
    INSERT INTO dbo.Person (PersonID, LastName, FirstName, HireDate, EnrollmentDate)
    VALUES (34, 'Van Houten', 'Roger', '2000-12-07', null);
    GO
    SET IDENTITY_INSERT dbo.Person OFF;
    GO
    -- Insert data into the Department table.
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (1, 'Engineering', 350000.00, '2007-09-01', 2);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (2, 'English', 120000.00, '2007-09-01', 6);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (4, 'Economics', 200000.00, '2007-09-01', 4);
    INSERT INTO dbo.Department (DepartmentID, [Name], Budget, StartDate, Administrator)
    VALUES (7, 'Mathematics', 250000.00, '2007-09-01', 3);
    GO
    -- Insert data into the Course table.
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1050, 'Chemistry', 4, 1);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1061, 'Physics', 4, 1);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (1045, 'Calculus', 4, 7);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2030, 'Poetry', 2, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2021, 'Composition', 3, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (2042, 'Literature', 4, 2);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4022, 'Microeconomics', 3, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4041, 'Macroeconomics', 3, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (4061, 'Quantitative', 2, 4);
    INSERT INTO dbo.Course (CourseID, Title, Credits, DepartmentID)
    VALUES (3141, 'Trigonometry', 4, 7);
    GO
    -- Insert data into the OnlineCourse table.
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (2030, 'http://www.fineartschool.net/Poetry');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (2021, 'http://www.fineartschool.net/Composition');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (4041, 'http://www.fineartschool.net/Macroeconomics');
    INSERT INTO dbo.OnlineCourse (CourseID, URL)
    VALUES (3141, 'http://www.fineartschool.net/Trigonometry');
    --Insert data into OnsiteCourse table.
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1050, '123 Smith', 'MTWH', '11:30');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1061, '234 Smith', 'TWHF', '13:15');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (1045, '121 Smith','MWHF', '15:30');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (4061, '22 Williams', 'TH', '11:15');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (2042, '225 Adams', 'MTWH', '11:00');
    INSERT INTO dbo.OnsiteCourse (CourseID, Location, Days, [Time])
    VALUES (4022, '23 Williams', 'MWF', '9:00');
    -- Insert data into the CourseInstructor table.
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1050, 1);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1061, 31);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (1045, 5);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2030, 4);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2021, 27);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (2042, 25);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4022, 18);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4041, 32);
    INSERT INTO dbo.CourseInstructor(CourseID, PersonID)
    VALUES (4061, 34);
    GO
    --Insert data into the OfficeAssignment table.
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (1, '17 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (4, '29 Adams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (5, '37 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (18, '143 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (25, '57 Adams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (27, '271 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (31, '131 Smith');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (32, '203 Williams');
    INSERT INTO dbo.OfficeAssignment(InstructorID, Location)
    VALUES (34, '213 Smith');
    -- Insert data into the StudentGrade table.
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 2, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2030, 2, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 3, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2030, 3, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 6, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 6, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 7, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 7, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2021, 8, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (2042, 8, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 9, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 10, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 11, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 12, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 12, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 14, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 13, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 13, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 14, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 15, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 16, 2);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 17, null);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 19, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 20, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 21, 2);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 22, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4041, 22, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4061, 22, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (4022, 23, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1045, 23, 1.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 24, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 25, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 26, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 26, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 27, 3);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1045, 28, 2.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 28, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 29, 4);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1050, 30, 3.5);
    INSERT INTO dbo.StudentGrade (CourseID, StudentID, Grade)
    VALUES (1061, 30, 4);
    GO
</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>You now have an on-premises database that you can export to Azure.</source>
            <target state="new">You now have an on-premises database that you can export to Azure.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Next, you'll run a wizard that creates a .bacpac file, loads it onto Azure, and imports it into SQL Database.</source>
            <target state="new">Next, you'll run a wizard that creates a .bacpac file, loads it onto Azure, and imports it into SQL Database.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Deploy the database to Azure SQL</source>
            <target state="new">Deploy the database to Azure SQL</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In Management Studio, right-click the school database that you just created, point to <bpt id="2">&lt;strong&gt;</bpt>Tasks<ept id="2">&lt;/strong&gt;</ept>, and click <bpt id="4">&lt;strong&gt;</bpt>Deploy Database to Microsoft Azure SQL Database<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Management Studio, right-click the school database that you just created, point to <bpt id="2">&lt;strong&gt;</bpt>Tasks<ept id="2">&lt;/strong&gt;</ept>, and click <bpt id="4">&lt;strong&gt;</bpt>Deploy Database to Microsoft Azure SQL Database<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Deployment Settings<ept id="2">&lt;/strong&gt;</ept>, enter a name for the database, such as <bpt id="4">&lt;em&gt;</bpt>school<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Deployment Settings<ept id="2">&lt;/strong&gt;</ept>, enter a name for the database, such as <bpt id="4">&lt;em&gt;</bpt>school<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>. To solve problems with connectivity, try this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>troubleshooter<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>. To solve problems with connectivity, try this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>troubleshooter<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Server name<ept id="2">&lt;/strong&gt;</ept>, enter the 10-character server name, followed by <bpt id="4">&lt;strong&gt;</bpt>.database.windows.net<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Server name<ept id="2">&lt;/strong&gt;</ept>, enter the 10-character server name, followed by <bpt id="4">&lt;strong&gt;</bpt>.database.windows.net<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Authentication<ept id="2">&lt;/strong&gt;</ept>, choose <bpt id="4">&lt;strong&gt;</bpt>SQL Server Authentication<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Authentication<ept id="2">&lt;/strong&gt;</ept>, choose <bpt id="4">&lt;strong&gt;</bpt>SQL Server Authentication<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Enter the administrator login name and password that you created when provisioning the SQL Database logical server.</source>
            <target state="new">Enter the administrator login name and password that you created when provisioning the SQL Database logical server.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Options<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Options<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In Connection Properties, in <bpt id="2">&lt;strong&gt;</bpt>Connect to database<ept id="2">&lt;/strong&gt;</ept>, type <bpt id="4">&lt;strong&gt;</bpt>master<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Connection Properties, in <bpt id="2">&lt;strong&gt;</bpt>Connect to database<ept id="2">&lt;/strong&gt;</ept>, type <bpt id="4">&lt;strong&gt;</bpt>master<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> You must connect to the <bpt id="3">&lt;strong&gt;</bpt>master<ept id="3">&lt;/strong&gt;</ept> database whenever you want to create a database on the Azure SQL Database server.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> You must connect to the <bpt id="3">&lt;strong&gt;</bpt>master<ept id="3">&lt;/strong&gt;</ept> database whenever you want to create a database on the Azure SQL Database server.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>This step concludes the connection specification and takes you back to the wizard.</source>
            <target state="new">This step concludes the connection specification and takes you back to the wizard.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Next<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Finish<ept id="4">&lt;/strong&gt;</ept> to run the wizard.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Next<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Finish<ept id="4">&lt;/strong&gt;</ept> to run the wizard.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>How to: Verify database deployment</source>
            <target state="new">How to: Verify database deployment</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>In Management Studio, under <bpt id="2">&lt;strong&gt;</bpt>Object Explorer<ept id="2">&lt;/strong&gt;</ept>, click the <bpt id="4">&lt;strong&gt;</bpt>Connect<ept id="4">&lt;/strong&gt;</ept> icon.</source>
            <target state="new">In Management Studio, under <bpt id="2">&lt;strong&gt;</bpt>Object Explorer<ept id="2">&lt;/strong&gt;</ept>, click the <bpt id="4">&lt;strong&gt;</bpt>Connect<ept id="4">&lt;/strong&gt;</ept> icon.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Server<ept id="2">&lt;/strong&gt;</ept> name box, type the name of the Azure SQL server, followed by <bpt id="4">&lt;strong&gt;</bpt>database.windows.net<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Server<ept id="2">&lt;/strong&gt;</ept> name box, type the name of the Azure SQL server, followed by <bpt id="4">&lt;strong&gt;</bpt>database.windows.net<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Authentication<ept id="2">&lt;/strong&gt;</ept>, select <bpt id="4">&lt;strong&gt;</bpt>SQL Server Authenication<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Authentication<ept id="2">&lt;/strong&gt;</ept>, select <bpt id="4">&lt;strong&gt;</bpt>SQL Server Authenication<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Enter the administrator login name and password you created when provisioning the server.</source>
            <target state="new">Enter the administrator login name and password you created when provisioning the server.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Options<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Options<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Connect to database<ept id="2">&lt;/strong&gt;</ept> dropdown, and click <bpt id="4">&lt;strong&gt;</bpt>Browse server<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Connect to database<ept id="2">&lt;/strong&gt;</ept> dropdown, and click <bpt id="4">&lt;strong&gt;</bpt>Browse server<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In the following dialog box, click <bpt id="2">&lt;strong&gt;</bpt>Yes<ept id="2">&lt;/strong&gt;</ept> to allow browsing of the server.</source>
            <target state="new">In the following dialog box, click <bpt id="2">&lt;strong&gt;</bpt>Yes<ept id="2">&lt;/strong&gt;</ept> to allow browsing of the server.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> database to select it, then click <bpt id="4">&lt;strong&gt;</bpt>OK<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> database to select it, then click <bpt id="4">&lt;strong&gt;</bpt>OK<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Then click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>. To solve problems with connectivity, try this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>troubleshooter<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Then click <bpt id="2">&lt;strong&gt;</bpt>Connect<ept id="2">&lt;/strong&gt;</ept>. To solve problems with connectivity, try this <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>troubleshooter<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Expand the <bpt id="2">&lt;strong&gt;</bpt>Databases<ept id="2">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">Expand the <bpt id="2">&lt;strong&gt;</bpt>Databases<ept id="2">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>You should see the <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> database in the list.</source>
            <target state="new">You should see the <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> database in the list.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> You must connect to the database you want to query.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> You must connect to the database you want to query.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>New Query<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>school<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>New Query<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Execute the following query to verify that data is accessible.</source>
            <target state="new">Execute the following query to verify that data is accessible.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>For a tutorial on creating a new Azure SQL database, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting Started with SQL Database Administration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a tutorial on creating a new Azure SQL database, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Getting Started with SQL Database Administration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>For the basics of connecting to an Azure SQL database from a C# app, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connect to and query your SQL Database with C#<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For the basics of connecting to an Azure SQL database from a C# app, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connect to and query your SQL Database with C#<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>For more tutorials on connection from various platforms (such as PHP) see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SQL Database Development: How-to Topics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more tutorials on connection from various platforms (such as PHP) see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SQL Database Development: How-to Topics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>