<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 8:16:38 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">047bdc0c6acc5a690937d17e78819c6beba40d0d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>PHP Web and Worker Roles | Microsoft Azure</source>
            <target state="new">PHP Web and Worker Roles | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>A guide to creating PHP Web and Worker roles in an Azure Cloud Service, and configuring the PHP runtime.</source>
            <target state="new">A guide to creating PHP Web and Worker roles in an Azure Cloud Service, and configuring the PHP runtime.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to create PHP web and worker roles</source>
            <target state="new">How to create PHP web and worker roles</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This guide will show you how to create PHP web or worker roles in a Windows development environment, choose a specific version of PHP from the "built-in" versions available, change the PHP configuration, enable extensions, and finally, how to deploy to Azure.</source>
            <target state="new">This guide will show you how to create PHP web or worker roles in a Windows development environment, choose a specific version of PHP from the "built-in" versions available, change the PHP configuration, enable extensions, and finally, how to deploy to Azure.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>It also describes how to configure a web or worker role to use a PHP runtime (with custom configuration and extensions) that you provide.</source>
            <target state="new">It also describes how to configure a web or worker role to use a PHP runtime (with custom configuration and extensions) that you provide.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>What are PHP web and worker roles?</source>
            <target state="new">What are PHP web and worker roles?</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Azure provides three compute models for running applications: Azure App Service, Azure Virtual Machines, and Azure Cloud Services.</source>
            <target state="new">Azure provides three compute models for running applications: Azure App Service, Azure Virtual Machines, and Azure Cloud Services.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>All three models support PHP.</source>
            <target state="new">All three models support PHP.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Cloud Services, which include web and worker roles, provide <bpt id="2">&lt;em&gt;</bpt>Platform as a Service (PaaS)<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">Cloud Services, which include web and worker roles, provide <bpt id="2">&lt;em&gt;</bpt>Platform as a Service (PaaS)<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Within a cloud service, a web role provides a dedicated Internet Information Services (IIS) web server to host front-end web applications, while a worker role can run asynchronous, long-running or perpetual tasks independent of user interaction or input.</source>
            <target state="new">Within a cloud service, a web role provides a dedicated Internet Information Services (IIS) web server to host front-end web applications, while a worker role can run asynchronous, long-running or perpetual tasks independent of user interaction or input.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For more information about these options, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compute Hosting Options Provided by Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about these options, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Compute Hosting Options Provided by Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Download the Azure SDK for PHP</source>
            <target state="new">Download the Azure SDK for PHP</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The [Azure SDK for PHP] consists of several components.</source>
            <target state="new">The [Azure SDK for PHP] consists of several components.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>This article will use two of them: Azure PowerShell and the Azure Emulators.</source>
            <target state="new">This article will use two of them: Azure PowerShell and the Azure Emulators.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>These two components can be installed via the Microsoft Web Platform Installer.</source>
            <target state="new">These two components can be installed via the Microsoft Web Platform Installer.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to install and configure Azure PowerShell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to install and configure Azure PowerShell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>How to: Create a Cloud Services project</source>
            <target state="new">How to: Create a Cloud Services project</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The first step in creating a PHP web or worker role is to create an Azure Service project.</source>
            <target state="new">The first step in creating a PHP web or worker role is to create an Azure Service project.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>an Azure Service project serves as a logical container for web and worker roles, and contains the project's [service definition (.csdef)] and [service configuration (.cscfg)] files.</source>
            <target state="new">an Azure Service project serves as a logical container for web and worker roles, and contains the project's [service definition (.csdef)] and [service configuration (.cscfg)] files.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>To create a new Azure Servcie project, run Azure PowerShell as an administrator, and execute the following command:</source>
            <target state="new">To create a new Azure Servcie project, run Azure PowerShell as an administrator, and execute the following command:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>This command will create a new directory (<bpt id="2">&lt;code&gt;</bpt>myProject<ept id="2">&lt;/code&gt;</ept>) to which you can add web and worker roles.</source>
            <target state="new">This command will create a new directory (<bpt id="2">&lt;code&gt;</bpt>myProject<ept id="2">&lt;/code&gt;</ept>) to which you can add web and worker roles.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>How to: Add PHP web or worker roles</source>
            <target state="new">How to: Add PHP web or worker roles</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>To add a PHP web role to a project, run the following command from within the project's root directory:</source>
            <target state="new">To add a PHP web role to a project, run the following command from within the project's root directory:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>For a worker role, use this command:</source>
            <target state="new">For a worker role, use this command:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>roleName<ept id="2">&lt;/code&gt;</ept> parameter is optional.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>roleName<ept id="2">&lt;/code&gt;</ept> parameter is optional.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>If it is omitted, the role name will be automatically generated.</source>
            <target state="new">If it is omitted, the role name will be automatically generated.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The first web role created will be <bpt id="2">&lt;code&gt;</bpt>WebRole1<ept id="2">&lt;/code&gt;</ept>, the second <bpt id="4">&lt;code&gt;</bpt>WebRole2<ept id="4">&lt;/code&gt;</ept>, and so on.</source>
            <target state="new">The first web role created will be <bpt id="2">&lt;code&gt;</bpt>WebRole1<ept id="2">&lt;/code&gt;</ept>, the second <bpt id="4">&lt;code&gt;</bpt>WebRole2<ept id="4">&lt;/code&gt;</ept>, and so on.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The first worker role created will be <bpt id="2">&lt;code&gt;</bpt>WorkerRole1<ept id="2">&lt;/code&gt;</ept>, the second <bpt id="4">&lt;code&gt;</bpt>WorkerRole2<ept id="4">&lt;/code&gt;</ept>, and so on.</source>
            <target state="new">The first worker role created will be <bpt id="2">&lt;code&gt;</bpt>WorkerRole1<ept id="2">&lt;/code&gt;</ept>, the second <bpt id="4">&lt;code&gt;</bpt>WorkerRole2<ept id="4">&lt;/code&gt;</ept>, and so on.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>How to: Specify the built-in PHP Version</source>
            <target state="new">How to: Specify the built-in PHP Version</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>When you add a PHP web or worker role to a project, the project's configuration files are modified so that PHP will be installed on each web or worker instance of your application when it is deployed.</source>
            <target state="new">When you add a PHP web or worker role to a project, the project's configuration files are modified so that PHP will be installed on each web or worker instance of your application when it is deployed.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>To see the version of PHP that will be installed by default, run the following command:</source>
            <target state="new">To see the version of PHP that will be installed by default, run the following command:</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The output from the command above will look similar to what is shown below.</source>
            <target state="new">The output from the command above will look similar to what is shown below.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In this example, the <bpt id="2">&lt;code&gt;</bpt>IsDefault<ept id="2">&lt;/code&gt;</ept> flag is set to <bpt id="4">&lt;code&gt;</bpt>true<ept id="4">&lt;/code&gt;</ept> for PHP 5.3.17, indicating that it will be the default PHP version installed.</source>
            <target state="new">In this example, the <bpt id="2">&lt;code&gt;</bpt>IsDefault<ept id="2">&lt;/code&gt;</ept> flag is set to <bpt id="4">&lt;code&gt;</bpt>true<ept id="4">&lt;/code&gt;</ept> for PHP 5.3.17, indicating that it will be the default PHP version installed.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You can set the PHP runtime version to any of the PHP versions that are listed.</source>
            <target state="new">You can set the PHP runtime version to any of the PHP versions that are listed.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>For example, to set the PHP version (for a role with name <bpt id="2">&lt;code&gt;</bpt>roleName<ept id="2">&lt;/code&gt;</ept>) to 5.4.0, use the following command:</source>
            <target state="new">For example, to set the PHP version (for a role with name <bpt id="2">&lt;code&gt;</bpt>roleName<ept id="2">&lt;/code&gt;</ept>) to 5.4.0, use the following command:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>More PHP versions may be available in the future, and the available versions may change.</source>
            <target state="new">More PHP versions may be available in the future, and the available versions may change.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>How to: Customize the built-in PHP runtime</source>
            <target state="new">How to: Customize the built-in PHP runtime</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>You have complete control over the configuration of the PHP runtime that is installed when you follow the steps above, including modification of <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> settings and enabling of extensions.</source>
            <target state="new">You have complete control over the configuration of the PHP runtime that is installed when you follow the steps above, including modification of <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> settings and enabling of extensions.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>To customize the built-in PHP runtime, follow these steps:</source>
            <target state="new">To customize the built-in PHP runtime, follow these steps:</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Add a new folder, named <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept>, to the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> directory of your web role.</source>
            <target state="new">Add a new folder, named <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept>, to the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> directory of your web role.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For a worker role, add it to the role's root directory.</source>
            <target state="new">For a worker role, add it to the role's root directory.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder, create another folder called <bpt id="4">&lt;code&gt;</bpt>ext<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder, create another folder called <bpt id="4">&lt;code&gt;</bpt>ext<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Put any <bpt id="2">&lt;code&gt;</bpt>.dll<ept id="2">&lt;/code&gt;</ept> extension files (e.g. <bpt id="4">&lt;code&gt;</bpt>php_mongo.dll<ept id="4">&lt;/code&gt;</ept>) you want to enable in this folder.</source>
            <target state="new">Put any <bpt id="2">&lt;code&gt;</bpt>.dll<ept id="2">&lt;/code&gt;</ept> extension files (e.g. <bpt id="4">&lt;code&gt;</bpt>php_mongo.dll<ept id="4">&lt;/code&gt;</ept>) you want to enable in this folder.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Add a <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file to the <bpt id="4">&lt;code&gt;</bpt>php<ept id="4">&lt;/code&gt;</ept> folder.</source>
            <target state="new">Add a <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file to the <bpt id="4">&lt;code&gt;</bpt>php<ept id="4">&lt;/code&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Enable any custom extensions and set any PHP directives in this file.</source>
            <target state="new">Enable any custom extensions and set any PHP directives in this file.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>For example, if you wanted to turn <bpt id="2">&lt;code&gt;</bpt>display_errors<ept id="2">&lt;/code&gt;</ept> on and enable the <bpt id="4">&lt;code&gt;</bpt>php_mongo.dll<ept id="4">&lt;/code&gt;</ept> extension, the contents of your <bpt id="6">&lt;code&gt;</bpt>php.ini<ept id="6">&lt;/code&gt;</ept> file would be as follows:</source>
            <target state="new">For example, if you wanted to turn <bpt id="2">&lt;code&gt;</bpt>display_errors<ept id="2">&lt;/code&gt;</ept> on and enable the <bpt id="4">&lt;code&gt;</bpt>php_mongo.dll<ept id="4">&lt;/code&gt;</ept> extension, the contents of your <bpt id="6">&lt;code&gt;</bpt>php.ini<ept id="6">&lt;/code&gt;</ept> file would be as follows:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Any settings that you don't explicity set in the <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file that you provide will automatically be set to their default values.</source>
            <target state="new">Any settings that you don't explicity set in the <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file that you provide will automatically be set to their default values.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>However, keep in mind that you can add a complete <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file.</source>
            <target state="new">However, keep in mind that you can add a complete <bpt id="2">&lt;code&gt;</bpt>php.ini<ept id="2">&lt;/code&gt;</ept> file.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>How to: Use your own PHP runtime</source>
            <target state="new">How to: Use your own PHP runtime</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>In some cases, instead of selecting a built-in PHP runtime and configuring it as described above, you may want to provide your own PHP runtime.</source>
            <target state="new">In some cases, instead of selecting a built-in PHP runtime and configuring it as described above, you may want to provide your own PHP runtime.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>For example, you can use the same PHP runtime in a web or worker role that you use in your development environment, making it easier to ensure that application will not change behavior in your production environment.</source>
            <target state="new">For example, you can use the same PHP runtime in a web or worker role that you use in your development environment, making it easier to ensure that application will not change behavior in your production environment.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Configuring a web role to use your own PHP runtime</source>
            <target state="new">Configuring a web role to use your own PHP runtime</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>To configure a web role to use a PHP runtime that you provide, follow the steps below.</source>
            <target state="new">To configure a web role to use a PHP runtime that you provide, follow the steps below.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Create an Azure Service project and add a PHP web role as described previously in this topic.</source>
            <target state="new">Create an Azure Service project and add a PHP web role as described previously in this topic.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Create a <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder that is in your web role's root directory, then add your PHP runtime (all binaries, configuration files, subfolders, etc.)</source>
            <target state="new">Create a <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder that is in your web role's root directory, then add your PHP runtime (all binaries, configuration files, subfolders, etc.)</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>to the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder.</source>
            <target state="new">to the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>(OPTIONAL) If your PHP runtime uses the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Drivers for PHP for SQL Server[sqlsrv drivers]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will need to configure your web role to install <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Native Client 2012[sql native client]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> when it is provisioned.</source>
            <target state="new">(OPTIONAL) If your PHP runtime uses the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Drivers for PHP for SQL Server[sqlsrv drivers]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will need to configure your web role to install <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Native Client 2012[sql native client]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> when it is provisioned.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>To do this, add the <bpt id="2">&lt;code&gt;</bpt>sqlncli.msi<ept id="2">&lt;/code&gt;</ept> installer to the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder in your web role's root directory.</source>
            <target state="new">To do this, add the <bpt id="2">&lt;code&gt;</bpt>sqlncli.msi<ept id="2">&lt;/code&gt;</ept> installer to the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder in your web role's root directory.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>You can download the installer here: [sqlncli.msi x64 installer].</source>
            <target state="new">You can download the installer here: [sqlncli.msi x64 installer].</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The startup script described in the next step will silently run the installer when the role is provisioned.</source>
            <target state="new">The startup script described in the next step will silently run the installer when the role is provisioned.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>If your PHP runtime does not use the Microsoft Drivers for PHP for SQL Server, you can remove the following line from the script shown in the next step:</source>
            <target state="new">If your PHP runtime does not use the Microsoft Drivers for PHP for SQL Server, you can remove the following line from the script shown in the next step:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>The next step is to define a startup task that configures <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Internet Information Services (IIS)[iis.net]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to use your PHP runtime to handle requests for <bpt id="4">&lt;code&gt;</bpt>.php<ept id="4">&lt;/code&gt;</ept> pages.</source>
            <target state="new">The next step is to define a startup task that configures <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Internet Information Services (IIS)[iis.net]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to use your PHP runtime to handle requests for <bpt id="4">&lt;code&gt;</bpt>.php<ept id="4">&lt;/code&gt;</ept> pages.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>To do this, open the <bpt id="2">&lt;code&gt;</bpt>setup_web.cmd<ept id="2">&lt;/code&gt;</ept> file (in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> file of your web role's root directory) in a text editor and replace its contents with the following script:</source>
            <target state="new">To do this, open the <bpt id="2">&lt;code&gt;</bpt>setup_web.cmd<ept id="2">&lt;/code&gt;</ept> file (in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> file of your web role's root directory) in a text editor and replace its contents with the following script:</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Add your application files to your web role's root directory.</source>
            <target state="new">Add your application files to your web role's root directory.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>This will be the web server's root directory.</source>
            <target state="new">This will be the web server's root directory.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Publish your application as described in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Publish your application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section below.</source>
            <target state="new">Publish your application as described in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Publish your application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section below.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>download.ps1<ept id="2">&lt;/code&gt;</ept> script (in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder of the web role's root directory) can be deleted after following the steps described above for using your own PHP runtime.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>download.ps1<ept id="2">&lt;/code&gt;</ept> script (in the <bpt id="4">&lt;code&gt;</bpt>bin<ept id="4">&lt;/code&gt;</ept> folder of the web role's root directory) can be deleted after following the steps described above for using your own PHP runtime.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Configuring a worker role to use your own PHP runtime</source>
            <target state="new">Configuring a worker role to use your own PHP runtime</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>To configure a worker role to use a PHP runtime that you provide, follow the steps below.</source>
            <target state="new">To configure a worker role to use a PHP runtime that you provide, follow the steps below.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Create an Azure Service project and add a PHP worker role as described previously in this topic.</source>
            <target state="new">Create an Azure Service project and add a PHP worker role as described previously in this topic.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Create a <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder in the worker role's root directory, then add your PHP runtime (all binaries, configuration files, subfolders, etc.)</source>
            <target state="new">Create a <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder in the worker role's root directory, then add your PHP runtime (all binaries, configuration files, subfolders, etc.)</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>to the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder.</source>
            <target state="new">to the <bpt id="2">&lt;code&gt;</bpt>php<ept id="2">&lt;/code&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>(OPTIONAL) If your PHP runtime uses <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Drivers for PHP for SQL Server[sqlsrv drivers]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will need to configure your worker role to install <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Native Client 2012[sql native client]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> when it is provisioned.</source>
            <target state="new">(OPTIONAL) If your PHP runtime uses <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Drivers for PHP for SQL Server[sqlsrv drivers]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you will need to configure your worker role to install <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SQL Server Native Client 2012[sql native client]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> when it is provisioned.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>To do this, add the <bpt id="2">&lt;code&gt;</bpt>sqlncli.msi<ept id="2">&lt;/code&gt;</ept> installer to the worker role's root directory.</source>
            <target state="new">To do this, add the <bpt id="2">&lt;code&gt;</bpt>sqlncli.msi<ept id="2">&lt;/code&gt;</ept> installer to the worker role's root directory.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>You can download the installer here: [sqlncli.msi x64 installer].</source>
            <target state="new">You can download the installer here: [sqlncli.msi x64 installer].</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>The startup script described in the next step will silently run the installer when the role is provisioned.</source>
            <target state="new">The startup script described in the next step will silently run the installer when the role is provisioned.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>If your PHP runtime does not use the Microsoft Drivers for PHP for SQL Server, you can remove the following line from the script shown in the next step:</source>
            <target state="new">If your PHP runtime does not use the Microsoft Drivers for PHP for SQL Server, you can remove the following line from the script shown in the next step:</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>The next step is to define a startup task that adds your <bpt id="2">&lt;code&gt;</bpt>php.exe<ept id="2">&lt;/code&gt;</ept> executable to the worker role's PATH environment variable when the role is provisioned.</source>
            <target state="new">The next step is to define a startup task that adds your <bpt id="2">&lt;code&gt;</bpt>php.exe<ept id="2">&lt;/code&gt;</ept> executable to the worker role's PATH environment variable when the role is provisioned.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>To do this, open the <bpt id="2">&lt;code&gt;</bpt>setup_worker.cmd<ept id="2">&lt;/code&gt;</ept> file (in the worker role's root directory) in a text editor and replace its contents with the following script:</source>
            <target state="new">To do this, open the <bpt id="2">&lt;code&gt;</bpt>setup_worker.cmd<ept id="2">&lt;/code&gt;</ept> file (in the worker role's root directory) in a text editor and replace its contents with the following script:</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Add your application files to your worker role's root directory.</source>
            <target state="new">Add your application files to your worker role's root directory.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Publish your application as described in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Publish your application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section below.</source>
            <target state="new">Publish your application as described in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Publish your application<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section below.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>How to: Run your application in the Compute and Storage Emulators</source>
            <target state="new">How to: Run your application in the Compute and Storage Emulators</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>The Azure emulators provide a local environment in which you can test your Azure application before deploying it to the cloud.</source>
            <target state="new">The Azure emulators provide a local environment in which you can test your Azure application before deploying it to the cloud.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>There are some differences between the emulators and the Azure environment.</source>
            <target state="new">There are some differences between the emulators and the Azure environment.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>To understand this better, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To understand this better, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Note that you must have PHP installed locally to use the Compute Emulator.</source>
            <target state="new">Note that you must have PHP installed locally to use the Compute Emulator.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>The Compute Emulator will use your local PHP installation to run your application.</source>
            <target state="new">The Compute Emulator will use your local PHP installation to run your application.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>To run your project in the emulators, execute the following command from your project's root directory:</source>
            <target state="new">To run your project in the emulators, execute the following command from your project's root directory:</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>You will see out put similar to this:</source>
            <target state="new">You will see out put similar to this:</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>You can see your application running in the emulator by opening a web browser and browsing to local address shown in the output (<bpt id="2">&lt;code&gt;</bpt>http://127.0.0.1:81<ept id="2">&lt;/code&gt;</ept> in the example output above).</source>
            <target state="new">You can see your application running in the emulator by opening a web browser and browsing to local address shown in the output (<bpt id="2">&lt;code&gt;</bpt>http://127.0.0.1:81<ept id="2">&lt;/code&gt;</ept> in the example output above).</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>To stop the emulators, execute this command:</source>
            <target state="new">To stop the emulators, execute this command:</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>How to: Publish your application</source>
            <target state="new">How to: Publish your application</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>To publish your application, you need to first import your publish settings  with the <bpt id="2">&lt;strong&gt;</bpt>Import-PublishSettingsFile<ept id="2">&lt;/strong&gt;</ept> cmdlet, then you can publish your application with the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Publish-AzureServiceProject<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> cmdlet.</source>
            <target state="new">To publish your application, you need to first import your publish settings  with the <bpt id="2">&lt;strong&gt;</bpt>Import-PublishSettingsFile<ept id="2">&lt;/strong&gt;</ept> cmdlet, then you can publish your application with the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Publish-AzureServiceProject<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> cmdlet.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>For information about signing in, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to install and configure Azure PowerShell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about signing in, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to install and configure Azure PowerShell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>