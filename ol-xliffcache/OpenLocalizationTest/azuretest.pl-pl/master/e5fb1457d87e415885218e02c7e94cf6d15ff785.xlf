<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:15:04 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5fb1457d87e415885218e02c7e94cf6d15ff785</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Schedule recurring jobs in Azure Mobile Services</source>
            <target state="new">Schedule recurring jobs in Azure Mobile Services</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Use the Azure Mobile Services Scheduler to schedule jobs for your mobile app.</source>
            <target state="new">Use the Azure Mobile Services Scheduler to schedule jobs for your mobile app.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Schedule recurring jobs in Mobile Services</source>
            <target state="new">Schedule recurring jobs in Mobile Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This topic shows you how to use the job scheduler functionality in the Management Portal to define server script code that is executed based on a schedule that you define.</source>
            <target state="new">This topic shows you how to use the job scheduler functionality in the Management Portal to define server script code that is executed based on a schedule that you define.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>In this case, the script periodically check with a remote service, in this case Twitter, and stores the results in a new table.</source>
            <target state="new">In this case, the script periodically check with a remote service, in this case Twitter, and stores the results in a new table.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Some other periodic tasks that can be scheduled include:</source>
            <target state="new">Some other periodic tasks that can be scheduled include:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Archiving old or duplicate data records.</source>
            <target state="new">Archiving old or duplicate data records.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Requesting and storing external data, such as tweets, RSS entries, and location information.</source>
            <target state="new">Requesting and storing external data, such as tweets, RSS entries, and location information.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Processing or resizing stored images.</source>
            <target state="new">Processing or resizing stored images.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This tutorial walks you through how to use the job scheduler to create a scheduled job that requests tweet data from Twitter and stores the tweets in a new Updates table.</source>
            <target state="new">This tutorial walks you through how to use the job scheduler to create a scheduled job that requests tweet data from Twitter and stores the tweets in a new Updates table.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>This tutorial uses the third-party LINQ to Twitter library to simplify OAuth 2.0 access to Twitter v1.1.</source>
            <target state="new">This tutorial uses the third-party LINQ to Twitter library to simplify OAuth 2.0 access to Twitter v1.1.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>APIs.</source>
            <target state="new">APIs.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>You must download and install the LINQ to Twitter NuGet package to complete this tutorial.</source>
            <target state="new">You must download and install the LINQ to Twitter NuGet package to complete this tutorial.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>For more information, see the [LINQ to Twitter CodePlex project].</source>
            <target state="new">For more information, see the [LINQ to Twitter CodePlex project].</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Register for access to Twitter v1.1 APIs and store credentials</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Register for access to Twitter v1.1 APIs and store credentials</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-register-twitter-access.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-register-twitter-access.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>&amp;nbsp;&amp;nbsp;7.</source>
            <target state="new">&amp;nbsp;&amp;nbsp;7.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>In Solution Explorer in Visual Studio, open the web.config file for the mobile service project, locate the <bpt id="2">&lt;code&gt;</bpt>MS_TwitterConsumerKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>MS_TwitterConsumerSecret<ept id="4">&lt;/code&gt;</ept> app settings and replace the values of these keys with Twitter consumer key and consumer secret values that you set in the portal.</source>
            <target state="new">In Solution Explorer in Visual Studio, open the web.config file for the mobile service project, locate the <bpt id="2">&lt;code&gt;</bpt>MS_TwitterConsumerKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>MS_TwitterConsumerSecret<ept id="4">&lt;/code&gt;</ept> app settings and replace the values of these keys with Twitter consumer key and consumer secret values that you set in the portal.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>&amp;nbsp;&amp;nbsp;8.</source>
            <target state="new">&amp;nbsp;&amp;nbsp;8.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>In the same section, add the following new app settings, replacing the placeholders with the Twitter access token and access token secret values that you set as app settings in the portal:</source>
            <target state="new">In the same section, add the following new app settings, replacing the placeholders with the Twitter access token and access token secret values that you set as app settings in the portal:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The mobile service uses these stored settings when it runs on the local computer, which lets you test the scheduled job before you publish it.</source>
            <target state="new">The mobile service uses these stored settings when it runs on the local computer, which lets you test the scheduled job before you publish it.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>When running in Azure, the mobile service instead uses values set in the portal and ignores these project settings.</source>
            <target state="new">When running in Azure, the mobile service instead uses values set in the portal and ignores these project settings.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Download and install the LINQ to Twitter library</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Download and install the LINQ to Twitter library</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept> in Visual Studio, right-click the project name, and then select <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>Solution Explorer<ept id="2">&lt;/strong&gt;</ept> in Visual Studio, right-click the project name, and then select <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In the left pane, select the <bpt id="2">&lt;strong&gt;</bpt>Online<ept id="2">&lt;/strong&gt;</ept> category, search for <bpt id="4">&lt;code&gt;</bpt>linq2twitter<ept id="4">&lt;/code&gt;</ept>, click <bpt id="6">&lt;strong&gt;</bpt>Install<ept id="6">&lt;/strong&gt;</ept> on the <bpt id="8">&lt;strong&gt;</bpt>linqtotwitter<ept id="8">&lt;/strong&gt;</ept> package, then read and accept the license agreements.</source>
            <target state="new">In the left pane, select the <bpt id="2">&lt;strong&gt;</bpt>Online<ept id="2">&lt;/strong&gt;</ept> category, search for <bpt id="4">&lt;code&gt;</bpt>linq2twitter<ept id="4">&lt;/code&gt;</ept>, click <bpt id="6">&lt;strong&gt;</bpt>Install<ept id="6">&lt;/strong&gt;</ept> on the <bpt id="8">&lt;strong&gt;</bpt>linqtotwitter<ept id="8">&lt;/strong&gt;</ept> package, then read and accept the license agreements.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>This adds the Linq to Twitter library to your mobile service project.</source>
            <target state="new">This adds the Linq to Twitter library to your mobile service project.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Next, you need to create a new table in which to store tweets.</source>
            <target state="new">Next, you need to create a new table in which to store tweets.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create the new Updates table</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create the new Updates table</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In the Solution Explorer in Visual Studio, right-click the DataObjects folder, expand <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Class<ept id="4">&lt;/strong&gt;</ept>,   type <bpt id="6">&lt;code&gt;</bpt>Updates<ept id="6">&lt;/code&gt;</ept> for <bpt id="8">&lt;strong&gt;</bpt>Name<ept id="8">&lt;/strong&gt;</ept>, then click <bpt id="10">&lt;strong&gt;</bpt>Add<ept id="10">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the Solution Explorer in Visual Studio, right-click the DataObjects folder, expand <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Class<ept id="4">&lt;/strong&gt;</ept>,   type <bpt id="6">&lt;code&gt;</bpt>Updates<ept id="6">&lt;/code&gt;</ept> for <bpt id="8">&lt;strong&gt;</bpt>Name<ept id="8">&lt;/strong&gt;</ept>, then click <bpt id="10">&lt;strong&gt;</bpt>Add<ept id="10">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>This creates a new project file for the Updates class.</source>
            <target state="new">This creates a new project file for the Updates class.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> &gt; <bpt id="4">&lt;strong&gt;</bpt>Add Reference...<ept id="4">&lt;/strong&gt;</ept> &gt; <bpt id="6">&lt;strong&gt;</bpt>Framework<ept id="6">&lt;/strong&gt;</ept> under <bpt id="8">&lt;strong&gt;</bpt>Assemblies<ept id="8">&lt;/strong&gt;</ept>, then check <bpt id="10">&lt;strong&gt;</bpt>System.ComponentModel.DataAnnotations<ept id="10">&lt;/strong&gt;</ept> and click <bpt id="12">&lt;strong&gt;</bpt>OK<ept id="12">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept> &gt; <bpt id="4">&lt;strong&gt;</bpt>Add Reference...<ept id="4">&lt;/strong&gt;</ept> &gt; <bpt id="6">&lt;strong&gt;</bpt>Framework<ept id="6">&lt;/strong&gt;</ept> under <bpt id="8">&lt;strong&gt;</bpt>Assemblies<ept id="8">&lt;/strong&gt;</ept>, then check <bpt id="10">&lt;strong&gt;</bpt>System.ComponentModel.DataAnnotations<ept id="10">&lt;/strong&gt;</ept> and click <bpt id="12">&lt;strong&gt;</bpt>OK<ept id="12">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>This adds a new assembly reference.</source>
            <target state="new">This adds a new assembly reference.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>In this new class, add the following <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements:</source>
            <target state="new">In this new class, add the following <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements:</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Replace the <bpt id="2">&lt;strong&gt;</bpt>Updates<ept id="2">&lt;/strong&gt;</ept> class definition with the following code:</source>
            <target state="new">Replace the <bpt id="2">&lt;strong&gt;</bpt>Updates<ept id="2">&lt;/strong&gt;</ept> class definition with the following code:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Expand the Models folder, open the data model context file (named <bpt id="2">&lt;em&gt;</bpt>service_name<ept id="2">&lt;/em&gt;</ept>Context.cs) and add the following property that returns a typed <bpt id="4">&lt;strong&gt;</bpt>DbSet<ept id="4">&lt;/strong&gt;</ept>:</source>
            <target state="new">Expand the Models folder, open the data model context file (named <bpt id="2">&lt;em&gt;</bpt>service_name<ept id="2">&lt;/em&gt;</ept>Context.cs) and add the following property that returns a typed <bpt id="4">&lt;strong&gt;</bpt>DbSet<ept id="4">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The Updates table, which is created in the database when the DbSet is first accessed, is used by the service to store tweet data.</source>
            <target state="new">The Updates table, which is created in the database when the DbSet is first accessed, is used by the service to store tweet data.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>When using the default database initializer, Entity Framework will drop and recreate the database whenever it detects a data model change in the Code First model definition.</source>
            <target state="new">When using the default database initializer, Entity Framework will drop and recreate the database whenever it detects a data model change in the Code First model definition.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>To make this data model change and maintain existing data in the database, you must use Code First Migrations.</source>
            <target state="new">To make this data model change and maintain existing data in the database, you must use Code First Migrations.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The default initializer cannot be used against a SQL Database in Azure.</source>
            <target state="new">The default initializer cannot be used against a SQL Database in Azure.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Use Code First Migrations to Update the Data Model<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Use Code First Migrations to Update the Data Model<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Next, you create the scheduled job that accesses Twitter and stores tweet data in the new Updates table.</source>
            <target state="new">Next, you create the scheduled job that accesses Twitter and stores tweet data in the new Updates table.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create a new scheduled job</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create a new scheduled job</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Expand the ScheduledJobs folder and open the SampleJob.cs project file.</source>
            <target state="new">Expand the ScheduledJobs folder and open the SampleJob.cs project file.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>This class, which inherits from <bpt id="2">&lt;strong&gt;</bpt>ScheduledJob<ept id="2">&lt;/strong&gt;</ept>, represents a job that can be scheduled, in the Azure Management Portal, to run on a fixed schedule or on demand.</source>
            <target state="new">This class, which inherits from <bpt id="2">&lt;strong&gt;</bpt>ScheduledJob<ept id="2">&lt;/strong&gt;</ept>, represents a job that can be scheduled, in the Azure Management Portal, to run on a fixed schedule or on demand.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Replace the contents of SampleJob.cs with the following code:</source>
            <target state="new">Replace the contents of SampleJob.cs with the following code:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>In the above code, you must replace the strings <bpt id="2">&lt;em&gt;</bpt>todolistService<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>todolistContext<ept id="4">&lt;/em&gt;</ept> with the namespace and DbContext of your downloaded project, which are <bpt id="6">&lt;em&gt;</bpt>mobile&amp;#95;service&amp;#95;name<ept id="6">&lt;/em&gt;</ept>Service and <bpt id="8">&lt;em&gt;</bpt>mobile&amp;#95;service&amp;#95;name<ept id="8">&lt;/em&gt;</ept>Context, respective.</source>
            <target state="new">In the above code, you must replace the strings <bpt id="2">&lt;em&gt;</bpt>todolistService<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>todolistContext<ept id="4">&lt;/em&gt;</ept> with the namespace and DbContext of your downloaded project, which are <bpt id="6">&lt;em&gt;</bpt>mobile&amp;#95;service&amp;#95;name<ept id="6">&lt;/em&gt;</ept>Service and <bpt id="8">&lt;em&gt;</bpt>mobile&amp;#95;service&amp;#95;name<ept id="8">&lt;/em&gt;</ept>Context, respective.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In the above code, the <bpt id="2">&lt;strong&gt;</bpt>ExecuteAsync<ept id="2">&lt;/strong&gt;</ept> override method calls the Twitter query API using stored credentials to request recent tweets that contain the hashtag <bpt id="4">&lt;code&gt;</bpt>#mobileservices<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">In the above code, the <bpt id="2">&lt;strong&gt;</bpt>ExecuteAsync<ept id="2">&lt;/strong&gt;</ept> override method calls the Twitter query API using stored credentials to request recent tweets that contain the hashtag <bpt id="4">&lt;code&gt;</bpt>#mobileservices<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Duplicate tweets and replies are removed from the results before they are stored in the table.</source>
            <target state="new">Duplicate tweets and replies are removed from the results before they are stored in the table.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the scheduled job locally</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the scheduled job locally</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Schedule jobs can be tested locally before being published to Azure and registered in the portal.</source>
            <target state="new">Schedule jobs can be tested locally before being published to Azure and registered in the portal.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>In Visual Studio, with the mobile service project set as the startup project, press F5.</source>
            <target state="new">In Visual Studio, with the mobile service project set as the startup project, press F5.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>This starts the mobile service project and displays a new browser window with the welcome page.</source>
            <target state="new">This starts the mobile service project and displays a new browser window with the welcome page.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>try it out<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>POST jobs/{jobName}<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>try it out<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>POST jobs/{jobName}<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>try this out<ept id="2">&lt;/strong&gt;</ept>, type <bpt id="4">&lt;code&gt;</bpt>Sample<ept id="4">&lt;/code&gt;</ept> as the <bpt id="6">&lt;strong&gt;</bpt>{jobName}<ept id="6">&lt;/strong&gt;</ept> parameter value, then click <bpt id="8">&lt;strong&gt;</bpt>Send<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>try this out<ept id="2">&lt;/strong&gt;</ept>, type <bpt id="4">&lt;code&gt;</bpt>Sample<ept id="4">&lt;/code&gt;</ept> as the <bpt id="6">&lt;strong&gt;</bpt>{jobName}<ept id="6">&lt;/strong&gt;</ept> parameter value, then click <bpt id="8">&lt;strong&gt;</bpt>Send<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>This sends a new POST request to the Sample job endpoint.</source>
            <target state="new">This sends a new POST request to the Sample job endpoint.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>In the local service, the <bpt id="2">&lt;strong&gt;</bpt>ExecuteAsync<ept id="2">&lt;/strong&gt;</ept> method is started.</source>
            <target state="new">In the local service, the <bpt id="2">&lt;strong&gt;</bpt>ExecuteAsync<ept id="2">&lt;/strong&gt;</ept> method is started.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>You can set a break point in this method to debug the code.</source>
            <target state="new">You can set a break point in this method to debug the code.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>In Server Explorer, expand <bpt id="2">&lt;strong&gt;</bpt>Data Connections<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>MSTableConnectionString<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>tables<ept id="6">&lt;/strong&gt;</ept>; right-click <bpt id="8">&lt;strong&gt;</bpt>Updates<ept id="8">&lt;/strong&gt;</ept> and click <bpt id="10">&lt;strong&gt;</bpt>Show Table Data<ept id="10">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Server Explorer, expand <bpt id="2">&lt;strong&gt;</bpt>Data Connections<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>MSTableConnectionString<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>tables<ept id="6">&lt;/strong&gt;</ept>; right-click <bpt id="8">&lt;strong&gt;</bpt>Updates<ept id="8">&lt;/strong&gt;</ept> and click <bpt id="10">&lt;strong&gt;</bpt>Show Table Data<ept id="10">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>The new tweets are entered as rows in the data table.</source>
            <target state="new">The new tweets are entered as rows in the data table.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Publish the service and register the new job</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Publish the service and register the new job</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The job must be registered in the <bpt id="2">&lt;strong&gt;</bpt>Scheduler<ept id="2">&lt;/strong&gt;</ept> tab so that Mobile Services can run it on the schedule that you define.</source>
            <target state="new">The job must be registered in the <bpt id="2">&lt;strong&gt;</bpt>Scheduler<ept id="2">&lt;/strong&gt;</ept> tab so that Mobile Services can run it on the schedule that you define.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Republish the mobile service project to Azure.</source>
            <target state="new">Republish the mobile service project to Azure.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>In the [Azure Management Portal], click Mobile Services, and then click your app.</source>
            <target state="new">In the [Azure Management Portal], click Mobile Services, and then click your app.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Scheduler<ept id="2">&lt;/strong&gt;</ept> tab, then click <bpt id="4">&lt;strong&gt;</bpt>+Create<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Scheduler<ept id="2">&lt;/strong&gt;</ept> tab, then click <bpt id="4">&lt;strong&gt;</bpt>+Create<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>When you run your mobile service in <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Free<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> tier, you are only able to run one scheduled job at a time.</source>
            <target state="new">When you run your mobile service in <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Free<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> tier, you are only able to run one scheduled job at a time.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>In paid tiers, you can run up to ten scheduled jobs at a time.</source>
            <target state="new">In paid tiers, you can run up to ten scheduled jobs at a time.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>In the scheduler dialog, enter <bpt id="2">&lt;em&gt;</bpt>Sample<ept id="2">&lt;/em&gt;</ept> for the <bpt id="4">&lt;strong&gt;</bpt>Job Name<ept id="4">&lt;/strong&gt;</ept>, set the schedule interval and units, then click the check button.</source>
            <target state="new">In the scheduler dialog, enter <bpt id="2">&lt;em&gt;</bpt>Sample<ept id="2">&lt;/em&gt;</ept> for the <bpt id="4">&lt;strong&gt;</bpt>Job Name<ept id="4">&lt;/strong&gt;</ept>, set the schedule interval and units, then click the check button.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>This creates a new job named <bpt id="2">&lt;strong&gt;</bpt>Sample<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">This creates a new job named <bpt id="2">&lt;strong&gt;</bpt>Sample<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Click the new job you just created, then click <bpt id="2">&lt;strong&gt;</bpt>Run Once<ept id="2">&lt;/strong&gt;</ept> to test the script.</source>
            <target state="new">Click the new job you just created, then click <bpt id="2">&lt;strong&gt;</bpt>Run Once<ept id="2">&lt;/strong&gt;</ept> to test the script.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>This executes the job while it remains disabled in the scheduler.</source>
            <target state="new">This executes the job while it remains disabled in the scheduler.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>From this page, you can enable the job and change its schedule at any time.</source>
            <target state="new">From this page, you can enable the job and change its schedule at any time.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>A POST request can still be used to start the scheduled job.</source>
            <target state="new">A POST request can still be used to start the scheduled job.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>However, the authorization defaults to user, which means that the request must include the application key in the header.</source>
            <target state="new">However, the authorization defaults to user, which means that the request must include the application key in the header.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>(Optional) In the [Azure Management Portal], click manage for the database associated with your mobile service.</source>
            <target state="new">(Optional) In the [Azure Management Portal], click manage for the database associated with your mobile service.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>In the Management portal execute a query to view the changes made by the app.</source>
            <target state="new">In the Management portal execute a query to view the changes made by the app.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Your query will be similar to the following query but use your mobile service name as schema name instead of <bpt id="2">&lt;code&gt;</bpt>todolist<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Your query will be similar to the following query but use your mobile service name as schema name instead of <bpt id="2">&lt;code&gt;</bpt>todolist<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Congratulations, you have successfully created a new scheduled job in your mobile service.</source>
            <target state="new">Congratulations, you have successfully created a new scheduled job in your mobile service.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>This job will be executed as scheduled until you disable or modify it.</source>
            <target state="new">This job will be executed as scheduled until you disable or modify it.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>