<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:51:21 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cf0f3e5ac2375a50a32592955579823af7ce5f9</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Service Fabric Application Upgrade: Advanced Topics</source>
            <target state="new">Service Fabric Application Upgrade: Advanced Topics</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This article covers some advanced topics pertaining to upgrading a Service Fabric application.</source>
            <target state="new">This article covers some advanced topics pertaining to upgrading a Service Fabric application.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Service Fabric Application Upgrade: Advanced Topics</source>
            <target state="new">Service Fabric Application Upgrade: Advanced Topics</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Manual Upgrade Mode</source>
            <target state="new">Manual Upgrade Mode</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Only for a failed or suspended upgrade, should the Unmonitored Manual mode be even considered.</source>
            <target state="new">Only for a failed or suspended upgrade, should the Unmonitored Manual mode be even considered.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The Monitored mode is the upgrade mode recommended for Service Fabric applications.</source>
            <target state="new">The Monitored mode is the upgrade mode recommended for Service Fabric applications.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Service Fabric provides multiple upgrade mode to support development and production cluster.</source>
            <target state="new">Service Fabric provides multiple upgrade mode to support development and production cluster.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Each of the deployment options are ideal for different environments.</source>
            <target state="new">Each of the deployment options are ideal for different environments.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Monitored Rolling Application Upgrade is the most typical upgrade to be used in production.</source>
            <target state="new">Monitored Rolling Application Upgrade is the most typical upgrade to be used in production.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>When the upgrade policy is specified, Service Fabric ensures that the application is healthy before the upgrade proceeds.</source>
            <target state="new">When the upgrade policy is specified, Service Fabric ensures that the application is healthy before the upgrade proceeds.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In certain situation, where there are more customize or complex health evaluation policy is required or a non-conventional upgrade (application is already in data loss or etc.), the application administrator can use the Manual Rolling Application Upgrade mode to have total control over the progress of upgrade through the various upgrade domains.</source>
            <target state="new">In certain situation, where there are more customize or complex health evaluation policy is required or a non-conventional upgrade (application is already in data loss or etc.), the application administrator can use the Manual Rolling Application Upgrade mode to have total control over the progress of upgrade through the various upgrade domains.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Finally, the Automated Rolling Application Upgrade is useful for development or testing environment to provide a fast iteration cycle during service development.</source>
            <target state="new">Finally, the Automated Rolling Application Upgrade is useful for development or testing environment to provide a fast iteration cycle during service development.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Manual<ept id="1">&lt;/strong&gt;</ept>- Stop the application upgrade at the current UD and change the upgrade mode to Unmonitored Manual.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Manual<ept id="1">&lt;/strong&gt;</ept>- Stop the application upgrade at the current UD and change the upgrade mode to Unmonitored Manual.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The administrator needs to manually call <bpt id="2">&lt;strong&gt;</bpt>MoveNextApplicationUpgradeDomainAsync<ept id="2">&lt;/strong&gt;</ept> to proceed with the upgrade or trigger a roll-back by initiating a new upgrade.</source>
            <target state="new">The administrator needs to manually call <bpt id="2">&lt;strong&gt;</bpt>MoveNextApplicationUpgradeDomainAsync<ept id="2">&lt;/strong&gt;</ept> to proceed with the upgrade or trigger a roll-back by initiating a new upgrade.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Once the upgrade enters into the Manual mode, it stays in the Manual mode until a new upgrade is initiated.</source>
            <target state="new">Once the upgrade enters into the Manual mode, it stays in the Manual mode until a new upgrade is initiated.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>GetApplicationUpgradeProgressAsync<ept id="2">&lt;/strong&gt;</ept>command returns FABRIC\_APPLICATION\_UPGRADE\_STATE\_ROLLING\_FORWARD\_PENDING.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>GetApplicationUpgradeProgressAsync<ept id="2">&lt;/strong&gt;</ept>command returns FABRIC\_APPLICATION\_UPGRADE\_STATE\_ROLLING\_FORWARD\_PENDING.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Upgrading with a Diff package</source>
            <target state="new">Upgrading with a Diff package</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>A Service Fabric application can be upgraded by provisioning with a full, self-contained application package.</source>
            <target state="new">A Service Fabric application can be upgraded by provisioning with a full, self-contained application package.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>An application can also be upgraded by using a diff package that contains only the updated application files, and updated application manifest and service manifest files.</source>
            <target state="new">An application can also be upgraded by using a diff package that contains only the updated application files, and updated application manifest and service manifest files.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>A full application package contains all the files necessary to start and run a Service Fabric application.</source>
            <target state="new">A full application package contains all the files necessary to start and run a Service Fabric application.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>A diff package contains only the files that changed between the last provision and the current upgrade, plus the full application manifest and service manifest files.</source>
            <target state="new">A diff package contains only the files that changed between the last provision and the current upgrade, plus the full application manifest and service manifest files.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Any reference in the application manifest or service manifest which Service Fabric cannot find in the build layout, Service Fabric will search for the reference in the ImageStore (link TBA).</source>
            <target state="new">Any reference in the application manifest or service manifest which Service Fabric cannot find in the build layout, Service Fabric will search for the reference in the ImageStore (link TBA).</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Full application packages are required for the first install of an application to the cluster.</source>
            <target state="new">Full application packages are required for the first install of an application to the cluster.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Subsequent updates can be either a full application package or a diff package.</source>
            <target state="new">Subsequent updates can be either a full application package or a diff package.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Occasions when using a diff package would be a good choice:</source>
            <target state="new">Occasions when using a diff package would be a good choice:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>A diff package is preferred when you have a large application package which references several service manifest files and/or several code packages, config packages, or data packages.</source>
            <target state="new">A diff package is preferred when you have a large application package which references several service manifest files and/or several code packages, config packages, or data packages.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>A diff package is preferred when you have a deployment system which generates the build layout directly from your application build process.</source>
            <target state="new">A diff package is preferred when you have a deployment system which generates the build layout directly from your application build process.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In this case, even though nothing in the code has changed, newly built assemblies will have a different checksum.</source>
            <target state="new">In this case, even though nothing in the code has changed, newly built assemblies will have a different checksum.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Using a full application package would require you to update the version on all code packages.</source>
            <target state="new">Using a full application package would require you to update the version on all code packages.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Using a diff package, you only provide the files that changed and the manifest files where the version has changed.</source>
            <target state="new">Using a diff package, you only provide the files that changed and the manifest files where the version has changed.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Tutorial<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Tutorial<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Parameters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Upgrade Parameters<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Data Serialization<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Data Serialization<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting Application Upgrade<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Troubleshooting Application Upgrade<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>