<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 10:12:14 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b9b5f05339a2357a9d57335210a30c812b74c51</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Shard Elasticity</source>
            <target state="new">Shard Elasticity</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Explains concepts and gives examples behind shard elasticity, the ability to scale out Azure SQL databases easily.</source>
            <target state="new">Explains concepts and gives examples behind shard elasticity, the ability to scale out Azure SQL databases easily.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Shard elasticity</source>
            <target state="new">Shard elasticity</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Shard elasticity<ept id="1">&lt;/strong&gt;</ept> enables application developers to dynamically grow and shrink database resources according to need, enabling one to optimize the performance of their applications, and also to minimize costs.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Shard elasticity<ept id="1">&lt;/strong&gt;</ept> enables application developers to dynamically grow and shrink database resources according to need, enabling one to optimize the performance of their applications, and also to minimize costs.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The combination of the <bpt id="2">&lt;strong&gt;</bpt>Elastic Database tools<ept id="2">&lt;/strong&gt;</ept> for Azure SQL Database along with the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Basic, Standard, and Premium service tiers<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> provides very compelling elasticity scenarios.</source>
            <target state="new">The combination of the <bpt id="2">&lt;strong&gt;</bpt>Elastic Database tools<ept id="2">&lt;/strong&gt;</ept> for Azure SQL Database along with the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Basic, Standard, and Premium service tiers<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> provides very compelling elasticity scenarios.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Elastic database tools enable horizontal scaling - a design pattern in which databases (also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>known as "shards”<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> are added or removed from a shard set to grow or shrink capacity.</source>
            <target state="new">Elastic database tools enable horizontal scaling - a design pattern in which databases (also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>known as "shards”<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> are added or removed from a shard set to grow or shrink capacity.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Similarly, the SQL Database service tiers provide <bpt id="2">&lt;strong&gt;</bpt>vertical scaling<ept id="2">&lt;/strong&gt;</ept> capabilities in that a single database's resources can scale up or down to appropriately match demand.</source>
            <target state="new">Similarly, the SQL Database service tiers provide <bpt id="2">&lt;strong&gt;</bpt>vertical scaling<ept id="2">&lt;/strong&gt;</ept> capabilities in that a single database's resources can scale up or down to appropriately match demand.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Together, the vertical scaling of a single shard and the horizontal scaling of many shards, affords application developers a very flexible environment that can scale to meet performance, capacity and cost-optimization needs.</source>
            <target state="new">Together, the vertical scaling of a single shard and the horizontal scaling of many shards, affords application developers a very flexible environment that can scale to meet performance, capacity and cost-optimization needs.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>With the newly introduced <bpt id="2">&lt;strong&gt;</bpt>elastic database pools<ept id="2">&lt;/strong&gt;</ept> capability, vertical scaling is even simpler to achieve.</source>
            <target state="new">With the newly introduced <bpt id="2">&lt;strong&gt;</bpt>elastic database pools<ept id="2">&lt;/strong&gt;</ept> capability, vertical scaling is even simpler to achieve.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Pools allow an individual database’s resource consumption to grow or shrink <bpt id="2">&lt;em&gt;</bpt>automatically<ept id="2">&lt;/em&gt;</ept> within a budget shared among the entire pool.</source>
            <target state="new">Pools allow an individual database’s resource consumption to grow or shrink <bpt id="2">&lt;em&gt;</bpt>automatically<ept id="2">&lt;/em&gt;</ept> within a budget shared among the entire pool.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For applications that choose not to take advantage of elastic database pools, this article will describe other techniques for implementing policy-based mechanics for managing vertical scaling, as well as some common scenarios for automating horizontal scaling operations.</source>
            <target state="new">For applications that choose not to take advantage of elastic database pools, this article will describe other techniques for implementing policy-based mechanics for managing vertical scaling, as well as some common scenarios for automating horizontal scaling operations.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Horizontal scaling example: concert spike</source>
            <target state="new">Horizontal scaling example: concert spike</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>A canonical scenario for horizontal scaling is an application that processes transactions for concert tickets.</source>
            <target state="new">A canonical scenario for horizontal scaling is an application that processes transactions for concert tickets.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Under normal customer volume, the application uses minimal database resources to handle purchase transactions.</source>
            <target state="new">Under normal customer volume, the application uses minimal database resources to handle purchase transactions.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>However, when tickets go on sale for a popular concert, a single database cannot handle the large spike in customer demand.</source>
            <target state="new">However, when tickets go on sale for a popular concert, a single database cannot handle the large spike in customer demand.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>To process the dramatic increase in transactions, the application scales horizontally.</source>
            <target state="new">To process the dramatic increase in transactions, the application scales horizontally.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The application can now distribute the transaction load across many shards.</source>
            <target state="new">The application can now distribute the transaction load across many shards.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>When the additional resources are no longer needed, the database tier shrinks back for normal usage.</source>
            <target state="new">When the additional resources are no longer needed, the database tier shrinks back for normal usage.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Here horizontal scaling enables an application to scale-out to match customer demand and scale-in when the resources are no longer needed.</source>
            <target state="new">Here horizontal scaling enables an application to scale-out to match customer demand and scale-in when the resources are no longer needed.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Vertical scaling example: telemetry</source>
            <target state="new">Vertical scaling example: telemetry</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>A canonical scenario for vertical scaling is an application that uses a <bpt id="2">&lt;strong&gt;</bpt>shard set<ept id="2">&lt;/strong&gt;</ept> to store operational telemetry.</source>
            <target state="new">A canonical scenario for vertical scaling is an application that uses a <bpt id="2">&lt;strong&gt;</bpt>shard set<ept id="2">&lt;/strong&gt;</ept> to store operational telemetry.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In this scenario, it is better to co-locate all telemetry data for a single day on a single shard.</source>
            <target state="new">In this scenario, it is better to co-locate all telemetry data for a single day on a single shard.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>In this application, data for the current day is ingested into a shard and a new shard is provisioned for subsequent days.</source>
            <target state="new">In this application, data for the current day is ingested into a shard and a new shard is provisioned for subsequent days.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The operational data can then be aged and queried as appropriate.</source>
            <target state="new">The operational data can then be aged and queried as appropriate.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>To ingest telemetry data at high loads, it is better to employ a higher service tier.</source>
            <target state="new">To ingest telemetry data at high loads, it is better to employ a higher service tier.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In other words, a Premium database is better than a Basic database.</source>
            <target state="new">In other words, a Premium database is better than a Basic database.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Once the database reaches its capacity, it switches from ingestion to analysis and reporting.</source>
            <target state="new">Once the database reaches its capacity, it switches from ingestion to analysis and reporting.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>For that, the Standard tier's performance is equal to the task.</source>
            <target state="new">For that, the Standard tier's performance is equal to the task.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Thus one can vertically scale down the service tier on shards (other than the most recently created one) in order to fit the lower performance requirements for older data.</source>
            <target state="new">Thus one can vertically scale down the service tier on shards (other than the most recently created one) in order to fit the lower performance requirements for older data.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Vertical scaling can also be used to increase the performance of a single database in order to achieve increased performance.</source>
            <target state="new">Vertical scaling can also be used to increase the performance of a single database in order to achieve increased performance.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>An example is a tax filing application.</source>
            <target state="new">An example is a tax filing application.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>At filing time, it is better to keep a single customer’s data all on the same database and increase the performance of that shard.</source>
            <target state="new">At filing time, it is better to keep a single customer’s data all on the same database and increase the performance of that shard.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Depending on the application, vertically scaling up and down resources is advantageous to optimize for both cost and performance requirements.</source>
            <target state="new">Depending on the application, vertically scaling up and down resources is advantageous to optimize for both cost and performance requirements.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Together, both horizontal and vertical scaling of the database tier are at the core of application scalability and shard elasticity.</source>
            <target state="new">Together, both horizontal and vertical scaling of the database tier are at the core of application scalability and shard elasticity.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>This document provides the context for shard elasticity scenarios as well as references to example implementations of both vertical and horizontal scaling.</source>
            <target state="new">This document provides the context for shard elasticity scenarios as well as references to example implementations of both vertical and horizontal scaling.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Mechanics of shard elasticity</source>
            <target state="new">Mechanics of shard elasticity</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Vertical and horizontal scaling is a function of three basic components:</source>
            <target state="new">Vertical and horizontal scaling is a function of three basic components:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Telemetry<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Telemetry<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Rule<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Rule<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Action<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Action<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Telemetry</source>
            <target state="new">Telemetry</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Data-driven elasticity<ept id="1">&lt;/strong&gt;</ept> is at the heart of an elastic scale application.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Data-driven elasticity<ept id="1">&lt;/strong&gt;</ept> is at the heart of an elastic scale application.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Depending on the performance requirements, use telemetry to make data-driven decisions on whether to scale vertically or horizontally.</source>
            <target state="new">Depending on the performance requirements, use telemetry to make data-driven decisions on whether to scale vertically or horizontally.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Telemetry data sources</source>
            <target state="new">Telemetry data sources</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>In the context of Azure SQL DB, there are a handful of key sources that can be leveraged as data sources for shard elasticity.</source>
            <target state="new">In the context of Azure SQL DB, there are a handful of key sources that can be leveraged as data sources for shard elasticity.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Performance telemetry<ept id="1">&lt;/strong&gt;</ept> is exposed in five-minute durations in the <bpt id="3">&lt;strong&gt;</bpt>sys.resource_stats<ept id="3">&lt;/strong&gt;</ept> view</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Performance telemetry<ept id="1">&lt;/strong&gt;</ept> is exposed in five-minute durations in the <bpt id="3">&lt;strong&gt;</bpt>sys.resource_stats<ept id="3">&lt;/strong&gt;</ept> view</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Hourly <bpt id="2">&lt;strong&gt;</bpt>database capacity telemetry<ept id="2">&lt;/strong&gt;</ept> is exposed via the <bpt id="4">&lt;strong&gt;</bpt>sys.resource_usage<ept id="4">&lt;/strong&gt;</ept> view.</source>
            <target state="new">Hourly <bpt id="2">&lt;strong&gt;</bpt>database capacity telemetry<ept id="2">&lt;/strong&gt;</ept> is exposed via the <bpt id="4">&lt;strong&gt;</bpt>sys.resource_usage<ept id="4">&lt;/strong&gt;</ept> view.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>One can analyze the performance resources usage by querying the master DB using the following query where ‘Shard_20140623’ is the name of the targeted database.</source>
            <target state="new">One can analyze the performance resources usage by querying the master DB using the following query where ‘Shard_20140623’ is the name of the targeted database.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Performance telemetry<ept id="1">&lt;/strong&gt;</ept> can be summarized over a period of time (seven days in the query below) in order to remove transient behaviors.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Performance telemetry<ept id="1">&lt;/strong&gt;</ept> can be summarized over a period of time (seven days in the query below) in order to remove transient behaviors.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Database capacity<ept id="1">&lt;/strong&gt;</ept> can be measured with a similar query against the <bpt id="3">&lt;strong&gt;</bpt>sys.resource_usage<ept id="3">&lt;/strong&gt;</ept> view.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Database capacity<ept id="1">&lt;/strong&gt;</ept> can be measured with a similar query against the <bpt id="3">&lt;strong&gt;</bpt>sys.resource_usage<ept id="3">&lt;/strong&gt;</ept> view.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>The max of the <bpt id="2">&lt;strong&gt;</bpt>storage_in_megabytes<ept id="2">&lt;/strong&gt;</ept> column yields the current size of the database.</source>
            <target state="new">The max of the <bpt id="2">&lt;strong&gt;</bpt>storage_in_megabytes<ept id="2">&lt;/strong&gt;</ept> column yields the current size of the database.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Such telemetry is useful for horizontally scaling an application when a particular shard reaches its capacity.</source>
            <target state="new">Such telemetry is useful for horizontally scaling an application when a particular shard reaches its capacity.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>As data is ingested into a particular shard, it is useful to project forward a day and determine if the shard has sufficient capacity to handle the coming workload.</source>
            <target state="new">As data is ingested into a particular shard, it is useful to project forward a day and determine if the shard has sufficient capacity to handle the coming workload.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>While not a true implementation of linear regression, the following query returns the maximum delta in database capacity between two consecutive days.</source>
            <target state="new">While not a true implementation of linear regression, the following query returns the maximum delta in database capacity between two consecutive days.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Such telemetry can then be applied to a rule that would then result in an action (or non-action) being taken.</source>
            <target state="new">Such telemetry can then be applied to a rule that would then result in an action (or non-action) being taken.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Rule</source>
            <target state="new">Rule</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The rule is the decision engine that determines whether or not an action is taken.</source>
            <target state="new">The rule is the decision engine that determines whether or not an action is taken.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Some rules are very straightforward and some are much more complicated.</source>
            <target state="new">Some rules are very straightforward and some are much more complicated.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>As shown in the code snippet below, a capacity-focused rule can be configured so that when a shard reaches $SafetyMargin, e.g., 80%, of its maximum capacity, a new shard is provisioned.</source>
            <target state="new">As shown in the code snippet below, a capacity-focused rule can be configured so that when a shard reaches $SafetyMargin, e.g., 80%, of its maximum capacity, a new shard is provisioned.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Given the data sources above, a number of rules can be formulated in order to accomplish numerous shard elasticity scenarios.</source>
            <target state="new">Given the data sources above, a number of rules can be formulated in order to accomplish numerous shard elasticity scenarios.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Action</source>
            <target state="new">Action</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Based on the outcome of the rule, the action (or non-action) is the result.</source>
            <target state="new">Based on the outcome of the rule, the action (or non-action) is the result.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>The two most common actions are:</source>
            <target state="new">The two most common actions are:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The increase or decrease of the service tier or performance level of the shard</source>
            <target state="new">The increase or decrease of the service tier or performance level of the shard</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The addition or removal of a shard from a shard set.</source>
            <target state="new">The addition or removal of a shard from a shard set.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Note that in both horizontal and vertical scaling solutions, the result of an action is not immediate.</source>
            <target state="new">Note that in both horizontal and vertical scaling solutions, the result of an action is not immediate.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>When scaling vertically, for example, the issuing of the ALTER DATABASE command to increase the service tier of a Basic database to a Premium database takes a variable amount of time.</source>
            <target state="new">When scaling vertically, for example, the issuing of the ALTER DATABASE command to increase the service tier of a Basic database to a Premium database takes a variable amount of time.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>The duration is largely dependent on the size of the database (for more information please see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Change Service Tiers and Performance Levels<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The duration is largely dependent on the size of the database (for more information please see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Change Service Tiers and Performance Levels<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Similarly, the allocation or provisioning of a new shard is not instantaneous either.</source>
            <target state="new">Similarly, the allocation or provisioning of a new shard is not instantaneous either.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Thus, for both vertical and horizontal scaling, applications should take into account the non-zero time for altering or provisioning a new database.</source>
            <target state="new">Thus, for both vertical and horizontal scaling, applications should take into account the non-zero time for altering or provisioning a new database.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Example shard elasticity scenario</source>
            <target state="new">Example shard elasticity scenario</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>The example depicted in the figure below highlights two elastic scale scenarios:</source>
            <target state="new">The example depicted in the figure below highlights two elastic scale scenarios:</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>horizontal scaling of a shard map</source>
            <target state="new">horizontal scaling of a shard map</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>vertical scaling of an individual shard.</source>
            <target state="new">vertical scaling of an individual shard.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Operationl Data Ingestion<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Operationl Data Ingestion<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>To horizontally scale, a rule (based on date or database size) is used to provision a new shard and register it with the shard map, thus growing the database tier horizontally.</source>
            <target state="new">To horizontally scale, a rule (based on date or database size) is used to provision a new shard and register it with the shard map, thus growing the database tier horizontally.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Secondly, to scale vertically, a second rule is implemented in which any shard that is older than one day is downgraded from Premium Edition to a Standard or Basic Edition.</source>
            <target state="new">Secondly, to scale vertically, a second rule is implemented in which any shard that is older than one day is downgraded from Premium Edition to a Standard or Basic Edition.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Consider the telemetry scenario again: the application shards by date.</source>
            <target state="new">Consider the telemetry scenario again: the application shards by date.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>It collects telemetry data continuously, requiring a high performance edition at loading time, but lower performance as the data ages.</source>
            <target state="new">It collects telemetry data continuously, requiring a high performance edition at loading time, but lower performance as the data ages.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>The current day’s data [Tnow] is written to a high performance database (Premium).</source>
            <target state="new">The current day’s data [Tnow] is written to a high performance database (Premium).</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Once the clock strikes midnight, the previous day’s shard (now [T-1]) is no longer be used for ingestion.</source>
            <target state="new">Once the clock strikes midnight, the previous day’s shard (now [T-1]) is no longer be used for ingestion.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>The current data is ingested by the current [Tnow].</source>
            <target state="new">The current data is ingested by the current [Tnow].</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>In advance of the next day, a new shard must be provisioned and registered with the shard map ([T+1]).</source>
            <target state="new">In advance of the next day, a new shard must be provisioned and registered with the shard map ([T+1]).</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>This can be done by either provisioning a new shard in advance of every new day or by provisioning a new shard when the current shard ([Tnow]) nears its maximum capacity.</source>
            <target state="new">This can be done by either provisioning a new shard in advance of every new day or by provisioning a new shard when the current shard ([Tnow]) nears its maximum capacity.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Using either of these methods preserves the data locality for all telemetry written for a particular day.</source>
            <target state="new">Using either of these methods preserves the data locality for all telemetry written for a particular day.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Per-hour sharding could also be applied for finer granularity.</source>
            <target state="new">Per-hour sharding could also be applied for finer granularity.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Once a new shard is provisioned, and because [T-1] is used for querying and reporting, it is desirable to reduce the performance level of the database reduce costs.</source>
            <target state="new">Once a new shard is provisioned, and because [T-1] is used for querying and reporting, it is desirable to reduce the performance level of the database reduce costs.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>As the content in DBs age, the performance tier can be further reduced and/or the content of the DBs can be archived to Azure Storage or deleted depending on the application.</source>
            <target state="new">As the content in DBs age, the performance tier can be further reduced and/or the content of the DBs can be archived to Azure Storage or deleted depending on the application.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Executing shard elasticity scenarios</source>
            <target state="new">Executing shard elasticity scenarios</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>To facilitate the actual implementation of both horizontal and vertical scaling scenarios, a number of <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shard elasticity example scripts<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> have been created and posted on Script Center.</source>
            <target state="new">To facilitate the actual implementation of both horizontal and vertical scaling scenarios, a number of <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shard elasticity example scripts<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> have been created and posted on Script Center.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Written to run in the Azure Automation service, these PowerShell runbooks provide a number of methods that interact with the elastic database client library and Azure SQL Database.</source>
            <target state="new">Written to run in the Azure Automation service, these PowerShell runbooks provide a number of methods that interact with the elastic database client library and Azure SQL Database.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Building upon, or extracting from these code samples, one can craft the necessary scripts in order to automate the horizontal, vertical or both scaling scenarios for their application.</source>
            <target state="new">Building upon, or extracting from these code samples, one can craft the necessary scripts in order to automate the horizontal, vertical or both scaling scenarios for their application.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/elastic-scale-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/elastic-scale-include.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>