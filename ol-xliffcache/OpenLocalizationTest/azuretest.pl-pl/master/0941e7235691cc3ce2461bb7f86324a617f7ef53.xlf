<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 6:39:39 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0941e7235691cc3ce2461bb7f86324a617f7ef53</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure AD Xamarin Getting Started | Microsoft Azure</source>
            <target state="new">Azure AD Xamarin Getting Started | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to build a Xamarin application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</source>
            <target state="new">How to build a Xamarin application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Integrate Azure AD into a Xamarin App</source>
            <target state="new">Integrate Azure AD into a Xamarin App</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-switcher.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devguide.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Xamarin allows you to write applications in C# that can run on several different platforms, including mobile devices and pc's alike.</source>
            <target state="new">Xamarin allows you to write applications in C# that can run on several different platforms, including mobile devices and pc's alike.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>If you're building an app using Xamarin, Azure AD makes it simple and straightforward for you to authenticate your users with their Active Directory accounts.</source>
            <target state="new">If you're building an app using Xamarin, Azure AD makes it simple and straightforward for you to authenticate your users with their Active Directory accounts.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>It also enables your application to securely consume any web API protected by Azure AD, such as the Office 365 APIs or the Azure API.</source>
            <target state="new">It also enables your application to securely consume any web API protected by Azure AD, such as the Office 365 APIs or the Azure API.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For Xamarin apps that need to access protected resources, Azure AD provides the Active Directory Authentication Library, or ADAL.</source>
            <target state="new">For Xamarin apps that need to access protected resources, Azure AD provides the Active Directory Authentication Library, or ADAL.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</source>
            <target state="new">ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>To demonstrate just how easy it is, here we’ll build a "Directory Searcher" app that:</source>
            <target state="new">To demonstrate just how easy it is, here we’ll build a "Directory Searcher" app that:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Runs on iOS, Android, Windows Desktop, Windows Phone, and Windows Store.</source>
            <target state="new">Runs on iOS, Android, Windows Desktop, Windows Phone, and Windows Store.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Uses a single portable class library (PCL) to authenticate users and get tokens for the Azure AD Graph API</source>
            <target state="new">Uses a single portable class library (PCL) to authenticate users and get tokens for the Azure AD Graph API</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Searches a directory for users with a given UPN.</source>
            <target state="new">Searches a directory for users with a given UPN.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To build the complete working application, you’ll need to:</source>
            <target state="new">To build the complete working application, you’ll need to:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Set up your Xamarin development environment</source>
            <target state="new">Set up your Xamarin development environment</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Register your application with Azure AD.</source>
            <target state="new">Register your application with Azure AD.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Install &amp; Configure ADAL.</source>
            <target state="new">Install &amp; Configure ADAL.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Use ADAL to get tokens from Azure AD.</source>
            <target state="new">Use ADAL to get tokens from Azure AD.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download a skeleton project<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To get started, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download a skeleton project<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>download the completed sample<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Each is a Visual Studio 2013 solution.</source>
            <target state="new">Each is a Visual Studio 2013 solution.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>You'll also need an Azure AD tenant in which you can create users and register an application.</source>
            <target state="new">You'll also need an Azure AD tenant in which you can create users and register an application.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you don't already have a tenant, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn how to get one<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>0. Set up your Xamarin Development Environment<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>0. Set up your Xamarin Development Environment<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>There are several different ways you might want to set up Xamarin, depending on the specific platforms you wish to target.</source>
            <target state="new">There are several different ways you might want to set up Xamarin, depending on the specific platforms you wish to target.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Since this tutorial includes projects for iOS, Android, and Windows, we'll elect to use Visual Studio 2013 and the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Xamarin.iOS Build Host<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which will require:</source>
            <target state="new">Since this tutorial includes projects for iOS, Android, and Windows, we'll elect to use Visual Studio 2013 and the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Xamarin.iOS Build Host<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which will require:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>A windows machine to run Visual Studio &amp; the Windows apps</source>
            <target state="new">A windows machine to run Visual Studio &amp; the Windows apps</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>An OSX machine (if you want to be able to run the iOS app)</source>
            <target state="new">An OSX machine (if you want to be able to run the iOS app)</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>A Xamarin Business subscription (a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>free trial<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> is sufficient)</source>
            <target state="new">A Xamarin Business subscription (a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>free trial<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> is sufficient)</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Xamarin for Windows<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which includes Xamarin.iOS, Xamarin.Android, and the Visual Studio Integration (recommended for this sample).</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Xamarin for Windows<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which includes Xamarin.iOS, Xamarin.Android, and the Visual Studio Integration (recommended for this sample).</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Xamarin for OS X<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which includes Xamarin.iOS (and the Xamarin.iOS Build Host), Xamarin.Android, Xamarin.Mac, and Xamarin Studio.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Xamarin for OS X<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which includes Xamarin.iOS (and the Xamarin.iOS Build Host), Xamarin.Android, Xamarin.Mac, and Xamarin Studio.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>We recommend you begin with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Xamarin Download Page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, installing Xamarin on both your Mac and PC.</source>
            <target state="new">We recommend you begin with the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Xamarin Download Page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, installing Xamarin on both your Mac and PC.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>If you don't have both machines available, you can still run the sample, but certain projects will have to be omitted.</source>
            <target state="new">If you don't have both machines available, you can still run the sample, but certain projects will have to be omitted.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>detailed installation guides<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for iOS and Android, and if you would like to understand more about the options available to you for development, have a look at the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Building Cross Platform Applications<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> guide.</source>
            <target state="new">Follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>detailed installation guides<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for iOS and Android, and if you would like to understand more about the options available to you for development, have a look at the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Building Cross Platform Applications<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> guide.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You do not need to setup a device for development at this time, nor do you need a Apple Developer Program subscription (unless, of course, you want to run the iOS app on a device).</source>
            <target state="new">You do not need to setup a device for development at this time, nor do you need a Apple Developer Program subscription (unless, of course, you want to run the iOS app on a device).</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Once you've completed the necessary setup, open the solution in Visual Studio to get started.</source>
            <target state="new">Once you've completed the necessary setup, open the solution in Visual Studio to get started.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>You will find six projects: five platform-specific projects and one portable class library that will be shared across all platforms, <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">You will find six projects: five platform-specific projects and one portable class library that will be shared across all platforms, <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>1. Register the Directory Searcher Application<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>1. Register the Directory Searcher Application<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>To enable your app to get tokens, you’ll first need to register it in your Azure AD tenant and grant it permission to access the Azure AD Graph API:</source>
            <target state="new">To enable your app to get tokens, you’ll first need to register it in your Azure AD tenant and grant it permission to access the Azure AD Graph API:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Sign into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Sign into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>In the left hand nav, click on <bpt id="2">&lt;strong&gt;</bpt>Active Directory<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">In the left hand nav, click on <bpt id="2">&lt;strong&gt;</bpt>Active Directory<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Select a tenant in which to register the application.</source>
            <target state="new">Select a tenant in which to register the application.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Applications<ept id="2">&lt;/strong&gt;</ept> tab, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> in the bottom drawer.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Applications<ept id="2">&lt;/strong&gt;</ept> tab, and click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> in the bottom drawer.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Follow the prompts and create a new <bpt id="2">&lt;strong&gt;</bpt>Native Client Application<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Follow the prompts and create a new <bpt id="2">&lt;strong&gt;</bpt>Native Client Application<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept> of the application will describe your application to end-users</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Name<ept id="2">&lt;/strong&gt;</ept> of the application will describe your application to end-users</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Redirect Uri<ept id="2">&lt;/strong&gt;</ept> is a scheme and string combination that Azure AD will use to return token responses.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Redirect Uri<ept id="2">&lt;/strong&gt;</ept> is a scheme and string combination that Azure AD will use to return token responses.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Enter a value, e.g. <bpt id="2">&lt;code&gt;</bpt>http://DirectorySearcher<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Enter a value, e.g. <bpt id="2">&lt;code&gt;</bpt>http://DirectorySearcher<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Once you’ve completed registration, AAD will assign your app a unique client identifier.</source>
            <target state="new">Once you’ve completed registration, AAD will assign your app a unique client identifier.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>You’ll need this value in the next sections, so copy it from the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab.</source>
            <target state="new">You’ll need this value in the next sections, so copy it from the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Also in <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab, locate the "Permissions to Other Applications" section.</source>
            <target state="new">Also in <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab, locate the "Permissions to Other Applications" section.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For the "Azure Active Directory" application, add the <bpt id="2">&lt;strong&gt;</bpt>Access Your Organization's Directory<ept id="2">&lt;/strong&gt;</ept> permission under <bpt id="4">&lt;strong&gt;</bpt>Delegated Permissions<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">For the "Azure Active Directory" application, add the <bpt id="2">&lt;strong&gt;</bpt>Access Your Organization's Directory<ept id="2">&lt;/strong&gt;</ept> permission under <bpt id="4">&lt;strong&gt;</bpt>Delegated Permissions<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This will enable your application to query the Graph API for users.</source>
            <target state="new">This will enable your application to query the Graph API for users.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>2. Install &amp; Configure ADAL<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>2. Install &amp; Configure ADAL<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Now that you have an application in Azure AD, you can install ADAL and write your identity-related code.</source>
            <target state="new">Now that you have an application in Azure AD, you can install ADAL and write your identity-related code.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>In order for ADAL to be able to communicate with Azure AD, you need to provide it with some information about your app registration.</source>
            <target state="new">In order for ADAL to be able to communicate with Azure AD, you need to provide it with some information about your app registration.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Begin by adding ADAL to each of the projects in the solution using the Package Manager Console.</source>
            <target state="new">Begin by adding ADAL to each of the projects in the solution using the Package Manager Console.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirectorySearcherLib -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirectorySearcherLib -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Android -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Android -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Desktop -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Desktop -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-iOS -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-iOS -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Universal.Windows -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Universal.Windows -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Universal.WindowsPhone -IncludePrerelease</source>
            <target state="new">PM&gt; Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory -ProjectName DirSearchClient-Universal.WindowsPhone -IncludePrerelease</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>`</source>
            <target state="new">`</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>You should notice that two library references are added to each project - the PCL portion of ADAL and a platform-specific portion.</source>
            <target state="new">You should notice that two library references are added to each project - the PCL portion of ADAL and a platform-specific portion.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>In the DirectorySearcherLib project, open <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">In the DirectorySearcherLib project, open <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Change the class member values to reflect the values you input into the Azure Portal.</source>
            <target state="new">Change the class member values to reflect the values you input into the Azure Portal.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Your code will reference these values whenever it uses ADAL.</source>
            <target state="new">Your code will reference these values whenever it uses ADAL.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>tenant<ept id="2">&lt;/code&gt;</ept> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>tenant<ept id="2">&lt;/code&gt;</ept> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>clientId<ept id="2">&lt;/code&gt;</ept> is the clientId of your application you copied from the portal.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>clientId<ept id="2">&lt;/code&gt;</ept> is the clientId of your application you copied from the portal.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>returnUri<ept id="2">&lt;/code&gt;</ept> is the redirectUri you entered in the portal, e.g. <bpt id="4">&lt;code&gt;</bpt>http://DirectorySearcher<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>returnUri<ept id="2">&lt;/code&gt;</ept> is the redirectUri you entered in the portal, e.g. <bpt id="4">&lt;code&gt;</bpt>http://DirectorySearcher<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>3.  Use ADAL to Get Tokens from AAD<ept id="1">&lt;/em&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>3.  Use ADAL to Get Tokens from AAD<ept id="1">&lt;/em&gt;</ept></target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Almost<ept id="1">&lt;/em&gt;</ept> all of the app's authentication logic lies in <bpt id="3">&lt;code&gt;</bpt>DirectorySearcher.SearchByAlias(...)<ept id="3">&lt;/code&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Almost<ept id="1">&lt;/em&gt;</ept> all of the app's authentication logic lies in <bpt id="3">&lt;code&gt;</bpt>DirectorySearcher.SearchByAlias(...)<ept id="3">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>All that is necessary in the platform-specific projects is to pass a contextual parameter to the <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher<ept id="2">&lt;/code&gt;</ept> PCL.</source>
            <target state="new">All that is necessary in the platform-specific projects is to pass a contextual parameter to the <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher<ept id="2">&lt;/code&gt;</ept> PCL.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>First, open <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept> and add a new parameter to the <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> method.</source>
            <target state="new">First, open <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher.cs<ept id="2">&lt;/code&gt;</ept> and add a new parameter to the <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>IPlatformParameters<ept id="1">&lt;/code&gt;</ept> is the contextual parameter that encapsulates the platform-specific objects that ADAL needs to perform authentication.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>IPlatformParameters<ept id="1">&lt;/code&gt;</ept> is the contextual parameter that encapsulates the platform-specific objects that ADAL needs to perform authentication.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Next, initialize the <bpt id="2">&lt;code&gt;</bpt>AuthenticationContext<ept id="2">&lt;/code&gt;</ept> - ADAL’s primary class.</source>
            <target state="new">Next, initialize the <bpt id="2">&lt;code&gt;</bpt>AuthenticationContext<ept id="2">&lt;/code&gt;</ept> - ADAL’s primary class.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>This is where you pass ADAL the coordinates it needs to communicate with Azure AD.</source>
            <target state="new">This is where you pass ADAL the coordinates it needs to communicate with Azure AD.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Then call <bpt id="2">&lt;code&gt;</bpt>AcquireTokenAsync(...)<ept id="2">&lt;/code&gt;</ept>, which accepts the <bpt id="4">&lt;code&gt;</bpt>IPlatformParameters<ept id="4">&lt;/code&gt;</ept> object and will invoke the authentication flow necessary to return a token to the app.</source>
            <target state="new">Then call <bpt id="2">&lt;code&gt;</bpt>AcquireTokenAsync(...)<ept id="2">&lt;/code&gt;</ept>, which accepts the <bpt id="4">&lt;code&gt;</bpt>IPlatformParameters<ept id="4">&lt;/code&gt;</ept> object and will invoke the authentication flow necessary to return a token to the app.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>AcquireTokenAsync(...)<ept id="1">&lt;/code&gt;</ept> will first attempt to return a token for the requested resource (the Graph API in this case) without prompting the user to enter their credentials (via caching or refreshing old tokens).</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>AcquireTokenAsync(...)<ept id="1">&lt;/code&gt;</ept> will first attempt to return a token for the requested resource (the Graph API in this case) without prompting the user to enter their credentials (via caching or refreshing old tokens).</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Only if necessary, it will show the user the Azure AD sign in page before acquiring the requested token.</source>
            <target state="new">Only if necessary, it will show the user the Azure AD sign in page before acquiring the requested token.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>You can then attach the access token to the Graph API request in the Authorization header:</source>
            <target state="new">You can then attach the access token to the Graph API request in the Authorization header:</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>That's all for the <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher<ept id="2">&lt;/code&gt;</ept> PCL and your app's identity-related code.</source>
            <target state="new">That's all for the <bpt id="2">&lt;code&gt;</bpt>DirectorySearcher<ept id="2">&lt;/code&gt;</ept> PCL and your app's identity-related code.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>All that remains is to call the <bpt id="2">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="2">&lt;/code&gt;</ept> method in each platform's views, and where necessary add code for correctly handling the UI lifecycle.</source>
            <target state="new">All that remains is to call the <bpt id="2">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="2">&lt;/code&gt;</ept> method in each platform's views, and where necessary add code for correctly handling the UI lifecycle.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Android:</source>
            <target state="new">Android:</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>In <bpt id="2">&lt;code&gt;</bpt>MainActivity.cs<ept id="2">&lt;/code&gt;</ept>, add a call to <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> in the button click handler:</source>
            <target state="new">In <bpt id="2">&lt;code&gt;</bpt>MainActivity.cs<ept id="2">&lt;/code&gt;</ept>, add a call to <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> in the button click handler:</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>You also need to override the <bpt id="2">&lt;code&gt;</bpt>OnActivityResult<ept id="2">&lt;/code&gt;</ept> lifecycle method to forward any authentication redirects back to the appropriate method.</source>
            <target state="new">You also need to override the <bpt id="2">&lt;code&gt;</bpt>OnActivityResult<ept id="2">&lt;/code&gt;</ept> lifecycle method to forward any authentication redirects back to the appropriate method.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>ADAL provides a helper method for this in Android:</source>
            <target state="new">ADAL provides a helper method for this in Android:</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Windows Desktop:</source>
            <target state="new">Windows Desktop:</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>In <bpt id="2">&lt;code&gt;</bpt>MainWindow.xaml.cs<ept id="2">&lt;/code&gt;</ept>, simply make a call to <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> passing a <bpt id="6">&lt;code&gt;</bpt>WindowInteropHelper<ept id="6">&lt;/code&gt;</ept> in the desktop's <bpt id="8">&lt;code&gt;</bpt>PlatformParameters<ept id="8">&lt;/code&gt;</ept> object:</source>
            <target state="new">In <bpt id="2">&lt;code&gt;</bpt>MainWindow.xaml.cs<ept id="2">&lt;/code&gt;</ept>, simply make a call to <bpt id="4">&lt;code&gt;</bpt>SearchByAlias(...)<ept id="4">&lt;/code&gt;</ept> passing a <bpt id="6">&lt;code&gt;</bpt>WindowInteropHelper<ept id="6">&lt;/code&gt;</ept> in the desktop's <bpt id="8">&lt;code&gt;</bpt>PlatformParameters<ept id="8">&lt;/code&gt;</ept> object:</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>iOS:</source>
            <target state="new">iOS:</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>In <bpt id="2">&lt;code&gt;</bpt>DirSearchClient_iOSViewController.cs<ept id="2">&lt;/code&gt;</ept>, the iOS <bpt id="4">&lt;code&gt;</bpt>PlatformParameters<ept id="4">&lt;/code&gt;</ept> object simply takes a reference to the View Controller:</source>
            <target state="new">In <bpt id="2">&lt;code&gt;</bpt>DirSearchClient_iOSViewController.cs<ept id="2">&lt;/code&gt;</ept>, the iOS <bpt id="4">&lt;code&gt;</bpt>PlatformParameters<ept id="4">&lt;/code&gt;</ept> object simply takes a reference to the View Controller:</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Windows Store</source>
            <target state="new">Windows Store</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>In Windows Store, open <bpt id="2">&lt;code&gt;</bpt>MainPage.xaml.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> method, which uses a helper method in a shared project to update UI as necessary.</source>
            <target state="new">In Windows Store, open <bpt id="2">&lt;code&gt;</bpt>MainPage.xaml.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> method, which uses a helper method in a shared project to update UI as necessary.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Windows Phone</source>
            <target state="new">Windows Phone</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>In Windows Phone, open <bpt id="2">&lt;code&gt;</bpt>MainPage.xaml.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> method, which uses the same helper method in a shared project to update UI.</source>
            <target state="new">In Windows Phone, open <bpt id="2">&lt;code&gt;</bpt>MainPage.xaml.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>Search<ept id="4">&lt;/code&gt;</ept> method, which uses the same helper method in a shared project to update UI.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Congratulations!</source>
            <target state="new">Congratulations!</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>You now have a working Xamarin app that has the ability to authenticate users and securely call Web APIs using OAuth 2.0 across five different platforms.</source>
            <target state="new">You now have a working Xamarin app that has the ability to authenticate users and securely call Web APIs using OAuth 2.0 across five different platforms.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>If you haven’t already, now is the time to populate your tenant with some users.</source>
            <target state="new">If you haven’t already, now is the time to populate your tenant with some users.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Run your DirectorySearcher app, and sign in with one of those users.</source>
            <target state="new">Run your DirectorySearcher app, and sign in with one of those users.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>Search for other users based on their UPN.</source>
            <target state="new">Search for other users based on their UPN.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>ADAL makes it easy to incorporate common identity features into your application.</source>
            <target state="new">ADAL makes it easy to incorporate common identity features into your application.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</source>
            <target state="new">It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>All you really need to know is a single API call, <bpt id="2">&lt;code&gt;</bpt>authContext.AcquireToken*(…)<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">All you really need to know is a single API call, <bpt id="2">&lt;code&gt;</bpt>authContext.AcquireToken*(…)<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For reference, the completed sample (without your configuration values) is provided <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>You can now move on to additional identity scenarios.</source>
            <target state="new">You can now move on to additional identity scenarios.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>You may want to try:</source>
            <target state="new">You may want to try:</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a .NET Web API with Azure AD &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a .NET Web API with Azure AD &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/active-directory-devquickstarts-additional-resources.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>