<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:32:23 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1131e3a6021e3c71887e63c7398c6b1502f72bb6</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Notification Hubs with Java</source>
            <target state="new">How to use Notification Hubs with Java</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Notification Hubs from a Java back-end.</source>
            <target state="new">Learn how to use Azure Notification Hubs from a Java back-end.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Notification Hubs from Java</source>
            <target state="new">How to use Notification Hubs from Java</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This topic describes the key features of the new fully supported official Azure Notification Hub Java SDK.</source>
            <target state="new">This topic describes the key features of the new fully supported official Azure Notification Hub Java SDK.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This is an open source project and you can view the entire SDK code at [Java SDK].</source>
            <target state="new">This is an open source project and you can view the entire SDK code at [Java SDK].</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In general, you can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Notification Hubs REST APIs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">In general, you can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Notification Hubs REST APIs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This Java SDK provides a thin wrapper over these REST interfaces in Java.</source>
            <target state="new">This Java SDK provides a thin wrapper over these REST interfaces in Java.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The SDK supports currently:</source>
            <target state="new">The SDK supports currently:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>CRUD on Notification Hubs</source>
            <target state="new">CRUD on Notification Hubs</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>CRUD on Registrations</source>
            <target state="new">CRUD on Registrations</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Installation Management</source>
            <target state="new">Installation Management</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Import/Export Registrations</source>
            <target state="new">Import/Export Registrations</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Regular Sends</source>
            <target state="new">Regular Sends</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Scheduled Sends</source>
            <target state="new">Scheduled Sends</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Async operations via Java NIO</source>
            <target state="new">Async operations via Java NIO</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Supported platforms: APNS (iOS), GCM (Android), WNS (Windows Store apps), MPNS(Windows Phone), ADM (Amazon Kindle Fire), Baidu (Android without Google services)</source>
            <target state="new">Supported platforms: APNS (iOS), GCM (Android), WNS (Windows Store apps), MPNS(Windows Phone), ADM (Amazon Kindle Fire), Baidu (Android without Google services)</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>SDK Usage</source>
            <target state="new">SDK Usage</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Compile and build</source>
            <target state="new">Compile and build</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Use [Maven]</source>
            <target state="new">Use [Maven]</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>To build:</source>
            <target state="new">To build:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Code</source>
            <target state="new">Code</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Notification Hub CRUDs</source>
            <target state="new">Notification Hub CRUDs</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create a NamespaceManager:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create a NamespaceManager:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create Notification Hub:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create Notification Hub:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>OR</source>
            <target state="new">OR</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get Notification Hub:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get Notification Hub:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Update Notification Hub:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Update Notification Hub:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Delete Notification Hub:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Delete Notification Hub:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Registration CRUDs</source>
            <target state="new">Registration CRUDs</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create a Notification Hub client:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create a Notification Hub client:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create Windows registration:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create Windows registration:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create iOS registration:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create iOS registration:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Similarly you can create registrations for Android (GCM), Windows Phone (MPNS), and Kindle Fire (ADM).</source>
            <target state="new">Similarly you can create registrations for Android (GCM), Windows Phone (MPNS), and Kindle Fire (ADM).</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create template registrations:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create template registrations:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Create registrations using create registrationid + upsert pattern<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Create registrations using create registrationid + upsert pattern<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Removes duplicates due to any lost responses if storing registration ids on the device:</source>
            <target state="new">Removes duplicates due to any lost responses if storing registration ids on the device:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Update registrations:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Update registrations:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Delete registrations:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Delete registrations:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Query registrations:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Query registrations:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get single registration:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get single registration:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get all registrations in hub:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get all registrations in hub:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get registrations with tag:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get registrations with tag:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get registrations by channel:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get registrations by channel:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>All collection queries support $top and continuation tokens.</source>
            <target state="new">All collection queries support $top and continuation tokens.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Installation API usage</source>
            <target state="new">Installation API usage</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Installation API is an alternative mechanism for registration management.</source>
            <target state="new">Installation API is an alternative mechanism for registration management.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Instead of maintaining multiple registrations which is not trivial and may be easily done wrongly or inefficiently, it is now possible to use a SINGLE Installation object.</source>
            <target state="new">Instead of maintaining multiple registrations which is not trivial and may be easily done wrongly or inefficiently, it is now possible to use a SINGLE Installation object.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Installation contains everything you need: push channel (device token), tags, templates, secondary tiles (for WNS and APNS).</source>
            <target state="new">Installation contains everything you need: push channel (device token), tags, templates, secondary tiles (for WNS and APNS).</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>You don't need to call the service to get Id anymore - just generate GUID or any other identifier, keep it on device and send to your backend together with push channel (device token).</source>
            <target state="new">You don't need to call the service to get Id anymore - just generate GUID or any other identifier, keep it on device and send to your backend together with push channel (device token).</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>On the backend you should only do a single call: CreateOrUpdateInstallation, it is fully idempotent, so feel free to retry if needed.</source>
            <target state="new">On the backend you should only do a single call: CreateOrUpdateInstallation, it is fully idempotent, so feel free to retry if needed.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>As example for Amazon Kindle Fire it looks like this:</source>
            <target state="new">As example for Amazon Kindle Fire it looks like this:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>If you want to update it:</source>
            <target state="new">If you want to update it:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>For advanced scenarios we have partial update capability which allows to modify only particular properties of the installation object.</source>
            <target state="new">For advanced scenarios we have partial update capability which allows to modify only particular properties of the installation object.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Basically partial update is subset of JSON Patch operations you can run against Installation object.</source>
            <target state="new">Basically partial update is subset of JSON Patch operations you can run against Installation object.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Delete Installation:</source>
            <target state="new">Delete Installation:</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>CreateOrUpdate, Patch and Delete are eventually consistent with Get.</source>
            <target state="new">CreateOrUpdate, Patch and Delete are eventually consistent with Get.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Your requested operation just goes to the system queue during the call and will be executed in background.</source>
            <target state="new">Your requested operation just goes to the system queue during the call and will be executed in background.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Note that Get is not designed for main runtime scenario but just for debug and troubleshooting purposes, it is tightly throttled by the service.</source>
            <target state="new">Note that Get is not designed for main runtime scenario but just for debug and troubleshooting purposes, it is tightly throttled by the service.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Send flow for Installations is the same as for Registrations.</source>
            <target state="new">Send flow for Installations is the same as for Registrations.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>We've just introduced an option to target notification to the particular Installation - just use tag "InstallationId:{desired-id}".</source>
            <target state="new">We've just introduced an option to target notification to the particular Installation - just use tag "InstallationId:{desired-id}".</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>For case above it would look like this:</source>
            <target state="new">For case above it would look like this:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>For one of several templates:</source>
            <target state="new">For one of several templates:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Schedule Notifications (available for STANDARD Tier)</source>
            <target state="new">Schedule Notifications (available for STANDARD Tier)</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The same as regular send but with one additional parameter - scheduledTime which says when notification should be delivered.</source>
            <target state="new">The same as regular send but with one additional parameter - scheduledTime which says when notification should be delivered.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Service accepts any point of time between now + 5 minutes and now + 7 days.</source>
            <target state="new">Service accepts any point of time between now + 5 minutes and now + 7 days.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Schedule a Windows native notification:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Schedule a Windows native notification:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Import/Export (available for STANDARD Tier)</source>
            <target state="new">Import/Export (available for STANDARD Tier)</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Sometimes it is required to perform bulk operation against registrations.</source>
            <target state="new">Sometimes it is required to perform bulk operation against registrations.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Usually it is for integration with another system or just a massive fix to say update the tags.</source>
            <target state="new">Usually it is for integration with another system or just a massive fix to say update the tags.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>It is strongly not recommended to use Get/Update flow if we are talking about thousands of registrations.</source>
            <target state="new">It is strongly not recommended to use Get/Update flow if we are talking about thousands of registrations.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Import/Export capability is designed to cover the scenario.</source>
            <target state="new">Import/Export capability is designed to cover the scenario.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Basically you provide an access to some blob container under your storage account as a source of incoming data and location for output.</source>
            <target state="new">Basically you provide an access to some blob container under your storage account as a source of incoming data and location for output.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Submit export job:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Submit export job:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Submit import job:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Submit import job:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Wait until job is done:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Wait until job is done:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Get all jobs:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Get all jobs:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>URI with SAS signature:<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>URI with SAS signature:<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>This is the URL of some blob file or blob container plus set of parameters like permissions and expiration time plus signature of all these things made using account's SAS key.</source>
            <target state="new">This is the URL of some blob file or blob container plus set of parameters like permissions and expiration time plus signature of all these things made using account's SAS key.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Azure Storage Java SDK has rich capabilities including creation of such kind of URIs.</source>
            <target state="new">Azure Storage Java SDK has rich capabilities including creation of such kind of URIs.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>As simple alternative you can take a look at ImportExportE2E test class (from the github location) which has very basic and compact implementation of signing algorithm.</source>
            <target state="new">As simple alternative you can take a look at ImportExportE2E test class (from the github location) which has very basic and compact implementation of signing algorithm.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Send Notifications</source>
            <target state="new">Send Notifications</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>The Notification object is simply a body with headers, some utility methods help in building the native and template notifications objects.</source>
            <target state="new">The Notification object is simply a body with headers, some utility methods help in building the native and template notifications objects.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows Store and Windows Phone 8.1 (non-Silverlight)<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows Store and Windows Phone 8.1 (non-Silverlight)<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>iOS<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>iOS<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Android<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Android<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.0 and 8.1 Silverlight<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Windows Phone 8.0 and 8.1 Silverlight<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Kindle Fire<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Kindle Fire<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Send to Tags<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Send to Tags<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Send to tag expression<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Send to tag expression<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Send template notification<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Send template notification<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Running your Java code should now produce a notification appearing on your target device.</source>
            <target state="new">Running your Java code should now produce a notification appearing on your target device.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Next Steps</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Next Steps</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>In this topic we showed how to create a simple Java REST client for Notification Hubs.</source>
            <target state="new">In this topic we showed how to create a simple Java REST client for Notification Hubs.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>From here you can:</source>
            <target state="new">From here you can:</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Download the full [Java SDK], which contains the entire SDK code.</source>
            <target state="new">Download the full [Java SDK], which contains the entire SDK code.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Play with the samples:</source>
            <target state="new">Play with the samples:</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>[Get Started with Notification Hubs]</source>
            <target state="new">[Get Started with Notification Hubs]</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>[Send breaking news]</source>
            <target state="new">[Send breaking news]</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>[Send localized breaking news]</source>
            <target state="new">[Send localized breaking news]</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>[Send notifications to authenticated users]</source>
            <target state="new">[Send notifications to authenticated users]</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>[Send cross-platform notifications to authenticated users]</source>
            <target state="new">[Send cross-platform notifications to authenticated users]</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>