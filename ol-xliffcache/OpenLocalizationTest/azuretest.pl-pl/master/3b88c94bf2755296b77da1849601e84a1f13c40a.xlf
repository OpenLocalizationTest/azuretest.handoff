<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 10:04:09 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b88c94bf2755296b77da1849601e84a1f13c40a</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>User-defined schemas in SQL Data Warehouse | Microsoft Azure</source>
            <target state="new">User-defined schemas in SQL Data Warehouse | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Tips for using Transact-SQL schemas in Azure SQL Data Warehouse for developing solutions.</source>
            <target state="new">Tips for using Transact-SQL schemas in Azure SQL Data Warehouse for developing solutions.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>User-defined schemas in SQL Data Warehouse</source>
            <target state="new">User-defined schemas in SQL Data Warehouse</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Traditional data warehouses often use separate databases to create application boundaries based on either workload, domain or security.</source>
            <target state="new">Traditional data warehouses often use separate databases to create application boundaries based on either workload, domain or security.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>For example, a traditional SQL Server data warehouse might include a staging database, a data warehouse database, and some data mart databases.</source>
            <target state="new">For example, a traditional SQL Server data warehouse might include a staging database, a data warehouse database, and some data mart databases.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In this topology each database operates as a workload and security boundary in the architecture.</source>
            <target state="new">In this topology each database operates as a workload and security boundary in the architecture.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>By contrast, SQL Data Warehouse runs the entire data warehouse workload within one database.</source>
            <target state="new">By contrast, SQL Data Warehouse runs the entire data warehouse workload within one database.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Cross database joins are not permitted.</source>
            <target state="new">Cross database joins are not permitted.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Therefore SQL Data Warehouse expects all tables used by the warehouse to be stored within the one database.</source>
            <target state="new">Therefore SQL Data Warehouse expects all tables used by the warehouse to be stored within the one database.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>SQL Data Warehouse does not support cross database queries of any kind.</source>
            <target state="new">SQL Data Warehouse does not support cross database queries of any kind.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Consequently, data warehouse implementations that leverage this pattern will need to be revised.</source>
            <target state="new">Consequently, data warehouse implementations that leverage this pattern will need to be revised.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Recommendations</source>
            <target state="new">Recommendations</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>These are recommendations for consolidating workloads, security, domain and functional boundaries by using user defined schemas</source>
            <target state="new">These are recommendations for consolidating workloads, security, domain and functional boundaries by using user defined schemas</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Use one SQL Data Warehouse database to run your entire data warehouse workload</source>
            <target state="new">Use one SQL Data Warehouse database to run your entire data warehouse workload</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Consolidate your existing data warehouse environment to use one SQL Data Warehouse database</source>
            <target state="new">Consolidate your existing data warehouse environment to use one SQL Data Warehouse database</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Leverage <bpt id="2">&lt;strong&gt;</bpt>user-defined schemas<ept id="2">&lt;/strong&gt;</ept> to provide the boundary previously implemented using databases.</source>
            <target state="new">Leverage <bpt id="2">&lt;strong&gt;</bpt>user-defined schemas<ept id="2">&lt;/strong&gt;</ept> to provide the boundary previously implemented using databases.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>If user-defined schemas have not been used previously then you have a clean slate.</source>
            <target state="new">If user-defined schemas have not been used previously then you have a clean slate.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Simply use the old database name as the basis for your user-defined schemas in the SQL Data Warehouse database.</source>
            <target state="new">Simply use the old database name as the basis for your user-defined schemas in the SQL Data Warehouse database.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>If schemas have already been used then you have a few options:</source>
            <target state="new">If schemas have already been used then you have a few options:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Remove the legacy schema names and start fresh</source>
            <target state="new">Remove the legacy schema names and start fresh</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Retain the legacy schema names by pre-pending the legacy schema name to the table name</source>
            <target state="new">Retain the legacy schema names by pre-pending the legacy schema name to the table name</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Retain the legacy schema names by implementing views over the table in an extra schema to re-create the old schema structure.</source>
            <target state="new">Retain the legacy schema names by implementing views over the table in an extra schema to re-create the old schema structure.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>On first inspection option 3 may seem like the most appealing option.</source>
            <target state="new">On first inspection option 3 may seem like the most appealing option.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>However, the devil is in the detail.</source>
            <target state="new">However, the devil is in the detail.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Views are read only in SQL Data Warehouse.</source>
            <target state="new">Views are read only in SQL Data Warehouse.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Any data or table modification would need to be performed against the base table.</source>
            <target state="new">Any data or table modification would need to be performed against the base table.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Option 3 also introduces a layer of views into your system.</source>
            <target state="new">Option 3 also introduces a layer of views into your system.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>You might want to give this some additional thought if you are using views in your architecture already.</source>
            <target state="new">You might want to give this some additional thought if you are using views in your architecture already.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Examples:</source>
            <target state="new">Examples:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Implement user-defined schemas based on database names</source>
            <target state="new">Implement user-defined schemas based on database names</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Retain legacy schema names by pre-pending them to the table name.</source>
            <target state="new">Retain legacy schema names by pre-pending them to the table name.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Use schemas for the workload boundary.</source>
            <target state="new">Use schemas for the workload boundary.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Retain legacy schema names using views</source>
            <target state="new">Retain legacy schema names using views</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Any change in schema strategy needs a review of the security model for the database.</source>
            <target state="new">Any change in schema strategy needs a review of the security model for the database.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>In many cases you might be able to simplify the security model by assigning permissions at the schema level.</source>
            <target state="new">In many cases you might be able to simplify the security model by assigning permissions at the schema level.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>If more granular permissions are required then you can use database roles.</source>
            <target state="new">If more granular permissions are required then you can use database roles.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>