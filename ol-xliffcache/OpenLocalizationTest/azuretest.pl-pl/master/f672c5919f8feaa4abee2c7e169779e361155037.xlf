<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:48:14 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f672c5919f8feaa4abee2c7e169779e361155037</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure Queues and Service Bus queues - compared and contrasted</source>
            <target state="new">Azure Queues and Service Bus queues - compared and contrasted</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Analyzes differences and similarities between two types of queues offered by Azure.</source>
            <target state="new">Analyzes differences and similarities between two types of queues offered by Azure.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Azure Queues and Service Bus queues - compared and contrasted</source>
            <target state="new">Azure Queues and Service Bus queues - compared and contrasted</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This article analyzes the differences and similarities between the two types of queues offered by Microsoft Azure today: Azure Queues and Service Bus queues.</source>
            <target state="new">This article analyzes the differences and similarities between the two types of queues offered by Microsoft Azure today: Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>By using this information, you can compare and contrast the respective technologies and be able to make a more informed decision about which solution best meets your needs.</source>
            <target state="new">By using this information, you can compare and contrast the respective technologies and be able to make a more informed decision about which solution best meets your needs.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Introduction</source>
            <target state="new">Introduction</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Microsoft Azure supports two types of queue mechanisms: <bpt id="2">&lt;strong&gt;</bpt>Azure Queues<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Service Bus Queues<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Microsoft Azure supports two types of queue mechanisms: <bpt id="2">&lt;strong&gt;</bpt>Azure Queues<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Service Bus Queues<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Azure Queues<ept id="1">&lt;/strong&gt;</ept>, which are part of the <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Azure storage<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> infrastructure, feature a simple REST-based Get/Put/Peek interface, providing reliable, persistent messaging within and between services.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Azure Queues<ept id="1">&lt;/strong&gt;</ept>, which are part of the <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Azure storage<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> infrastructure, feature a simple REST-based Get/Put/Peek interface, providing reliable, persistent messaging within and between services.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Service Bus queues<ept id="1">&lt;/strong&gt;</ept> are part of a broader <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Azure messaging<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> infrastructure that supports queuing as well as publish/subscribe, Web service remoting, and integration patterns.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Service Bus queues<ept id="1">&lt;/strong&gt;</ept> are part of a broader <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Azure messaging<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> infrastructure that supports queuing as well as publish/subscribe, Web service remoting, and integration patterns.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For more information about Service Bus queues, topics/subscriptions, and relays, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Overview of Service Bus Messaging Patterns<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about Service Bus queues, topics/subscriptions, and relays, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Overview of Service Bus Messaging Patterns<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>While both queuing technologies exist concurrently, Azure Queues were introduced first, as a dedicated queue storage mechanism built on top of the Azure storage services.</source>
            <target state="new">While both queuing technologies exist concurrently, Azure Queues were introduced first, as a dedicated queue storage mechanism built on top of the Azure storage services.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Service Bus queues are built on top of the broader "brokered messaging" infrastructure designed to integrate applications or application components that may span multiple communication protocols, data contracts, trust domains, and/or network environments.</source>
            <target state="new">Service Bus queues are built on top of the broader "brokered messaging" infrastructure designed to integrate applications or application components that may span multiple communication protocols, data contracts, trust domains, and/or network environments.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>This article compares the two queue technologies offered by Azure by discussing the differences in the behavior and implementation of the features provided by each.</source>
            <target state="new">This article compares the two queue technologies offered by Azure by discussing the differences in the behavior and implementation of the features provided by each.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The article also provides guidance for choosing which features might best suit your application development needs.</source>
            <target state="new">The article also provides guidance for choosing which features might best suit your application development needs.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Technology selection considerations</source>
            <target state="new">Technology selection considerations</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Both Azure Queues and Service Bus queues are implementations of the message queuing service currently offered on Microsoft Azure.</source>
            <target state="new">Both Azure Queues and Service Bus queues are implementations of the message queuing service currently offered on Microsoft Azure.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Each has a slightly different feature set, which means you can choose one or the other, or use both, depending on the needs of your particular solution or business/technical problem you are solving.</source>
            <target state="new">Each has a slightly different feature set, which means you can choose one or the other, or use both, depending on the needs of your particular solution or business/technical problem you are solving.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>When determining which queuing technology fits the purpose for a given solution, solution architects and developers should consider the recommendations below.</source>
            <target state="new">When determining which queuing technology fits the purpose for a given solution, solution architects and developers should consider the recommendations below.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>For more details, see the next section.</source>
            <target state="new">For more details, see the next section.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>As a solution architect/developer, <bpt id="2">&lt;strong&gt;</bpt>you should consider using Azure Queues<ept id="2">&lt;/strong&gt;</ept> when:</source>
            <target state="new">As a solution architect/developer, <bpt id="2">&lt;strong&gt;</bpt>you should consider using Azure Queues<ept id="2">&lt;/strong&gt;</ept> when:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Your application must store over 80 GB of messages in a queue, where the messages have a lifetime shorter than 7 days.</source>
            <target state="new">Your application must store over 80 GB of messages in a queue, where the messages have a lifetime shorter than 7 days.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Your application wants to track progress for processing a message inside of the queue.</source>
            <target state="new">Your application wants to track progress for processing a message inside of the queue.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This is useful if the worker processing a message crashes.</source>
            <target state="new">This is useful if the worker processing a message crashes.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>A subsequent worker can then use that information to continue from where the prior worker left off.</source>
            <target state="new">A subsequent worker can then use that information to continue from where the prior worker left off.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>You require server side logs of all of the transactions executed against your queues.</source>
            <target state="new">You require server side logs of all of the transactions executed against your queues.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>As a solution architect/developer, <bpt id="2">&lt;strong&gt;</bpt>you should consider using Service Bus queues<ept id="2">&lt;/strong&gt;</ept> when:</source>
            <target state="new">As a solution architect/developer, <bpt id="2">&lt;strong&gt;</bpt>you should consider using Service Bus queues<ept id="2">&lt;/strong&gt;</ept> when:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Your solution must be able to receive messages without having to poll the queue.</source>
            <target state="new">Your solution must be able to receive messages without having to poll the queue.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>With Service Bus, this can be achieved through the use of the long-polling receive operation using the TCP-based protocols that Service Bus supports.</source>
            <target state="new">With Service Bus, this can be achieved through the use of the long-polling receive operation using the TCP-based protocols that Service Bus supports.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Your solution requires the queue to provide a guaranteed first-in-first-out (FIFO) ordered delivery.</source>
            <target state="new">Your solution requires the queue to provide a guaranteed first-in-first-out (FIFO) ordered delivery.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>You want a symmetric experience in Azure and on Windows Server (private cloud).</source>
            <target state="new">You want a symmetric experience in Azure and on Windows Server (private cloud).</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus for Windows Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus for Windows Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Your solution must be able to support automatic duplicate detection.</source>
            <target state="new">Your solution must be able to support automatic duplicate detection.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>You want your application to process messages as parallel long-running streams (messages are associated with a stream using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SessionId<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property on the message).</source>
            <target state="new">You want your application to process messages as parallel long-running streams (messages are associated with a stream using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SessionId<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property on the message).</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In this model, each node in the consuming application competes for streams, as opposed to messages.</source>
            <target state="new">In this model, each node in the consuming application competes for streams, as opposed to messages.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>When a stream is given to a consuming node, the node can examine the state of the application stream state using transactions.</source>
            <target state="new">When a stream is given to a consuming node, the node can examine the state of the application stream state using transactions.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Your solution requires transactional behavior and atomicity when sending or receiving multiple messages from a queue.</source>
            <target state="new">Your solution requires transactional behavior and atomicity when sending or receiving multiple messages from a queue.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The time-to-live (TTL) characteristic of the application-specific workload can exceed the 7-day period.</source>
            <target state="new">The time-to-live (TTL) characteristic of the application-specific workload can exceed the 7-day period.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Your application handles messages that can exceed 64 KB but will not likely approach the 256 KB limit.</source>
            <target state="new">Your application handles messages that can exceed 64 KB but will not likely approach the 256 KB limit.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>You deal with a requirement to provide a role-based access model to the queues, and different rights/permissions for senders and receivers.</source>
            <target state="new">You deal with a requirement to provide a role-based access model to the queues, and different rights/permissions for senders and receivers.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Your queue size will not grow larger than 80 GB.</source>
            <target state="new">Your queue size will not grow larger than 80 GB.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>You want to use the AMQP 1.0 standards-based messaging broker.</source>
            <target state="new">You want to use the AMQP 1.0 standards-based messaging broker.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For more information about AMQP, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about AMQP, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus AMQP Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>You can envision an eventual migration from queue-based point-to-point communication to a message exchange pattern that enables seamless integration of additional receivers (subscribers), each of which receives independent copies of either some or all messages sent to the queue.</source>
            <target state="new">You can envision an eventual migration from queue-based point-to-point communication to a message exchange pattern that enables seamless integration of additional receivers (subscribers), each of which receives independent copies of either some or all messages sent to the queue.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The latter refers to the publish/subscribe capability natively provided by Service Bus.</source>
            <target state="new">The latter refers to the publish/subscribe capability natively provided by Service Bus.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Your messaging solution must be able to support the “At-Most-Once” delivery guarantee without the need for you to build the additional infrastructure components.</source>
            <target state="new">Your messaging solution must be able to support the “At-Most-Once” delivery guarantee without the need for you to build the additional infrastructure components.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>You would like to be able to publish and consume batches of messages.</source>
            <target state="new">You would like to be able to publish and consume batches of messages.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>You require full integration with the Windows Communication Foundation (WCF) communication stack in the .NET Framework.</source>
            <target state="new">You require full integration with the Windows Communication Foundation (WCF) communication stack in the .NET Framework.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Comparing Azure Queues and Service Bus Queues</source>
            <target state="new">Comparing Azure Queues and Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>The tables in the following sections provide a logical grouping of queue features and let you compare, at a glance, the capabilities available in both Azure Queues and Service Bus queues.</source>
            <target state="new">The tables in the following sections provide a logical grouping of queue features and let you compare, at a glance, the capabilities available in both Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Foundational capabilities</source>
            <target state="new">Foundational capabilities</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>This section compares some of the fundamental queuing capabilities provided by Azure Queues and Service Bus queues.</source>
            <target state="new">This section compares some of the fundamental queuing capabilities provided by Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Ordering guarantee</source>
            <target state="new">Ordering guarantee</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>For more information, see the first note in the “Additional Information” section.<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept> <bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>For more information, see the first note in the “Additional Information” section.<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes - First-In-First-Out (FIFO)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of messaging sessions)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes - First-In-First-Out (FIFO)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of messaging sessions)</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Delivery guarantee</source>
            <target state="new">Delivery guarantee</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>At-Least-Once<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>At-Least-Once<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>At-Least-Once<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>At-Most-Once<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>At-Least-Once<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>At-Most-Once<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Transaction support</source>
            <target state="new">Transaction support</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of local transactions)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of local transactions)</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Receive behavior</source>
            <target state="new">Receive behavior</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Non-blocking<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(completes immediately if no new message is found)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Non-blocking<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(completes immediately if no new message is found)</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Blocking with/without timeout<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers long polling, or the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>"Comet technique"<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept><bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept><bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;strong&gt;</bpt>Non-blocking<ept id="8">&lt;/strong&gt;</ept><bpt id="9">&lt;html&gt;</bpt><ept id="9">&lt;/html&gt;</ept><bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>(through the use of .NET managed API only)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Blocking with/without timeout<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers long polling, or the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>"Comet technique"<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept><bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept><bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;strong&gt;</bpt>Non-blocking<ept id="8">&lt;/strong&gt;</ept><bpt id="9">&lt;html&gt;</bpt><ept id="9">&lt;/html&gt;</ept><bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>(through the use of .NET managed API only)</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Push-style API</source>
            <target state="new">Push-style API</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>OnMessage<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>OnMessage sessions<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> .NET API.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>OnMessage<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> and <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>OnMessage sessions<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> .NET API.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Receive mode</source>
            <target state="new">Receive mode</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Peek &amp; Lease<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Peek &amp; Lease<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Peek &amp; Lock<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Receive &amp; Delete<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Peek &amp; Lock<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Receive &amp; Delete<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Exclusive access mode</source>
            <target state="new">Exclusive access mode</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Lease-based<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Lease-based<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Lock-based<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Lock-based<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Lease/Lock duration</source>
            <target state="new">Lease/Lock duration</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>30 seconds (default)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>7 days (maximum)<ept id="4">&lt;/strong&gt;</ept> (You can renew or release a message lease using the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>UpdateMessage<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> API.)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>30 seconds (default)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>7 days (maximum)<ept id="4">&lt;/strong&gt;</ept> (You can renew or release a message lease using the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>UpdateMessage<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> API.)</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>60 seconds (default)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>You can renew a message lock using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>60 seconds (default)<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>You can renew a message lock using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Lease/Lock precision</source>
            <target state="new">Lease/Lock precision</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Message level<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(each message can have a different timeout value, which you can then update as needed while processing the message, by using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>UpdateMessage<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Message level<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(each message can have a different timeout value, which you can then update as needed while processing the message, by using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>UpdateMessage<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API)</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Queue level<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(each queue has a lock precision applied to all of its messages, but you can renew the lock using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API.)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Queue level<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(each queue has a lock precision applied to all of its messages, but you can renew the lock using the <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> API.)</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Batched receive</source>
            <target state="new">Batched receive</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(explicitly specifying message count when retrieving messages, up to a maximum of 32 messages)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(explicitly specifying message count when retrieving messages, up to a maximum of 32 messages)</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(implicitly enabling a pre-fetch property or explicitly through the use of transactions)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(implicitly enabling a pre-fetch property or explicitly through the use of transactions)</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Batched send</source>
            <target state="new">Batched send</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of transactions or client-side batching)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of transactions or client-side batching)</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Messages in Azure Queues are typically first-in-first-out, but sometimes they can be out of order; for example, when a message’s visibility timeout duration expires (for example, as a result of a client application crashing during processing).</source>
            <target state="new">Messages in Azure Queues are typically first-in-first-out, but sometimes they can be out of order; for example, when a message’s visibility timeout duration expires (for example, as a result of a client application crashing during processing).</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>When the visibility timeout expires, the message becomes visible again on the queue for another worker to dequeue it.</source>
            <target state="new">When the visibility timeout expires, the message becomes visible again on the queue for another worker to dequeue it.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>At that point, the newly visible message might be placed in the queue (to be dequeued again) after a message that was originally enqueued after it.</source>
            <target state="new">At that point, the newly visible message might be placed in the queue (to be dequeued again) after a message that was originally enqueued after it.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>If you are already using Azure Storage Blobs or Tables and you start using queues, you are guaranteed 99.9% availability.</source>
            <target state="new">If you are already using Azure Storage Blobs or Tables and you start using queues, you are guaranteed 99.9% availability.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>If you use Blobs or Tables with Service Bus queues, you will have lower availability.</source>
            <target state="new">If you use Blobs or Tables with Service Bus queues, you will have lower availability.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>The guaranteed FIFO pattern in Service Bus queues requires the use of messaging sessions. In the event that the application crashes while processing a message received in the <bpt id="2">&lt;strong&gt;</bpt>Peek &amp; Lock<ept id="2">&lt;/strong&gt;</ept> mode, the next time a queue receiver accepts a messaging session, it will start with the failed message after its time-to-live (TTL) period expires.</source>
            <target state="new">The guaranteed FIFO pattern in Service Bus queues requires the use of messaging sessions. In the event that the application crashes while processing a message received in the <bpt id="2">&lt;strong&gt;</bpt>Peek &amp; Lock<ept id="2">&lt;/strong&gt;</ept> mode, the next time a queue receiver accepts a messaging session, it will start with the failed message after its time-to-live (TTL) period expires.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Azure Queues are designed to support standard queuing scenarios, such as decoupling application components to increase scalability and tolerance for failures, load leveling, and building process workflows.</source>
            <target state="new">Azure Queues are designed to support standard queuing scenarios, such as decoupling application components to increase scalability and tolerance for failures, load leveling, and building process workflows.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Service Bus queues support the <bpt id="2">&lt;em&gt;</bpt>At-Least-Once<ept id="2">&lt;/em&gt;</ept> delivery guarantee.</source>
            <target state="new">Service Bus queues support the <bpt id="2">&lt;em&gt;</bpt>At-Least-Once<ept id="2">&lt;/em&gt;</ept> delivery guarantee.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>In addition, the <bpt id="2">&lt;em&gt;</bpt>At-Most-Once<ept id="2">&lt;/em&gt;</ept> semantic can be supported by using session state to store the application state and by using transactions to atomically receive messages and update the session state.</source>
            <target state="new">In addition, the <bpt id="2">&lt;em&gt;</bpt>At-Most-Once<ept id="2">&lt;/em&gt;</ept> semantic can be supported by using session state to store the application state and by using transactions to atomically receive messages and update the session state.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>The Azure Workflow Service uses this technique to guarantee At-Most-Once delivery.</source>
            <target state="new">The Azure Workflow Service uses this technique to guarantee At-Most-Once delivery.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Azure Queues provide a uniform and consistent programming model across queues, tables, and BLOBs – both for developers and for operations teams.</source>
            <target state="new">Azure Queues provide a uniform and consistent programming model across queues, tables, and BLOBs – both for developers and for operations teams.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Service Bus queues provide support for local transactions in the context of a single queue.</source>
            <target state="new">Service Bus queues provide support for local transactions in the context of a single queue.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>The <bpt id="2">&lt;em&gt;</bpt>Receive and Delete<ept id="2">&lt;/em&gt;</ept> mode supported by Service Bus provides the ability to reduce the messaging operation count (and associated cost) in exchange for lowered delivery assurance.</source>
            <target state="new">The <bpt id="2">&lt;em&gt;</bpt>Receive and Delete<ept id="2">&lt;/em&gt;</ept> mode supported by Service Bus provides the ability to reduce the messaging operation count (and associated cost) in exchange for lowered delivery assurance.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Azure Queues provide leases with the ability to extend the leases for messages.</source>
            <target state="new">Azure Queues provide leases with the ability to extend the leases for messages.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>This allows the workers to maintain short leases on messages.</source>
            <target state="new">This allows the workers to maintain short leases on messages.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Thus, if a worker crashes, the message can be quickly processed again by another worker.</source>
            <target state="new">Thus, if a worker crashes, the message can be quickly processed again by another worker.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>In addition, a worker can extend the lease on a message if it needs to process it longer than the current lease time.</source>
            <target state="new">In addition, a worker can extend the lease on a message if it needs to process it longer than the current lease time.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Azure Queues offer a visibility timeout that you can set upon the enqueueing or dequeuing of a message.</source>
            <target state="new">Azure Queues offer a visibility timeout that you can set upon the enqueueing or dequeuing of a message.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>In addition, you can update a message with different lease values at runtime, and update different values across messages in the same queue.</source>
            <target state="new">In addition, you can update a message with different lease values at runtime, and update different values across messages in the same queue.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Service Bus lock timeouts are defined in the queue metadata; however, you can renew the lock by calling the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> method.</source>
            <target state="new">Service Bus lock timeouts are defined in the queue metadata; however, you can renew the lock by calling the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>RenewLock<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>The maximum timeout for a blocking receive operation in Service Bus queues is 24 days.</source>
            <target state="new">The maximum timeout for a blocking receive operation in Service Bus queues is 24 days.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>However, REST-based timeouts have a maximum value of 55 seconds.</source>
            <target state="new">However, REST-based timeouts have a maximum value of 55 seconds.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>Client-side batching provided by Service Bus enables a queue client to batch multiple messages into a single send operation.</source>
            <target state="new">Client-side batching provided by Service Bus enables a queue client to batch multiple messages into a single send operation.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Batching is only available for asynchronous send operations.</source>
            <target state="new">Batching is only available for asynchronous send operations.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Features such as the 200TB ceiling of Azure Queues (more when you virtualize accounts) and unlimited queues make it an ideal platform for SaaS providers.</source>
            <target state="new">Features such as the 200TB ceiling of Azure Queues (more when you virtualize accounts) and unlimited queues make it an ideal platform for SaaS providers.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Azure Queues provide a flexible and performant delegated access control mechanism.</source>
            <target state="new">Azure Queues provide a flexible and performant delegated access control mechanism.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Advanced capabilities</source>
            <target state="new">Advanced capabilities</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>This section compares advanced capabilities provided by Azure Queues and Service Bus queues.</source>
            <target state="new">This section compares advanced capabilities provided by Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Scheduled delivery</source>
            <target state="new">Scheduled delivery</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Automatic dead lettering</source>
            <target state="new">Automatic dead lettering</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>Increasing queue time-to-live value</source>
            <target state="new">Increasing queue time-to-live value</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(via in-place update of visibility timeout)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(via in-place update of visibility timeout)</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(provided via a dedicated API function)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(provided via a dedicated API function)</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Poison message support</source>
            <target state="new">Poison message support</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>In-place update</source>
            <target state="new">In-place update</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Server-side transaction log</source>
            <target state="new">Server-side transaction log</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Storage metrics</source>
            <target state="new">Storage metrics</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Minute Metrics<ept id="4">&lt;/strong&gt;</ept>: provides real-time metrics for availability, TPS, API call counts, error counts, and more, all in real time (aggregated per minute and reported within a few minutes from what just happened in production.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>Minute Metrics<ept id="4">&lt;/strong&gt;</ept>: provides real-time metrics for availability, TPS, API call counts, error counts, and more, all in real time (aggregated per minute and reported within a few minutes from what just happened in production.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>About Storage Analytics Metrics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>About Storage Analytics Metrics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(bulk queries by calling <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>GetQueues<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(bulk queries by calling <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>GetQueues<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>State management</source>
            <target state="new">State management</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Active<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Disabled<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>, <bpt id="8CapsExtId1">&lt;link&gt;</bpt><bpt id="8CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled<ept id="8CapsExtId2">&lt;/linkText&gt;</ept><bpt id="8CapsExtId3">&lt;title&gt;</bpt><ept id="8CapsExtId3">&lt;/title&gt;</ept><ept id="8CapsExtId1">&lt;/link&gt;</ept>, <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Active<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.Disabled<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>, <bpt id="8CapsExtId1">&lt;link&gt;</bpt><bpt id="8CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled<ept id="8CapsExtId2">&lt;/linkText&gt;</ept><bpt id="8CapsExtId3">&lt;title&gt;</bpt><ept id="8CapsExtId3">&lt;/title&gt;</ept><ept id="8CapsExtId1">&lt;/link&gt;</ept>, <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Message auto-forwarding</source>
            <target state="new">Message auto-forwarding</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Purge queue function</source>
            <target state="new">Purge queue function</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>Message groups</source>
            <target state="new">Message groups</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of messaging sessions)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(through the use of messaging sessions)</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>Application state per message group</source>
            <target state="new">Application state per message group</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>Duplicate detection</source>
            <target state="new">Duplicate detection</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(configurable on the sender side)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(configurable on the sender side)</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>WCF integration</source>
            <target state="new">WCF integration</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers out-of-the-box WCF bindings)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers out-of-the-box WCF bindings)</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>WF integration</source>
            <target state="new">WF integration</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Custom<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(requires building a custom WF activity)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Custom<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(requires building a custom WF activity)</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Native<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers out-of-the-box WF activities)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Native<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(offers out-of-the-box WF activities)</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Browsing message groups</source>
            <target state="new">Browsing message groups</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>Fetching message sessions by ID</source>
            <target state="new">Fetching message sessions by ID</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>Both queuing technologies enable a message to be scheduled for delivery at a later time.</source>
            <target state="new">Both queuing technologies enable a message to be scheduled for delivery at a later time.</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>Queue auto-forwarding enables thousands of queues to auto-forward their messages to a single queue, from which the receiving application consumes the message.</source>
            <target state="new">Queue auto-forwarding enables thousands of queues to auto-forward their messages to a single queue, from which the receiving application consumes the message.</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>You can use this mechanism to achieve security, control flow, and isolate storage between each message publisher.</source>
            <target state="new">You can use this mechanism to achieve security, control flow, and isolate storage between each message publisher.</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>Azure Queues provide support for updating message content.</source>
            <target state="new">Azure Queues provide support for updating message content.</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>You can use this functionality for persisting state information and incremental progress updates into the message so that it can be processed from the last known checkpoint, instead of starting from scratch.</source>
            <target state="new">You can use this functionality for persisting state information and incremental progress updates into the message so that it can be processed from the last known checkpoint, instead of starting from scratch.</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>With Service Bus queues, you can enable the same scenario through the use of message sessions.</source>
            <target state="new">With Service Bus queues, you can enable the same scenario through the use of message sessions.</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>Sessions enable you to save and retrieve the application processing state (by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SetState<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>GetState<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Sessions enable you to save and retrieve the application processing state (by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SetState<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>GetState<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>Dead lettering, which is only supported by Service Bus queues, can be useful for isolating messages that cannot be processed successfully by the receiving application or when messages cannot reach their destination due to an expired time-to-live (TTL) property.</source>
            <target state="new">Dead lettering, which is only supported by Service Bus queues, can be useful for isolating messages that cannot be processed successfully by the receiving application or when messages cannot reach their destination due to an expired time-to-live (TTL) property.</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>The TTL value specifies how long a message remains in the queue.</source>
            <target state="new">The TTL value specifies how long a message remains in the queue.</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source>With Service Bus, the message will be moved to a special queue called $DeadLetterQueue when the TTL period expires.</source>
            <target state="new">With Service Bus, the message will be moved to a special queue called $DeadLetterQueue when the TTL period expires.</target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>To find “poison” messages in Azure Queues, when dequeuing a message the application examines the DequeueCount property of the message.</source>
            <target state="new">To find “poison” messages in Azure Queues, when dequeuing a message the application examines the DequeueCount property of the message.</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source>If DequeueCount is above a given threshold, the application moves the message to an application-defined “dead letter” queue.</source>
            <target state="new">If DequeueCount is above a given threshold, the application moves the message to an application-defined “dead letter” queue.</target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>Azure Queues enable you to obtain a detailed log of all of the transactions executed against the queue, as well as aggregated metrics.</source>
            <target state="new">Azure Queues enable you to obtain a detailed log of all of the transactions executed against the queue, as well as aggregated metrics.</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>Both of these options are useful for debugging and understanding how your application uses Azure Queues.</source>
            <target state="new">Both of these options are useful for debugging and understanding how your application uses Azure Queues.</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>They are also useful for performance-tuning your application and reducing the costs of using queues.</source>
            <target state="new">They are also useful for performance-tuning your application and reducing the costs of using queues.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source>The concept of “message sessions” supported by Service Bus allows messages that belong to a certain logical group to be associated with a given receiver, which in turn creates a session-like affinity between messages and their respective receivers.</source>
            <target state="new">The concept of “message sessions” supported by Service Bus allows messages that belong to a certain logical group to be associated with a given receiver, which in turn creates a session-like affinity between messages and their respective receivers.</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>You can enable this advanced functionality in Service Bus by setting the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SessionID<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property on a message.</source>
            <target state="new">You can enable this advanced functionality in Service Bus by setting the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>SessionID<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property on a message.</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>Receivers can then listen on a specific session ID and receive messages that share the specified session identifier.</source>
            <target state="new">Receivers can then listen on a specific session ID and receive messages that share the specified session identifier.</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source>The duplication detection functionality supported by Service Bus queues automatically removes duplicate messages sent to a queue or topic, based on the value of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>MessageID<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property.</source>
            <target state="new">The duplication detection functionality supported by Service Bus queues automatically removes duplicate messages sent to a queue or topic, based on the value of the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>MessageID<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>Capacity and quotas</source>
            <target state="new">Capacity and quotas</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>This section compares Azure Queues and Service Bus queues from the perspective of capacity and quotas that may apply.</source>
            <target state="new">This section compares Azure Queues and Service Bus queues from the perspective of capacity and quotas that may apply.</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>Maximum queue size</source>
            <target state="new">Maximum queue size</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>200 TB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(limited to a single storage account capacity)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>200 TB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(limited to a single storage account capacity)</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>1 GB to 80 GB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(defined upon creation of a queue and <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>enabling partitioning<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> – see the “Additional Information” section)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>1 GB to 80 GB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(defined upon creation of a queue and <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>enabling partitioning<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> – see the “Additional Information” section)</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source>Maximum message size</source>
            <target state="new">Maximum message size</target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>64 KB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(48 KB when using <bpt id="5">&lt;strong&gt;</bpt>Base64<ept id="5">&lt;/strong&gt;</ept> encoding)<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Azure supports large messages by combining queues and blobs – at which point you can enqueue up to 200GB for a single item.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>64 KB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(48 KB when using <bpt id="5">&lt;strong&gt;</bpt>Base64<ept id="5">&lt;/strong&gt;</ept> encoding)<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Azure supports large messages by combining queues and blobs – at which point you can enqueue up to 200GB for a single item.</target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>256 KB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(including both header and body, maximum header size: 64 KB)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>256 KB<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(including both header and body, maximum header size: 64 KB)</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source>Maximum message TTL</source>
            <target state="new">Maximum message TTL</target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>7 days<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>7 days<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source>Maximum number of queues</source>
            <target state="new">Maximum number of queues</target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>10,000<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per service namespace, can be increased)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>10,000<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per service namespace, can be increased)</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source>Maximum number of concurrent clients</source>
            <target state="new">Maximum number of concurrent clients</target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(100 concurrent connection limit only applies to TCP protocol-based communication)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Unlimited<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(100 concurrent connection limit only applies to TCP protocol-based communication)</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source>Service Bus enforces queue size limits.</source>
            <target state="new">Service Bus enforces queue size limits.</target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source>The maximum queue size is specified upon creation of the queue and can have a value between 1 and 80 GB.</source>
            <target state="new">The maximum queue size is specified upon creation of the queue and can have a value between 1 and 80 GB.</target>
          </trans-unit>
          <trans-unit id="315" xml:space="preserve">
            <source>If the queue size value set on creation of the queue is reached, additional incoming messages will be rejected and an exception will be received by the calling code.</source>
            <target state="new">If the queue size value set on creation of the queue is reached, additional incoming messages will be rejected and an exception will be received by the calling code.</target>
          </trans-unit>
          <trans-unit id="316" xml:space="preserve">
            <source>For more information about quotas in Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus Quotas<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about quotas in Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Service Bus Quotas<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="317" xml:space="preserve">
            <source>You can create Service Bus queues in 1, 2, 3, 4, or 5 GB sizes (the default is 1 GB).</source>
            <target state="new">You can create Service Bus queues in 1, 2, 3, 4, or 5 GB sizes (the default is 1 GB).</target>
          </trans-unit>
          <trans-unit id="318" xml:space="preserve">
            <source>With partitioning enabled (which is the default), Service Bus creates 16 partitions for each GB you specify.</source>
            <target state="new">With partitioning enabled (which is the default), Service Bus creates 16 partitions for each GB you specify.</target>
          </trans-unit>
          <trans-unit id="319" xml:space="preserve">
            <source>As such, if you create a queue that’s 5 GB in size, with 16 partitions the maximum queue size becomes (5 * 16) = 80 GB.</source>
            <target state="new">As such, if you create a queue that’s 5 GB in size, with 16 partitions the maximum queue size becomes (5 * 16) = 80 GB.</target>
          </trans-unit>
          <trans-unit id="320" xml:space="preserve">
            <source>You can see the maximum size of your partitioned queue or topic by looking at its entry on the Azure management portal.</source>
            <target state="new">You can see the maximum size of your partitioned queue or topic by looking at its entry on the Azure management portal.</target>
          </trans-unit>
          <trans-unit id="321" xml:space="preserve">
            <source>With Azure Queues, if the content of the message is not XML-safe, then it must be <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept> encoded.</source>
            <target state="new">With Azure Queues, if the content of the message is not XML-safe, then it must be <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept> encoded.</target>
          </trans-unit>
          <trans-unit id="322" xml:space="preserve">
            <source>If you <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept>-encode the message, the user payload can be up to 48 KB, instead of 64 KB.</source>
            <target state="new">If you <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept>-encode the message, the user payload can be up to 48 KB, instead of 64 KB.</target>
          </trans-unit>
          <trans-unit id="323" xml:space="preserve">
            <source>With Service Bus queues, each message stored in a queue is comprised of two parts: a header and a body.</source>
            <target state="new">With Service Bus queues, each message stored in a queue is comprised of two parts: a header and a body.</target>
          </trans-unit>
          <trans-unit id="324" xml:space="preserve">
            <source>The total size of the message cannot exceed 256 KB.</source>
            <target state="new">The total size of the message cannot exceed 256 KB.</target>
          </trans-unit>
          <trans-unit id="325" xml:space="preserve">
            <source>When clients communicate with Service Bus queues over the TCP protocol, the maximum number of concurrent connections to a single Service Bus queue is limited to 100.</source>
            <target state="new">When clients communicate with Service Bus queues over the TCP protocol, the maximum number of concurrent connections to a single Service Bus queue is limited to 100.</target>
          </trans-unit>
          <trans-unit id="326" xml:space="preserve">
            <source>This number is shared between senders and receivers.</source>
            <target state="new">This number is shared between senders and receivers.</target>
          </trans-unit>
          <trans-unit id="327" xml:space="preserve">
            <source>If this quota is reached, subsequent requests for additional connections will be rejected and an exception will be received by the calling code.</source>
            <target state="new">If this quota is reached, subsequent requests for additional connections will be rejected and an exception will be received by the calling code.</target>
          </trans-unit>
          <trans-unit id="328" xml:space="preserve">
            <source>This limit is not imposed on clients connecting to the queues using REST-based API.</source>
            <target state="new">This limit is not imposed on clients connecting to the queues using REST-based API.</target>
          </trans-unit>
          <trans-unit id="329" xml:space="preserve">
            <source>If you require more than 10,000 queues in a single Service Bus namespace, you can contact the Azure support team and request an increase.</source>
            <target state="new">If you require more than 10,000 queues in a single Service Bus namespace, you can contact the Azure support team and request an increase.</target>
          </trans-unit>
          <trans-unit id="330" xml:space="preserve">
            <source>To scale beyond 10,000 queues with Service Bus, you can also create additional namespaces using the Azure management portal.</source>
            <target state="new">To scale beyond 10,000 queues with Service Bus, you can also create additional namespaces using the Azure management portal.</target>
          </trans-unit>
          <trans-unit id="331" xml:space="preserve">
            <source>Management and operations</source>
            <target state="new">Management and operations</target>
          </trans-unit>
          <trans-unit id="332" xml:space="preserve">
            <source>This section compares the management features provided by Azure Queues and Service Bus queues.</source>
            <target state="new">This section compares the management features provided by Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="333" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="334" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="335" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="336" xml:space="preserve">
            <source>Management protocol</source>
            <target state="new">Management protocol</target>
          </trans-unit>
          <trans-unit id="337" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>REST over HTTP/HTTPS<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>REST over HTTP/HTTPS<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="338" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>REST over HTTPS<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>REST over HTTPS<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="339" xml:space="preserve">
            <source>Runtime protocol</source>
            <target state="new">Runtime protocol</target>
          </trans-unit>
          <trans-unit id="340" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>REST over HTTP/HTTPS<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>REST over HTTP/HTTPS<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="341" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>REST over HTTPS<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>AMQP 1.0 Standard (TCP with TLS)<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>REST over HTTPS<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;strong&gt;</bpt>AMQP 1.0 Standard (TCP with TLS)<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="342" xml:space="preserve">
            <source>.NET Managed API</source>
            <target state="new">.NET Managed API</target>
          </trans-unit>
          <trans-unit id="343" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(.NET managed Storage Client API)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(.NET managed Storage Client API)</target>
          </trans-unit>
          <trans-unit id="344" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(.NET managed brokered messaging API)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(.NET managed brokered messaging API)</target>
          </trans-unit>
          <trans-unit id="345" xml:space="preserve">
            <source>Native C++</source>
            <target state="new">Native C++</target>
          </trans-unit>
          <trans-unit id="346" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="347" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="348" xml:space="preserve">
            <source>Java API</source>
            <target state="new">Java API</target>
          </trans-unit>
          <trans-unit id="349" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="350" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="351" xml:space="preserve">
            <source>PHP API</source>
            <target state="new">PHP API</target>
          </trans-unit>
          <trans-unit id="352" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="353" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="354" xml:space="preserve">
            <source>Node.js API</source>
            <target state="new">Node.js API</target>
          </trans-unit>
          <trans-unit id="355" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="356" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="357" xml:space="preserve">
            <source>Arbitrary metadata support</source>
            <target state="new">Arbitrary metadata support</target>
          </trans-unit>
          <trans-unit id="358" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="359" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="360" xml:space="preserve">
            <source>Queue naming rules</source>
            <target state="new">Queue naming rules</target>
          </trans-unit>
          <trans-unit id="361" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Up to 63 characters long<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(letters in a queue name must be lowercase)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Up to 63 characters long<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(letters in a queue name must be lowercase)</target>
          </trans-unit>
          <trans-unit id="362" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Up to 260 characters long<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(queue names are case-insensitive)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Up to 260 characters long<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(queue names are case-insensitive)</target>
          </trans-unit>
          <trans-unit id="363" xml:space="preserve">
            <source>Get queue length function</source>
            <target state="new">Get queue length function</target>
          </trans-unit>
          <trans-unit id="364" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(approximate value if messages expire beyond the TTL without being deleted)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(approximate value if messages expire beyond the TTL without being deleted)</target>
          </trans-unit>
          <trans-unit id="365" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(exact, point-in-time value)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(exact, point-in-time value)</target>
          </trans-unit>
          <trans-unit id="366" xml:space="preserve">
            <source>Peek function</source>
            <target state="new">Peek function</target>
          </trans-unit>
          <trans-unit id="367" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="368" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="369" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="370" xml:space="preserve">
            <source>Azure Queues provide support for arbitrary attributes that can be applied to the queue description, in the form of name/value pairs.</source>
            <target state="new">Azure Queues provide support for arbitrary attributes that can be applied to the queue description, in the form of name/value pairs.</target>
          </trans-unit>
          <trans-unit id="371" xml:space="preserve">
            <source>Both queue technologies offer the ability to peek a message without having to lock it, which can be useful when implementing a queue explorer/browser tool.</source>
            <target state="new">Both queue technologies offer the ability to peek a message without having to lock it, which can be useful when implementing a queue explorer/browser tool.</target>
          </trans-unit>
          <trans-unit id="372" xml:space="preserve">
            <source>The Service Bus .NET brokered messaging APIs leverage full-duplex TCP connections for improved performance when compared to REST over HTTP, and they support the AMQP 1.0 standard protocol.</source>
            <target state="new">The Service Bus .NET brokered messaging APIs leverage full-duplex TCP connections for improved performance when compared to REST over HTTP, and they support the AMQP 1.0 standard protocol.</target>
          </trans-unit>
          <trans-unit id="373" xml:space="preserve">
            <source>Azure queue names can be 3-63 characters long, can contain lowercase letters, numbers, and hyphens.</source>
            <target state="new">Azure queue names can be 3-63 characters long, can contain lowercase letters, numbers, and hyphens.</target>
          </trans-unit>
          <trans-unit id="374" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Naming Queues and Metadata<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Naming Queues and Metadata<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="375" xml:space="preserve">
            <source>Service Bus queue names can be up to 260 characters long and have less restrictive naming rules.</source>
            <target state="new">Service Bus queue names can be up to 260 characters long and have less restrictive naming rules.</target>
          </trans-unit>
          <trans-unit id="376" xml:space="preserve">
            <source>Service Bus queue names can contain letters, numbers, periods (.), hyphens (-), and underscores (_).</source>
            <target state="new">Service Bus queue names can contain letters, numbers, periods (.), hyphens (-), and underscores (_).</target>
          </trans-unit>
          <trans-unit id="377" xml:space="preserve">
            <source>Performance</source>
            <target state="new">Performance</target>
          </trans-unit>
          <trans-unit id="378" xml:space="preserve">
            <source>This section compares Azure Queues and Service Bus queues from a performance perspective.</source>
            <target state="new">This section compares Azure Queues and Service Bus queues from a performance perspective.</target>
          </trans-unit>
          <trans-unit id="379" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="380" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="381" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="382" xml:space="preserve">
            <source>Maximum throughput</source>
            <target state="new">Maximum throughput</target>
          </trans-unit>
          <trans-unit id="383" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Up to 2,000 messages per second<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(based on benchmark with 1 KB messages)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Up to 2,000 messages per second<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(based on benchmark with 1 KB messages)</target>
          </trans-unit>
          <trans-unit id="384" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Up to 2,000 messages per second<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(based on benchmark with 1 KB messages)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Up to 2,000 messages per second<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(based on benchmark with 1 KB messages)</target>
          </trans-unit>
          <trans-unit id="385" xml:space="preserve">
            <source>Average latency</source>
            <target state="new">Average latency</target>
          </trans-unit>
          <trans-unit id="386" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>10 ms<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(with <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>TCP Nagle<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> disabled)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>10 ms<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(with <bpt id="5CapsExtId1">&lt;link&gt;</bpt><bpt id="5CapsExtId2">&lt;linkText&gt;</bpt>TCP Nagle<ept id="5CapsExtId2">&lt;/linkText&gt;</ept><bpt id="5CapsExtId3">&lt;title&gt;</bpt><ept id="5CapsExtId3">&lt;/title&gt;</ept><ept id="5CapsExtId1">&lt;/link&gt;</ept> disabled)</target>
          </trans-unit>
          <trans-unit id="387" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>20-25 ms<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>20-25 ms<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="388" xml:space="preserve">
            <source>Throttling behavior</source>
            <target state="new">Throttling behavior</target>
          </trans-unit>
          <trans-unit id="389" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Reject with HTTP 503 code<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(throttled requests are not treated as billable)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Reject with HTTP 503 code<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(throttled requests are not treated as billable)</target>
          </trans-unit>
          <trans-unit id="390" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Reject with exception/HTTP 503<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(throttled requests are not treated as billable)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Reject with exception/HTTP 503<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(throttled requests are not treated as billable)</target>
          </trans-unit>
          <trans-unit id="391" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="392" xml:space="preserve">
            <source>A single Azure queue can process up to 2,000 transactions per second.</source>
            <target state="new">A single Azure queue can process up to 2,000 transactions per second.</target>
          </trans-unit>
          <trans-unit id="393" xml:space="preserve">
            <source>A transaction is either a <bpt id="2">&lt;strong&gt;</bpt>Put<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Get<ept id="4">&lt;/strong&gt;</ept>, or <bpt id="6">&lt;strong&gt;</bpt>Delete<ept id="6">&lt;/strong&gt;</ept> operation.</source>
            <target state="new">A transaction is either a <bpt id="2">&lt;strong&gt;</bpt>Put<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Get<ept id="4">&lt;/strong&gt;</ept>, or <bpt id="6">&lt;strong&gt;</bpt>Delete<ept id="6">&lt;/strong&gt;</ept> operation.</target>
          </trans-unit>
          <trans-unit id="394" xml:space="preserve">
            <source>Sending a single message to a queue (<bpt id="2">&lt;strong&gt;</bpt>Put<ept id="2">&lt;/strong&gt;</ept>) is counted as one transaction, but receiving a message is often a two-step process involving the retrieval (<bpt id="4">&lt;strong&gt;</bpt>Get<ept id="4">&lt;/strong&gt;</ept>), followed by a request to remove the message from the queue (<bpt id="6">&lt;strong&gt;</bpt>Delete<ept id="6">&lt;/strong&gt;</ept>).</source>
            <target state="new">Sending a single message to a queue (<bpt id="2">&lt;strong&gt;</bpt>Put<ept id="2">&lt;/strong&gt;</ept>) is counted as one transaction, but receiving a message is often a two-step process involving the retrieval (<bpt id="4">&lt;strong&gt;</bpt>Get<ept id="4">&lt;/strong&gt;</ept>), followed by a request to remove the message from the queue (<bpt id="6">&lt;strong&gt;</bpt>Delete<ept id="6">&lt;/strong&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="395" xml:space="preserve">
            <source>As a result, a successful dequeue operation usually involves two transactions.</source>
            <target state="new">As a result, a successful dequeue operation usually involves two transactions.</target>
          </trans-unit>
          <trans-unit id="396" xml:space="preserve">
            <source>Retrieving multiple messages in a batch can reduce the impact of this, as you can <bpt id="2">&lt;strong&gt;</bpt>Get<ept id="2">&lt;/strong&gt;</ept> up to 32 messages in a single transaction, followed by a <bpt id="4">&lt;strong&gt;</bpt>Delete<ept id="4">&lt;/strong&gt;</ept> for each of them.</source>
            <target state="new">Retrieving multiple messages in a batch can reduce the impact of this, as you can <bpt id="2">&lt;strong&gt;</bpt>Get<ept id="2">&lt;/strong&gt;</ept> up to 32 messages in a single transaction, followed by a <bpt id="4">&lt;strong&gt;</bpt>Delete<ept id="4">&lt;/strong&gt;</ept> for each of them.</target>
          </trans-unit>
          <trans-unit id="397" xml:space="preserve">
            <source>For better throughput, you can create multiple queues (a storage account can have an unlimited number of queues).</source>
            <target state="new">For better throughput, you can create multiple queues (a storage account can have an unlimited number of queues).</target>
          </trans-unit>
          <trans-unit id="398" xml:space="preserve">
            <source>When your application reaches the maximum throughput for an Azure queue, an “HTTP 503 Server Busy” response is usually returned from the queue service.</source>
            <target state="new">When your application reaches the maximum throughput for an Azure queue, an “HTTP 503 Server Busy” response is usually returned from the queue service.</target>
          </trans-unit>
          <trans-unit id="399" xml:space="preserve">
            <source>When this occurs, the application should trigger the retry logic with exponential back-off delay.</source>
            <target state="new">When this occurs, the application should trigger the retry logic with exponential back-off delay.</target>
          </trans-unit>
          <trans-unit id="400" xml:space="preserve">
            <source>The latency of Azure Queues is 10 milliseconds on average when handling small messages (less than 10 KB) from a hosted service located in the same location (region) as the storage account.</source>
            <target state="new">The latency of Azure Queues is 10 milliseconds on average when handling small messages (less than 10 KB) from a hosted service located in the same location (region) as the storage account.</target>
          </trans-unit>
          <trans-unit id="401" xml:space="preserve">
            <source>Both Azure Queues and Service Bus queues enforce throttling behavior by rejecting requests to a queue that is being throttled.</source>
            <target state="new">Both Azure Queues and Service Bus queues enforce throttling behavior by rejecting requests to a queue that is being throttled.</target>
          </trans-unit>
          <trans-unit id="402" xml:space="preserve">
            <source>However, neither of them treats throttled requests as billable.</source>
            <target state="new">However, neither of them treats throttled requests as billable.</target>
          </trans-unit>
          <trans-unit id="403" xml:space="preserve">
            <source>Benchmarks against Service Bus queues have demonstrated that a single queue can achieve a message throughput of up to 2,000 messages per second with a message size of approximately 1 KB.</source>
            <target state="new">Benchmarks against Service Bus queues have demonstrated that a single queue can achieve a message throughput of up to 2,000 messages per second with a message size of approximately 1 KB.</target>
          </trans-unit>
          <trans-unit id="404" xml:space="preserve">
            <source>To achieve higher throughput, use multiple queues.</source>
            <target state="new">To achieve higher throughput, use multiple queues.</target>
          </trans-unit>
          <trans-unit id="405" xml:space="preserve">
            <source>For more information about performance optimization with Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Best Practices for Performance Improvements Using Service Bus Brokered Messaging<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about performance optimization with Service Bus, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Best Practices for Performance Improvements Using Service Bus Brokered Messaging<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="406" xml:space="preserve">
            <source>When the maximum throughput is reached for a Service Bus queue, a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ServerBusyException<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (when using the.NET brokered messaging API) or HTTP 503 (when using the REST-based API) response is returned to the queue client, indicating that the queue is being throttled.</source>
            <target state="new">When the maximum throughput is reached for a Service Bus queue, a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ServerBusyException<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (when using the.NET brokered messaging API) or HTTP 503 (when using the REST-based API) response is returned to the queue client, indicating that the queue is being throttled.</target>
          </trans-unit>
          <trans-unit id="407" xml:space="preserve">
            <source>Authentication and authorization</source>
            <target state="new">Authentication and authorization</target>
          </trans-unit>
          <trans-unit id="408" xml:space="preserve">
            <source>This section discusses the authentication and authorization features supported by Azure Queues and Service Bus queues.</source>
            <target state="new">This section discusses the authentication and authorization features supported by Azure Queues and Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="409" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="410" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="411" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="412" xml:space="preserve">
            <source>Authentication</source>
            <target state="new">Authentication</target>
          </trans-unit>
          <trans-unit id="413" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Symmetric key<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Symmetric key<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="414" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Symmetric key<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Symmetric key<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="415" xml:space="preserve">
            <source>Access control model</source>
            <target state="new">Access control model</target>
          </trans-unit>
          <trans-unit id="416" xml:space="preserve">
            <source>Delegated access via SAS tokens.</source>
            <target state="new">Delegated access via SAS tokens.</target>
          </trans-unit>
          <trans-unit id="417" xml:space="preserve">
            <source>RBAC via ACS</source>
            <target state="new">RBAC via ACS</target>
          </trans-unit>
          <trans-unit id="418" xml:space="preserve">
            <source>Identity provider federation</source>
            <target state="new">Identity provider federation</target>
          </trans-unit>
          <trans-unit id="419" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>No<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="420" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Yes<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="421" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="422" xml:space="preserve">
            <source>Every request to either of the queuing technologies must be authenticated.</source>
            <target state="new">Every request to either of the queuing technologies must be authenticated.</target>
          </trans-unit>
          <trans-unit id="423" xml:space="preserve">
            <source>Public queues with anonymous access are not supported.</source>
            <target state="new">Public queues with anonymous access are not supported.</target>
          </trans-unit>
          <trans-unit id="424" xml:space="preserve">
            <source>Using SAS, you can address this scenario by publishing a write-only SAS, read-only SAS, or even a full-access SAS.</source>
            <target state="new">Using SAS, you can address this scenario by publishing a write-only SAS, read-only SAS, or even a full-access SAS.</target>
          </trans-unit>
          <trans-unit id="425" xml:space="preserve">
            <source>The authentication scheme provided by Azure Queues involves the use of a symmetric key, which is a hash-based Message Authentication Code (HMAC), computed with the SHA-256 algorithm and encoded as a <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept> string.</source>
            <target state="new">The authentication scheme provided by Azure Queues involves the use of a symmetric key, which is a hash-based Message Authentication Code (HMAC), computed with the SHA-256 algorithm and encoded as a <bpt id="2">&lt;strong&gt;</bpt>Base64<ept id="2">&lt;/strong&gt;</ept> string.</target>
          </trans-unit>
          <trans-unit id="426" xml:space="preserve">
            <source>For more information about the respective protocol, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authenticating Access to Your Storage Account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about the respective protocol, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Authenticating Access to Your Storage Account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="427" xml:space="preserve">
            <source>Service Bus queues support a similar model using symmetric keys.</source>
            <target state="new">Service Bus queues support a similar model using symmetric keys.</target>
          </trans-unit>
          <trans-unit id="428" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shared Access Signature Authentication with Service Bus<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shared Access Signature Authentication with Service Bus<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="429" xml:space="preserve">
            <source>The Microsoft Azure Active Directory Access Control (also known as Access Control Service or ACS) supported by Service Bus offers three distinct roles: <bpt id="2">&lt;strong&gt;</bpt>Admin<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Sender<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Receiver<ept id="6">&lt;/strong&gt;</ept>, which is not supported at this time for Azure Queues.</source>
            <target state="new">The Microsoft Azure Active Directory Access Control (also known as Access Control Service or ACS) supported by Service Bus offers three distinct roles: <bpt id="2">&lt;strong&gt;</bpt>Admin<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Sender<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Receiver<ept id="6">&lt;/strong&gt;</ept>, which is not supported at this time for Azure Queues.</target>
          </trans-unit>
          <trans-unit id="430" xml:space="preserve">
            <source>Because Service Bus offers ACS integration, it enables you to federate with Active Directory (through the use of ADFS) and other common web identity providers.</source>
            <target state="new">Because Service Bus offers ACS integration, it enables you to federate with Active Directory (through the use of ADFS) and other common web identity providers.</target>
          </trans-unit>
          <trans-unit id="431" xml:space="preserve">
            <source>Cost</source>
            <target state="new">Cost</target>
          </trans-unit>
          <trans-unit id="432" xml:space="preserve">
            <source>This section compares Azure Queues and Service Bus queues from a cost perspective.</source>
            <target state="new">This section compares Azure Queues and Service Bus queues from a cost perspective.</target>
          </trans-unit>
          <trans-unit id="433" xml:space="preserve">
            <source>Comparison Criteria</source>
            <target state="new">Comparison Criteria</target>
          </trans-unit>
          <trans-unit id="434" xml:space="preserve">
            <source>Azure Queues</source>
            <target state="new">Azure Queues</target>
          </trans-unit>
          <trans-unit id="435" xml:space="preserve">
            <source>Service Bus Queues</source>
            <target state="new">Service Bus Queues</target>
          </trans-unit>
          <trans-unit id="436" xml:space="preserve">
            <source>Queue transaction cost</source>
            <target state="new">Queue transaction cost</target>
          </trans-unit>
          <trans-unit id="437" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$0.0005<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per 10,000 transactions)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$0.0005<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per 10,000 transactions)</target>
          </trans-unit>
          <trans-unit id="438" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Basic tier<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;strong&gt;</bpt>$0.05<ept id="3">&lt;/strong&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>(per million operations)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Basic tier<ept id="1">&lt;/strong&gt;</ept>: <bpt id="3">&lt;strong&gt;</bpt>$0.05<ept id="3">&lt;/strong&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>(per million operations)</target>
          </trans-unit>
          <trans-unit id="439" xml:space="preserve">
            <source>Billable operations</source>
            <target state="new">Billable operations</target>
          </trans-unit>
          <trans-unit id="440" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>All<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>All<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="441" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Send/Receive only<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(no charge for other operations)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Send/Receive only<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(no charge for other operations)</target>
          </trans-unit>
          <trans-unit id="442" xml:space="preserve">
            <source>Idle transactions</source>
            <target state="new">Idle transactions</target>
          </trans-unit>
          <trans-unit id="443" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Billable<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(querying an empty queue is counted as a billable transaction)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Billable<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(querying an empty queue is counted as a billable transaction)</target>
          </trans-unit>
          <trans-unit id="444" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Billable<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(a receive against an empty queue is considered a billable message)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Billable<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(a receive against an empty queue is considered a billable message)</target>
          </trans-unit>
          <trans-unit id="445" xml:space="preserve">
            <source>Storage cost</source>
            <target state="new">Storage cost</target>
          </trans-unit>
          <trans-unit id="446" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$0.07<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per GB/month)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$0.07<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(per GB/month)</target>
          </trans-unit>
          <trans-unit id="447" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$0.00<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$0.00<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="448" xml:space="preserve">
            <source>Outbound data transfer costs</source>
            <target state="new">Outbound data transfer costs</target>
          </trans-unit>
          <trans-unit id="449" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$0.12 - $0.19<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(depending on geography)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$0.12 - $0.19<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(depending on geography)</target>
          </trans-unit>
          <trans-unit id="450" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$0.12 - $0.19<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(depending on geography)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$0.12 - $0.19<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>(depending on geography)</target>
          </trans-unit>
          <trans-unit id="451" xml:space="preserve">
            <source>Additional information</source>
            <target state="new">Additional information</target>
          </trans-unit>
          <trans-unit id="452" xml:space="preserve">
            <source>Data transfers are charged based on the total amount of data leaving the Azure datacenters via the internet in a given billing period.</source>
            <target state="new">Data transfers are charged based on the total amount of data leaving the Azure datacenters via the internet in a given billing period.</target>
          </trans-unit>
          <trans-unit id="453" xml:space="preserve">
            <source>Data transfers between Azure services located within the same region are not subject to charge.</source>
            <target state="new">Data transfers between Azure services located within the same region are not subject to charge.</target>
          </trans-unit>
          <trans-unit id="454" xml:space="preserve">
            <source>As of this writing, all inbound data transfers are not subject to charge.</source>
            <target state="new">As of this writing, all inbound data transfers are not subject to charge.</target>
          </trans-unit>
          <trans-unit id="455" xml:space="preserve">
            <source>Given the support for long polling, using Service Bus queues can be cost effective in situations where low-latency delivery is required.</source>
            <target state="new">Given the support for long polling, using Service Bus queues can be cost effective in situations where low-latency delivery is required.</target>
          </trans-unit>
          <trans-unit id="456" xml:space="preserve">
            <source>All costs are subject to change.</source>
            <target state="new">All costs are subject to change.</target>
          </trans-unit>
          <trans-unit id="457" xml:space="preserve">
            <source>This table reflects current pricing as of the writing of this article and does not include any promotional offers that may currently be available.</source>
            <target state="new">This table reflects current pricing as of the writing of this article and does not include any promotional offers that may currently be available.</target>
          </trans-unit>
          <trans-unit id="458" xml:space="preserve">
            <source>For up-to-date information about Azure pricing, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure pricing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> page.</source>
            <target state="new">For up-to-date information about Azure pricing, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure pricing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> page.</target>
          </trans-unit>
          <trans-unit id="459" xml:space="preserve">
            <source>For more information about Service Bus pricing, see [Service Bus pricing]((http://azure.microsoft.com/pricing/details/service-bus/).</source>
            <target state="new">For more information about Service Bus pricing, see [Service Bus pricing]((http://azure.microsoft.com/pricing/details/service-bus/).</target>
          </trans-unit>
          <trans-unit id="460" xml:space="preserve">
            <source>Conclusion</source>
            <target state="new">Conclusion</target>
          </trans-unit>
          <trans-unit id="461" xml:space="preserve">
            <source>By gaining a deeper understanding of the two technologies, you will be able to make a more informed decision on which queue technology to use, and when.</source>
            <target state="new">By gaining a deeper understanding of the two technologies, you will be able to make a more informed decision on which queue technology to use, and when.</target>
          </trans-unit>
          <trans-unit id="462" xml:space="preserve">
            <source>The decision on when to use Azure Queues or Service Bus queues clearly depends on a number of factors.</source>
            <target state="new">The decision on when to use Azure Queues or Service Bus queues clearly depends on a number of factors.</target>
          </trans-unit>
          <trans-unit id="463" xml:space="preserve">
            <source>These factors may depend heavily on the individual needs of your application and its architecture.</source>
            <target state="new">These factors may depend heavily on the individual needs of your application and its architecture.</target>
          </trans-unit>
          <trans-unit id="464" xml:space="preserve">
            <source>If your application already uses the core capabilities of Microsoft Azure, you may prefer to choose Azure Queues, especially if you require basic communication and messaging between services or need queues that can be larger than 80 GB in size.</source>
            <target state="new">If your application already uses the core capabilities of Microsoft Azure, you may prefer to choose Azure Queues, especially if you require basic communication and messaging between services or need queues that can be larger than 80 GB in size.</target>
          </trans-unit>
          <trans-unit id="465" xml:space="preserve">
            <source>Because Service Bus queues provide a number of advanced features, such as sessions, transactions, duplicate detection, automatic dead-lettering, and durable publish/subscribe capabilities, they may be a preferred choice if you are building a hybrid application or if your application otherwise requires these features.</source>
            <target state="new">Because Service Bus queues provide a number of advanced features, such as sessions, transactions, duplicate detection, automatic dead-lettering, and durable publish/subscribe capabilities, they may be a preferred choice if you are building a hybrid application or if your application otherwise requires these features.</target>
          </trans-unit>
          <trans-unit id="466" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="467" xml:space="preserve">
            <source>The following articles provide more guidance and information about using Azure Queues or Service Bus queues.</source>
            <target state="new">The following articles provide more guidance and information about using Azure Queues or Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="468" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use Service Bus Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="469" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use the Queue Storage Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Use the Queue Storage Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="470" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Best Practices for Performance Improvements Using Service Bus Brokered Messaging<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Best Practices for Performance Improvements Using Service Bus Brokered Messaging<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="471" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Introducing Queues and Topics in Azure Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Introducing Queues and Topics in Azure Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="472" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The Developer's Guide to Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The Developer's Guide to Service Bus<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="473" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>"Azure Tables and Queues Deep Dive"<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>"Azure Tables and Queues Deep Dive"<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="474" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Architecture<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Architecture<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="475" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using the Queuing Service in Azure <ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using the Queuing Service in Azure <ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="476" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Understanding Azure Storage Billing – Bandwidth, Transactions, and Capacity<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Understanding Azure Storage Billing – Bandwidth, Transactions, and Capacity<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>