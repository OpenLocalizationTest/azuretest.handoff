<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 9:55:16 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">782f8a7a6bc1c8ceefa889f9ca0282958e93223a</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>WCF based Communication stack provided by Reliable Services API</source>
            <target state="new">WCF based Communication stack provided by Reliable Services API</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This article describes the WCF based communication stack provided by the Reliable Service's api.</source>
            <target state="new">This article describes the WCF based communication stack provided by the Reliable Service's api.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>WCF based communication stack for Reliable Services</source>
            <target state="new">WCF based communication stack for Reliable Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Reliable services framework allows Service authors to decide the communication stack they want to use for their service.</source>
            <target state="new">Reliable services framework allows Service authors to decide the communication stack they want to use for their service.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>They can plugin the communication stack of their choice via the <bpt id="2">&lt;code&gt;</bpt>ICommunicationListener<ept id="2">&lt;/code&gt;</ept> returned from the [<bpt id="4">&lt;code&gt;</bpt>CreateCommunicationListener<ept id="4">&lt;/code&gt;</ept>](../service-fabric-reliable-service-communication.md) method.</source>
            <target state="new">They can plugin the communication stack of their choice via the <bpt id="2">&lt;code&gt;</bpt>ICommunicationListener<ept id="2">&lt;/code&gt;</ept> returned from the [<bpt id="4">&lt;code&gt;</bpt>CreateCommunicationListener<ept id="4">&lt;/code&gt;</ept>](../service-fabric-reliable-service-communication.md) method.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The framework provides a WCF based implementation of the communication stack, for service authors who want to use WCF based communication.</source>
            <target state="new">The framework provides a WCF based implementation of the communication stack, for service authors who want to use WCF based communication.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>WCF Communication Listener</source>
            <target state="new">WCF Communication Listener</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The WCF specific implementation of <bpt id="2">&lt;code&gt;</bpt>ICommunicationListener<ept id="2">&lt;/code&gt;</ept> is provided by the <bpt id="4">&lt;code&gt;</bpt>WcfCommunicationListener<ept id="4">&lt;/code&gt;</ept> class.</source>
            <target state="new">The WCF specific implementation of <bpt id="2">&lt;code&gt;</bpt>ICommunicationListener<ept id="2">&lt;/code&gt;</ept> is provided by the <bpt id="4">&lt;code&gt;</bpt>WcfCommunicationListener<ept id="4">&lt;/code&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Writing clients for WCF communication stack</source>
            <target state="new">Writing clients for WCF communication stack</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For writing clients to communicate with services using WCF, the framework provides <bpt id="2">&lt;code&gt;</bpt>WcfClientCommunicationFactory<ept id="2">&lt;/code&gt;</ept>, which is the WCF specific implementation of [<bpt id="4">&lt;code&gt;</bpt>ClientCommunicationFactoryBase<ept id="4">&lt;/code&gt;</ept>](../service-fabric-reliable-service-communication.md).</source>
            <target state="new">For writing clients to communicate with services using WCF, the framework provides <bpt id="2">&lt;code&gt;</bpt>WcfClientCommunicationFactory<ept id="2">&lt;/code&gt;</ept>, which is the WCF specific implementation of [<bpt id="4">&lt;code&gt;</bpt>ClientCommunicationFactoryBase<ept id="4">&lt;/code&gt;</ept>](../service-fabric-reliable-service-communication.md).</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The WCF communication channel can be accessed from the <bpt id="2">&lt;code&gt;</bpt>WcfCommunicationClient<ept id="2">&lt;/code&gt;</ept> created by the <bpt id="4">&lt;code&gt;</bpt>WcfCommunicationClientFactory<ept id="4">&lt;/code&gt;</ept></source>
            <target state="new">The WCF communication channel can be accessed from the <bpt id="2">&lt;code&gt;</bpt>WcfCommunicationClient<ept id="2">&lt;/code&gt;</ept> created by the <bpt id="4">&lt;code&gt;</bpt>WcfCommunicationClientFactory<ept id="4">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Client code can use the <bpt id="2">&lt;code&gt;</bpt>WcfCommunicationClientFactory<ept id="2">&lt;/code&gt;</ept> along with the <bpt id="4">&lt;code&gt;</bpt>ServicePartitionClient<ept id="4">&lt;/code&gt;</ept> to determine the service endpoint and make communicate with the service.</source>
            <target state="new">Client code can use the <bpt id="2">&lt;code&gt;</bpt>WcfCommunicationClientFactory<ept id="2">&lt;/code&gt;</ept> along with the <bpt id="4">&lt;code&gt;</bpt>ServicePartitionClient<ept id="4">&lt;/code&gt;</ept> to determine the service endpoint and make communicate with the service.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>