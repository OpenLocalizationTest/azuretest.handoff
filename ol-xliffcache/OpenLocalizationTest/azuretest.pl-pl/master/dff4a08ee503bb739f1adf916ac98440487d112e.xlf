<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/22/2016 6:06:22 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dff4a08ee503bb739f1adf916ac98440487d112e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>App Model v2.0 | Microsoft Azure</source>
            <target state="new">App Model v2.0 | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to build a .NET MVC Web App that signs users in with both personal Microsoft Account and work or school accounts.</source>
            <target state="new">How to build a .NET MVC Web App that signs users in with both personal Microsoft Account and work or school accounts.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>App model v2.0 preview: Add sign-in to an .NET MVC web app</source>
            <target state="new">App model v2.0 preview: Add sign-in to an .NET MVC web app</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>With the v2.0 app model, you can quickly add authentication to your web apps with support for both personal Microsoft accounts and work or school accounts.</source>
            <target state="new">With the v2.0 app model, you can quickly add authentication to your web apps with support for both personal Microsoft accounts and work or school accounts.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>In ASP.NET web apps, you can accomplish this using Microsoft's OWIN middleware included in .NET Framework 4.5.</source>
            <target state="new">In ASP.NET web apps, you can accomplish this using Microsoft's OWIN middleware included in .NET Framework 4.5.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This information applies to the v2.0 app model public preview.</source>
            <target state="new">This information applies to the v2.0 app model public preview.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Active Directory Developer Guide<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Here we'll use OWIN to:</source>
            <target state="new">Here we'll use OWIN to:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Sign the user into the app using Azure AD and the v2.0 app model.</source>
            <target state="new">Sign the user into the app using Azure AD and the v2.0 app model.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Display some information about the user.</source>
            <target state="new">Display some information about the user.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Sign the user out of the app.</source>
            <target state="new">Sign the user out of the app.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>In order to do this, you'll need to:</source>
            <target state="new">In order to do this, you'll need to:</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Register an app.</source>
            <target state="new">Register an app.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Set up your app to use the OWIN authentication pipeline.</source>
            <target state="new">Set up your app to use the OWIN authentication pipeline.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Use OWIN to issue sign-in and sign-out requests to Azure AD.</source>
            <target state="new">Use OWIN to issue sign-in and sign-out requests to Azure AD.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Print out data about the user.</source>
            <target state="new">Print out data about the user.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The code for this tutorial is maintained <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>on GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The code for this tutorial is maintained <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>on GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>To follow along, you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or clone the skeleton:</source>
            <target state="new">To follow along, you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download the app's skeleton as a .zip<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or clone the skeleton:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>git clone --branch skeleton https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIdConnect-DotNet.git<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>git clone --branch skeleton https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIdConnect-DotNet.git<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The completed app is provided at the end of this tutorial as well.</source>
            <target state="new">The completed app is provided at the end of this tutorial as well.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>1. Register an App</source>
            <target state="new">1. Register an App</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Create a new app at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or follow these <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>detailed steps<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Create a new app at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>apps.dev.microsoft.com<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or follow these <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>detailed steps<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Make sure to:</source>
            <target state="new">Make sure to:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Copy down the <bpt id="2">&lt;strong&gt;</bpt>Application Id<ept id="2">&lt;/strong&gt;</ept> assigned to your app, you'll need it soon.</source>
            <target state="new">Copy down the <bpt id="2">&lt;strong&gt;</bpt>Application Id<ept id="2">&lt;/strong&gt;</ept> assigned to your app, you'll need it soon.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Add the <bpt id="2">&lt;strong&gt;</bpt>Web<ept id="2">&lt;/strong&gt;</ept> platform for your app.</source>
            <target state="new">Add the <bpt id="2">&lt;strong&gt;</bpt>Web<ept id="2">&lt;/strong&gt;</ept> platform for your app.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Enter the correct <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Enter the correct <bpt id="2">&lt;strong&gt;</bpt>Redirect URI<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The redirect uri indicates to Azure AD where authentication responses should be directed - the default for this tutorial is <bpt id="2">&lt;code&gt;</bpt>https://localhost:44326/<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">The redirect uri indicates to Azure AD where authentication responses should be directed - the default for this tutorial is <bpt id="2">&lt;code&gt;</bpt>https://localhost:44326/<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>2. Set up your app to use the OWIN authentication pipeline</source>
            <target state="new">2. Set up your app to use the OWIN authentication pipeline</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Here, we'll configure the OWIN middleware to use the OpenID Connect authentication protocol.</source>
            <target state="new">Here, we'll configure the OWIN middleware to use the OpenID Connect authentication protocol.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>OWIN will be used to issue sign-in and sign-out requests, manage the user's session, and get information about the user, amongst other things.</source>
            <target state="new">OWIN will be used to issue sign-in and sign-out requests, manage the user's session, and get information about the user, amongst other things.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>To begin, open the <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept> file in the root of the project, and enter your app's configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</source>
            <target state="new">To begin, open the <bpt id="2">&lt;code&gt;</bpt>web.config<ept id="2">&lt;/code&gt;</ept> file in the root of the project, and enter your app's configuration values in the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ida:ClientId<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Application Id<ept id="4">&lt;/strong&gt;</ept> assigned to your app in the registration portal.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ida:ClientId<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Application Id<ept id="4">&lt;/strong&gt;</ept> assigned to your app in the registration portal.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>ida:RedirectUri<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Redirect Uri<ept id="4">&lt;/strong&gt;</ept> you entered in the portal.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>ida:RedirectUri<ept id="2">&lt;/code&gt;</ept> is the <bpt id="4">&lt;strong&gt;</bpt>Redirect Uri<ept id="4">&lt;/strong&gt;</ept> you entered in the portal.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Next, add the OWIN middleware NuGet packages to the project using the Package Manager Console.</source>
            <target state="new">Next, add the OWIN middleware NuGet packages to the project using the Package Manager Console.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Add an "OWIN Startup Class" to the project called <bpt id="2">&lt;code&gt;</bpt>Startup.cs<ept id="2">&lt;/code&gt;</ept>  Right click on the project --&gt; <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> --&gt; <bpt id="6">&lt;strong&gt;</bpt>New Item<ept id="6">&lt;/strong&gt;</ept> --&gt; Search for "OWIN".</source>
            <target state="new">Add an "OWIN Startup Class" to the project called <bpt id="2">&lt;code&gt;</bpt>Startup.cs<ept id="2">&lt;/code&gt;</ept>  Right click on the project --&gt; <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept> --&gt; <bpt id="6">&lt;strong&gt;</bpt>New Item<ept id="6">&lt;/strong&gt;</ept> --&gt; Search for "OWIN".</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>The OWIN middleware will invoke the <bpt id="2">&lt;code&gt;</bpt>Configuration(...)<ept id="2">&lt;/code&gt;</ept> method when your app starts.</source>
            <target state="new">The OWIN middleware will invoke the <bpt id="2">&lt;code&gt;</bpt>Configuration(...)<ept id="2">&lt;/code&gt;</ept> method when your app starts.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Change the class declaration to <bpt id="2">&lt;code&gt;</bpt>public partial class Startup<ept id="2">&lt;/code&gt;</ept> - we've already implemented part of this class for you in another file.</source>
            <target state="new">Change the class declaration to <bpt id="2">&lt;code&gt;</bpt>public partial class Startup<ept id="2">&lt;/code&gt;</ept> - we've already implemented part of this class for you in another file.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>Configuration(...)<ept id="2">&lt;/code&gt;</ept> method, make a call to ConfigureAuth(...) to set up authentication for your web app</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>Configuration(...)<ept id="2">&lt;/code&gt;</ept> method, make a call to ConfigureAuth(...) to set up authentication for your web app</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Open the file <bpt id="2">&lt;code&gt;</bpt>App_Start\Startup.Auth.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>ConfigureAuth(...)<ept id="4">&lt;/code&gt;</ept> method.</source>
            <target state="new">Open the file <bpt id="2">&lt;code&gt;</bpt>App_Start\Startup.Auth.cs<ept id="2">&lt;/code&gt;</ept> and implement the <bpt id="4">&lt;code&gt;</bpt>ConfigureAuth(...)<ept id="4">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>The parameters you provide in <bpt id="2">&lt;code&gt;</bpt>OpenIdConnectAuthenticationOptions<ept id="2">&lt;/code&gt;</ept> will serve as coordinates for your app to communicate with Azure AD.</source>
            <target state="new">The parameters you provide in <bpt id="2">&lt;code&gt;</bpt>OpenIdConnectAuthenticationOptions<ept id="2">&lt;/code&gt;</ept> will serve as coordinates for your app to communicate with Azure AD.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>You'll also need to set up Cookie Authentication - the OpenID Connect middleware uses cookies underneath the covers.</source>
            <target state="new">You'll also need to set up Cookie Authentication - the OpenID Connect middleware uses cookies underneath the covers.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>3. Use OWIN to issue sign-in and sign-out requests to Azure AD</source>
            <target state="new">3. Use OWIN to issue sign-in and sign-out requests to Azure AD</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Your app is now properly configured to communicate with the v2.0 endpoint using the OpenID Connect authentication protocol.</source>
            <target state="new">Your app is now properly configured to communicate with the v2.0 endpoint using the OpenID Connect authentication protocol.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>OWIN has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</source>
            <target state="new">OWIN has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>All that remains is to give your users a way to sign in and sign out.</source>
            <target state="new">All that remains is to give your users a way to sign in and sign out.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>You can use authorize tags in your controllers to require that user signs in before accessing a certain page.</source>
            <target state="new">You can use authorize tags in your controllers to require that user signs in before accessing a certain page.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Open <bpt id="2">&lt;code&gt;</bpt>Controllers\HomeController.cs<ept id="2">&lt;/code&gt;</ept>, and add the <bpt id="4">&lt;code&gt;</bpt>[Authorize]<ept id="4">&lt;/code&gt;</ept> tag to the About controller.</source>
            <target state="new">Open <bpt id="2">&lt;code&gt;</bpt>Controllers\HomeController.cs<ept id="2">&lt;/code&gt;</ept>, and add the <bpt id="4">&lt;code&gt;</bpt>[Authorize]<ept id="4">&lt;/code&gt;</ept> tag to the About controller.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>You can also use OWIN to directly issue authentication requests from within your code.</source>
            <target state="new">You can also use OWIN to directly issue authentication requests from within your code.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Open <bpt id="2">&lt;code&gt;</bpt>Controllers\AccountController.cs<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Open <bpt id="2">&lt;code&gt;</bpt>Controllers\AccountController.cs<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>In the SignIn() and SignOut() actions, issue OpenID Connect challenge and sign-out requests, respectively.</source>
            <target state="new">In the SignIn() and SignOut() actions, issue OpenID Connect challenge and sign-out requests, respectively.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Now, open <bpt id="2">&lt;code&gt;</bpt>Views\Shared\_LoginPartial.cshtml<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Now, open <bpt id="2">&lt;code&gt;</bpt>Views\Shared\_LoginPartial.cshtml<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This is where you'll show the user your app's sign-in and sign-out links, and print out the user's name in a view.</source>
            <target state="new">This is where you'll show the user your app's sign-in and sign-out links, and print out the user's name in a view.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>4. Display user information</source>
            <target state="new">4. Display user information</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>When authenticating users with OpenID Connect, the v2.0 endpoint returns an id_token to the app that contains <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>claims<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or assertions about the user.</source>
            <target state="new">When authenticating users with OpenID Connect, the v2.0 endpoint returns an id_token to the app that contains <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>claims<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or assertions about the user.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>You can use these claims to personalize your app:</source>
            <target state="new">You can use these claims to personalize your app:</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Open the <bpt id="2">&lt;code&gt;</bpt>Controllers\HomeController.cs<ept id="2">&lt;/code&gt;</ept> file.</source>
            <target state="new">Open the <bpt id="2">&lt;code&gt;</bpt>Controllers\HomeController.cs<ept id="2">&lt;/code&gt;</ept> file.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>You can access the user's claims in your controllers via the <bpt id="2">&lt;code&gt;</bpt>ClaimsPrincipal.Current<ept id="2">&lt;/code&gt;</ept> security principal object.</source>
            <target state="new">You can access the user's claims in your controllers via the <bpt id="2">&lt;code&gt;</bpt>ClaimsPrincipal.Current<ept id="2">&lt;/code&gt;</ept> security principal object.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Finally, build and run your app!</source>
            <target state="new">Finally, build and run your app!</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the top navigation bar.</source>
            <target state="new">Sign in with either a personal Microsoft Account or a work or school account, and notice how the user's identity is reflected in the top navigation bar.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</source>
            <target state="new">You now have a web app secured using industry standard protocols that can authenticate users with both their personal and work/school accounts.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>For reference, the completed sample (without your configuration values) <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or you can clone it from GitHub:</source>
            <target state="new">For reference, the completed sample (without your configuration values) <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>is provided as a .zip here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, or you can clone it from GitHub:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIdConnect-DotNet.git<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>git clone --branch complete https://github.com/AzureADQuickStarts/AppModelv2-WebApp-OpenIdConnect-DotNet.git<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>You can now move onto more advanced topics.</source>
            <target state="new">You can now move onto more advanced topics.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>You may want to try:</source>
            <target state="new">You may want to try:</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a Web API with the v2.0 app model &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Secure a Web API with the v2.0 app model &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>For additional resources, check out:</source>
            <target state="new">For additional resources, check out:</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The App Model v2.0 Preview &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>StackOverflow "azure-active-directory" tag &gt;&gt;<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>