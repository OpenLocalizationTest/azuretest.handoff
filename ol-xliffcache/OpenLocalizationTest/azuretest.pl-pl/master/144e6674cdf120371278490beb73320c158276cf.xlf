<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 10:32:08 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">144e6674cdf120371278490beb73320c158276cf</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Get started with Stream Analytics: Real-time fraud detection | Microsoft Azure</source>
            <target state="new">Get started with Stream Analytics: Real-time fraud detection | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to create a real-time fraud detection solution with Stream Analytics. Use an event hub for real-time event processing.</source>
            <target state="new">Learn how to create a real-time fraud detection solution with Stream Analytics. Use an event hub for real-time event processing.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Get started using Azure Stream Analytics: Real-time fraud detection</source>
            <target state="new">Get started using Azure Stream Analytics: Real-time fraud detection</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Learn how to create an end-to-end solution for real-time fraud detection with Azure Stream Analytics.</source>
            <target state="new">Learn how to create an end-to-end solution for real-time fraud detection with Azure Stream Analytics.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Bring events into an Azure event hub, write Stream Analytics queries for aggregation or alerting, and send the results to an output sink to gain insight over data with real-time processing.</source>
            <target state="new">Bring events into an Azure event hub, write Stream Analytics queries for aggregation or alerting, and send the results to an output sink to gain insight over data with real-time processing.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Stream Analytics is a fully managed service providing low-latency, highly available, scalable complex event processing over streaming data in the cloud.</source>
            <target state="new">Stream Analytics is a fully managed service providing low-latency, highly available, scalable complex event processing over streaming data in the cloud.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Introduction to Azure Stream Analytics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Introduction to Azure Stream Analytics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Scenario: Telecommunications and SIM fraud detection in real-time</source>
            <target state="new">Scenario: Telecommunications and SIM fraud detection in real-time</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>A telecommunications company has a large volume of data for incoming calls.</source>
            <target state="new">A telecommunications company has a large volume of data for incoming calls.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The company needs the following from its data:</source>
            <target state="new">The company needs the following from its data:</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Pare this data down to a manageable amount and obtain insights about customer usage over time and geographical regions.</source>
            <target state="new">Pare this data down to a manageable amount and obtain insights about customer usage over time and geographical regions.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Detect SIM fraud (multiple calls coming from the same identity around the same time but in geographically different locations) in real-time so that they can easily respond by notifying customers or shutting down service.</source>
            <target state="new">Detect SIM fraud (multiple calls coming from the same identity around the same time but in geographically different locations) in real-time so that they can easily respond by notifying customers or shutting down service.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In canonical Internet of Things (IoT) scenarios there is a ton of telemetry or sensor data being generated – and customers want to aggregate them or alert over anomalies in real-time.</source>
            <target state="new">In canonical Internet of Things (IoT) scenarios there is a ton of telemetry or sensor data being generated – and customers want to aggregate them or alert over anomalies in real-time.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>This scenario leverages an event generator located on GitHub.</source>
            <target state="new">This scenario leverages an event generator located on GitHub.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Download it <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and follow the steps in this tutorial to set up your solution.</source>
            <target state="new">Download it <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and follow the steps in this tutorial to set up your solution.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Create an Azure Event Hubs input and Consumer Group</source>
            <target state="new">Create an Azure Event Hubs input and Consumer Group</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The sample application will generate events and push them to an Event Hub instance for real-time processing.</source>
            <target state="new">The sample application will generate events and push them to an Event Hub instance for real-time processing.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Service Bus Event Hubs are the preferred method of event ingestion for Stream Analytics and you can learn more about Event Hubs in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Bus documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Service Bus Event Hubs are the preferred method of event ingestion for Stream Analytics and you can learn more about Event Hubs in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Bus documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>To create an Event Hub:</source>
            <target state="new">To create an Event Hub:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> click <bpt id="4">&lt;strong&gt;</bpt>New<ept id="4">&lt;/strong&gt;</ept> &gt; <bpt id="6">&lt;strong&gt;</bpt>App Services<ept id="6">&lt;/strong&gt;</ept> &gt; <bpt id="8">&lt;strong&gt;</bpt>Service Bus<ept id="8">&lt;/strong&gt;</ept> &gt; <bpt id="10">&lt;strong&gt;</bpt>Event Hub<ept id="10">&lt;/strong&gt;</ept> &gt; <bpt id="12">&lt;strong&gt;</bpt>Quick Create<ept id="12">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> click <bpt id="4">&lt;strong&gt;</bpt>New<ept id="4">&lt;/strong&gt;</ept> &gt; <bpt id="6">&lt;strong&gt;</bpt>App Services<ept id="6">&lt;/strong&gt;</ept> &gt; <bpt id="8">&lt;strong&gt;</bpt>Service Bus<ept id="8">&lt;/strong&gt;</ept> &gt; <bpt id="10">&lt;strong&gt;</bpt>Event Hub<ept id="10">&lt;/strong&gt;</ept> &gt; <bpt id="12">&lt;strong&gt;</bpt>Quick Create<ept id="12">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Provide a name, region, and new or existing namespace to create a new Event Hub.</source>
            <target state="new">Provide a name, region, and new or existing namespace to create a new Event Hub.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>As a best practice, each Stream Analytics job should read from a single Event Hub Consumer Group.</source>
            <target state="new">As a best practice, each Stream Analytics job should read from a single Event Hub Consumer Group.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>We will walk you through the process of creating a Consumer Group below, and you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn more about Consumer Groups<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">We will walk you through the process of creating a Consumer Group below, and you can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>learn more about Consumer Groups<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>To create a Consumer Group, navigate to the newly created Event Hub and click the <bpt id="2">&lt;strong&gt;</bpt>Consumer Groups<ept id="2">&lt;/strong&gt;</ept> tab, then click <bpt id="4">&lt;strong&gt;</bpt>Create<ept id="4">&lt;/strong&gt;</ept> on the bottom of the page and provide a name for your Consumer Group.</source>
            <target state="new">To create a Consumer Group, navigate to the newly created Event Hub and click the <bpt id="2">&lt;strong&gt;</bpt>Consumer Groups<ept id="2">&lt;/strong&gt;</ept> tab, then click <bpt id="4">&lt;strong&gt;</bpt>Create<ept id="4">&lt;/strong&gt;</ept> on the bottom of the page and provide a name for your Consumer Group.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>To grant access to the Event Hub, we will need to create a shared access policy.</source>
            <target state="new">To grant access to the Event Hub, we will need to create a shared access policy.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab of your Event Hub.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab of your Event Hub.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Under <bpt id="2">&lt;strong&gt;</bpt>Shared Access Policies<ept id="2">&lt;/strong&gt;</ept>, create a new policy with <bpt id="4">&lt;strong&gt;</bpt>Manage<ept id="4">&lt;/strong&gt;</ept> permissions.</source>
            <target state="new">Under <bpt id="2">&lt;strong&gt;</bpt>Shared Access Policies<ept id="2">&lt;/strong&gt;</ept>, create a new policy with <bpt id="4">&lt;strong&gt;</bpt>Manage<ept id="4">&lt;/strong&gt;</ept> permissions.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Shared Access Policies where you can create a policy with Manage permissions.<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Shared Access Policies where you can create a policy with Manage permissions.<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept> at the bottom of the page.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Save<ept id="2">&lt;/strong&gt;</ept> at the bottom of the page.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Navigate to the <bpt id="2">&lt;strong&gt;</bpt>Dashboard<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Connection Information<ept id="4">&lt;/strong&gt;</ept> at the bottom of the page, and then copy and save the connection information.</source>
            <target state="new">Navigate to the <bpt id="2">&lt;strong&gt;</bpt>Dashboard<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Connection Information<ept id="4">&lt;/strong&gt;</ept> at the bottom of the page, and then copy and save the connection information.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Configure and start event generator application</source>
            <target state="new">Configure and start event generator application</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>We have provided a client application that will generate sample incoming call metadata and push it to Event Hub.</source>
            <target state="new">We have provided a client application that will generate sample incoming call metadata and push it to Event Hub.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Follow the steps below to set up this application.</source>
            <target state="new">Follow the steps below to set up this application.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Download the TelcoGenerator solution from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://github.com/Azure/azure-stream-analytics/tree/master/DataGenerators/TelcoGenerator<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Download the TelcoGenerator solution from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>https://github.com/Azure/azure-stream-analytics/tree/master/DataGenerators/TelcoGenerator<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Replace the Microsoft.ServiceBus.ConnectionString and EventHubName values in App.Config with your Event Hub connection string and name.</source>
            <target state="new">Replace the Microsoft.ServiceBus.ConnectionString and EventHubName values in App.Config with your Event Hub connection string and name.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Build the solution to trigger the download of required nuget packages.</source>
            <target state="new">Build the solution to trigger the download of required nuget packages.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Start the application.</source>
            <target state="new">Start the application.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The usage is as follows:</source>
            <target state="new">The usage is as follows:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>The following example will generate 1000 events with a 20 percent probability of fraud over the course of 2 hours.</source>
            <target state="new">The following example will generate 1000 events with a 20 percent probability of fraud over the course of 2 hours.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>You will see records being sent to your Event Hub.</source>
            <target state="new">You will see records being sent to your Event Hub.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Some key fields that we will be using in this real-time fraud detection application are defined here:</source>
            <target state="new">Some key fields that we will be using in this real-time fraud detection application are defined here:</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Record</source>
            <target state="new">Record</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Definition</source>
            <target state="new">Definition</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>CallrecTime</source>
            <target state="new">CallrecTime</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Timestamp for the call start time.</source>
            <target state="new">Timestamp for the call start time.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>SwitchNum</source>
            <target state="new">SwitchNum</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Telephone switch used to connect the call.</source>
            <target state="new">Telephone switch used to connect the call.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>CallingNum</source>
            <target state="new">CallingNum</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Phone number of the caller.</source>
            <target state="new">Phone number of the caller.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>CallingIMSI</source>
            <target state="new">CallingIMSI</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>International Mobile Subscriber Identity (IMSI).</source>
            <target state="new">International Mobile Subscriber Identity (IMSI).</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Unique identifier of the caller.</source>
            <target state="new">Unique identifier of the caller.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>CalledNum</source>
            <target state="new">CalledNum</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Phone number of the call recipient.</source>
            <target state="new">Phone number of the call recipient.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>CalledIMSI</source>
            <target state="new">CalledIMSI</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>International Mobile Subscriber Identity (IMSI).</source>
            <target state="new">International Mobile Subscriber Identity (IMSI).</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Unique identifier of the call recipient.</source>
            <target state="new">Unique identifier of the call recipient.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Create Stream Analytics job</source>
            <target state="new">Create Stream Analytics job</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Now that we have a stream of telecommunications events, we can set up a Stream Analytics job to analyze these events in real-time.</source>
            <target state="new">Now that we have a stream of telecommunications events, we can set up a Stream Analytics job to analyze these events in real-time.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Provision a Stream Analytics job</source>
            <target state="new">Provision a Stream Analytics job</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>In the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>New &gt; Data Services &gt; Stream Analytics &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>New &gt; Data Services &gt; Stream Analytics &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Specify the following values, and then click <bpt id="2">&lt;strong&gt;</bpt>Create Stream Analytics Job<ept id="2">&lt;/strong&gt;</ept>:</source>
            <target state="new">Specify the following values, and then click <bpt id="2">&lt;strong&gt;</bpt>Create Stream Analytics Job<ept id="2">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Job Name<ept id="1">&lt;/strong&gt;</ept>: Enter a job name.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Job Name<ept id="1">&lt;/strong&gt;</ept>: Enter a job name.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Region<ept id="1">&lt;/strong&gt;</ept>: Select the region where you want to run the job.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Region<ept id="1">&lt;/strong&gt;</ept>: Select the region where you want to run the job.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Consider placing the job and the event hub in the same region to ensure better performance and to ensure that you will not be paying to transfer data between regions.</source>
            <target state="new">Consider placing the job and the event hub in the same region to ensure better performance and to ensure that you will not be paying to transfer data between regions.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Storage Account<ept id="1">&lt;/strong&gt;</ept>: Choose the Azure storage account that you would like to use to store monitoring data for all Stream Analytics jobs running within this region.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Storage Account<ept id="1">&lt;/strong&gt;</ept>: Choose the Azure storage account that you would like to use to store monitoring data for all Stream Analytics jobs running within this region.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>You have the option to choose an existing storage account or to create a new one.</source>
            <target state="new">You have the option to choose an existing storage account or to create a new one.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Stream Analytics<ept id="2">&lt;/strong&gt;</ept> in the left pane to list the Stream Analytics jobs.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Stream Analytics<ept id="2">&lt;/strong&gt;</ept> in the left pane to list the Stream Analytics jobs.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Stream Analytics service icon<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Stream Analytics service icon<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>The new job will be shown with a status of <bpt id="2">&lt;strong&gt;</bpt>Created<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The new job will be shown with a status of <bpt id="2">&lt;strong&gt;</bpt>Created<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Notice that the <bpt id="2">&lt;strong&gt;</bpt>Start<ept id="2">&lt;/strong&gt;</ept> button on the bottom of the page is disabled.</source>
            <target state="new">Notice that the <bpt id="2">&lt;strong&gt;</bpt>Start<ept id="2">&lt;/strong&gt;</ept> button on the bottom of the page is disabled.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>You must configure the job input, output, and query before you can start the job.</source>
            <target state="new">You must configure the job input, output, and query before you can start the job.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Specify job input</source>
            <target state="new">Specify job input</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>In your Stream Analytics job click <bpt id="2">&lt;strong&gt;</bpt>Inputs<ept id="2">&lt;/strong&gt;</ept> from the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>Add Input<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In your Stream Analytics job click <bpt id="2">&lt;strong&gt;</bpt>Inputs<ept id="2">&lt;/strong&gt;</ept> from the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>Add Input<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>The dialog box that opens will walk you through a number of steps to set up your input.</source>
            <target state="new">The dialog box that opens will walk you through a number of steps to set up your input.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Data Stream<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Data Stream<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Event Hub<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Event Hub<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Type or select the following values on the third page:</source>
            <target state="new">Type or select the following values on the third page:</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Input Alias<ept id="1">&lt;/strong&gt;</ept>: Enter a friendly name for this job input such as <bpt id="3">&lt;em&gt;</bpt>CallStream<ept id="3">&lt;/em&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Input Alias<ept id="1">&lt;/strong&gt;</ept>: Enter a friendly name for this job input such as <bpt id="3">&lt;em&gt;</bpt>CallStream<ept id="3">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Note that you will be using this name in the query later.</source>
            <target state="new">Note that you will be using this name in the query later.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Event Hub<ept id="1">&lt;/strong&gt;</ept>: If the Event Hub you created is in the same subscription as the Stream Analytics job, select the namespace that the event hub is in.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Event Hub<ept id="1">&lt;/strong&gt;</ept>: If the Event Hub you created is in the same subscription as the Stream Analytics job, select the namespace that the event hub is in.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>If your event hub is in a different subscription, select <bpt id="2">&lt;strong&gt;</bpt>Use Event Hub from Another Subscription<ept id="2">&lt;/strong&gt;</ept> and manually enter information for <bpt id="4">&lt;strong&gt;</bpt>Service Bus Namespace<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>Event Hub Name<ept id="6">&lt;/strong&gt;</ept>, <bpt id="8">&lt;strong&gt;</bpt>Event Hub Policy Name<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Event Hub Policy Key<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Event Hub Partition Count<ept id="12">&lt;/strong&gt;</ept>.</source>
            <target state="new">If your event hub is in a different subscription, select <bpt id="2">&lt;strong&gt;</bpt>Use Event Hub from Another Subscription<ept id="2">&lt;/strong&gt;</ept> and manually enter information for <bpt id="4">&lt;strong&gt;</bpt>Service Bus Namespace<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>Event Hub Name<ept id="6">&lt;/strong&gt;</ept>, <bpt id="8">&lt;strong&gt;</bpt>Event Hub Policy Name<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Event Hub Policy Key<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Event Hub Partition Count<ept id="12">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Event Hub Name<ept id="1">&lt;/strong&gt;</ept>: Select the name of the Event Hub.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Event Hub Name<ept id="1">&lt;/strong&gt;</ept>: Select the name of the Event Hub.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Event Hub Policy Name<ept id="1">&lt;/strong&gt;</ept>: Select the event-hub policy created earlier in this tutorial.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Event Hub Policy Name<ept id="1">&lt;/strong&gt;</ept>: Select the event-hub policy created earlier in this tutorial.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Event Hub Consumer Group<ept id="1">&lt;/strong&gt;</ept>: Type the Consumer Group created earlier in this tutorial.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Event Hub Consumer Group<ept id="1">&lt;/strong&gt;</ept>: Type the Consumer Group created earlier in this tutorial.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Click the right button.</source>
            <target state="new">Click the right button.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>Specify the following values:</source>
            <target state="new">Specify the following values:</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Event Serializer Format<ept id="1">&lt;/strong&gt;</ept>: JSON</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Event Serializer Format<ept id="1">&lt;/strong&gt;</ept>: JSON</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Encoding<ept id="1">&lt;/strong&gt;</ept>: UTF8</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Encoding<ept id="1">&lt;/strong&gt;</ept>: UTF8</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Click the check button to add this source and to verify that Stream Analytics can successfully connect to the event hub.</source>
            <target state="new">Click the check button to add this source and to verify that Stream Analytics can successfully connect to the event hub.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Specify job query</source>
            <target state="new">Specify job query</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Stream Analytics supports a simple, declarative query model for describing transformations for real-time processing.</source>
            <target state="new">Stream Analytics supports a simple, declarative query model for describing transformations for real-time processing.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>To learn more about the language, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Query Language Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more about the language, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Query Language Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>This tutorial will help you author and test several queries over your real-time stream of call data.</source>
            <target state="new">This tutorial will help you author and test several queries over your real-time stream of call data.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Optional: Sample input data</source>
            <target state="new">Optional: Sample input data</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>To validate your query against actual job data, you can use the <bpt id="2">&lt;strong&gt;</bpt>Sample Data<ept id="2">&lt;/strong&gt;</ept> feature to extract events from your stream and create a .JSON file of the events for testing.</source>
            <target state="new">To validate your query against actual job data, you can use the <bpt id="2">&lt;strong&gt;</bpt>Sample Data<ept id="2">&lt;/strong&gt;</ept> feature to extract events from your stream and create a .JSON file of the events for testing.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>The following steps show how to do this and we have also provided a sample <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Telco.json<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> file for testing purposes.</source>
            <target state="new">The following steps show how to do this and we have also provided a sample <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Telco.json<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> file for testing purposes.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Select your Event Hub input and click <bpt id="2">&lt;strong&gt;</bpt>Sample Data<ept id="2">&lt;/strong&gt;</ept> at the bottom of the page.</source>
            <target state="new">Select your Event Hub input and click <bpt id="2">&lt;strong&gt;</bpt>Sample Data<ept id="2">&lt;/strong&gt;</ept> at the bottom of the page.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>In the dialog box that appears, specify a <bpt id="2">&lt;strong&gt;</bpt>Start Time<ept id="2">&lt;/strong&gt;</ept> to start collecting data from and a <bpt id="4">&lt;strong&gt;</bpt>Duration<ept id="4">&lt;/strong&gt;</ept> for how much additional data to consume.</source>
            <target state="new">In the dialog box that appears, specify a <bpt id="2">&lt;strong&gt;</bpt>Start Time<ept id="2">&lt;/strong&gt;</ept> to start collecting data from and a <bpt id="4">&lt;strong&gt;</bpt>Duration<ept id="4">&lt;/strong&gt;</ept> for how much additional data to consume.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>Click the check button to start sampling data from the input.</source>
            <target state="new">Click the check button to start sampling data from the input.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>It can take a minute or two for the data file to be produced.</source>
            <target state="new">It can take a minute or two for the data file to be produced.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>When the process is completed, click <bpt id="2">&lt;strong&gt;</bpt>Details<ept id="2">&lt;/strong&gt;</ept> and download and save the .JSON file that is generated.</source>
            <target state="new">When the process is completed, click <bpt id="2">&lt;strong&gt;</bpt>Details<ept id="2">&lt;/strong&gt;</ept> and download and save the .JSON file that is generated.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Download and save processed data in a JSON file<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Download and save processed data in a JSON file<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Passthrough query</source>
            <target state="new">Passthrough query</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>If you want to archive every event, you can use a passthrough query to read all the fields in the payload of the event or message.</source>
            <target state="new">If you want to archive every event, you can use a passthrough query to read all the fields in the payload of the event or message.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>To start with, do a simple passthrough query that projects all the fields in an event.</source>
            <target state="new">To start with, do a simple passthrough query that projects all the fields in an event.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Query<ept id="2">&lt;/strong&gt;</ept> from the top of the Stream Analytics job page.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Query<ept id="2">&lt;/strong&gt;</ept> from the top of the Stream Analytics job page.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Add the following to the code editor:</source>
            <target state="new">Add the following to the code editor:</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Make sure that the name of the input source matches the name of the input you specified earlier.</source>
            <target state="new">Make sure that the name of the input source matches the name of the input you specified earlier.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Test<ept id="2">&lt;/strong&gt;</ept> under the query editor.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Test<ept id="2">&lt;/strong&gt;</ept> under the query editor.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Supply a test file, either one that you created using the previous steps or use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Telco.json<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Supply a test file, either one that you created using the previous steps or use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Telco.json<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Click the check button and see the results displayed below the query definition.</source>
            <target state="new">Click the check button and see the results displayed below the query definition.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Query definition results<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Query definition results<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Column projection</source>
            <target state="new">Column projection</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>We'll now pare down the returned fields to a smaller set.</source>
            <target state="new">We'll now pare down the returned fields to a smaller set.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Change the query in the code editor to:</source>
            <target state="new">Change the query in the code editor to:</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Output in query editor.<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Output in query editor.<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Count of incoming calls by region: Tumbling window with aggregation</source>
            <target state="new">Count of incoming calls by region: Tumbling window with aggregation</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>To compare the amount that incoming calls per region we'll leverage a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>TumblingWindow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to get the count of incoming calls grouped by SwitchNum every 5 seconds.</source>
            <target state="new">To compare the amount that incoming calls per region we'll leverage a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>TumblingWindow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to get the count of incoming calls grouped by SwitchNum every 5 seconds.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Change the query in the code editor to:</source>
            <target state="new">Change the query in the code editor to:</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>This query uses the <bpt id="2">&lt;strong&gt;</bpt>Timestamp By<ept id="2">&lt;/strong&gt;</ept> keyword to specify a timestamp field in the payload to be used in the temporal computation.</source>
            <target state="new">This query uses the <bpt id="2">&lt;strong&gt;</bpt>Timestamp By<ept id="2">&lt;/strong&gt;</ept> keyword to specify a timestamp field in the payload to be used in the temporal computation.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>If this field wasn't specified, the windowing operation would be performed using the time each event arrived at Event Hub.</source>
            <target state="new">If this field wasn't specified, the windowing operation would be performed using the time each event arrived at Event Hub.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>"Arrival Time Vs Application Time" in the Stream Analytics Query Language Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>"Arrival Time Vs Application Time" in the Stream Analytics Query Language Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>Note that you can access a timestamp for the end of each window by using the <bpt id="2">&lt;strong&gt;</bpt>System.Timestamp<ept id="2">&lt;/strong&gt;</ept> property.</source>
            <target state="new">Note that you can access a timestamp for the end of each window by using the <bpt id="2">&lt;strong&gt;</bpt>System.Timestamp<ept id="2">&lt;/strong&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Query results for Timestand By<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Query results for Timestand By<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>SIM fraud detection with a Self-Join</source>
            <target state="new">SIM fraud detection with a Self-Join</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>To identify potentially fraudulent usage we'll look for calls originating from the same user but in different locations in less than 5 seconds.</source>
            <target state="new">To identify potentially fraudulent usage we'll look for calls originating from the same user but in different locations in less than 5 seconds.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>We <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>join<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> the stream of call events with itself to check for these cases.</source>
            <target state="new">We <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>join<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> the stream of call events with itself to check for these cases.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Change the query in the code editor to:</source>
            <target state="new">Change the query in the code editor to:</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Rerun<ept id="2">&lt;/strong&gt;</ept> under the query editor to see the results of the query.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Query results of a join<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Query results of a join<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Create output sink</source>
            <target state="new">Create output sink</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>Now that we have defined an event stream, an Event Hub input to ingest events, and a query to perform a transformation over the stream, the last step is to define an output sink for the job.</source>
            <target state="new">Now that we have defined an event stream, an Event Hub input to ingest events, and a query to perform a transformation over the stream, the last step is to define an output sink for the job.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>We'll write events for fraudulent behavior to Blob storage.</source>
            <target state="new">We'll write events for fraudulent behavior to Blob storage.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Follow the steps below to create a container for Blob storage if you don't already have one.</source>
            <target state="new">Follow the steps below to create a container for Blob storage if you don't already have one.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>Use an existing storage account or create a new storage account by clicking <bpt id="2">&lt;strong&gt;</bpt>NEW &gt; DATA SERVICES &gt; STORAGE &gt; QUICK CREATE<ept id="2">&lt;/strong&gt;</ept> and following the instructions.</source>
            <target state="new">Use an existing storage account or create a new storage account by clicking <bpt id="2">&lt;strong&gt;</bpt>NEW &gt; DATA SERVICES &gt; STORAGE &gt; QUICK CREATE<ept id="2">&lt;/strong&gt;</ept> and following the instructions.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Select the storage account, click <bpt id="2">&lt;strong&gt;</bpt>CONTAINERS<ept id="2">&lt;/strong&gt;</ept> at the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>ADD<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select the storage account, click <bpt id="2">&lt;strong&gt;</bpt>CONTAINERS<ept id="2">&lt;/strong&gt;</ept> at the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>ADD<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Specify a <bpt id="2">&lt;strong&gt;</bpt>NAME<ept id="2">&lt;/strong&gt;</ept> for your container and set its <bpt id="4">&lt;strong&gt;</bpt>ACCESS<ept id="4">&lt;/strong&gt;</ept> to Public Blob.</source>
            <target state="new">Specify a <bpt id="2">&lt;strong&gt;</bpt>NAME<ept id="2">&lt;/strong&gt;</ept> for your container and set its <bpt id="4">&lt;strong&gt;</bpt>ACCESS<ept id="4">&lt;/strong&gt;</ept> to Public Blob.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>Specify job output</source>
            <target state="new">Specify job output</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>In your Stream Analytics job click <bpt id="2">&lt;strong&gt;</bpt>OUTPUT<ept id="2">&lt;/strong&gt;</ept> from the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>ADD OUTPUT<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In your Stream Analytics job click <bpt id="2">&lt;strong&gt;</bpt>OUTPUT<ept id="2">&lt;/strong&gt;</ept> from the top of the page, and then click <bpt id="4">&lt;strong&gt;</bpt>ADD OUTPUT<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>The dialog box that opens will walk you through a number of steps to set up your output.</source>
            <target state="new">The dialog box that opens will walk you through a number of steps to set up your output.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>BLOB STORAGE<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>BLOB STORAGE<ept id="2">&lt;/strong&gt;</ept>, and then click the right button.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>Type or select the following values on the third page:</source>
            <target state="new">Type or select the following values on the third page:</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>OUTPUT ALIAS<ept id="1">&lt;/strong&gt;</ept>: Enter a friendly name for this job output.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>OUTPUT ALIAS<ept id="1">&lt;/strong&gt;</ept>: Enter a friendly name for this job output.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>SUBSCRIPTION<ept id="1">&lt;/strong&gt;</ept>: If the Blob storage you created is in the same subscription as the Stream Analytics job, select <bpt id="3">&lt;strong&gt;</bpt>Use Storage Account from Current Subscription<ept id="3">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>SUBSCRIPTION<ept id="1">&lt;/strong&gt;</ept>: If the Blob storage you created is in the same subscription as the Stream Analytics job, select <bpt id="3">&lt;strong&gt;</bpt>Use Storage Account from Current Subscription<ept id="3">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>If your storage is in a different subscription, select <bpt id="2">&lt;strong&gt;</bpt>Use Storage Account from Another Subscription<ept id="2">&lt;/strong&gt;</ept> and manually enter information for <bpt id="4">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>STORAGE ACCOUNT KEY<ept id="6">&lt;/strong&gt;</ept>, <bpt id="8">&lt;strong&gt;</bpt>CONTAINER<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">If your storage is in a different subscription, select <bpt id="2">&lt;strong&gt;</bpt>Use Storage Account from Another Subscription<ept id="2">&lt;/strong&gt;</ept> and manually enter information for <bpt id="4">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>STORAGE ACCOUNT KEY<ept id="6">&lt;/strong&gt;</ept>, <bpt id="8">&lt;strong&gt;</bpt>CONTAINER<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="1">&lt;/strong&gt;</ept>: Select the name of the storage account.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>STORAGE ACCOUNT<ept id="1">&lt;/strong&gt;</ept>: Select the name of the storage account.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>CONTAINER<ept id="1">&lt;/strong&gt;</ept>: Select the name of the container.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>CONTAINER<ept id="1">&lt;/strong&gt;</ept>: Select the name of the container.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FILENAME PREFIX<ept id="1">&lt;/strong&gt;</ept>: Type in a file prefix to use when writing blob output.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FILENAME PREFIX<ept id="1">&lt;/strong&gt;</ept>: Type in a file prefix to use when writing blob output.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>Click the right button.</source>
            <target state="new">Click the right button.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>Specify the following values:</source>
            <target state="new">Specify the following values:</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>EVENT SERIALIZER FORMAT<ept id="1">&lt;/strong&gt;</ept>: JSON</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>EVENT SERIALIZER FORMAT<ept id="1">&lt;/strong&gt;</ept>: JSON</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>ENCODING<ept id="1">&lt;/strong&gt;</ept>: UTF8</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>ENCODING<ept id="1">&lt;/strong&gt;</ept>: UTF8</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>Click the check button to add this source and to verify that Stream Analytics can successfully connect to the storage account.</source>
            <target state="new">Click the check button to add this source and to verify that Stream Analytics can successfully connect to the storage account.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>Start job for real time processing</source>
            <target state="new">Start job for real time processing</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>Since a job input, query, and output have all been specified, we are ready to start the Stream Analytics job for real-time fraud detection.</source>
            <target state="new">Since a job input, query, and output have all been specified, we are ready to start the Stream Analytics job for real-time fraud detection.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>From the job <bpt id="2">&lt;strong&gt;</bpt>DASHBOARD<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>START<ept id="4">&lt;/strong&gt;</ept> at the bottom of the page.</source>
            <target state="new">From the job <bpt id="2">&lt;strong&gt;</bpt>DASHBOARD<ept id="2">&lt;/strong&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>START<ept id="4">&lt;/strong&gt;</ept> at the bottom of the page.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>In the dialog box that appears, select <bpt id="2">&lt;strong&gt;</bpt>JOB START TIME<ept id="2">&lt;/strong&gt;</ept> and then click the check button on the bottom of the dialog box.</source>
            <target state="new">In the dialog box that appears, select <bpt id="2">&lt;strong&gt;</bpt>JOB START TIME<ept id="2">&lt;/strong&gt;</ept> and then click the check button on the bottom of the dialog box.</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>The job status will change to <bpt id="2">&lt;strong&gt;</bpt>Starting<ept id="2">&lt;/strong&gt;</ept> and will shortly move to <bpt id="4">&lt;strong&gt;</bpt>Running<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The job status will change to <bpt id="2">&lt;strong&gt;</bpt>Starting<ept id="2">&lt;/strong&gt;</ept> and will shortly move to <bpt id="4">&lt;strong&gt;</bpt>Running<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>View fraud detection output</source>
            <target state="new">View fraud detection output</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Use a tool like <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Explorer<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to view fraudulent events as they are written to your output in real-time.</source>
            <target state="new">Use a tool like <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Explorer<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to view fraudulent events as they are written to your output in real-time.</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Fraud detection: Fraudulent events viewed in real-time<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Fraud detection: Fraudulent events viewed in real-time<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Get support</source>
            <target state="new">Get support</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>For further assistance, try our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics forum<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For further assistance, try our <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics forum<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Introduction to Azure Stream Analytics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Introduction to Azure Stream Analytics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get started using Azure Stream Analytics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get started using Azure Stream Analytics<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scale Azure Stream Analytics jobs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scale Azure Stream Analytics jobs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Query Language Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Query Language Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Management REST API Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Stream Analytics Management REST API Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>