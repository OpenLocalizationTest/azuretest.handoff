<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 10:03:44 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9474910299126be3dc46e2823523bdf8d2c5c47</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Pivot and unpivot data in SQL Data Warehouse | Microsoft Azure</source>
            <target state="new">Pivot and unpivot data in SQL Data Warehouse | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Tips for pivoting and unpivoting data in Azure SQL Data Warehouse for developing solutions.</source>
            <target state="new">Tips for pivoting and unpivoting data in Azure SQL Data Warehouse for developing solutions.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Pivot and unpivot data in SQL Data Warehouse</source>
            <target state="new">Pivot and unpivot data in SQL Data Warehouse</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>You can pivot data in SQL Data Warehouse by using a CASE statement.</source>
            <target state="new">You can pivot data in SQL Data Warehouse by using a CASE statement.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This article contains two simple examples on how to both pivot and unpivot a table without using the pivot and unpivot syntax found in SQL Server.</source>
            <target state="new">This article contains two simple examples on how to both pivot and unpivot a table without using the pivot and unpivot syntax found in SQL Server.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Pivot</source>
            <target state="new">Pivot</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Unpivot</source>
            <target state="new">Unpivot</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Unpivoting is a little bit more complex.</source>
            <target state="new">Unpivoting is a little bit more complex.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>However, it is still very achievable using <bpt id="2">&lt;code&gt;</bpt>CASE<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">However, it is still very achievable using <bpt id="2">&lt;code&gt;</bpt>CASE<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For this you will also need to first determine how many columns you are going to unpivot.</source>
            <target state="new">For this you will also need to first determine how many columns you are going to unpivot.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In the previous example we pivoted four columns.</source>
            <target state="new">In the previous example we pivoted four columns.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Let's stick with that.</source>
            <target state="new">Let's stick with that.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>To perform the Unpivot we will need to amplify the dataset temporarily by a factor of 4.</source>
            <target state="new">To perform the Unpivot we will need to amplify the dataset temporarily by a factor of 4.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>This results in a two step process:</source>
            <target state="new">This results in a two step process:</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Firstly, create a temporary table containing four rows.</source>
            <target state="new">Firstly, create a temporary table containing four rows.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>We will use this to amplify the data:</source>
            <target state="new">We will use this to amplify the data:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The second step is to use CASE to conditionally unpivot the data back converting the set back into rows.</source>
            <target state="new">The second step is to use CASE to conditionally unpivot the data back converting the set back into rows.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>To achieve this we will need to create a cartesian product of by joining to the temporary taable #Nmbr created in the first step:</source>
            <target state="new">To achieve this we will need to create a cartesian product of by joining to the temporary taable #Nmbr created in the first step:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Finally don't forget to clean up by dropping the temporary table.</source>
            <target state="new">Finally don't forget to clean up by dropping the temporary table.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>