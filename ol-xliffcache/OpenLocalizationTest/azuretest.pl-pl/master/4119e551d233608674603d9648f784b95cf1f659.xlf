<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pl-pl" original="2/20/2016 11:50:49 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4119e551d233608674603d9648f784b95cf1f659</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Create a table</source>
            <target state="new">Create a table</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for tables and entities.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for tables and entities.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object and uses it to create a new table.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object and uses it to create a new table.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The code tries to reference a table named “people.”</source>
            <target state="new">The code tries to reference a table named “people.”</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>If it can’t find a table with that name, it creates one.</source>
            <target state="new">If it can’t find a table with that name, it creates one.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> All code in this guide assumes that the application being built is an Azure Cloud Service project and uses a storage connection string stored in the Azure application's service configuration.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> All code in this guide assumes that the application being built is an Azure Cloud Service project and uses a storage connection string stored in the Azure application's service configuration.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Add an entity to a table</source>
            <target state="new">Add an entity to a table</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>To add an entity to a table you create a class that defines the properties of your entity.</source>
            <target state="new">To add an entity to a table you create a class that defines the properties of your entity.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The following code defines an entity class called <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</source>
            <target state="new">The following code defines an entity class called <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> that uses the customer's first name as the row key and last name as the partition key.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Table operations involving entities are done using the <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object you created earlier in "Create a Table."</source>
            <target state="new">Table operations involving entities are done using the <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object you created earlier in "Create a Table."</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object represents the operation to be done.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object represents the operation to be done.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The following code example shows how to create a <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object and a <bpt id="4">&lt;strong&gt;</bpt>CustomerEntity<ept id="4">&lt;/strong&gt;</ept> object.</source>
            <target state="new">The following code example shows how to create a <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object and a <bpt id="4">&lt;strong&gt;</bpt>CustomerEntity<ept id="4">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>To prepare the operation, a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> is created to insert the customer entity into the table.</source>
            <target state="new">To prepare the operation, a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> is created to insert the customer entity into the table.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Finally, the operation is executed by calling CloudTable.Execute.</source>
            <target state="new">Finally, the operation is executed by calling CloudTable.Execute.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Insert a batch of entities</source>
            <target state="new">Insert a batch of entities</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>You can insert multiple entities into a table in a single write operation.</source>
            <target state="new">You can insert multiple entities into a table in a single write operation.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="2">&lt;strong&gt;</bpt>TableBatchOperation<ept id="2">&lt;/strong&gt;</ept> object using the Insert method, and then starts the operation by calling CloudTable.Execute.</source>
            <target state="new">The following code example creates two entity objects ("Jeff Smith" and "Ben Smith"), adds them to a <bpt id="2">&lt;strong&gt;</bpt>TableBatchOperation<ept id="2">&lt;/strong&gt;</ept> object using the Insert method, and then starts the operation by calling CloudTable.Execute.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Get all of the entities in a partition</source>
            <target state="new">Get all of the entities in a partition</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To query a table for all of the entities in a partition, use a <bpt id="2">&lt;strong&gt;</bpt>TableQuery<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">To query a table for all of the entities in a partition, use a <bpt id="2">&lt;strong&gt;</bpt>TableQuery<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The following code example specifies a filter for entities where 'Smith' is the partition key.</source>
            <target state="new">The following code example specifies a filter for entities where 'Smith' is the partition key.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>This example prints the fields of each entity in the query results to the console.</source>
            <target state="new">This example prints the fields of each entity in the query results to the console.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Get a single entity</source>
            <target state="new">Get a single entity</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>You can write a query to get a single, specific entity.</source>
            <target state="new">You can write a query to get a single, specific entity.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The following code uses a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object to specify a customer named 'Ben Smith'.</source>
            <target state="new">The following code uses a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object to specify a customer named 'Ben Smith'.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>This method returns just one entity, rather than a collection, and the returned value in TableResult.Result is a <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">This method returns just one entity, rather than a collection, and the returned value in TableResult.Result is a <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="2">&lt;strong&gt;</bpt>Table<ept id="2">&lt;/strong&gt;</ept> service.</source>
            <target state="new">Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the <bpt id="2">&lt;strong&gt;</bpt>Table<ept id="2">&lt;/strong&gt;</ept> service.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Delete an entity</source>
            <target state="new">Delete an entity</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>You can delete an entity after you find it.</source>
            <target state="new">You can delete an entity after you find it.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The following code looks for a customer entity named "Ben Smith" and if it finds it, it deletes it.</source>
            <target state="new">The following code looks for a customer entity named "Ben Smith" and if it finds it, it deletes it.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>