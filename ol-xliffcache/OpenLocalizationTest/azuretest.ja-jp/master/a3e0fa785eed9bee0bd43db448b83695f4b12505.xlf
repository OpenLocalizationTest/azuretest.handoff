<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/21/2016 12:12:25 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3e0fa785eed9bee0bd43db448b83695f4b12505</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Azure table storage with the WebJobs SDK</source>
            <target state="new">How to use Azure table storage with the WebJobs SDK</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure table storage with the WebJobs SDK. Create tables, add entities to tables, and read existing tables.</source>
            <target state="new">Learn how to use Azure table storage with the WebJobs SDK. Create tables, add entities to tables, and read existing tables.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Azure table storage with the WebJobs SDK</source>
            <target state="new">How to use Azure table storage with the WebJobs SDK</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This guide provides C# code samples that show how to read and write Azure storage tables by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version 1.x.</source>
            <target state="new">This guide provides C# code samples that show how to read and write Azure storage tables by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> version 1.x.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The guide assumes you know <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The guide assumes you know <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Some of the code snippets show the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute used in functions that are <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>called manually<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, that is, not by using one of the trigger attributes.</source>
            <target state="new">Some of the code snippets show the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute used in functions that are <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>called manually<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, that is, not by using one of the trigger attributes.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to add entities to a table</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to add entities to a table</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>To add entities to a table, use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with an <bpt id="4">&lt;code&gt;</bpt>ICollector&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>IAsyncCollector&lt;T&gt;<ept id="6">&lt;/code&gt;</ept> parameter where <bpt id="8">&lt;code&gt;</bpt>T<ept id="8">&lt;/code&gt;</ept> specifies the schema of the entities you want to add. The attribute constructor takes a string parameter that specifies the name of the table.</source>
            <target state="new">To add entities to a table, use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with an <bpt id="4">&lt;code&gt;</bpt>ICollector&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>IAsyncCollector&lt;T&gt;<ept id="6">&lt;/code&gt;</ept> parameter where <bpt id="8">&lt;code&gt;</bpt>T<ept id="8">&lt;/code&gt;</ept> specifies the schema of the entities you want to add. The attribute constructor takes a string parameter that specifies the name of the table.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The following code sample adds <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> entities to a table named <bpt id="4">&lt;em&gt;</bpt>Ingress<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">The following code sample adds <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> entities to a table named <bpt id="4">&lt;em&gt;</bpt>Ingress<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Typically the type you use with <bpt id="2">&lt;code&gt;</bpt>ICollector<ept id="2">&lt;/code&gt;</ept> derives from <bpt id="4">&lt;code&gt;</bpt>TableEntity<ept id="4">&lt;/code&gt;</ept> or implements <bpt id="6">&lt;code&gt;</bpt>ITableEntity<ept id="6">&lt;/code&gt;</ept>, but it doesn't have to.</source>
            <target state="new">Typically the type you use with <bpt id="2">&lt;code&gt;</bpt>ICollector<ept id="2">&lt;/code&gt;</ept> derives from <bpt id="4">&lt;code&gt;</bpt>TableEntity<ept id="4">&lt;/code&gt;</ept> or implements <bpt id="6">&lt;code&gt;</bpt>ITableEntity<ept id="6">&lt;/code&gt;</ept>, but it doesn't have to.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Either of the following <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> classes work with the code shown in the preceding <bpt id="4">&lt;code&gt;</bpt>Ingress<ept id="4">&lt;/code&gt;</ept> method.</source>
            <target state="new">Either of the following <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> classes work with the code shown in the preceding <bpt id="4">&lt;code&gt;</bpt>Ingress<ept id="4">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>If you want to work directly with the Azure storage API, you can add a <bpt id="2">&lt;code&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/code&gt;</ept> parameter to the method signature.</source>
            <target state="new">If you want to work directly with the Azure storage API, you can add a <bpt id="2">&lt;code&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/code&gt;</ept> parameter to the method signature.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Real-time monitoring</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Real-time monitoring</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Because data ingress functions often process large volumes of data, the WebJobs SDK dashboard provides real-time monitoring data.</source>
            <target state="new">Because data ingress functions often process large volumes of data, the WebJobs SDK dashboard provides real-time monitoring data.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Invocation Log<ept id="2">&lt;/strong&gt;</ept> section tells you if the function is still running.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Invocation Log<ept id="2">&lt;/strong&gt;</ept> section tells you if the function is still running.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Ingress function running<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Ingress function running<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Invocation Details<ept id="2">&lt;/strong&gt;</ept> page reports the function's progress (number of entities written) while it's running and gives you an opportunity to abort it.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Invocation Details<ept id="2">&lt;/strong&gt;</ept> page reports the function's progress (number of entities written) while it's running and gives you an opportunity to abort it.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Ingress function running<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Ingress function running<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>When the function finishes, the <bpt id="2">&lt;strong&gt;</bpt>Invocation Details<ept id="2">&lt;/strong&gt;</ept> page reports the number of rows written.</source>
            <target state="new">When the function finishes, the <bpt id="2">&lt;strong&gt;</bpt>Invocation Details<ept id="2">&lt;/strong&gt;</ept> page reports the number of rows written.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Ingress function finished<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Ingress function finished<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to read multiple entities from a table</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to read multiple entities from a table</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>To read a table, use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with an <bpt id="4">&lt;code&gt;</bpt>IQueryable&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> parameter where type <bpt id="6">&lt;code&gt;</bpt>T<ept id="6">&lt;/code&gt;</ept> derives from <bpt id="8">&lt;code&gt;</bpt>TableEntity<ept id="8">&lt;/code&gt;</ept> or implements <bpt id="10">&lt;code&gt;</bpt>ITableEntity<ept id="10">&lt;/code&gt;</ept>.</source>
            <target state="new">To read a table, use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with an <bpt id="4">&lt;code&gt;</bpt>IQueryable&lt;T&gt;<ept id="4">&lt;/code&gt;</ept> parameter where type <bpt id="6">&lt;code&gt;</bpt>T<ept id="6">&lt;/code&gt;</ept> derives from <bpt id="8">&lt;code&gt;</bpt>TableEntity<ept id="8">&lt;/code&gt;</ept> or implements <bpt id="10">&lt;code&gt;</bpt>ITableEntity<ept id="10">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The following code sample reads and logs all rows from the <bpt id="2">&lt;code&gt;</bpt>Ingress<ept id="2">&lt;/code&gt;</ept> table:</source>
            <target state="new">The following code sample reads and logs all rows from the <bpt id="2">&lt;code&gt;</bpt>Ingress<ept id="2">&lt;/code&gt;</ept> table:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to read a single entity from a table</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to read a single entity from a table</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>There is a <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute constructor with two additional parameters that let you specify the partition key and row key when you want to bind to a single table entity.</source>
            <target state="new">There is a <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute constructor with two additional parameters that let you specify the partition key and row key when you want to bind to a single table entity.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The following code sample reads a table row for a <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> entity based on partition key and row key values received in a queue message:</source>
            <target state="new">The following code sample reads a table row for a <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> entity based on partition key and row key values received in a queue message:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> class in this example does not have to implement <bpt id="4">&lt;code&gt;</bpt>ITableEntity<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>Person<ept id="2">&lt;/code&gt;</ept> class in this example does not have to implement <bpt id="4">&lt;code&gt;</bpt>ITableEntity<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to use the .NET Storage API directly to work with a table</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> How to use the .NET Storage API directly to work with a table</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>You can also use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with a <bpt id="4">&lt;code&gt;</bpt>CloudTable<ept id="4">&lt;/code&gt;</ept> object for more flexibility in working with a table.</source>
            <target state="new">You can also use the <bpt id="2">&lt;code&gt;</bpt>Table<ept id="2">&lt;/code&gt;</ept> attribute with a <bpt id="4">&lt;code&gt;</bpt>CloudTable<ept id="4">&lt;/code&gt;</ept> object for more flexibility in working with a table.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>The following code sample uses a <bpt id="2">&lt;code&gt;</bpt>CloudTable<ept id="2">&lt;/code&gt;</ept> object to add a single entity to the <bpt id="4">&lt;em&gt;</bpt>Ingress<ept id="4">&lt;/em&gt;</ept> table.</source>
            <target state="new">The following code sample uses a <bpt id="2">&lt;code&gt;</bpt>CloudTable<ept id="2">&lt;/code&gt;</ept> object to add a single entity to the <bpt id="4">&lt;em&gt;</bpt>Ingress<ept id="4">&lt;/em&gt;</ept> table.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For more information about how to use the <bpt id="2">&lt;code&gt;</bpt>CloudTable<ept id="2">&lt;/code&gt;</ept> object, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>How to use Table Storage from .NET<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about how to use the <bpt id="2">&lt;code&gt;</bpt>CloudTable<ept id="2">&lt;/code&gt;</ept> object, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>How to use Table Storage from .NET<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Related topics covered by the queues how-to article</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Related topics covered by the queues how-to article</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>For information about how to handle table processing triggered by a queue message, or for WebJobs SDK scenarios not specific to table processing, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about how to handle table processing triggered by a queue message, or for WebJobs SDK scenarios not specific to table processing, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Topics covered in that article include the following:</source>
            <target state="new">Topics covered in that article include the following:</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Async functions</source>
            <target state="new">Async functions</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Multiple instances</source>
            <target state="new">Multiple instances</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Graceful shutdown</source>
            <target state="new">Graceful shutdown</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Use WebJobs SDK attributes in the body of a function</source>
            <target state="new">Use WebJobs SDK attributes in the body of a function</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Set the SDK connection strings in code</source>
            <target state="new">Set the SDK connection strings in code</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Set values for WebJobs SDK constructor parameters in code</source>
            <target state="new">Set values for WebJobs SDK constructor parameters in code</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Trigger a function manually</source>
            <target state="new">Trigger a function manually</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Write logs</source>
            <target state="new">Write logs</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Next steps</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> Next steps</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This guide has provided code samples that show how to handle common scenarios for working with Azure tables.</source>
            <target state="new">This guide has provided code samples that show how to handle common scenarios for working with Azure tables.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure WebJobs Recommended Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>