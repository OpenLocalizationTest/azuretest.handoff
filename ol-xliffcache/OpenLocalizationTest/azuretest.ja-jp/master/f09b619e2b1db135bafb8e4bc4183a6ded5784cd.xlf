<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:33:21 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f09b619e2b1db135bafb8e4bc4183a6ded5784cd</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Shard map management</source>
            <target state="new">Shard map management</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to use the ShardMapManager, elastic database client library</source>
            <target state="new">How to use the ShardMapManager, elastic database client library</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Shard map management</source>
            <target state="new">Shard map management</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>In a sharded database environment, a <bpt id="2">&lt;strong&gt;</bpt>shard map<ept id="2">&lt;/strong&gt;</ept> maintains information allowing an application to connect to the correct database based upon the value of the <bpt id="4">&lt;strong&gt;</bpt>sharding key<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In a sharded database environment, a <bpt id="2">&lt;strong&gt;</bpt>shard map<ept id="2">&lt;/strong&gt;</ept> maintains information allowing an application to connect to the correct database based upon the value of the <bpt id="4">&lt;strong&gt;</bpt>sharding key<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Understanding how these maps are constructed is crucial to managing shards with the elastic database client library.</source>
            <target state="new">Understanding how these maps are constructed is crucial to managing shards with the elastic database client library.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Shard maps and shard mappings</source>
            <target state="new">Shard maps and shard mappings</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Supported .Net types for sharding keys</source>
            <target state="new">Supported .Net types for sharding keys</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Elastic Scale support the following .Net Framework types as sharding keys:</source>
            <target state="new">Elastic Scale support the following .Net Framework types as sharding keys:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>integer</source>
            <target state="new">integer</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>long</source>
            <target state="new">long</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>guid</source>
            <target state="new">guid</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>byte[]</source>
            <target state="new">byte[]</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>datetime</source>
            <target state="new">datetime</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>timespan</source>
            <target state="new">timespan</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>datetimeoffset</source>
            <target state="new">datetimeoffset</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>List and range shard maps</source>
            <target state="new">List and range shard maps</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Shard maps can be constructed using <bpt id="2">&lt;strong&gt;</bpt>lists of individual sharding key values<ept id="2">&lt;/strong&gt;</ept>, or they can be constructed using <bpt id="4">&lt;strong&gt;</bpt>ranges of sharding key values<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Shard maps can be constructed using <bpt id="2">&lt;strong&gt;</bpt>lists of individual sharding key values<ept id="2">&lt;/strong&gt;</ept>, or they can be constructed using <bpt id="4">&lt;strong&gt;</bpt>ranges of sharding key values<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>List shard maps</source>
            <target state="new">List shard maps</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Shards<ept id="1">&lt;/strong&gt;</ept> contain <bpt id="3">&lt;strong&gt;</bpt>shardlets<ept id="3">&lt;/strong&gt;</ept> and the mapping of shardlets to shards is maintained by a shard map.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Shards<ept id="1">&lt;/strong&gt;</ept> contain <bpt id="3">&lt;strong&gt;</bpt>shardlets<ept id="3">&lt;/strong&gt;</ept> and the mapping of shardlets to shards is maintained by a shard map.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>list shard map<ept id="2">&lt;/strong&gt;</ept> is an association between the individual key values that identify the shardlets and the databases that serve as shards.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>list shard map<ept id="2">&lt;/strong&gt;</ept> is an association between the individual key values that identify the shardlets and the databases that serve as shards.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>List mappings<ept id="1">&lt;/strong&gt;</ept> are explicit (for example, key 1 maps to Database A) and different key values can be mapped to the same database (key values 3 and 6 both reference Database B).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>List mappings<ept id="1">&lt;/strong&gt;</ept> are explicit (for example, key 1 maps to Database A) and different key values can be mapped to the same database (key values 3 and 6 both reference Database B).</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Key</source>
            <target state="new">Key</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Shard Location</source>
            <target state="new">Shard Location</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>1</source>
            <target state="new">1</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Database_A</source>
            <target state="new">Database_A</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>3</source>
            <target state="new">3</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Database_B</source>
            <target state="new">Database_B</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>4</source>
            <target state="new">4</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Database_C</source>
            <target state="new">Database_C</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>6</source>
            <target state="new">6</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Database_B</source>
            <target state="new">Database_B</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>...</source>
            <target state="new">...</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>...</source>
            <target state="new">...</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Range shard maps</source>
            <target state="new">Range shard maps</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>In a <bpt id="2">&lt;strong&gt;</bpt>range shard map<ept id="2">&lt;/strong&gt;</ept>, the key range is described by a pair <bpt id="4">&lt;strong&gt;</bpt>[Low Value, High Value)<ept id="4">&lt;/strong&gt;</ept> where the <bpt id="6">&lt;em&gt;</bpt>Low Value<ept id="6">&lt;/em&gt;</ept> is the minimum key in the range, and the <bpt id="8">&lt;em&gt;</bpt>High Value<ept id="8">&lt;/em&gt;</ept> is the first value higher than the range.</source>
            <target state="new">In a <bpt id="2">&lt;strong&gt;</bpt>range shard map<ept id="2">&lt;/strong&gt;</ept>, the key range is described by a pair <bpt id="4">&lt;strong&gt;</bpt>[Low Value, High Value)<ept id="4">&lt;/strong&gt;</ept> where the <bpt id="6">&lt;em&gt;</bpt>Low Value<ept id="6">&lt;/em&gt;</ept> is the minimum key in the range, and the <bpt id="8">&lt;em&gt;</bpt>High Value<ept id="8">&lt;/em&gt;</ept> is the first value higher than the range.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>For example, <bpt id="2">&lt;strong&gt;</bpt>[0, 100)<ept id="2">&lt;/strong&gt;</ept> includes all integers greater than or equal 0 and less than 100.</source>
            <target state="new">For example, <bpt id="2">&lt;strong&gt;</bpt>[0, 100)<ept id="2">&lt;/strong&gt;</ept> includes all integers greater than or equal 0 and less than 100.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Note that multiple ranges can point to the same database, and disjoint ranges are supported (e.g., [100,200) and [400,600) both point to Database C in the example below.)</source>
            <target state="new">Note that multiple ranges can point to the same database, and disjoint ranges are supported (e.g., [100,200) and [400,600) both point to Database C in the example below.)</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Key</source>
            <target state="new">Key</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Shard Location</source>
            <target state="new">Shard Location</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>[1,50)</source>
            <target state="new">[1,50)</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Database_A</source>
            <target state="new">Database_A</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>[50,100)</source>
            <target state="new">[50,100)</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Database_B</source>
            <target state="new">Database_B</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>[100,200)</source>
            <target state="new">[100,200)</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Database_C</source>
            <target state="new">Database_C</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>[400,600)</source>
            <target state="new">[400,600)</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Database_C</source>
            <target state="new">Database_C</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>...</source>
            <target state="new">...</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>...</source>
            <target state="new">...</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Each of the tables shown above is a conceptual example of a <bpt id="2">&lt;strong&gt;</bpt>ShardMap<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">Each of the tables shown above is a conceptual example of a <bpt id="2">&lt;strong&gt;</bpt>ShardMap<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Each row is a simplified example of an individual <bpt id="2">&lt;strong&gt;</bpt>PointMapping<ept id="2">&lt;/strong&gt;</ept> (for the list shard map) or <bpt id="4">&lt;strong&gt;</bpt>RangeMapping<ept id="4">&lt;/strong&gt;</ept> (for the range shard map) object.</source>
            <target state="new">Each row is a simplified example of an individual <bpt id="2">&lt;strong&gt;</bpt>PointMapping<ept id="2">&lt;/strong&gt;</ept> (for the list shard map) or <bpt id="4">&lt;strong&gt;</bpt>RangeMapping<ept id="4">&lt;/strong&gt;</ept> (for the range shard map) object.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Shard map manager</source>
            <target state="new">Shard map manager</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>In the client library, the Shard Map Manager is a collection of shard maps.</source>
            <target state="new">In the client library, the Shard Map Manager is a collection of shard maps.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>The data managed by a <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> .Net object is kept in three places:</source>
            <target state="new">The data managed by a <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> .Net object is kept in three places:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Global Shard Map (GSM)<ept id="1">&lt;/strong&gt;</ept>: When you create a <bpt id="3">&lt;strong&gt;</bpt>ShardMapManager<ept id="3">&lt;/strong&gt;</ept>, you specify a database to serve as the repository for all of its shard maps and mappings.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Global Shard Map (GSM)<ept id="1">&lt;/strong&gt;</ept>: When you create a <bpt id="3">&lt;strong&gt;</bpt>ShardMapManager<ept id="3">&lt;/strong&gt;</ept>, you specify a database to serve as the repository for all of its shard maps and mappings.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Special tables and stored procedures are automatically created to manage the information.</source>
            <target state="new">Special tables and stored procedures are automatically created to manage the information.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>This is typically a small database and lightly accessed, but it should not be used for other needs of the application.</source>
            <target state="new">This is typically a small database and lightly accessed, but it should not be used for other needs of the application.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>The tables are in a special schema named <bpt id="2">&lt;strong&gt;</bpt>__ShardManagement<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The tables are in a special schema named <bpt id="2">&lt;strong&gt;</bpt>__ShardManagement<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Local Shard Map (LSM)<ept id="1">&lt;/strong&gt;</ept>: Every database that you specify to be a shard within a shard map will be modified to contain several small tables and special stored procedures that contain and manage shard map information specific to that shard.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Local Shard Map (LSM)<ept id="1">&lt;/strong&gt;</ept>: Every database that you specify to be a shard within a shard map will be modified to contain several small tables and special stored procedures that contain and manage shard map information specific to that shard.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>This information is redundant to the information in the GSM, but it allows the application to validate cached shard map information without placing any load on the GSM; the application uses the LSM to determine if a cached mapping is still valid.</source>
            <target state="new">This information is redundant to the information in the GSM, but it allows the application to validate cached shard map information without placing any load on the GSM; the application uses the LSM to determine if a cached mapping is still valid.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The tables corresponding to the LSM on each shard are in schema <bpt id="2">&lt;strong&gt;</bpt>__ShardManagement<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The tables corresponding to the LSM on each shard are in schema <bpt id="2">&lt;strong&gt;</bpt>__ShardManagement<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Application cache<ept id="1">&lt;/strong&gt;</ept>: Each application instance accessing a <bpt id="3">&lt;strong&gt;</bpt>ShardMapManager<ept id="3">&lt;/strong&gt;</ept> object maintains a local in-memory cache of its mappings.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Application cache<ept id="1">&lt;/strong&gt;</ept>: Each application instance accessing a <bpt id="3">&lt;strong&gt;</bpt>ShardMapManager<ept id="3">&lt;/strong&gt;</ept> object maintains a local in-memory cache of its mappings.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>It stores routing information that has recently been retrieved.</source>
            <target state="new">It stores routing information that has recently been retrieved.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Constructing a ShardMapManager</source>
            <target state="new">Constructing a ShardMapManager</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> object in the application is instantiated using a factory pattern.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> object in the application is instantiated using a factory pattern.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>ShardMapManagerFactory.GetSqlShardMapManager<ept id="2">&lt;/strong&gt;</ept> method takes credentials (including the server name and database name holding the GSM) in the form of a <bpt id="4">&lt;strong&gt;</bpt>ConnectionString<ept id="4">&lt;/strong&gt;</ept> and returns an instance of a <bpt id="6">&lt;strong&gt;</bpt>ShardMapManager<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>ShardMapManagerFactory.GetSqlShardMapManager<ept id="2">&lt;/strong&gt;</ept> method takes credentials (including the server name and database name holding the GSM) in the form of a <bpt id="4">&lt;strong&gt;</bpt>ConnectionString<ept id="4">&lt;/strong&gt;</ept> and returns an instance of a <bpt id="6">&lt;strong&gt;</bpt>ShardMapManager<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> should be instantiated only once per app domain, within the initialization code for an application.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> should be instantiated only once per app domain, within the initialization code for an application.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> can contain any number of shard maps.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> can contain any number of shard maps.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>While a single shard map may be sufficient for many applications, there are times when different sets of databases are used for different schema or for unique purposes, and in those cases multiple shard maps may be preferable.</source>
            <target state="new">While a single shard map may be sufficient for many applications, there are times when different sets of databases are used for different schema or for unique purposes, and in those cases multiple shard maps may be preferable.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>In this code, an application tries to open an existing <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In this code, an application tries to open an existing <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>If objects representing a Global <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> (GSM) do not yet exist inside the database, the client library creates them there.</source>
            <target state="new">If objects representing a Global <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> (GSM) do not yet exist inside the database, the client library creates them there.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Shard map administration credentials</source>
            <target state="new">Shard map administration credentials</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Typically, applications that administer and manipulate shard maps are different from those that use the shard maps to route connections.</source>
            <target state="new">Typically, applications that administer and manipulate shard maps are different from those that use the shard maps to route connections.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>For applications that administer shard maps (adding or changing shards, shard maps, shard mappings, etc.)</source>
            <target state="new">For applications that administer shard maps (adding or changing shards, shard maps, shard mappings, etc.)</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>you must instantiate the <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> using <bpt id="4">&lt;strong&gt;</bpt>credentials that have read/write privileges on both the GSM database and on each database that serves as a shard<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">you must instantiate the <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> using <bpt id="4">&lt;strong&gt;</bpt>credentials that have read/write privileges on both the GSM database and on each database that serves as a shard<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>The credentials must allow for writes against the tables in both the GSM and LSM as shard map information is entered or changed, as well as for creating LSM tables on new shards.</source>
            <target state="new">The credentials must allow for writes against the tables in both the GSM and LSM as shard map information is entered or changed, as well as for creating LSM tables on new shards.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Only metadata affected</source>
            <target state="new">Only metadata affected</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Methods used for populating or changing the <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> data do not alter the user data stored in the shards themselves.</source>
            <target state="new">Methods used for populating or changing the <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> data do not alter the user data stored in the shards themselves.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>For example, methods such as <bpt id="2">&lt;strong&gt;</bpt>CreateShard<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>DeleteShard<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>UpdateMapping<ept id="6">&lt;/strong&gt;</ept>, etc. affect the shard map metadata only.</source>
            <target state="new">For example, methods such as <bpt id="2">&lt;strong&gt;</bpt>CreateShard<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>DeleteShard<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>UpdateMapping<ept id="6">&lt;/strong&gt;</ept>, etc. affect the shard map metadata only.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>They do not remove, add, or alter user data contained in the shards.</source>
            <target state="new">They do not remove, add, or alter user data contained in the shards.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Instead, these methods are designed to be used in conjunction with separate operations you perform to create or remove actual databases, or that move rows from one shard to another to rebalance a sharded environment.</source>
            <target state="new">Instead, these methods are designed to be used in conjunction with separate operations you perform to create or remove actual databases, or that move rows from one shard to another to rebalance a sharded environment.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>(The <bpt id="2">&lt;strong&gt;</bpt>split-merge<ept id="2">&lt;/strong&gt;</ept> tool included with elastic database tools makes use of these APIs along with orchestrating actual data movement between shards.)</source>
            <target state="new">(The <bpt id="2">&lt;strong&gt;</bpt>split-merge<ept id="2">&lt;/strong&gt;</ept> tool included with elastic database tools makes use of these APIs along with orchestrating actual data movement between shards.)</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Populating a shard map: example</source>
            <target state="new">Populating a shard map: example</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>An example sequence of operations to populate a specific shard map is shown below.</source>
            <target state="new">An example sequence of operations to populate a specific shard map is shown below.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>The code performs these steps:</source>
            <target state="new">The code performs these steps:</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>A new shard map is created within a shard map manager.</source>
            <target state="new">A new shard map is created within a shard map manager.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The metadata for two different shards is added to the shard map.</source>
            <target state="new">The metadata for two different shards is added to the shard map.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>A variety of key range mappings are added, and the overall contents of the shard map are displayed.</source>
            <target state="new">A variety of key range mappings are added, and the overall contents of the shard map are displayed.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>The code is written in a way that the entire method can be safely rerun in case an unexpected error is encountered – each request tests whether a shard or mapping already exists, before attempting to create it.</source>
            <target state="new">The code is written in a way that the entire method can be safely rerun in case an unexpected error is encountered – each request tests whether a shard or mapping already exists, before attempting to create it.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>The code below assumes that databases named <bpt id="2">&lt;strong&gt;</bpt>sample_shard_0<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>sample_shard_1<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>sample_shard_2<ept id="6">&lt;/strong&gt;</ept> have already been created in the server referenced by string <bpt id="8">&lt;strong&gt;</bpt>shardServer<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">The code below assumes that databases named <bpt id="2">&lt;strong&gt;</bpt>sample_shard_0<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>sample_shard_1<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>sample_shard_2<ept id="6">&lt;/strong&gt;</ept> have already been created in the server referenced by string <bpt id="8">&lt;strong&gt;</bpt>shardServer<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>As an alternative you can use PowerShell scripts to achieve the same result.</source>
            <target state="new">As an alternative you can use PowerShell scripts to achieve the same result.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Once shard maps have been populated, data access applications can be created or adapted to work with the maps.</source>
            <target state="new">Once shard maps have been populated, data access applications can be created or adapted to work with the maps.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Populating or manipulating the maps need not occur again until <bpt id="2">&lt;strong&gt;</bpt>map layout<ept id="2">&lt;/strong&gt;</ept> needs to change.</source>
            <target state="new">Populating or manipulating the maps need not occur again until <bpt id="2">&lt;strong&gt;</bpt>map layout<ept id="2">&lt;/strong&gt;</ept> needs to change.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Data dependent routing</source>
            <target state="new">Data dependent routing</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Most use of the shard map manager will come from the applications that require database connections to perform the app-specific data operations.</source>
            <target state="new">Most use of the shard map manager will come from the applications that require database connections to perform the app-specific data operations.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>In a sharded application, those connections now must be associated with the correct target database.</source>
            <target state="new">In a sharded application, those connections now must be associated with the correct target database.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>This is known as <bpt id="2">&lt;strong&gt;</bpt>Data Dependent Routing<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">This is known as <bpt id="2">&lt;strong&gt;</bpt>Data Dependent Routing<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>For these applications, instantiate a shard map manager object from the factory using credentials that have read-only access on the GSM database.</source>
            <target state="new">For these applications, instantiate a shard map manager object from the factory using credentials that have read-only access on the GSM database.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Individual requests for connections will later supply credentials necessary for connecting to the appropriate shard database.</source>
            <target state="new">Individual requests for connections will later supply credentials necessary for connecting to the appropriate shard database.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Note that these applications (using <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> opened with read-only credentials) will be unable to make changes to the maps or mappings.</source>
            <target state="new">Note that these applications (using <bpt id="2">&lt;strong&gt;</bpt>ShardMapManager<ept id="2">&lt;/strong&gt;</ept> opened with read-only credentials) will be unable to make changes to the maps or mappings.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>For those needs, create administrative-specific applications or PowerShell scripts that supply higher-privileged credentials as discussed earlier.</source>
            <target state="new">For those needs, create administrative-specific applications or PowerShell scripts that supply higher-privileged credentials as discussed earlier.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>For more details, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data dependent routing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more details, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data dependent routing<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Modifying a shard map</source>
            <target state="new">Modifying a shard map</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>A shard map can be changed in different ways.</source>
            <target state="new">A shard map can be changed in different ways.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>All of the following methods modify the metadata describing the shards and their mappings, but they do not physically modify data within the shards, nor do they create or delete the actual databases.</source>
            <target state="new">All of the following methods modify the metadata describing the shards and their mappings, but they do not physically modify data within the shards, nor do they create or delete the actual databases.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Some of the operations on the shard map described below may need to be coordinated with administrative actions that physically move data or that add and remove databases serving as shards.</source>
            <target state="new">Some of the operations on the shard map described below may need to be coordinated with administrative actions that physically move data or that add and remove databases serving as shards.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>These methods work together as the building blocks available for modifying the overall distribution of data in your sharded database environment.</source>
            <target state="new">These methods work together as the building blocks available for modifying the overall distribution of data in your sharded database environment.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>To add or remove shards: use <bpt id="2">&lt;strong&gt;</bpt>CreateShard<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>DeleteShard<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">To add or remove shards: use <bpt id="2">&lt;strong&gt;</bpt>CreateShard<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>DeleteShard<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>The server and database representing the target shard must already exist for these operations to execute.</source>
            <target state="new">The server and database representing the target shard must already exist for these operations to execute.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>These methods do not have any impact on the databases themselves, only on metadata in the shard map.</source>
            <target state="new">These methods do not have any impact on the databases themselves, only on metadata in the shard map.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>To create or remove points or ranges that are mapped to the shards: use <bpt id="2">&lt;strong&gt;</bpt>CreateRangeMapping<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>DeleteMapping<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>CreatePointMapping<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">To create or remove points or ranges that are mapped to the shards: use <bpt id="2">&lt;strong&gt;</bpt>CreateRangeMapping<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>DeleteMapping<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>CreatePointMapping<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Many different points or ranges can be mapped to the same shard.</source>
            <target state="new">Many different points or ranges can be mapped to the same shard.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>These methods only affect metadata – they do not affect any data that may already be present in shards.</source>
            <target state="new">These methods only affect metadata – they do not affect any data that may already be present in shards.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>If data needs to be removed from the database in order to be consistent with <bpt id="2">&lt;strong&gt;</bpt>DeleteMapping<ept id="2">&lt;/strong&gt;</ept> operations, you will need to perform those operations separately but in conjunction with using these methods.</source>
            <target state="new">If data needs to be removed from the database in order to be consistent with <bpt id="2">&lt;strong&gt;</bpt>DeleteMapping<ept id="2">&lt;/strong&gt;</ept> operations, you will need to perform those operations separately but in conjunction with using these methods.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>To split existing ranges into two, or merge adjacent ranges into one: use <bpt id="2">&lt;strong&gt;</bpt>SplitMapping<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>MergeMappings<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">To split existing ranges into two, or merge adjacent ranges into one: use <bpt id="2">&lt;strong&gt;</bpt>SplitMapping<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>MergeMappings<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>Note that split and merge operations <bpt id="2">&lt;strong&gt;</bpt>do not change the shard to which key values are mapped<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Note that split and merge operations <bpt id="2">&lt;strong&gt;</bpt>do not change the shard to which key values are mapped<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>A split breaks an existing range into two parts, but leaves both as mapped to the same shard.</source>
            <target state="new">A split breaks an existing range into two parts, but leaves both as mapped to the same shard.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>A merge operates on two adjacent ranges that are already mapped to the same shard, coalescing them into a single range.</source>
            <target state="new">A merge operates on two adjacent ranges that are already mapped to the same shard, coalescing them into a single range.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>The movement of points or ranges themselves between shards needs to be coordinated by using <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> in conjunction with actual data movement.</source>
            <target state="new">The movement of points or ranges themselves between shards needs to be coordinated by using <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> in conjunction with actual data movement.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>You can use the <bpt id="2">&lt;strong&gt;</bpt>Split/Merge<ept id="2">&lt;/strong&gt;</ept> service that is part of elastic database tools to coordinate shard map changes with data movement, when movement is needed.</source>
            <target state="new">You can use the <bpt id="2">&lt;strong&gt;</bpt>Split/Merge<ept id="2">&lt;/strong&gt;</ept> service that is part of elastic database tools to coordinate shard map changes with data movement, when movement is needed.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>To re-map (or move) individual points or ranges to different shards: use <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To re-map (or move) individual points or ranges to different shards: use <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Since data may need to be moved from one shard to another in order to be consistent with <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> operations, you will need to perform that movement separately but in conjunction with using these methods.</source>
            <target state="new">Since data may need to be moved from one shard to another in order to be consistent with <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> operations, you will need to perform that movement separately but in conjunction with using these methods.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>To take mappings online and offline: use <bpt id="2">&lt;strong&gt;</bpt>MarkMappingOffline<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>MarkMappingOnline<ept id="4">&lt;/strong&gt;</ept> to control the online state of a mapping.</source>
            <target state="new">To take mappings online and offline: use <bpt id="2">&lt;strong&gt;</bpt>MarkMappingOffline<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>MarkMappingOnline<ept id="4">&lt;/strong&gt;</ept> to control the online state of a mapping.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Certain operations on shard mappings are only allowed when a mapping is in an “offline” state, including <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>DeleteMapping<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Certain operations on shard mappings are only allowed when a mapping is in an “offline” state, including <bpt id="2">&lt;strong&gt;</bpt>UpdateMapping<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>DeleteMapping<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>When a mapping is offline, a data-dependent request based on a key included in that mapping will return an error.</source>
            <target state="new">When a mapping is offline, a data-dependent request based on a key included in that mapping will return an error.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>In addition, when a range is first taken offline, all connections to the affected shard are automatically killed in order to prevent inconsistent or incomplete results for queries directed against ranges being changed.</source>
            <target state="new">In addition, when a range is first taken offline, all connections to the affected shard are automatically killed in order to prevent inconsistent or incomplete results for queries directed against ranges being changed.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Mappings are immutable objects in .Net.</source>
            <target state="new">Mappings are immutable objects in .Net.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>All of the methods above that change mappings also invalidate any references to them in your code.</source>
            <target state="new">All of the methods above that change mappings also invalidate any references to them in your code.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>To make it easier to perform sequences of operations that change a mapping’s state, all of the methods that change a mapping return a new mapping reference, so operations can be chained.</source>
            <target state="new">To make it easier to perform sequences of operations that change a mapping’s state, all of the methods that change a mapping return a new mapping reference, so operations can be chained.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>For example, to delete an existing mapping in shardmap sm that contains the key 25, you can execute the following:</source>
            <target state="new">For example, to delete an existing mapping in shardmap sm that contains the key 25, you can execute the following:</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>Adding a shard</source>
            <target state="new">Adding a shard</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Applications often need to simply add new shards to handle data that is expected from new keys or key ranges, for a shard map that already exists.</source>
            <target state="new">Applications often need to simply add new shards to handle data that is expected from new keys or key ranges, for a shard map that already exists.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>For example, an application sharded by Tenant ID may need to provision a new shard for a new tenant, or data sharded monthly may need a new shard provisioned before the start of each new month.</source>
            <target state="new">For example, an application sharded by Tenant ID may need to provision a new shard for a new tenant, or data sharded monthly may need a new shard provisioned before the start of each new month.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>If the new range of key values is not already part of an existing mapping and no data movement is necessary, it is very simple to add the new shard and associate the new key or range to that shard.</source>
            <target state="new">If the new range of key values is not already part of an existing mapping and no data movement is necessary, it is very simple to add the new shard and associate the new key or range to that shard.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>For details on adding new shards, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Adding a new shard<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For details on adding new shards, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Adding a new shard<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>For scenarios that require data movement, however, the split-merge tool is needed to orchestrate the data movement between shards in combination with the necessary shard map updates.</source>
            <target state="new">For scenarios that require data movement, however, the split-merge tool is needed to orchestrate the data movement between shards in combination with the necessary shard map updates.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>For details on using the split-merge yool, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Overview of split-merge<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For details on using the split-merge yool, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Overview of split-merge<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/elastic-scale-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/elastic-scale-include.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>