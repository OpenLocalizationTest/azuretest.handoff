<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:35:43 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3ebd91e0d630e77b85293b271ca1768b64f6292</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Azure Blob storage from Java | Microsoft Azure</source>
            <target state="new">How to use Azure Blob storage from Java | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Blob storage to upload, download, list, and delete blob content. Samples written in Java.</source>
            <target state="new">Learn how to use Azure Blob storage to upload, download, list, and delete blob content. Samples written in Java.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Blob storage from Java</source>
            <target state="new">How to use Blob storage from Java</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-blob-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-blob-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This article will show you how to perform common scenarios using the Microsoft Azure Blob storage.</source>
            <target state="new">This article will show you how to perform common scenarios using the Microsoft Azure Blob storage.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The samples are written in Java and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The samples are written in Java and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>uploading<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>listing<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>downloading<ept id="6">&lt;/strong&gt;</ept>, and <bpt id="8">&lt;strong&gt;</bpt>deleting<ept id="8">&lt;/strong&gt;</ept> blobs.</source>
            <target state="new">The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>uploading<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>listing<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>downloading<ept id="6">&lt;/strong&gt;</ept>, and <bpt id="8">&lt;strong&gt;</bpt>deleting<ept id="8">&lt;/strong&gt;</ept> blobs.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For more information on blobs, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next Steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information on blobs, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next Steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>An SDK is available for developers who are using Azure Storage on Android devices.</source>
            <target state="new">An SDK is available for developers who are using Azure Storage on Android devices.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Android[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Android[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-blob-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-blob-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Create a Java application</source>
            <target state="new">Create a Java application</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In this article, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</source>
            <target state="new">In this article, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>To do so, you will need to install the Java Development Kit (JDK) and create an Azure Storage account in your Azure subscription.</source>
            <target state="new">To do so, you will need to install the Java Development Kit (JDK) and create an Azure Storage account in your Azure subscription.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub.</source>
            <target state="new">Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</source>
            <target state="new">If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</source>
            <target state="new">Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Configure your application to access Blob storage</source>
            <target state="new">Configure your application to access Blob storage</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Add the following import statements to the top of the Java file where you want to use the Azure Storage APIs to access blobs.</source>
            <target state="new">Add the following import statements to the top of the Java file where you want to use the Azure Storage APIs to access blobs.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Set up an Azure Storage connection string</source>
            <target state="new">Set up an Azure Storage connection string</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>An Azure Storage client uses a storage connection string to store</source>
            <target state="new">An Azure Storage client uses a storage connection string to store</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>endpoints and credentials for accessing data management services.</source>
            <target state="new">endpoints and credentials for accessing data management services.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Azure portal for the <bpt id="2">&lt;em&gt;</bpt>AccountName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>AccountKey<ept id="4">&lt;/em&gt;</ept> values.</source>
            <target state="new">When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Azure portal for the <bpt id="2">&lt;em&gt;</bpt>AccountName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>AccountKey<ept id="4">&lt;/em&gt;</ept> values.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The following example shows how you can declare a static field to hold the connection string.</source>
            <target state="new">The following example shows how you can declare a static field to hold the connection string.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="2">&lt;em&gt;</bpt>ServiceConfiguration.cscfg<ept id="2">&lt;/em&gt;</ept>, and can be accessed with a call to the <bpt id="4">&lt;strong&gt;</bpt>RoleEnvironment.getConfigurationSettings<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="2">&lt;em&gt;</bpt>ServiceConfiguration.cscfg<ept id="2">&lt;/em&gt;</ept>, and can be accessed with a call to the <bpt id="4">&lt;strong&gt;</bpt>RoleEnvironment.getConfigurationSettings<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The followng example gets the connection string from a <bpt id="2">&lt;strong&gt;</bpt>Setting<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;em&gt;</bpt>StorageConnectionString<ept id="4">&lt;/em&gt;</ept> in the service configuration file.</source>
            <target state="new">The followng example gets the connection string from a <bpt id="2">&lt;strong&gt;</bpt>Setting<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;em&gt;</bpt>StorageConnectionString<ept id="4">&lt;/em&gt;</ept> in the service configuration file.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The following samples assume that you have used one of these two methods to get the storage connection string.</source>
            <target state="new">The following samples assume that you have used one of these two methods to get the storage connection string.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Create a container</source>
            <target state="new">Create a container</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for containers and blobs.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for containers and blobs.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>There are additional ways to create <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> objects; for more information, see <bpt id="4">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].</source>
            <target state="new">There are additional ways to create <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> objects; for more information, see <bpt id="4">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-container-naming-rules-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-container-naming-rules-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the container you want to use.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>CloudBlobClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the container you want to use.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>You can create the container if it doesn't exist with the <bpt id="2">&lt;strong&gt;</bpt>createIfNotExists<ept id="2">&lt;/strong&gt;</ept> method, which will otherwise return the existing container.</source>
            <target state="new">You can create the container if it doesn't exist with the <bpt id="2">&lt;strong&gt;</bpt>createIfNotExists<ept id="2">&lt;/strong&gt;</ept> method, which will otherwise return the existing container.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</source>
            <target state="new">By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Optional: Configure a container for public access</source>
            <target state="new">Optional: Configure a container for public access</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>A container's permissions are configured for private access by default, but you can easily configure a container's permissions to allow public, read-only access for all users on the Internet:</source>
            <target state="new">A container's permissions are configured for private access by default, but you can easily configure a container's permissions to allow public, read-only access for all users on the Internet:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Upload a blob into a container</source>
            <target state="new">Upload a blob into a container</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>To upload a file to a blob, get a container reference and use it to get a blob reference.</source>
            <target state="new">To upload a file to a blob, get a container reference and use it to get a blob reference.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Once you have a blob reference, you can upload any stream by calling upload on the blob reference.</source>
            <target state="new">Once you have a blob reference, you can upload any stream by calling upload on the blob reference.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>This operation will create the blob if it doesn't exist, or overwrite it if it does.</source>
            <target state="new">This operation will create the blob if it doesn't exist, or overwrite it if it does.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The following code sample shows this, and assumes that the container has already been created.</source>
            <target state="new">The following code sample shows this, and assumes that the container has already been created.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>List the blobs in a container</source>
            <target state="new">List the blobs in a container</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>To list the blobs in a container, first get a container reference like you did to upload a blob.</source>
            <target state="new">To list the blobs in a container, first get a container reference like you did to upload a blob.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>You can use the container's <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> method with a <bpt id="4">&lt;strong&gt;</bpt>for<ept id="4">&lt;/strong&gt;</ept> loop.</source>
            <target state="new">You can use the container's <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> method with a <bpt id="4">&lt;strong&gt;</bpt>for<ept id="4">&lt;/strong&gt;</ept> loop.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The following code outputs the Uri of each blob in a container to the console.</source>
            <target state="new">The following code outputs the Uri of each blob in a container to the console.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>The blob service has the concept of directories within containers, as well.</source>
            <target state="new">The blob service has the concept of directories within containers, as well.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>This is so you can organize your blobs in a more folder-like structure.</source>
            <target state="new">This is so you can organize your blobs in a more folder-like structure.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For example, you could have a container named "photos", in which you might upload blobs named "rootphoto1", "2010/photo1", "2010/photo2", and "2011/photo1".</source>
            <target state="new">For example, you could have a container named "photos", in which you might upload blobs named "rootphoto1", "2010/photo1", "2010/photo2", and "2011/photo1".</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This would create the virtual directories "2010" and "2011" within the "photos" container.</source>
            <target state="new">This would create the virtual directories "2010" and "2011" within the "photos" container.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>When you call <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> on the "photos" container, the collection returned will contain <bpt id="4">&lt;strong&gt;</bpt>CloudBlobDirectory<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>CloudBlob<ept id="6">&lt;/strong&gt;</ept> objects representing the directories and blobs contained at the top level.</source>
            <target state="new">When you call <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> on the "photos" container, the collection returned will contain <bpt id="4">&lt;strong&gt;</bpt>CloudBlobDirectory<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>CloudBlob<ept id="6">&lt;/strong&gt;</ept> objects representing the directories and blobs contained at the top level.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>In this case, directories "2010" and "2011", as well as photo "rootphoto1" would be returned.</source>
            <target state="new">In this case, directories "2010" and "2011", as well as photo "rootphoto1" would be returned.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>You can use the <bpt id="2">&lt;strong&gt;</bpt>instanceof<ept id="2">&lt;/strong&gt;</ept> operator to distinguish these objects.</source>
            <target state="new">You can use the <bpt id="2">&lt;strong&gt;</bpt>instanceof<ept id="2">&lt;/strong&gt;</ept> operator to distinguish these objects.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Optionally, you can pass in parameters to the <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> method with</source>
            <target state="new">Optionally, you can pass in parameters to the <bpt id="2">&lt;strong&gt;</bpt>listBlobs<ept id="2">&lt;/strong&gt;</ept> method with</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>the <bpt id="2">&lt;strong&gt;</bpt>useFlatBlobListing<ept id="2">&lt;/strong&gt;</ept> parameter set to true.</source>
            <target state="new">the <bpt id="2">&lt;strong&gt;</bpt>useFlatBlobListing<ept id="2">&lt;/strong&gt;</ept> parameter set to true.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>This will result in</source>
            <target state="new">This will result in</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>every blob being returned, regardless of directory.</source>
            <target state="new">every blob being returned, regardless of directory.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>For more</source>
            <target state="new">For more</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>information, see <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.listBlobs<ept id="2">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].</source>
            <target state="new">information, see <bpt id="2">&lt;strong&gt;</bpt>CloudBlobContainer.listBlobs<ept id="2">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Download a blob</source>
            <target state="new">Download a blob</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>To download blobs, follow the same steps as you did for uploading a blob in order to get a blob reference.</source>
            <target state="new">To download blobs, follow the same steps as you did for uploading a blob in order to get a blob reference.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>In the uploading example, you called upload on the blob object.</source>
            <target state="new">In the uploading example, you called upload on the blob object.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>In the following example, call download to transfer the blob contents to a stream object such as a <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> that you can use to persist the blob to a local file.</source>
            <target state="new">In the following example, call download to transfer the blob contents to a stream object such as a <bpt id="2">&lt;strong&gt;</bpt>FileOutputStream<ept id="2">&lt;/strong&gt;</ept> that you can use to persist the blob to a local file.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Delete a blob</source>
            <target state="new">Delete a blob</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>To delete a blob, get a blob reference, and call <bpt id="2">&lt;strong&gt;</bpt>deleteIfExists<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To delete a blob, get a blob reference, and call <bpt id="2">&lt;strong&gt;</bpt>deleteIfExists<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Delete a blob container</source>
            <target state="new">Delete a blob container</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Finally, to delete a blob container, get a blob container reference, and</source>
            <target state="new">Finally, to delete a blob container, get a blob container reference, and</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>call <bpt id="2">&lt;strong&gt;</bpt>deleteIfExists<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">call <bpt id="2">&lt;strong&gt;</bpt>deleteIfExists<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Now that you've learned the basics of Blob storage, follow these links to learn about more complex storage tasks.</source>
            <target state="new">Now that you've learned the basics of Blob storage, follow these links to learn about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>