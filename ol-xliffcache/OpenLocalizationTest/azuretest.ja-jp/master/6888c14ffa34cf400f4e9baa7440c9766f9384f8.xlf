<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/21/2016 12:37:49 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6888c14ffa34cf400f4e9baa7440c9766f9384f8</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Enable remote debugging with continuous delivery</source>
            <target state="new">Enable remote debugging with continuous delivery</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to enable remote debugging when using continuous delivery to deploy to Azure</source>
            <target state="new">Learn how to enable remote debugging when using continuous delivery to deploy to Azure</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Enable remote debugging when using continuous delivery to publish to Azure</source>
            <target state="new">Enable remote debugging when using continuous delivery to publish to Azure</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>You can enable remote debugging in Azure when you use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>continuous delivery<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to publish to Azure by following these steps.</source>
            <target state="new">You can enable remote debugging in Azure when you use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>continuous delivery<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to publish to Azure by following these steps.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>In this topic:</source>
            <target state="new">In this topic:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Enabling remote debugging for cloud services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Enabling remote debugging for cloud services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Enabling remote debugging for virtual machines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Enabling remote debugging for virtual machines<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enabling remote debugging for cloud services</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enabling remote debugging for cloud services</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>On the build agent, set up the initial environment for Azure as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Command-Line Build for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">On the build agent, set up the initial environment for Azure as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Command-Line Build for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Because the remote debug runtime (msvsmon.exe) is required for the package, install the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Remote Tools for Visual Studio 2015 RC<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (or the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Remote Tools for Visual Studio 2013 Update 5 RC<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> if you’re using Visual Studio 2013).</source>
            <target state="new">Because the remote debug runtime (msvsmon.exe) is required for the package, install the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Remote Tools for Visual Studio 2015 RC<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (or the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Remote Tools for Visual Studio 2013 Update 5 RC<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> if you’re using Visual Studio 2013).</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>As an alternative, you can copy the remote debug binaries from a system that has Visual Studio installed.</source>
            <target state="new">As an alternative, you can copy the remote debug binaries from a system that has Visual Studio installed.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Create a certificate as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Service Certificate for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Create a certificate as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Service Certificate for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Keep the .pfx and RDP certificate thumbprint and upload the certificate to the target cloud service.</source>
            <target state="new">Keep the .pfx and RDP certificate thumbprint and upload the certificate to the target cloud service.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Use the following options in the MSBuild command line to build and package with remote debug enabled.</source>
            <target state="new">Use the following options in the MSBuild command line to build and package with remote debug enabled.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>(Substitute actual paths to your system and project files for the angle-bracketed items.)</source>
            <target state="new">(Substitute actual paths to your system and project files for the angle-bracketed items.)</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>VSX64RemoteDebuggerPath<ept id="1">&lt;/code&gt;</ept> is the path to the folder containing msvsmon.exe in the Remote Tools for Visual Studio.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>VSX64RemoteDebuggerPath<ept id="1">&lt;/code&gt;</ept> is the path to the folder containing msvsmon.exe in the Remote Tools for Visual Studio.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Publish to the target cloud service by using the package and .cscfg file generated in the previous step.</source>
            <target state="new">Publish to the target cloud service by using the package and .cscfg file generated in the previous step.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Import the certificate (.pfx file) to the machine that has Visual Studio with Azure SDK for .NET installed.</source>
            <target state="new">Import the certificate (.pfx file) to the machine that has Visual Studio with Azure SDK for .NET installed.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enabling remote debugging for virtual machines</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enabling remote debugging for virtual machines</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Create an Azure virtual machine.</source>
            <target state="new">Create an Azure virtual machine.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Virtual Machine Running Windows Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Creating Azure Virtual Machines in Visual Studio<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Virtual Machine Running Windows Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Creating Azure Virtual Machines in Visual Studio<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>On the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, view the virtual machine dashboard to see the virtual machine’s “RDP Certificate Thumbprint”.</source>
            <target state="new">On the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, view the virtual machine dashboard to see the virtual machine’s “RDP Certificate Thumbprint”.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This is used for the <bpt id="2">&lt;code&gt;</bpt>ServerThumbprint<ept id="2">&lt;/code&gt;</ept> value in the extension configuration.</source>
            <target state="new">This is used for the <bpt id="2">&lt;code&gt;</bpt>ServerThumbprint<ept id="2">&lt;/code&gt;</ept> value in the extension configuration.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Create a client certificate as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Service Certificate for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (keep the .pfx and RDP certificate thumbprint).</source>
            <target state="new">Create a client certificate as outlined in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Service Certificate for Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (keep the .pfx and RDP certificate thumbprint).</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Install <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Powershell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (version 0.7.4 or later) from the Microsoft Download Center.</source>
            <target state="new">Install <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Powershell<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (version 0.7.4 or later) from the Microsoft Download Center.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Run the following script to enable the RemoteDebug extension.</source>
            <target state="new">Run the following script to enable the RemoteDebug extension.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Replace the paths and personal data with your own, such as your subscription name, service name, and thumbprint.</source>
            <target state="new">Replace the paths and personal data with your own, such as your subscription name, service name, and thumbprint.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>(NOTE: This script is configured for Visual Studio 2015 RC.</source>
            <target state="new">(NOTE: This script is configured for Visual Studio 2015 RC.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>If you’re using Visual Studio 2013, use "RemoteDebugVS2013" for ReferenceName and ExtensionName.)</source>
            <target state="new">If you’re using Visual Studio 2013, use "RemoteDebugVS2013" for ReferenceName and ExtensionName.)</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>
 Add-AzureAccount

 Select-AzureSubscription "My Microsoft Subscription"

 $vm = Get-AzureVM -ServiceName "mytestvm1" -Name "mytestvm1"

 $endpoints = @(
 ,@{Name="RDConnVS2013"; PublicPort=30400; PrivatePort=30398}
 ,@{Name="RDFwdrVS2013"; PublicPort=31400; PrivatePort=31398}
 )

 foreach($endpoint in $endpoints)
 {
 Add-AzureEndpoint -VM $vm -Name $endpoint.Name -Protocol tcp -PublicPort $endpoint.PublicPort -LocalPort $endpoint.PrivatePort
 }

 $referenceName = "Microsoft.VisualStudio.WindowsAzure.RemoteDebug.RemoteDebugVS2015"
 $publisher = "Microsoft.VisualStudio.WindowsAzure.RemoteDebug"
 $extensionName = "RemoteDebugVS2015"
 $version = "1.*"
 $publicConfiguration = "</source>
            <target state="new">
 Add-AzureAccount

 Select-AzureSubscription "My Microsoft Subscription"

 $vm = Get-AzureVM -ServiceName "mytestvm1" -Name "mytestvm1"

 $endpoints = @(
 ,@{Name="RDConnVS2013"; PublicPort=30400; PrivatePort=30398}
 ,@{Name="RDFwdrVS2013"; PublicPort=31400; PrivatePort=31398}
 )

 foreach($endpoint in $endpoints)
 {
 Add-AzureEndpoint -VM $vm -Name $endpoint.Name -Protocol tcp -PublicPort $endpoint.PublicPort -LocalPort $endpoint.PrivatePort
 }

 $referenceName = "Microsoft.VisualStudio.WindowsAzure.RemoteDebug.RemoteDebugVS2015"
 $publisher = "Microsoft.VisualStudio.WindowsAzure.RemoteDebug"
 $extensionName = "RemoteDebugVS2015"
 $version = "1.*"
 $publicConfiguration = "</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>true</source>
            <target state="new">true</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>56D7D1B25B472268E332F7FC0C87286458BFB6B2</source>
            <target state="new">56D7D1B25B472268E332F7FC0C87286458BFB6B2</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>E7DCB00CB916C468CC3228261D6E4EE45C8ED3C6</source>
            <target state="new">E7DCB00CB916C468CC3228261D6E4EE45C8ED3C6</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>30398</source>
            <target state="new">30398</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>31398</source>
            <target state="new">31398</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>"

 $vm | Set-AzureVMExtension <bpt id="2">&lt;code&gt;</bpt>
 -ReferenceName $referenceName <ept id="2">&lt;/code&gt;</ept>
 -Publisher $publisher <bpt id="4">&lt;code&gt;</bpt>
 -ExtensionName $extensionName <ept id="4">&lt;/code&gt;</ept>
 -Version $version <bpt id="6">&lt;code&gt;</bpt>
 -PublicConfiguration $publicConfiguration

 foreach($extension in $vm.VM.ResourceExtensionReferences)
 {
 if(($extension.ReferenceName -eq $referenceName) <ept id="6">&lt;/code&gt;</ept>
 -and ($extension.Publisher -eq $publisher) <bpt id="8">&lt;code&gt;</bpt>
 -and ($extension.Name -eq $extensionName) <ept id="8">&lt;/code&gt;</ept>
 -and ($extension.Version -eq $version))
 {
 $extension.ResourceExtensionParameterValues[0].Key = 'config.txt'
 break
 }
 }

 $vm | Update-AzureVM
 </source>
            <target state="new">"

 $vm | Set-AzureVMExtension <bpt id="2">&lt;code&gt;</bpt>
 -ReferenceName $referenceName <ept id="2">&lt;/code&gt;</ept>
 -Publisher $publisher <bpt id="4">&lt;code&gt;</bpt>
 -ExtensionName $extensionName <ept id="4">&lt;/code&gt;</ept>
 -Version $version <bpt id="6">&lt;code&gt;</bpt>
 -PublicConfiguration $publicConfiguration

 foreach($extension in $vm.VM.ResourceExtensionReferences)
 {
 if(($extension.ReferenceName -eq $referenceName) <ept id="6">&lt;/code&gt;</ept>
 -and ($extension.Publisher -eq $publisher) <bpt id="8">&lt;code&gt;</bpt>
 -and ($extension.Name -eq $extensionName) <ept id="8">&lt;/code&gt;</ept>
 -and ($extension.Version -eq $version))
 {
 $extension.ResourceExtensionParameterValues[0].Key = 'config.txt'
 break
 }
 }

 $vm | Update-AzureVM
 </target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Import the certificate (.pfx) to the machine that has Visual Studio with Azure SDK for .NET installed.</source>
            <target state="new">Import the certificate (.pfx) to the machine that has Visual Studio with Azure SDK for .NET installed.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>