<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:25:44 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec0acde17b61ea884204e309e50f15522b175dbd</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Availability of Service Fabric Services</source>
            <target state="new">Availability of Service Fabric Services</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Describes fault detection, failover, recovery for services</source>
            <target state="new">Describes fault detection, failover, recovery for services</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Availability of Service Fabric services</source>
            <target state="new">Availability of Service Fabric services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Service Fabric services can be either stateful or stateless.</source>
            <target state="new">Service Fabric services can be either stateful or stateless.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This article gives an overview of how Service Fabric maintains availability of a service in the event of failures.</source>
            <target state="new">This article gives an overview of how Service Fabric maintains availability of a service in the event of failures.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Availability of Service Fabric stateless services</source>
            <target state="new">Availability of Service Fabric stateless services</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>A stateless service is an application service that does not have any <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>local persistent state<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">A stateless service is an application service that does not have any <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>local persistent state<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Creating a stateless service requires defining an instance count which is the number of instances of the stateless service that should be running in the cluster.</source>
            <target state="new">Creating a stateless service requires defining an instance count which is the number of instances of the stateless service that should be running in the cluster.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>These are the number of copies of the application logic that will be instantiated in the cluster.</source>
            <target state="new">These are the number of copies of the application logic that will be instantiated in the cluster.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Increasing the number of instances is the recommended way of scaling out stateless services.</source>
            <target state="new">Increasing the number of instances is the recommended way of scaling out stateless services.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>When a fault is detected on any instance of the stateless service a new instance is created on some other eligible node in the cluster.</source>
            <target state="new">When a fault is detected on any instance of the stateless service a new instance is created on some other eligible node in the cluster.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Availability of Service Fabric stateful services</source>
            <target state="new">Availability of Service Fabric stateful services</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>A Stateful Service has some state that is associated with it.</source>
            <target state="new">A Stateful Service has some state that is associated with it.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In Service Fabric, a stateful service is modeled as a set of replicas.</source>
            <target state="new">In Service Fabric, a stateful service is modeled as a set of replicas.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Each replica is an instance of the code of the service that has a copy of the state.</source>
            <target state="new">Each replica is an instance of the code of the service that has a copy of the state.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Read and Write operations are performed at one replica (called the Primary).</source>
            <target state="new">Read and Write operations are performed at one replica (called the Primary).</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Changes to state due to write operations are <bpt id="2">&lt;em&gt;</bpt>replicated<ept id="2">&lt;/em&gt;</ept> to multiple other replicas (called the Active Secondaries).</source>
            <target state="new">Changes to state due to write operations are <bpt id="2">&lt;em&gt;</bpt>replicated<ept id="2">&lt;/em&gt;</ept> to multiple other replicas (called the Active Secondaries).</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>This combination of Primary and Active Secondary replicas is the replica set of the service.</source>
            <target state="new">This combination of Primary and Active Secondary replicas is the replica set of the service.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>There can be only one Primary that is servicing read and write requests.</source>
            <target state="new">There can be only one Primary that is servicing read and write requests.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>There can be multiple Active Secondary replicas.</source>
            <target state="new">There can be multiple Active Secondary replicas.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The number of Active Secondary replicas is configurable and a higher number of replicas allows for tolerating a greater number of concurrent software and hardware failures.</source>
            <target state="new">The number of Active Secondary replicas is configurable and a higher number of replicas allows for tolerating a greater number of concurrent software and hardware failures.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In the event of a fault (when the Primary replica goes down), Service Fabric makes one of the Active Secondary replicas the new Primary replica.</source>
            <target state="new">In the event of a fault (when the Primary replica goes down), Service Fabric makes one of the Active Secondary replicas the new Primary replica.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This Active Secondary replica already has the updated version of the state (via <bpt id="2">&lt;em&gt;</bpt>replication<ept id="2">&lt;/em&gt;</ept>) and can continue processing further read and write operations.</source>
            <target state="new">This Active Secondary replica already has the updated version of the state (via <bpt id="2">&lt;em&gt;</bpt>replication<ept id="2">&lt;/em&gt;</ept>) and can continue processing further read and write operations.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This concept of a replica being a Primary or a Active Secondary is known as the replica role.</source>
            <target state="new">This concept of a replica being a Primary or a Active Secondary is known as the replica role.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Replica Roles</source>
            <target state="new">Replica Roles</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The Role of a replica is used to manage the lifecycle of the state being managed by that replica.</source>
            <target state="new">The Role of a replica is used to manage the lifecycle of the state being managed by that replica.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>A replica whose role is primary is servicing read requests.</source>
            <target state="new">A replica whose role is primary is servicing read requests.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>It is also servicing write requests by updating its state and replicating the changes to the Active Secondaries in its replica set.</source>
            <target state="new">It is also servicing write requests by updating its state and replicating the changes to the Active Secondaries in its replica set.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>An Active Secondary is responsible for receiving state changes that the Primary replica has replicated and updating its view of the state.</source>
            <target state="new">An Active Secondary is responsible for receiving state changes that the Primary replica has replicated and updating its view of the state.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Higher level programming models such as the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reliable Actors framework<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> abstract away the concept of replica role from the developer.</source>
            <target state="new">Higher level programming models such as the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reliable Actors framework<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> abstract away the concept of replica role from the developer.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For information on Service Fabric concepts, see the following:</source>
            <target state="new">For information on Service Fabric concepts, see the following:</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scalability of Service Fabric Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scalability of Service Fabric Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Service Fabric Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Service Fabric Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Defining and Managing State<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Defining and Managing State<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>