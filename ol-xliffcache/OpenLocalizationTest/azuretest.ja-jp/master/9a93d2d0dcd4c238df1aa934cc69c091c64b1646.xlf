<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="2/20/2016 9:30:04 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a93d2d0dcd4c238df1aa934cc69c091c64b1646</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Loops in SQL Data Warehouse | Microsoft Azure</source>
            <target state="new">Loops in SQL Data Warehouse | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Tips for Transact-SQL loops and replacing cursors in Azure SQL Data Warehouse for developing solutions.</source>
            <target state="new">Tips for Transact-SQL loops and replacing cursors in Azure SQL Data Warehouse for developing solutions.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Loops in SQL Data Warehouse</source>
            <target state="new">Loops in SQL Data Warehouse</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>SQL Data Warehouse supports the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WHILE[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> loop for repeatedly executing statement blocks.</source>
            <target state="new">SQL Data Warehouse supports the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>WHILE[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> loop for repeatedly executing statement blocks.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This will continue for as long as the specified conditions are true or until the code specifically terminates the loop using the <bpt id="2">&lt;code&gt;</bpt>BREAK<ept id="2">&lt;/code&gt;</ept> keyword.</source>
            <target state="new">This will continue for as long as the specified conditions are true or until the code specifically terminates the loop using the <bpt id="2">&lt;code&gt;</bpt>BREAK<ept id="2">&lt;/code&gt;</ept> keyword.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Loops are particularly useful for replacing cursors defined in SQL code.</source>
            <target state="new">Loops are particularly useful for replacing cursors defined in SQL code.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Fortunately, almost all cursors that are written in SQL code are of the fast forward, read only variety.</source>
            <target state="new">Fortunately, almost all cursors that are written in SQL code are of the fast forward, read only variety.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Therefore [WHILE] loops are a great alternative if you find yourself having to replace one.</source>
            <target state="new">Therefore [WHILE] loops are a great alternative if you find yourself having to replace one.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Leveraging loops and replacing cursors in SQL Data Warehouse</source>
            <target state="new">Leveraging loops and replacing cursors in SQL Data Warehouse</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>However, before diving in head first you should ask yourself the following question: "Could this cursor be re-written to use set based operations?".</source>
            <target state="new">However, before diving in head first you should ask yourself the following question: "Could this cursor be re-written to use set based operations?".</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In many cases the answer will be yes.</source>
            <target state="new">In many cases the answer will be yes.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>More often than not the best approach is to do just that.</source>
            <target state="new">More often than not the best approach is to do just that.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>A set based operation will often perform significantly faster than an iterative row by row approach.</source>
            <target state="new">A set based operation will often perform significantly faster than an iterative row by row approach.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Fast forward read only cursors can be easily replaced with a looping construct.</source>
            <target state="new">Fast forward read only cursors can be easily replaced with a looping construct.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Below is a simple example to convey the approach.</source>
            <target state="new">Below is a simple example to convey the approach.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The code example updates the statistics for every table in the database.</source>
            <target state="new">The code example updates the statistics for every table in the database.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>By iterating over the tables in the loop we are able to execute each command in sequence.</source>
            <target state="new">By iterating over the tables in the loop we are able to execute each command in sequence.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Firstly, create a temporary table containing a unique row number used to identify the individual statements:</source>
            <target state="new">Firstly, create a temporary table containing a unique row number used to identify the individual statements:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Secondly, initialize the variables required to perform the loop:</source>
            <target state="new">Secondly, initialize the variables required to perform the loop:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Now loop over statements executing them one at a time:</source>
            <target state="new">Now loop over statements executing them one at a time:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Finally drop the temporary table created in the first step</source>
            <target state="new">Finally drop the temporary table created in the first step</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more development tips, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>development overview[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>