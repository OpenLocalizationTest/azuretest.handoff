<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:20:55 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fa92056dc33a460068da7f4ea33c4f19d0083e6</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Service-side authorization of users in a .NET backend mobile service | Microsoft Azure</source>
            <target state="new">Service-side authorization of users in a .NET backend mobile service | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to restrict access for authorize users in a .NET backend mobile service</source>
            <target state="new">Learn how to restrict access for authorize users in a .NET backend mobile service</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Service-side authorization of users in Mobile Services</source>
            <target state="new">Service-side authorization of users in Mobile Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This topic shows you how to use server-side logic to authorize users.</source>
            <target state="new">This topic shows you how to use server-side logic to authorize users.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>In this tutorial, you modify table controllers, filter queries based on user IDs, and give users access to only their own data.</source>
            <target state="new">In this tutorial, you modify table controllers, filter queries based on user IDs, and give users access to only their own data.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Filtering a user's query results by the user ID is the most basic form of authorization.</source>
            <target state="new">Filtering a user's query results by the user ID is the most basic form of authorization.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Depending on your specific scenario, you might also want to create Users or Roles tables to track more detailed user authorization information, such as which endpoints a given user is permitted to access.</source>
            <target state="new">Depending on your specific scenario, you might also want to create Users or Roles tables to track more detailed user authorization information, such as which endpoints a given user is permitted to access.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This tutorial is based on the Mobile Services Quick Start and builds on the [Add Authentication to Existing Mobile Services App] tutorial.</source>
            <target state="new">This tutorial is based on the Mobile Services Quick Start and builds on the [Add Authentication to Existing Mobile Services App] tutorial.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Please complete [Add Authentication to Existing Mobile Services App] first.</source>
            <target state="new">Please complete [Add Authentication to Existing Mobile Services App] first.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Modify data access methods</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Modify data access methods</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In Visual Studio, open your mobile project, expand the DataObjects folder, and open <bpt id="2">&lt;strong&gt;</bpt>TodoItem.cs<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio, open your mobile project, expand the DataObjects folder, and open <bpt id="2">&lt;strong&gt;</bpt>TodoItem.cs<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TodoItem<ept id="2">&lt;/strong&gt;</ept> class defines the data object, and you need to add a <bpt id="4">&lt;strong&gt;</bpt>UserId<ept id="4">&lt;/strong&gt;</ept> property to use for filtering.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TodoItem<ept id="2">&lt;/strong&gt;</ept> class defines the data object, and you need to add a <bpt id="4">&lt;strong&gt;</bpt>UserId<ept id="4">&lt;/strong&gt;</ept> property to use for filtering.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Add the following new UserId property to the <bpt id="2">&lt;strong&gt;</bpt>TodoItem<ept id="2">&lt;/strong&gt;</ept> class:</source>
            <target state="new">Add the following new UserId property to the <bpt id="2">&lt;strong&gt;</bpt>TodoItem<ept id="2">&lt;/strong&gt;</ept> class:</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>To make this data model change and maintain existing data in the database, you must use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Code First Migrations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To make this data model change and maintain existing data in the database, you must use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Code First Migrations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In Visual Studio, expand the Controllers folder,  open <bpt id="2">&lt;strong&gt;</bpt>TodoItemController.cs<ept id="2">&lt;/strong&gt;</ept> and add the following using statement:</source>
            <target state="new">In Visual Studio, expand the Controllers folder,  open <bpt id="2">&lt;strong&gt;</bpt>TodoItemController.cs<ept id="2">&lt;/strong&gt;</ept> and add the following using statement:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Locate the <bpt id="2">&lt;strong&gt;</bpt>PostTodoItem<ept id="2">&lt;/strong&gt;</ept> method and add the following code at the beginning of the method.</source>
            <target state="new">Locate the <bpt id="2">&lt;strong&gt;</bpt>PostTodoItem<ept id="2">&lt;/strong&gt;</ept> method and add the following code at the beginning of the method.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>This code adds the user ID of the authenticated user to the item, before it is inserted into the TodoItem table.</source>
            <target state="new">This code adds the user ID of the authenticated user to the item, before it is inserted into the TodoItem table.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Locate the <bpt id="2">&lt;strong&gt;</bpt>GetAllTodoItems<ept id="2">&lt;/strong&gt;</ept> method and replace the existing <bpt id="4">&lt;strong&gt;</bpt>return<ept id="4">&lt;/strong&gt;</ept> statement with the following line of code:</source>
            <target state="new">Locate the <bpt id="2">&lt;strong&gt;</bpt>GetAllTodoItems<ept id="2">&lt;/strong&gt;</ept> method and replace the existing <bpt id="4">&lt;strong&gt;</bpt>return<ept id="4">&lt;/strong&gt;</ept> statement with the following line of code:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>This query filters the returned TodoItem objects so that each user only receives the items that they inserted.</source>
            <target state="new">This query filters the returned TodoItem objects so that each user only receives the items that they inserted.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Republish the mobile service project to Azure.</source>
            <target state="new">Republish the mobile service project to Azure.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Notice that when you now run your client-side app, although there are items already in the database from previous tutorials, no items are returned.</source>
            <target state="new">Notice that when you now run your client-side app, although there are items already in the database from previous tutorials, no items are returned.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This happens because previous items were inserted without the user ID column and now have null values.</source>
            <target state="new">This happens because previous items were inserted without the user ID column and now have null values.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>If you have additional login accounts, verify that users can only see their own data by closing and deleting the app and running it again.</source>
            <target state="new">If you have additional login accounts, verify that users can only see their own data by closing and deleting the app and running it again.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>When the login credentials dialog is displayed, enter a different login and verify that the items entered under the previous login are not displayed.</source>
            <target state="new">When the login credentials dialog is displayed, enter a different login and verify that the items entered under the previous login are not displayed.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>