<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 5:16:44 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">927b7d1083f3bdf6c0ff51a2ebc32c4dede428da</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Manage Service Bus with PowerShell</source>
            <target state="new">Manage Service Bus with PowerShell</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Manage Service Bus with PowerShell scripts instead of .NET</source>
            <target state="new">Manage Service Bus with PowerShell scripts instead of .NET</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Manage Service Bus with PowerShell</source>
            <target state="new">Manage Service Bus with PowerShell</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Microsoft Azure PowerShell is a scripting environment that you can use to control and automate the deployment and management of your workloads in Azure.</source>
            <target state="new">Microsoft Azure PowerShell is a scripting environment that you can use to control and automate the deployment and management of your workloads in Azure.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This article describes how to use PowerShell to provision and manage Service Bus entities such as namespaces, queues, and Event Hubs using a local Azure PowerShell console.</source>
            <target state="new">This article describes how to use PowerShell to provision and manage Service Bus entities such as namespaces, queues, and Event Hubs using a local Azure PowerShell console.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Prerequisites</source>
            <target state="new">Prerequisites</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Before you begin this article, you must have the following:</source>
            <target state="new">Before you begin this article, you must have the following:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>An Azure subscription.</source>
            <target state="new">An Azure subscription.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Azure is a subscription-based platform.</source>
            <target state="new">Azure is a subscription-based platform.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For more</source>
            <target state="new">For more</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>information about obtaining a subscription, see [Purchase Options],</source>
            <target state="new">information about obtaining a subscription, see [Purchase Options],</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>[Member Offers], or [Free Trial].</source>
            <target state="new">[Member Offers], or [Free Trial].</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>A computer with Azure PowerShell.</source>
            <target state="new">A computer with Azure PowerShell.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>For instructions, see [Install and configure Azure PowerShell].</source>
            <target state="new">For instructions, see [Install and configure Azure PowerShell].</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>A general understanding of PowerShell scripts, NuGet packages, and the .NET Framework.</source>
            <target state="new">A general understanding of PowerShell scripts, NuGet packages, and the .NET Framework.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Including a reference to the .NET assembly for Service Bus</source>
            <target state="new">Including a reference to the .NET assembly for Service Bus</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>There are a limited number of PowerShell cmdlets available for managing Service Bus.</source>
            <target state="new">There are a limited number of PowerShell cmdlets available for managing Service Bus.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To provision</source>
            <target state="new">To provision</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>entities that are not exposed through the existing cmdlets, you can use the .NET client for</source>
            <target state="new">entities that are not exposed through the existing cmdlets, you can use the .NET client for</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Service Bus in the [Service Bus NuGet package].</source>
            <target state="new">Service Bus in the [Service Bus NuGet package].</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>First, make sure that the script can locate the <bpt id="2">&lt;strong&gt;</bpt>Microsoft.ServiceBus.dll<ept id="2">&lt;/strong&gt;</ept> assembly, which is installed with the NuGet package.</source>
            <target state="new">First, make sure that the script can locate the <bpt id="2">&lt;strong&gt;</bpt>Microsoft.ServiceBus.dll<ept id="2">&lt;/strong&gt;</ept> assembly, which is installed with the NuGet package.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>In order to be flexible, the script performs these steps:</source>
            <target state="new">In order to be flexible, the script performs these steps:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Determines the path at which it was invoked.</source>
            <target state="new">Determines the path at which it was invoked.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Traverses the path until it finds a folder named <bpt id="2">&lt;code&gt;</bpt>packages<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Traverses the path until it finds a folder named <bpt id="2">&lt;code&gt;</bpt>packages<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>This folder is created when you install NuGet packages.</source>
            <target state="new">This folder is created when you install NuGet packages.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Recursively searches the <bpt id="2">&lt;code&gt;</bpt>packages<ept id="2">&lt;/code&gt;</ept> folder for an assembly named <bpt id="4">&lt;strong&gt;</bpt>Microsoft.ServiceBus.dll<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Recursively searches the <bpt id="2">&lt;code&gt;</bpt>packages<ept id="2">&lt;/code&gt;</ept> folder for an assembly named <bpt id="4">&lt;strong&gt;</bpt>Microsoft.ServiceBus.dll<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>References the assembly so that the types are available for later use.</source>
            <target state="new">References the assembly so that the types are available for later use.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Here's how these steps are implemented in a PowerShell script:</source>
            <target state="new">Here's how these steps are implemented in a PowerShell script:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Provision a Service Bus namespace</source>
            <target state="new">Provision a Service Bus namespace</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Two PowerShell cmdlets support Service Bus namespace operations.</source>
            <target state="new">Two PowerShell cmdlets support Service Bus namespace operations.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Instead of the .NET SDK APIs, you can use [Get-AzureSBNamespace] and [New-AzureSBNamespace].</source>
            <target state="new">Instead of the .NET SDK APIs, you can use [Get-AzureSBNamespace] and [New-AzureSBNamespace].</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>This example creates a few local variables in the script; <bpt id="2">&lt;code&gt;</bpt>$Namespace<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>$Location<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">This example creates a few local variables in the script; <bpt id="2">&lt;code&gt;</bpt>$Namespace<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>$Location<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>$Namespace<ept id="1">&lt;/code&gt;</ept> is the name the of the Service Bus namespace with which we want to work.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>$Namespace<ept id="1">&lt;/code&gt;</ept> is the name the of the Service Bus namespace with which we want to work.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>$Location<ept id="1">&lt;/code&gt;</ept> identifies the data center in which the script provisions the namespace.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>$Location<ept id="1">&lt;/code&gt;</ept> identifies the data center in which the script provisions the namespace.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>$CurrentNamespace<ept id="1">&lt;/code&gt;</ept> stores the reference namespace that the script retrieves (or creates).</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>$CurrentNamespace<ept id="1">&lt;/code&gt;</ept> stores the reference namespace that the script retrieves (or creates).</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In an actual script, <bpt id="2">&lt;code&gt;</bpt>$Namespace<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>$Location<ept id="4">&lt;/code&gt;</ept> can be passed as parameters.</source>
            <target state="new">In an actual script, <bpt id="2">&lt;code&gt;</bpt>$Namespace<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>$Location<ept id="4">&lt;/code&gt;</ept> can be passed as parameters.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>This part of the script does the following:</source>
            <target state="new">This part of the script does the following:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Attempts to retrieve a Service Bus namespace with the provided name.</source>
            <target state="new">Attempts to retrieve a Service Bus namespace with the provided name.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>If the namespace is found, it reports what was found.</source>
            <target state="new">If the namespace is found, it reports what was found.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>If the namespace is not found, it creates the namespace and then retrieves the newly created namespace.</source>
            <target state="new">If the namespace is not found, it creates the namespace and then retrieves the newly created namespace.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>To provision other Service Bus entities, create an instance of the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> class from the SDK.</source>
            <target state="new">To provision other Service Bus entities, create an instance of the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> class from the SDK.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>You can use the [Get-AzureSBAuthorizationRule] cmdlet to retrieve an authorization rule that's used to provide a connection string.</source>
            <target state="new">You can use the [Get-AzureSBAuthorizationRule] cmdlet to retrieve an authorization rule that's used to provide a connection string.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>We'll store a reference to the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> instance in the <bpt id="4">&lt;code&gt;</bpt>$NamespaceManager<ept id="4">&lt;/code&gt;</ept> variable.</source>
            <target state="new">We'll store a reference to the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> instance in the <bpt id="4">&lt;code&gt;</bpt>$NamespaceManager<ept id="4">&lt;/code&gt;</ept> variable.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>We will use <bpt id="2">&lt;code&gt;</bpt>$NamespaceManager<ept id="2">&lt;/code&gt;</ept> later in the script to provision other entities.</source>
            <target state="new">We will use <bpt id="2">&lt;code&gt;</bpt>$NamespaceManager<ept id="2">&lt;/code&gt;</ept> later in the script to provision other entities.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Provisioning other Service Bus entities</source>
            <target state="new">Provisioning other Service Bus entities</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>In order to provision other entities, such as queues, topics, and Event Hubs, use the [.NET API for Service Bus].</source>
            <target state="new">In order to provision other entities, such as queues, topics, and Event Hubs, use the [.NET API for Service Bus].</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>This article focuses only on Event Hubs, but the steps for other entities are similar.</source>
            <target state="new">This article focuses only on Event Hubs, but the steps for other entities are similar.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In addition, more detailed examples, including other entities, are referenced at the end of this article.</source>
            <target state="new">In addition, more detailed examples, including other entities, are referenced at the end of this article.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>This part of the script creates four more local variables.</source>
            <target state="new">This part of the script creates four more local variables.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>These variables are used to instantiate an <bpt id="2">&lt;code&gt;</bpt>EventHubDescription<ept id="2">&lt;/code&gt;</ept> object.</source>
            <target state="new">These variables are used to instantiate an <bpt id="2">&lt;code&gt;</bpt>EventHubDescription<ept id="2">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The script does the following:</source>
            <target state="new">The script does the following:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Using the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> object, check to see if the Event Hub identified by <bpt id="4">&lt;code&gt;</bpt>$Path<ept id="4">&lt;/code&gt;</ept> exists.</source>
            <target state="new">Using the <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> object, check to see if the Event Hub identified by <bpt id="4">&lt;code&gt;</bpt>$Path<ept id="4">&lt;/code&gt;</ept> exists.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>If it does not exist, create an <bpt id="2">&lt;code&gt;</bpt>EventHubDescription<ept id="2">&lt;/code&gt;</ept> and pass that to the <bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept> class <bpt id="6">&lt;code&gt;</bpt>CreateEventHubIfNotExists<ept id="6">&lt;/code&gt;</ept> method.</source>
            <target state="new">If it does not exist, create an <bpt id="2">&lt;code&gt;</bpt>EventHubDescription<ept id="2">&lt;/code&gt;</ept> and pass that to the <bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept> class <bpt id="6">&lt;code&gt;</bpt>CreateEventHubIfNotExists<ept id="6">&lt;/code&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>After determining that the Event Hub is available, create a consumer group using <bpt id="2">&lt;code&gt;</bpt>ConsumerGroupDescription<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">After determining that the Event Hub is available, create a consumer group using <bpt id="2">&lt;code&gt;</bpt>ConsumerGroupDescription<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>This article provided a basic outline for provisioning Service Bus entities using PowerShell.</source>
            <target state="new">This article provided a basic outline for provisioning Service Bus entities using PowerShell.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Anything that you can do using the .NET client libraries, you can also do in a PowerShell script.</source>
            <target state="new">Anything that you can do using the .NET client libraries, you can also do in a PowerShell script.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>There are more detailed examples available on these blogs posts:</source>
            <target state="new">There are more detailed examples available on these blogs posts:</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create Service Bus queues, topics and subscriptions using a PowerShell script<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create Service Bus queues, topics and subscriptions using a PowerShell script<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create a Service Bus Namespace and an Event Hub using a PowerShell script<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to create a Service Bus Namespace and an Event Hub using a PowerShell script<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Some ready-made scripts are also available for download:</source>
            <target state="new">Some ready-made scripts are also available for download:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Service Bus PowerShell Scripts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Service Bus PowerShell Scripts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>