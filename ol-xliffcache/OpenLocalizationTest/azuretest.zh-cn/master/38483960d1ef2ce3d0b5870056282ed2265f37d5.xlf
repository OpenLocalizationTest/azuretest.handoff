<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:08:28 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38483960d1ef2ce3d0b5870056282ed2265f37d5</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Using the Wait Connector in Logic Apps | Microsoft Azure App Service</source>
            <target state="new">Using the Wait Connector in Logic Apps | Microsoft Azure App Service</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to create and configure the Wait Connector or API app and use it in a logic app in Azure App Service</source>
            <target state="new">How to create and configure the Wait Connector or API app and use it in a logic app in Azure App Service</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Get started with the Wait Connector and add it to your Logic App</source>
            <target state="new">Get started with the Wait Connector and add it to your Logic App</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Wait connector enables an app to delay its execution for a specified duration or until the occurrence of a specified time.</source>
            <target state="new">Wait connector enables an app to delay its execution for a specified duration or until the occurrence of a specified time.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>You can add the Wait Connector to your business workflow and process data as part of this workflow within a Logic App.</source>
            <target state="new">You can add the Wait Connector to your business workflow and process data as part of this workflow within a Logic App.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>When used in a Logic App, it can be used to delay execution.</source>
            <target state="new">When used in a Logic App, it can be used to delay execution.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Using Wait Connector</source>
            <target state="new">Using Wait Connector</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>To use the Wait connector, you need to first create an instance of the Wait Connector API app.</source>
            <target state="new">To use the Wait connector, you need to first create an instance of the Wait Connector API app.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This can be done either inline while creating a logic app or by selecting the Wait Connector API app from the Azure Marketplace.</source>
            <target state="new">This can be done either inline while creating a logic app or by selecting the Wait Connector API app from the Azure Marketplace.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Using Wait Connector in the Logic Apps designer surface</source>
            <target state="new">Using Wait Connector in the Logic Apps designer surface</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Wait Connector can be used as an action.</source>
            <target state="new">Wait Connector can be used as an action.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>It does not have any triggers.</source>
            <target state="new">It does not have any triggers.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Action</source>
            <target state="new">Action</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Click on Wait Connector from the right pane:</source>
            <target state="new">Click on Wait Connector from the right pane:</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>List of Actions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>List of Actions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Wait Connector supports two actions:</source>
            <target state="new">Wait Connector supports two actions:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Delay</source>
            <target state="new">Delay</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Delay Until</source>
            <target state="new">Delay Until</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Select <bpt id="2">&lt;em&gt;</bpt>Delay<ept id="2">&lt;/em&gt;</ept>:</source>
            <target state="new">Select <bpt id="2">&lt;em&gt;</bpt>Delay<ept id="2">&lt;/em&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Delay input<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Delay input<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Provide the inputs for the action and configure it:</source>
            <target state="new">Provide the inputs for the action and configure it:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Action configured<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Action configured<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Description of the parameter</source>
            <target state="new">Description of the parameter</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Duration In Minutes</source>
            <target state="new">Duration In Minutes</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>integer</source>
            <target state="new">integer</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Delay duration in minutes</source>
            <target state="new">Delay duration in minutes</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Do more with your Connector</source>
            <target state="new">Do more with your Connector</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Now that the connector is created, you can add it to a business flow using a Logic App.</source>
            <target state="new">Now that the connector is created, you can add it to a business flow using a Logic App.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What are Logic Apps?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What are Logic Apps?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>View the Swagger REST API reference at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connectors and API Apps Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">View the Swagger REST API reference at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connectors and API Apps Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>You can also review performance statistics and control security to the connector.</source>
            <target state="new">You can also review performance statistics and control security to the connector.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Manage  and Monitor API apps and connector<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Manage  and Monitor API apps and connector<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>