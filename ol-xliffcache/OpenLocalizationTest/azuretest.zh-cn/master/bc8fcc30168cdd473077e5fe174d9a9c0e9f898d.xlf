<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 5:16:11 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc8fcc30168cdd473077e5fe174d9a9c0e9f898d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Service Bus queues (.NET) | Microsoft Azure</source>
            <target state="new">How to use Service Bus queues (.NET) | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Service Bus queues in Azure. Code samples written in C# using the .NET API.</source>
            <target state="new">Learn how to use Service Bus queues in Azure. Code samples written in C# using the .NET API.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Azure Service Bus queues</source>
            <target state="new">How to use Azure Service Bus queues</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This article describes how to use Service Bus queues.</source>
            <target state="new">This article describes how to use Service Bus queues.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The samples are written in C\# and use the .NET API.</source>
            <target state="new">The samples are written in C\# and use the .NET API.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The scenarios covered include creating queues and sending and receiving messages.</source>
            <target state="new">The scenarios covered include creating queues and sending and receiving messages.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For more information about queues, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information about queues, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/howto-service-bus-queues.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/howto-service-bus-queues.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Configure the application to use Service Bus</source>
            <target state="new">Configure the application to use Service Bus</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>When you create an application that uses Service Bus, you must add a reference to the Service Bus assembly and include the corresponding namespaces.</source>
            <target state="new">When you create an application that uses Service Bus, you must add a reference to the Service Bus assembly and include the corresponding namespaces.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Add the Service Bus NuGet package</source>
            <target state="new">Add the Service Bus NuGet package</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>The Service Bus <bpt id="2">&lt;strong&gt;</bpt>NuGet<ept id="2">&lt;/strong&gt;</ept> package is the easiest way to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</source>
            <target state="new">The Service Bus <bpt id="2">&lt;strong&gt;</bpt>NuGet<ept id="2">&lt;/strong&gt;</ept> package is the easiest way to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The NuGet Visual Studio extension makes it easy to install and update libraries and tools in Visual Studio and Visual Studio Express.</source>
            <target state="new">The NuGet Visual Studio extension makes it easy to install and update libraries and tools in Visual Studio and Visual Studio Express.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The Service Bus NuGet package is the easiest way</source>
            <target state="new">The Service Bus NuGet package is the easiest way</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</source>
            <target state="new">to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>To install the NuGet package in your application, do the following:</source>
            <target state="new">To install the NuGet package in your application, do the following:</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>In Solution Explorer, right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Solution Explorer, right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Search for "Service Bus" and select the <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure Service Bus<ept id="2">&lt;/strong&gt;</ept> item.</source>
            <target state="new">Search for "Service Bus" and select the <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure Service Bus<ept id="2">&lt;/strong&gt;</ept> item.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Install<ept id="2">&lt;/strong&gt;</ept> to complete the installation, then close this dialog box.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Install<ept id="2">&lt;/strong&gt;</ept> to complete the installation, then close this dialog box.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>You are now ready to write code for Service Bus.</source>
            <target state="new">You are now ready to write code for Service Bus.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>How to set up a Service Bus connection string</source>
            <target state="new">How to set up a Service Bus connection string</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Service Bus uses a connection string to store endpoints and credentials.</source>
            <target state="new">Service Bus uses a connection string to store endpoints and credentials.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>You can put your connection string in a configuration file, rather than hard-coding it:</source>
            <target state="new">You can put your connection string in a configuration file, rather than hard-coding it:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>When using Azure Cloud Services, it is recommended that you store your connection string using the Azure service configuration system (.csdef and .cscfg files).</source>
            <target state="new">When using Azure Cloud Services, it is recommended that you store your connection string using the Azure service configuration system (.csdef and .cscfg files).</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>When using Azure websites or Azure Virtual Machines, it is recommended that you store your connection string using the .NET configuration system (for example, the Web.config file).</source>
            <target state="new">When using Azure websites or Azure Virtual Machines, it is recommended that you store your connection string using the .NET configuration system (for example, the Web.config file).</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In both cases, you can retrieve your connection string using the <bpt id="2">&lt;code&gt;</bpt>CloudConfigurationManager.GetSetting<ept id="2">&lt;/code&gt;</ept> method, as shown later in this article.</source>
            <target state="new">In both cases, you can retrieve your connection string using the <bpt id="2">&lt;code&gt;</bpt>CloudConfigurationManager.GetSetting<ept id="2">&lt;/code&gt;</ept> method, as shown later in this article.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Configuring your connection string when using Cloud Services</source>
            <target state="new">Configuring your connection string when using Cloud Services</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>The service configuration mechanism is unique to Azure Cloud Services projects and enables you to dynamically change configuration settings from the Azure portal without redeploying your application.</source>
            <target state="new">The service configuration mechanism is unique to Azure Cloud Services projects and enables you to dynamically change configuration settings from the Azure portal without redeploying your application.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>For example, add a <bpt id="2">&lt;code&gt;</bpt>Setting<ept id="2">&lt;/code&gt;</ept> label to your service definition (.csdef) file, as shown in the next example.</source>
            <target state="new">For example, add a <bpt id="2">&lt;code&gt;</bpt>Setting<ept id="2">&lt;/code&gt;</ept> label to your service definition (.csdef) file, as shown in the next example.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>You then specify values in the service configuration (.cscfg) file, as shown in the next example.</source>
            <target state="new">You then specify values in the service configuration (.cscfg) file, as shown in the next example.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Use the Shared Access Signature (SAS) key name and key values retrieved from the Azure portal as described in the previous section.</source>
            <target state="new">Use the Shared Access Signature (SAS) key name and key values retrieved from the Azure portal as described in the previous section.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Configuring your connection string when using websites or Azure Virtual Machines</source>
            <target state="new">Configuring your connection string when using websites or Azure Virtual Machines</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>When using websites or Virtual Machines, it is recommended that you use the .NET configuration system (for example, <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept>). You store the connection string using the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> element.</source>
            <target state="new">When using websites or Virtual Machines, it is recommended that you use the .NET configuration system (for example, <bpt id="2">&lt;strong&gt;</bpt>Web.config<ept id="2">&lt;/strong&gt;</ept>). You store the connection string using the <bpt id="4">&lt;code&gt;</bpt>&lt;appSettings&gt;<ept id="4">&lt;/code&gt;</ept> element.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Use the SAS name and key values that you retrieved from the Azure portal, as described in the previous section.</source>
            <target state="new">Use the SAS name and key values that you retrieved from the Azure portal, as described in the previous section.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>How to create a queue</source>
            <target state="new">How to create a queue</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>You can perform management operations for Service Bus queues using the [<bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> class](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.aspx).</source>
            <target state="new">You can perform management operations for Service Bus queues using the [<bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> class](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.aspx).</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>This class provides methods to create, enumerate, and delete queues.</source>
            <target state="new">This class provides methods to create, enumerate, and delete queues.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>This example constructs a <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> object using the Azure <bpt id="4">&lt;code&gt;</bpt>CloudConfigurationManager<ept id="4">&lt;/code&gt;</ept> class</source>
            <target state="new">This example constructs a <bpt id="2">&lt;code&gt;</bpt>NamespaceManager<ept id="2">&lt;/code&gt;</ept> object using the Azure <bpt id="4">&lt;code&gt;</bpt>CloudConfigurationManager<ept id="4">&lt;/code&gt;</ept> class</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>with a connection string consisting of the base address of a Service Bus service namespace and the appropriate</source>
            <target state="new">with a connection string consisting of the base address of a Service Bus service namespace and the appropriate</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>SAS credentials with permissions to manage it.</source>
            <target state="new">SAS credentials with permissions to manage it.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>This connection string is of the form shown in the next example.</source>
            <target state="new">This connection string is of the form shown in the next example.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Use the following example, given the configuration settings in the previous section.</source>
            <target state="new">Use the following example, given the configuration settings in the previous section.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>There are overloads of the [<bpt id="2">&lt;code&gt;</bpt>CreateQueue<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.createqueue.aspx) method that enable you to tune properties</source>
            <target state="new">There are overloads of the [<bpt id="2">&lt;code&gt;</bpt>CreateQueue<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.createqueue.aspx) method that enable you to tune properties</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>of the queue (for example, to set the default "time-to-live" value to be applied to messages sent to the queue).</source>
            <target state="new">of the queue (for example, to set the default "time-to-live" value to be applied to messages sent to the queue).</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>These settings are applied by using the [<bpt id="2">&lt;code&gt;</bpt>QueueDescription<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queuedescription.aspx) class.</source>
            <target state="new">These settings are applied by using the [<bpt id="2">&lt;code&gt;</bpt>QueueDescription<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queuedescription.aspx) class.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The following example shows how to create a queue named "TestQueue" with a maximum size of 5 GB and a default message time-to-live of 1 minute.</source>
            <target state="new">The following example shows how to create a queue named "TestQueue" with a maximum size of 5 GB and a default message time-to-live of 1 minute.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>You can use the [<bpt id="2">&lt;code&gt;</bpt>QueueExists<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.queueexists.aspx) method on [<bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.aspx) objects to check if a queue with a specified name already exists within a service namespace.</source>
            <target state="new">You can use the [<bpt id="2">&lt;code&gt;</bpt>QueueExists<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.queueexists.aspx) method on [<bpt id="4">&lt;code&gt;</bpt>NamespaceManager<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.namespacemanager.aspx) objects to check if a queue with a specified name already exists within a service namespace.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>How to send messages to a queue</source>
            <target state="new">How to send messages to a queue</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>To send a message to a Service Bus queue, your application creates a</source>
            <target state="new">To send a message to a Service Bus queue, your application creates a</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>[<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object using the connection string.</source>
            <target state="new">[<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object using the connection string.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>The following code demonstrates how to create a [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object for the "TestQueue" queue you just created using the [<bpt id="4">&lt;code&gt;</bpt>CreateFromConnectionString<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.createfromconnectionstring.aspx) API call.</source>
            <target state="new">The following code demonstrates how to create a [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object for the "TestQueue" queue you just created using the [<bpt id="4">&lt;code&gt;</bpt>CreateFromConnectionString<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.createfromconnectionstring.aspx) API call.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Messages sent to (and received from) Service Bus queues are instances of the [<bpt id="2">&lt;code&gt;</bpt>BrokeredMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx) class.</source>
            <target state="new">Messages sent to (and received from) Service Bus queues are instances of the [<bpt id="2">&lt;code&gt;</bpt>BrokeredMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx) class.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>BrokeredMessage<ept id="1">&lt;/code&gt;</ept> objects have a set of standard properties (such as [<bpt id="3">&lt;code&gt;</bpt>Label<ept id="3">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.label.aspx) and [<bpt id="5">&lt;code&gt;</bpt>TimeToLive<ept id="5">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.timetolive.aspx)), a dictionary</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>BrokeredMessage<ept id="1">&lt;/code&gt;</ept> objects have a set of standard properties (such as [<bpt id="3">&lt;code&gt;</bpt>Label<ept id="3">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.label.aspx) and [<bpt id="5">&lt;code&gt;</bpt>TimeToLive<ept id="5">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.timetolive.aspx)), a dictionary</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>that is used to hold custom application specific properties, and a body of arbitrary application data.</source>
            <target state="new">that is used to hold custom application specific properties, and a body of arbitrary application data.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>An application can set the body of the message by passing any serializable object into the constructor of the[<bpt id="2">&lt;code&gt;</bpt>BrokeredMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx) object, and the appropriate <bpt id="4">&lt;strong&gt;</bpt>DataContractSerializer<ept id="4">&lt;/strong&gt;</ept> will then be used to serialize the object.</source>
            <target state="new">An application can set the body of the message by passing any serializable object into the constructor of the[<bpt id="2">&lt;code&gt;</bpt>BrokeredMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.aspx) object, and the appropriate <bpt id="4">&lt;strong&gt;</bpt>DataContractSerializer<ept id="4">&lt;/strong&gt;</ept> will then be used to serialize the object.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Alternatively, a</source>
            <target state="new">Alternatively, a</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>System.IO.Stream<ept id="1">&lt;/strong&gt;</ept> can be provided.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>System.IO.Stream<ept id="1">&lt;/strong&gt;</ept> can be provided.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>The following example demonstrates how to send five test messages to the "TestQueue" [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object obtained in the previous code example.</source>
            <target state="new">The following example demonstrates how to send five test messages to the "TestQueue" [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object obtained in the previous code example.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Service Bus queues support a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>maximum message size of 256 Kb<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (the header, which includes  the standard and custom application properties, can have a maximum size of 64 KB).</source>
            <target state="new">Service Bus queues support a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>maximum message size of 256 Kb<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (the header, which includes  the standard and custom application properties, can have a maximum size of 64 KB).</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>There is no limit on the number of messages held in a queue but there is a cap on the total size of the messages held by a queue.</source>
            <target state="new">There is no limit on the number of messages held in a queue but there is a cap on the total size of the messages held by a queue.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>This queue size is defined at creation time, with an upper limit of 5 GB.</source>
            <target state="new">This queue size is defined at creation time, with an upper limit of 5 GB.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>If partitioning is enabled, the upper limit is higher.</source>
            <target state="new">If partitioning is enabled, the upper limit is higher.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Messaging Entities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Partitioning Messaging Entities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>How to receive messages from a queue</source>
            <target state="new">How to receive messages from a queue</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The recommended way to receive messages from a queue is to use a [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object.</source>
            <target state="new">The recommended way to receive messages from a queue is to use a [<bpt id="2">&lt;code&gt;</bpt>QueueClient<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.aspx) object.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>QueueClient<ept id="1">&lt;/code&gt;</ept> objects can work in two different modes: [<bpt id="3">&lt;code&gt;</bpt>ReceiveAndDelete<ept id="3">&lt;/code&gt;</ept> and <bpt id="5">&lt;code&gt;</bpt>PeekLock<ept id="5">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.receivemode.aspx).</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>QueueClient<ept id="1">&lt;/code&gt;</ept> objects can work in two different modes: [<bpt id="3">&lt;code&gt;</bpt>ReceiveAndDelete<ept id="3">&lt;/code&gt;</ept> and <bpt id="5">&lt;code&gt;</bpt>PeekLock<ept id="5">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.receivemode.aspx).</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>When using the <bpt id="2">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="2">&lt;/strong&gt;</ept> mode, the receive is a single-shot operation - that is, when Service Bus receives a read request for a message in a queue, it marks the message as consumed, and returns it to the application.</source>
            <target state="new">When using the <bpt id="2">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="2">&lt;/strong&gt;</ept> mode, the receive is a single-shot operation - that is, when Service Bus receives a read request for a message in a queue, it marks the message as consumed, and returns it to the application.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="1">&lt;/strong&gt;</ept> is the simplest model and works best for scenarios in which an application can tolerate not processing a message in the event of a failure.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>ReceiveAndDelete<ept id="1">&lt;/strong&gt;</ept> is the simplest model and works best for scenarios in which an application can tolerate not processing a message in the event of a failure.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>To understand this, consider a scenario in which the consumer issues the receive request and then crashes before processing it.</source>
            <target state="new">To understand this, consider a scenario in which the consumer issues the receive request and then crashes before processing it.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Because Service Bus will have marked</source>
            <target state="new">Because Service Bus will have marked</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>the message as consumed, when the application restarts and begins consuming messages again, it will have missed the message that was consumed prior to the crash.</source>
            <target state="new">the message as consumed, when the application restarts and begins consuming messages again, it will have missed the message that was consumed prior to the crash.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>PeekLock<ept id="2">&lt;/strong&gt;</ept> mode (which is the default mode), the receive becomes a two-stage operation, which makes it possible to support applications that cannot tolerate missing messages.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>PeekLock<ept id="2">&lt;/strong&gt;</ept> mode (which is the default mode), the receive becomes a two-stage operation, which makes it possible to support applications that cannot tolerate missing messages.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>When Service Bus receives a request,</source>
            <target state="new">When Service Bus receives a request,</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>it finds the next message to be consumed, locks it to prevent other consumers receiving it, and then returns it to the application.</source>
            <target state="new">it finds the next message to be consumed, locks it to prevent other consumers receiving it, and then returns it to the application.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>After the application finishes processing the message (or stores it reliably for future processing), it completes the second stage of the receive process by calling [<bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) on the received message.</source>
            <target state="new">After the application finishes processing the message (or stores it reliably for future processing), it completes the second stage of the receive process by calling [<bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) on the received message.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>When Service Bus sees the <bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept> call, it marks the message as consumed, and removes it from the queue.</source>
            <target state="new">When Service Bus sees the <bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept> call, it marks the message as consumed, and removes it from the queue.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>The following example demonstrates how messages can be received and processed using the default <bpt id="2">&lt;strong&gt;</bpt>PeekLock<ept id="2">&lt;/strong&gt;</ept> mode.</source>
            <target state="new">The following example demonstrates how messages can be received and processed using the default <bpt id="2">&lt;strong&gt;</bpt>PeekLock<ept id="2">&lt;/strong&gt;</ept> mode.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>To specify a different [<bpt id="2">&lt;code&gt;</bpt>ReceiveMode<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.receivemode.aspx) value, you can use another overload of</source>
            <target state="new">To specify a different [<bpt id="2">&lt;code&gt;</bpt>ReceiveMode<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.receivemode.aspx) value, you can use another overload of</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>[<bpt id="2">&lt;code&gt;</bpt>CreateFromConnectionString<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.createfromconnectionstring.aspx).</source>
            <target state="new">[<bpt id="2">&lt;code&gt;</bpt>CreateFromConnectionString<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.createfromconnectionstring.aspx).</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>This example uses the [<bpt id="2">&lt;code&gt;</bpt>OnMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.onmessage.aspx) callback</source>
            <target state="new">This example uses the [<bpt id="2">&lt;code&gt;</bpt>OnMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.onmessage.aspx) callback</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>to process messages as they arrive into <bpt id="2">&lt;strong&gt;</bpt>TestQueue<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">to process messages as they arrive into <bpt id="2">&lt;strong&gt;</bpt>TestQueue<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>This example configures the [<bpt id="2">&lt;code&gt;</bpt>OnMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.onmessage.aspx) callback using an [<bpt id="4">&lt;code&gt;</bpt>OnMessageOptions<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.aspx) object.</source>
            <target state="new">This example configures the [<bpt id="2">&lt;code&gt;</bpt>OnMessage<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.queueclient.onmessage.aspx) callback using an [<bpt id="4">&lt;code&gt;</bpt>OnMessageOptions<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.aspx) object.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>[<bpt id="2">&lt;code&gt;</bpt>AutoComplete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.autocomplete.aspx)</source>
            <target state="new">[<bpt id="2">&lt;code&gt;</bpt>AutoComplete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.autocomplete.aspx)</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>is set to <bpt id="2">&lt;strong&gt;</bpt>false<ept id="2">&lt;/strong&gt;</ept> to enable manual control over when to call [<bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) on the received message.</source>
            <target state="new">is set to <bpt id="2">&lt;strong&gt;</bpt>false<ept id="2">&lt;/strong&gt;</ept> to enable manual control over when to call [<bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) on the received message.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>[<bpt id="2">&lt;code&gt;</bpt>AutoRenewTimeout<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.autorenewtimeout.aspx) is set to 1 minute, which causes the client to wait for up to one minute for a message before the call times out and the client makes a new call to check for messages.</source>
            <target state="new">[<bpt id="2">&lt;code&gt;</bpt>AutoRenewTimeout<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.onmessageoptions.autorenewtimeout.aspx) is set to 1 minute, which causes the client to wait for up to one minute for a message before the call times out and the client makes a new call to check for messages.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>This property value reduces the number of times the client makes chargeable calls that do not retrieve messages.</source>
            <target state="new">This property value reduces the number of times the client makes chargeable calls that do not retrieve messages.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>How to handle application crashes and unreadable messages</source>
            <target state="new">How to handle application crashes and unreadable messages</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Service Bus provides functionality to help you gracefully recover from errors in your application or with difficulties processing a message.</source>
            <target state="new">Service Bus provides functionality to help you gracefully recover from errors in your application or with difficulties processing a message.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>If a receiver application is unable to process the message for some reason, then it can call the [<bpt id="2">&lt;code&gt;</bpt>Abandon<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.abandon.aspx) method on the received message (instead of the [<bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) method).</source>
            <target state="new">If a receiver application is unable to process the message for some reason, then it can call the [<bpt id="2">&lt;code&gt;</bpt>Abandon<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.abandon.aspx) method on the received message (instead of the [<bpt id="4">&lt;code&gt;</bpt>Complete<ept id="4">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) method).</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>This causes Service Bus to unlock the message within the queue and make it available to be received again,</source>
            <target state="new">This causes Service Bus to unlock the message within the queue and make it available to be received again,</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>either by the same consuming application or by another consuming application.</source>
            <target state="new">either by the same consuming application or by another consuming application.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>There is also a time-out associated with a message locked within the queue, and if the application fails to process the message before the lock time-out expires (for example, if the application crashes), then Service Bus unlocks the message automatically and makes it available to be received again.</source>
            <target state="new">There is also a time-out associated with a message locked within the queue, and if the application fails to process the message before the lock time-out expires (for example, if the application crashes), then Service Bus unlocks the message automatically and makes it available to be received again.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>In the event that the application crashes after processing the message but before the [<bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) request is issued, the message will be redelivered to the application when it restarts.</source>
            <target state="new">In the event that the application crashes after processing the message but before the [<bpt id="2">&lt;code&gt;</bpt>Complete<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.complete.aspx) request is issued, the message will be redelivered to the application when it restarts.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>This is often called <bpt id="2">&lt;strong&gt;</bpt>At Least Once Processing<ept id="2">&lt;/strong&gt;</ept>; that is, each message is processed at least once but in certain situations the same message may be redelivered.</source>
            <target state="new">This is often called <bpt id="2">&lt;strong&gt;</bpt>At Least Once Processing<ept id="2">&lt;/strong&gt;</ept>; that is, each message is processed at least once but in certain situations the same message may be redelivered.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>If the scenario cannot tolerate duplicate processing, then application developers should add additional logic to their application to handle duplicate message delivery.</source>
            <target state="new">If the scenario cannot tolerate duplicate processing, then application developers should add additional logic to their application to handle duplicate message delivery.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>This is often achieved using the [<bpt id="2">&lt;code&gt;</bpt>MessageId<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx) property of the message, which remains constant across delivery attempts.</source>
            <target state="new">This is often achieved using the [<bpt id="2">&lt;code&gt;</bpt>MessageId<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx) property of the message, which remains constant across delivery attempts.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Now that you've learned the basics of Service Bus queues, follow these links to learn more.</source>
            <target state="new">Now that you've learned the basics of Service Bus queues, follow these links to learn more.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>See the MSDN overview: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Queues, Topics, and Subscriptions.[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">See the MSDN overview: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Queues, Topics, and Subscriptions.[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Build a working application that sends and receives messages to and from a Service Bus queue: [Service Bus Brokered Messaging .NET Tutorial].</source>
            <target state="new">Build a working application that sends and receives messages to and from a Service Bus queue: [Service Bus Brokered Messaging .NET Tutorial].</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Service Bus samples: Download from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Samples[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or see the overview on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>MSDN[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Service Bus samples: Download from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Samples[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or see the overview on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>MSDN[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>