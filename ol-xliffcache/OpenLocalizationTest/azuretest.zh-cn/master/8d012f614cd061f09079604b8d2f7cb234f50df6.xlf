<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:48:27 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d012f614cd061f09079604b8d2f7cb234f50df6</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>We will add a button labelled "Complete All" next to the existing button, and move both buttons down a line.</source>
            <target state="new">We will add a button labelled "Complete All" next to the existing button, and move both buttons down a line.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>In Android Studio, open the <bpt id="2">&lt;em&gt;</bpt>res\layout\activity_to_do.xml<ept id="2">&lt;/em&gt;</ept> file in your quickstart project, locate the <bpt id="4">&lt;strong&gt;</bpt>LinearLayout<ept id="4">&lt;/strong&gt;</ept> element that contains the <bpt id="6">&lt;strong&gt;</bpt>Button<ept id="6">&lt;/strong&gt;</ept> element named <bpt id="8">&lt;code&gt;</bpt>buttonAddToDo<ept id="8">&lt;/code&gt;</ept>.</source>
            <target state="new">In Android Studio, open the <bpt id="2">&lt;em&gt;</bpt>res\layout\activity_to_do.xml<ept id="2">&lt;/em&gt;</ept> file in your quickstart project, locate the <bpt id="4">&lt;strong&gt;</bpt>LinearLayout<ept id="4">&lt;/strong&gt;</ept> element that contains the <bpt id="6">&lt;strong&gt;</bpt>Button<ept id="6">&lt;/strong&gt;</ept> element named <bpt id="8">&lt;code&gt;</bpt>buttonAddToDo<ept id="8">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Copy the <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept> and paste it immediately following the original one.</source>
            <target state="new">Copy the <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept> and paste it immediately following the original one.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Delete the <bpt id="2">&lt;strong&gt;</bpt>Button<ept id="2">&lt;/strong&gt;</ept> element from the first <bpt id="4">&lt;strong&gt;</bpt>LinearLayout<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Delete the <bpt id="2">&lt;strong&gt;</bpt>Button<ept id="2">&lt;/strong&gt;</ept> element from the first <bpt id="4">&lt;strong&gt;</bpt>LinearLayout<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In the second <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept>, delete the <bpt id="4">&lt;strong&gt;</bpt>EditText<ept id="4">&lt;/strong&gt;</ept> element, and add the following  code immediately following the existing <bpt id="6">&lt;strong&gt;</bpt>Button<ept id="6">&lt;/strong&gt;</ept> element:</source>
            <target state="new">In the second <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept>, delete the <bpt id="4">&lt;strong&gt;</bpt>EditText<ept id="4">&lt;/strong&gt;</ept> element, and add the following  code immediately following the existing <bpt id="6">&lt;strong&gt;</bpt>Button<ept id="6">&lt;/strong&gt;</ept> element:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This adds a new button to the page, on a separate line, next to the existing button.</source>
            <target state="new">This adds a new button to the page, on a separate line, next to the existing button.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The second <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept> now looks like this:</source>
            <target state="new">The second <bpt id="2">&lt;strong&gt;</bpt>LinearLayout<ept id="2">&lt;/strong&gt;</ept> now looks like this:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Open the res\values\string.xml file and add the following line of code:</source>
            <target state="new">Open the res\values\string.xml file and add the following line of code:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>In Project Explorer, right click the project name in the <bpt id="2">&lt;em&gt;</bpt>src<ept id="2">&lt;/em&gt;</ept> folder (<bpt id="4">&lt;code&gt;</bpt>com.example.{your projects name}<ept id="4">&lt;/code&gt;</ept>), choose <bpt id="6">&lt;strong&gt;</bpt>New<ept id="6">&lt;/strong&gt;</ept> then <bpt id="8">&lt;strong&gt;</bpt>Class<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Project Explorer, right click the project name in the <bpt id="2">&lt;em&gt;</bpt>src<ept id="2">&lt;/em&gt;</ept> folder (<bpt id="4">&lt;code&gt;</bpt>com.example.{your projects name}<ept id="4">&lt;/code&gt;</ept>), choose <bpt id="6">&lt;strong&gt;</bpt>New<ept id="6">&lt;/strong&gt;</ept> then <bpt id="8">&lt;strong&gt;</bpt>Class<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In the dialog, enter <bpt id="2">&lt;strong&gt;</bpt>MarkAllResult<ept id="2">&lt;/strong&gt;</ept> in the class name field, choose OK, and replace the resulting class definition with the following code:</source>
            <target state="new">In the dialog, enter <bpt id="2">&lt;strong&gt;</bpt>MarkAllResult<ept id="2">&lt;/strong&gt;</ept> in the class name field, choose OK, and replace the resulting class definition with the following code:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>This class is used to hold the row count value returned by the custom API.</source>
            <target state="new">This class is used to hold the row count value returned by the custom API.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Locate the <bpt id="2">&lt;strong&gt;</bpt>refreshItemsFromTable<ept id="2">&lt;/strong&gt;</ept> method in the <bpt id="4">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="4">&lt;/strong&gt;</ept> file, and make sure that the first line of code in the <bpt id="6">&lt;code&gt;</bpt>try<ept id="6">&lt;/code&gt;</ept> block looks like this:</source>
            <target state="new">Locate the <bpt id="2">&lt;strong&gt;</bpt>refreshItemsFromTable<ept id="2">&lt;/strong&gt;</ept> method in the <bpt id="4">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="4">&lt;/strong&gt;</ept> file, and make sure that the first line of code in the <bpt id="6">&lt;code&gt;</bpt>try<ept id="6">&lt;/code&gt;</ept> block looks like this:</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>This filters the items so that completed items are not returned by the query.</source>
            <target state="new">This filters the items so that completed items are not returned by the query.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Make sure that <bpt id="2">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/strong&gt;</ept> contains the following imports at the beginning of the file:</source>
            <target state="new">Make sure that <bpt id="2">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/strong&gt;</ept> contains the following imports at the beginning of the file:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/strong&gt;</ept> file, add the following method:</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>ToDoActivity.java<ept id="2">&lt;/strong&gt;</ept> file, add the following method:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>public void completeItem(View view) {</source>
            <target state="new">public void completeItem(View view) {</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</source>
            <target state="new">This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>invokeApi<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a POST request to the new custom API.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>invokeApi<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a POST request to the new custom API.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The result returned by the custom API is displayed in a message dialog, as are any errors.</source>
            <target state="new">The result returned by the custom API is displayed in a message dialog, as are any errors.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Test the app</source>
            <target state="new">Test the app</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>From the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> menu, click <bpt id="4">&lt;strong&gt;</bpt>Run app<ept id="4">&lt;/strong&gt;</ept> to start the project in the Android emulator, or in a connected Android device.</source>
            <target state="new">From the <bpt id="2">&lt;strong&gt;</bpt>Run<ept id="2">&lt;/strong&gt;</ept> menu, click <bpt id="4">&lt;strong&gt;</bpt>Run app<ept id="4">&lt;/strong&gt;</ept> to start the project in the Android emulator, or in a connected Android device.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This executes your app, built with the Android SDK, that uses the client library to send a query that returns items from your mobile service.</source>
            <target state="new">This executes your app, built with the Android SDK, that uses the client library to send a query that returns items from your mobile service.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Repeat the previous step until you have added several todo items to the list.</source>
            <target state="new">Repeat the previous step until you have added several todo items to the list.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</source>
            <target state="new">A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>