<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:40:15 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb7b333434703914c2b96e3e831ff9845fee8c67</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>These steps create a new custom <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ApiController<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that sends push notifications to the app.</source>
            <target state="new">These steps create a new custom <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ApiController<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that sends push notifications to the app.</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>You could implement this same code in a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>TableController<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or anywhere else in your backend services.</source>
            <target state="new">You could implement this same code in a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>TableController<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or anywhere else in your backend services.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>In Visual Studio Solution Explorer, right-click the Controllers folder for the mobile service project, expand <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>New Scaffolded Item<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Visual Studio Solution Explorer, right-click the Controllers folder for the mobile service project, expand <bpt id="2">&lt;strong&gt;</bpt>Add<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>New Scaffolded Item<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This displays the Add Scaffold dialog.</source>
            <target state="new">This displays the Add Scaffold dialog.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Expand <bpt id="2">&lt;strong&gt;</bpt>Azure Mobile Services<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Azure Mobile Services Custom Controller<ept id="4">&lt;/strong&gt;</ept>, then click <bpt id="6">&lt;strong&gt;</bpt>Add<ept id="6">&lt;/strong&gt;</ept>, supply a <bpt id="8">&lt;strong&gt;</bpt>Controller name<ept id="8">&lt;/strong&gt;</ept> of <bpt id="10">&lt;code&gt;</bpt>NotifyAllUsersController<ept id="10">&lt;/code&gt;</ept>, then click <bpt id="12">&lt;strong&gt;</bpt>Add<ept id="12">&lt;/strong&gt;</ept> again.</source>
            <target state="new">Expand <bpt id="2">&lt;strong&gt;</bpt>Azure Mobile Services<ept id="2">&lt;/strong&gt;</ept> and click <bpt id="4">&lt;strong&gt;</bpt>Azure Mobile Services Custom Controller<ept id="4">&lt;/strong&gt;</ept>, then click <bpt id="6">&lt;strong&gt;</bpt>Add<ept id="6">&lt;/strong&gt;</ept>, supply a <bpt id="8">&lt;strong&gt;</bpt>Controller name<ept id="8">&lt;/strong&gt;</ept> of <bpt id="10">&lt;code&gt;</bpt>NotifyAllUsersController<ept id="10">&lt;/code&gt;</ept>, then click <bpt id="12">&lt;strong&gt;</bpt>Add<ept id="12">&lt;/strong&gt;</ept> again.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Web API Add Scaffold dialog<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Web API Add Scaffold dialog<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This creates a new empty controller class named <bpt id="2">&lt;strong&gt;</bpt>NotifyAllUsersController<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">This creates a new empty controller class named <bpt id="2">&lt;strong&gt;</bpt>NotifyAllUsersController<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>In the new NotifyAllUsersController.cs project file, add the following <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements:</source>
            <target state="new">In the new NotifyAllUsersController.cs project file, add the following <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements:</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Add the following code that implements the POST method on the controller:</source>
            <target state="new">Add the following code that implements the POST method on the controller:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This POST method can be called by any client that has the application key, which is not secure.</source>
            <target state="new">This POST method can be called by any client that has the application key, which is not secure.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>To secure the endpoint, apply the attribute <bpt id="2">&lt;code&gt;</bpt>[AuthorizeLevel(AuthorizationLevel.User)]<ept id="2">&lt;/code&gt;</ept> to the method or class to require authentication.</source>
            <target state="new">To secure the endpoint, apply the attribute <bpt id="2">&lt;code&gt;</bpt>[AuthorizeLevel(AuthorizationLevel.User)]<ept id="2">&lt;/code&gt;</ept> to the method or class to require authentication.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>