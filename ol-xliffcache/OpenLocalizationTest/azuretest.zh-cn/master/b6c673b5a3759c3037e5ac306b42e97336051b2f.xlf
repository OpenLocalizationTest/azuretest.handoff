<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:25:03 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6c673b5a3759c3037e5ac306b42e97336051b2f</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to implement faceted navigation in Azure Search</source>
            <target state="new">How to implement faceted navigation in Azure Search</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Faceted navigation in Azure Search</source>
            <target state="new">Faceted navigation in Azure Search</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to implement faceted navigation in Azure Search</source>
            <target state="new">How to implement faceted navigation in Azure Search</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Faceted navigation is a filtering mechanism that provides self-directed drilldown navigation in search applications.</source>
            <target state="new">Faceted navigation is a filtering mechanism that provides self-directed drilldown navigation in search applications.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>While the term ‘faceted navigation’ might be unfamiliar, it’s almost a given that you have used one before.</source>
            <target state="new">While the term ‘faceted navigation’ might be unfamiliar, it’s almost a given that you have used one before.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>As the following example shows, faceted navigation is nothing more than the categories used to filter results.</source>
            <target state="new">As the following example shows, faceted navigation is nothing more than the categories used to filter results.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>What it looks like</source>
            <target state="new">What it looks like</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Facets can help you find what you are looking for, while ensuring that you won’t get zero results.</source>
            <target state="new">Facets can help you find what you are looking for, while ensuring that you won’t get zero results.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>As a developer, facets let you expose the most useful search criteria for navigating your search corpus.</source>
            <target state="new">As a developer, facets let you expose the most useful search criteria for navigating your search corpus.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In online retail applications, faceted navigation is often built over brands, departments (kid’s shoes), size, price, popularity, and ratings.</source>
            <target state="new">In online retail applications, faceted navigation is often built over brands, departments (kid’s shoes), size, price, popularity, and ratings.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Implementing faceted navigation differs across search technologies and can be very complex.</source>
            <target state="new">Implementing faceted navigation differs across search technologies and can be very complex.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In Azure Search, faceted navigation is built at query time, using attributed fields previously specified in your schema.</source>
            <target state="new">In Azure Search, faceted navigation is built at query time, using attributed fields previously specified in your schema.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In the queries that your application builds, a query must send <bpt id="2">&lt;em&gt;</bpt>facet query parameters<ept id="2">&lt;/em&gt;</ept> in order to receive the available facet filter values for that document result set.</source>
            <target state="new">In the queries that your application builds, a query must send <bpt id="2">&lt;em&gt;</bpt>facet query parameters<ept id="2">&lt;/em&gt;</ept> in order to receive the available facet filter values for that document result set.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To actually trim the document result set, the application must apply a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression.</source>
            <target state="new">To actually trim the document result set, the application must apply a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>In terms of application development, writing code that constructs queries constitutes the bulk of the work.</source>
            <target state="new">In terms of application development, writing code that constructs queries constitutes the bulk of the work.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Many of the application behaviors that you would want from faceted navigation is provided by the service, including built-in support for setting up ranges and getting counts for facet results.</source>
            <target state="new">Many of the application behaviors that you would want from faceted navigation is provided by the service, including built-in support for setting up ranges and getting counts for facet results.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The service also includes sensible defaults that help you avoid unwieldy navigation structures.</source>
            <target state="new">The service also includes sensible defaults that help you avoid unwieldy navigation structures.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>For a hands-on experience, we recommend this sample on CodePlex: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search AdventureWorks Catalog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For a hands-on experience, we recommend this sample on CodePlex: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search AdventureWorks Catalog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>You can also watch <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search Deep Dive<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can also watch <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Search Deep Dive<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>At 45:25, there is a demo on how to implement facets.</source>
            <target state="new">At 45:25, there is a demo on how to implement facets.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>This article contains the following sections:</source>
            <target state="new">This article contains the following sections:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to build it<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to build it<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the presentation layer<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the presentation layer<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the index<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the index<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Check for data quality<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Check for data quality<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the query<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build the query<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tips on how to control faceted navigation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tips on how to control faceted navigation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation based on range values<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation based on range values<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation based on GeoPoints<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation based on GeoPoints<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Try it out<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Try it out<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Why use it</source>
            <target state="new">Why use it</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The most effective search applications have multiple interaction models besides a Search box.</source>
            <target state="new">The most effective search applications have multiple interaction models besides a Search box.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Faceted navigation is an alternative entry point to search, offering a convenient alternative to typing complex search expressions by hand.</source>
            <target state="new">Faceted navigation is an alternative entry point to search, offering a convenient alternative to typing complex search expressions by hand.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Know the fundamentals</source>
            <target state="new">Know the fundamentals</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>If you are new to search development, the best way to think of faceted navigation is that it shows the possibilities for self-directed search.</source>
            <target state="new">If you are new to search development, the best way to think of faceted navigation is that it shows the possibilities for self-directed search.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>It’s a type of drill-down search experience, based on predefined filters, used for quickly narrowing down search results through point-and-click actions.</source>
            <target state="new">It’s a type of drill-down search experience, based on predefined filters, used for quickly narrowing down search results through point-and-click actions.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Interaction Model<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Interaction Model<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The search experience for faceted navigation is iterative, so let’s start by understanding it as a sequence of queries that unfold in response to user actions.</source>
            <target state="new">The search experience for faceted navigation is iterative, so let’s start by understanding it as a sequence of queries that unfold in response to user actions.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>The starting point is an application page that provides faceted navigation, typically placed on the periphery.</source>
            <target state="new">The starting point is an application page that provides faceted navigation, typically placed on the periphery.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Faceted navigation is often a tree structure, with checkboxes for each value, or clickable text.</source>
            <target state="new">Faceted navigation is often a tree structure, with checkboxes for each value, or clickable text.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>A query sent to Azure Search specifies the faceted navigation structure via one or more facet query parameters.</source>
            <target state="new">A query sent to Azure Search specifies the faceted navigation structure via one or more facet query parameters.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>For instance, the query might include <bpt id="2">&lt;code&gt;</bpt>facet=Rating<ept id="2">&lt;/code&gt;</ept>, perhaps with a <bpt id="4">&lt;code&gt;</bpt>:values<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>:sort<ept id="6">&lt;/code&gt;</ept> option to further refine the presentation.</source>
            <target state="new">For instance, the query might include <bpt id="2">&lt;code&gt;</bpt>facet=Rating<ept id="2">&lt;/code&gt;</ept>, perhaps with a <bpt id="4">&lt;code&gt;</bpt>:values<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>:sort<ept id="6">&lt;/code&gt;</ept> option to further refine the presentation.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The presentation layer renders a search page that provides faceted navigation, using the facets specified on the request.</source>
            <target state="new">The presentation layer renders a search page that provides faceted navigation, using the facets specified on the request.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Given a faceted navigation structure that includes Rating, the user clicks "4" to indicate that only products with a rating of 4 or higher should be shown.</source>
            <target state="new">Given a faceted navigation structure that includes Rating, the user clicks "4" to indicate that only products with a rating of 4 or higher should be shown.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>In response, the application sends a query that includes <bpt id="2">&lt;code&gt;</bpt>$filter=Rating ge 4<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">In response, the application sends a query that includes <bpt id="2">&lt;code&gt;</bpt>$filter=Rating ge 4<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The presentation layer updates the page, showing a reduced result set, containing just those items that satisfy the new criteria (in this case, products rated 4 and up).</source>
            <target state="new">The presentation layer updates the page, showing a reduced result set, containing just those items that satisfy the new criteria (in this case, products rated 4 and up).</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>A facet is a query parameter, but do not confuse it with query input.</source>
            <target state="new">A facet is a query parameter, but do not confuse it with query input.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>It is never used as selection criteria in a query.</source>
            <target state="new">It is never used as selection criteria in a query.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Instead, think of facet query parameters as inputs to the navigation structure that comes back in the response.</source>
            <target state="new">Instead, think of facet query parameters as inputs to the navigation structure that comes back in the response.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For each facet query parameter you provide, Azure Search will evaluate how many documents are in the partial results for each facet value.</source>
            <target state="new">For each facet query parameter you provide, Azure Search will evaluate how many documents are in the partial results for each facet value.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Notice the <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> in step 4.</source>
            <target state="new">Notice the <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> in step 4.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>This is an important aspect of faceted navigation.</source>
            <target state="new">This is an important aspect of faceted navigation.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Although facets and filters are independent in the API, you will need both to deliver the experience you intend.</source>
            <target state="new">Although facets and filters are independent in the API, you will need both to deliver the experience you intend.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Design Patterns<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Design Patterns<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>In application code, the pattern is to use facet query parameters to return the faceted navigation structure along with facet results, plus a $filter expression that handles the click event.</source>
            <target state="new">In application code, the pattern is to use facet query parameters to return the faceted navigation structure along with facet results, plus a $filter expression that handles the click event.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Think of the <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression as the code behind the actual trimming of search results returned to the presentation layer.</source>
            <target state="new">Think of the <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression as the code behind the actual trimming of search results returned to the presentation layer.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Given a Colors facet, clicking the color Red is implemented through a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression that selects only those items that have a color of red.</source>
            <target state="new">Given a Colors facet, clicking the color Red is implemented through a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression that selects only those items that have a color of red.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Query Basics in Azure Search<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Query Basics in Azure Search<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>In Azure Search, a request is specified through one or more query parameters (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for a description of each one).</source>
            <target state="new">In Azure Search, a request is specified through one or more query parameters (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for a description of each one).</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>None of the query parameters are required, but you must have at least one in order for a query to be valid.</source>
            <target state="new">None of the query parameters are required, but you must have at least one in order for a query to be valid.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Precision, generally understood as the ability to filter out irrelevant hits, is achieved through one or both of these expressions:</source>
            <target state="new">Precision, generally understood as the ability to filter out irrelevant hits, is achieved through one or both of these expressions:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>search=<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>search=<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The value of this parameter constitutes the search expression.</source>
            <target state="new">The value of this parameter constitutes the search expression.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>It might be a single piece of text, or a complex search expression that includes multiple terms and operators.</source>
            <target state="new">It might be a single piece of text, or a complex search expression that includes multiple terms and operators.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>On the server, a search expression is used for full-text search, querying searchable fields in the index for matching terms, returning results in rank order.</source>
            <target state="new">On the server, a search expression is used for full-text search, querying searchable fields in the index for matching terms, returning results in rank order.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>If you set <bpt id="2">&lt;code&gt;</bpt>search<ept id="2">&lt;/code&gt;</ept> to null, query execution is over the entire index (that is, <bpt id="4">&lt;code&gt;</bpt>search=*<ept id="4">&lt;/code&gt;</ept>).</source>
            <target state="new">If you set <bpt id="2">&lt;code&gt;</bpt>search<ept id="2">&lt;/code&gt;</ept> to null, query execution is over the entire index (that is, <bpt id="4">&lt;code&gt;</bpt>search=*<ept id="4">&lt;/code&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>In this case, other elements of the query, such as a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> or scoring profile, will be the primary factors affecting which documents are returned <bpt id="4">&lt;code&gt;</bpt>($filter<ept id="4">&lt;/code&gt;</ept>) and in what order (<bpt id="6">&lt;code&gt;</bpt>scoringProfile<ept id="6">&lt;/code&gt;</ept> or <bpt id="8">&lt;code&gt;</bpt>$orderb<ept id="8">&lt;/code&gt;</ept>y).</source>
            <target state="new">In this case, other elements of the query, such as a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> or scoring profile, will be the primary factors affecting which documents are returned <bpt id="4">&lt;code&gt;</bpt>($filter<ept id="4">&lt;/code&gt;</ept>) and in what order (<bpt id="6">&lt;code&gt;</bpt>scoringProfile<ept id="6">&lt;/code&gt;</ept> or <bpt id="8">&lt;code&gt;</bpt>$orderb<ept id="8">&lt;/code&gt;</ept>y).</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>$filter=<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>$filter=<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>A filter is a powerful mechanism for limiting the size of search results based on the values of specific document attributes.</source>
            <target state="new">A filter is a powerful mechanism for limiting the size of search results based on the values of specific document attributes.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>A <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> is evaluated first, followed by faceting logic that generates the available values and corresponding counts for each value</source>
            <target state="new">A <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> is evaluated first, followed by faceting logic that generates the available values and corresponding counts for each value</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Complex search expressions will decrease the performance of the query.</source>
            <target state="new">Complex search expressions will decrease the performance of the query.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Where possible, utilize well-constructed filter expressions to increase precision and improve query performance.</source>
            <target state="new">Where possible, utilize well-constructed filter expressions to increase precision and improve query performance.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>To better understand how a filter adds more precision, compare a complex search expression to one that includes a filter expression:</source>
            <target state="new">To better understand how a filter adds more precision, compare a complex search expression to one that includes a filter expression:</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>GET /indexes/hotel/docs?search=lodging budget +Seattle –motel +parking<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>GET /indexes/hotel/docs?search=lodging budget +Seattle –motel +parking<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>GET /indexes/hotel/docs?search=lodging&amp;$filter=City eq ‘Seattle’ and Parking and Type ne ‘motel’<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>GET /indexes/hotel/docs?search=lodging&amp;$filter=City eq ‘Seattle’ and Parking and Type ne ‘motel’<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Although both queries are valid, the second is superior if you’re looking for non-motels with parking in Seattle.</source>
            <target state="new">Although both queries are valid, the second is superior if you’re looking for non-motels with parking in Seattle.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>The first query relies on those specific words being mentioned or not mentioned in string fields like Name, Description, and any other field containing searchable data.</source>
            <target state="new">The first query relies on those specific words being mentioned or not mentioned in string fields like Name, Description, and any other field containing searchable data.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>The second query looks for precise matches on structured data and is likely to be much more accurate.</source>
            <target state="new">The second query looks for precise matches on structured data and is likely to be much more accurate.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>In applications that include faceted navigation, you will want to be sure that each user action over a faceted navigation structure is accompanied by a narrowing of search results, achieved through a filter expression.</source>
            <target state="new">In applications that include faceted navigation, you will want to be sure that each user action over a faceted navigation structure is accompanied by a narrowing of search results, achieved through a filter expression.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>How to build it</source>
            <target state="new">How to build it</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Faceted navigation in Azure Search is implemented in your application code that builds the request, but relies on predefined elements in your schema.</source>
            <target state="new">Faceted navigation in Azure Search is implemented in your application code that builds the request, but relies on predefined elements in your schema.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Predefined in your search index is the <bpt id="2">&lt;code&gt;</bpt>Facetable [true|false]<ept id="2">&lt;/code&gt;</ept> index attribute, set on selected fields to enable or disable their use in a faceted navigation structure.</source>
            <target state="new">Predefined in your search index is the <bpt id="2">&lt;code&gt;</bpt>Facetable [true|false]<ept id="2">&lt;/code&gt;</ept> index attribute, set on selected fields to enable or disable their use in a faceted navigation structure.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Without <bpt id="2">&lt;code&gt;</bpt>"Facetable" = true<ept id="2">&lt;/code&gt;</ept>, a field cannot be used in facet navigation.</source>
            <target state="new">Without <bpt id="2">&lt;code&gt;</bpt>"Facetable" = true<ept id="2">&lt;/code&gt;</ept>, a field cannot be used in facet navigation.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>At query time, your application code creates a request that includes <bpt id="2">&lt;code&gt;</bpt>facet=[string]<ept id="2">&lt;/code&gt;</ept>, a request parameter that provides the field to facet by. A query can have multiple facets, such as <bpt id="4">&lt;code&gt;</bpt>&amp;facet=color&amp;facet=category&amp;facet=rating<ept id="4">&lt;/code&gt;</ept>, each one separated by an ampersand (&amp;) character.</source>
            <target state="new">At query time, your application code creates a request that includes <bpt id="2">&lt;code&gt;</bpt>facet=[string]<ept id="2">&lt;/code&gt;</ept>, a request parameter that provides the field to facet by. A query can have multiple facets, such as <bpt id="4">&lt;code&gt;</bpt>&amp;facet=color&amp;facet=category&amp;facet=rating<ept id="4">&lt;/code&gt;</ept>, each one separated by an ampersand (&amp;) character.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Application code must also construct a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression to handle the click events in faceted navigation.</source>
            <target state="new">Application code must also construct a <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> expression to handle the click events in faceted navigation.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>A <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> reduces the search results, using the facet value as filter criteria.</source>
            <target state="new">A <bpt id="2">&lt;code&gt;</bpt>$filter<ept id="2">&lt;/code&gt;</ept> reduces the search results, using the facet value as filter criteria.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Azure Search returns the search results, per the term(s) entered by the user, along with updates to the faceted navigation structure.</source>
            <target state="new">Azure Search returns the search results, per the term(s) entered by the user, along with updates to the faceted navigation structure.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>In Azure Search, faceted navigation is a single-level construction, with facet values, and counts of how many results are found for each one.</source>
            <target state="new">In Azure Search, faceted navigation is a single-level construction, with facet values, and counts of how many results are found for each one.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The presentation layer in your code provides the user experience.</source>
            <target state="new">The presentation layer in your code provides the user experience.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>It should list the constituent parts of the faceted navigation, such as the label, values, check boxes, and the count.</source>
            <target state="new">It should list the constituent parts of the faceted navigation, such as the label, values, check boxes, and the count.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>The Azure Search REST API is platform agnostic, so use whatever language and platform you want.</source>
            <target state="new">The Azure Search REST API is platform agnostic, so use whatever language and platform you want.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>The important thing is to include UI elements that support incremental refresh, with updated UI state as each additional facet is selected.</source>
            <target state="new">The important thing is to include UI elements that support incremental refresh, with updated UI state as each additional facet is selected.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>In the following sections, we’ll take a closer look at how to build each part, starting with the presentation layer.</source>
            <target state="new">In the following sections, we’ll take a closer look at how to build each part, starting with the presentation layer.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Build the presentation layer</source>
            <target state="new">Build the presentation layer</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Working back from the presentation layer can help you uncover requirements that might be missed otherwise, and understand which capabilities are essential to the search experience.</source>
            <target state="new">Working back from the presentation layer can help you uncover requirements that might be missed otherwise, and understand which capabilities are essential to the search experience.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>In terms of faceted navigation, your web or application page displays the faceted navigation structure, detects user input on the page, and inserts the changed elements.</source>
            <target state="new">In terms of faceted navigation, your web or application page displays the faceted navigation structure, detects user input on the page, and inserts the changed elements.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>For web applications, AJAX is commonly used in the presentation layer because it allows you to refresh incremental changes.</source>
            <target state="new">For web applications, AJAX is commonly used in the presentation layer because it allows you to refresh incremental changes.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>You could also use ASP.NET MVC or any other visualization platform that can connect to an Azure Search service over HTTP.</source>
            <target state="new">You could also use ASP.NET MVC or any other visualization platform that can connect to an Azure Search service over HTTP.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>The sample application referenced throughout this article -- <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks Catalog<ept id="2">&lt;/strong&gt;</ept> – happens to be an ASP.NET MVC application.</source>
            <target state="new">The sample application referenced throughout this article -- <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks Catalog<ept id="2">&lt;/strong&gt;</ept> – happens to be an ASP.NET MVC application.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>The following example, taken from the <bpt id="2">&lt;strong&gt;</bpt>index.cshtml<ept id="2">&lt;/strong&gt;</ept> file of the sample application, builds a dynamic HTML structure for displaying faceted navigation in your search results page.</source>
            <target state="new">The following example, taken from the <bpt id="2">&lt;strong&gt;</bpt>index.cshtml<ept id="2">&lt;/strong&gt;</ept> file of the sample application, builds a dynamic HTML structure for displaying faceted navigation in your search results page.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>In the sample, faceted navigation is built into the search results page, and appears after the user has submitted a search term.</source>
            <target state="new">In the sample, faceted navigation is built into the search results page, and appears after the user has submitted a search term.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Notice that each facet has a label (Colors, Categories, Prices), a binding to a faceted field (color, categoryName, listPrice), and a <bpt id="2">&lt;code&gt;</bpt>.count<ept id="2">&lt;/code&gt;</ept> parameter, used to return the number of items found for that facet result.</source>
            <target state="new">Notice that each facet has a label (Colors, Categories, Prices), a binding to a faceted field (color, categoryName, listPrice), and a <bpt id="2">&lt;code&gt;</bpt>.count<ept id="2">&lt;/code&gt;</ept> parameter, used to return the number of items found for that facet result.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>When designing the search results page, remember to add a mechanism for clearing facets.</source>
            <target state="new">When designing the search results page, remember to add a mechanism for clearing facets.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>If you use check boxes, users can easily intuit how to clear the filters.</source>
            <target state="new">If you use check boxes, users can easily intuit how to clear the filters.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>For other layouts, you might need a breadcrumb pattern or another creative approach.</source>
            <target state="new">For other layouts, you might need a breadcrumb pattern or another creative approach.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>For example, in the AdventureWorks Catalog sample application, you can click the title, AdventureWorks Catalog, to reset the search page.</source>
            <target state="new">For example, in the AdventureWorks Catalog sample application, you can click the title, AdventureWorks Catalog, to reset the search page.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Build the index</source>
            <target state="new">Build the index</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Faceting is enabled on a field-by-field basis in the index, via this index attribute: <bpt id="2">&lt;code&gt;</bpt>"Facetable": true<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">Faceting is enabled on a field-by-field basis in the index, via this index attribute: <bpt id="2">&lt;code&gt;</bpt>"Facetable": true<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>All field types that could possibly be used in faceted navigation are <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> by default.</source>
            <target state="new">All field types that could possibly be used in faceted navigation are <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> by default.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Such field types include <bpt id="2">&lt;code&gt;</bpt>Edm.String<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>Edm.DateTimeOffset<ept id="4">&lt;/code&gt;</ept>, and all the numeric field types (essentially, all field types are facetable except <bpt id="6">&lt;code&gt;</bpt>Edm.GeographyPoint<ept id="6">&lt;/code&gt;</ept>, which can’t be used in faceted navigation).</source>
            <target state="new">Such field types include <bpt id="2">&lt;code&gt;</bpt>Edm.String<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>Edm.DateTimeOffset<ept id="4">&lt;/code&gt;</ept>, and all the numeric field types (essentially, all field types are facetable except <bpt id="6">&lt;code&gt;</bpt>Edm.GeographyPoint<ept id="6">&lt;/code&gt;</ept>, which can’t be used in faceted navigation).</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>When building an index, a best practice for faceted navigation is to explicitly turn faceting off for fields that should never be used as a facet.</source>
            <target state="new">When building an index, a best practice for faceted navigation is to explicitly turn faceting off for fields that should never be used as a facet.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>In particular, string fields for singleton values, such as an ID or product name, should be set to <bpt id="2">&lt;code&gt;</bpt>"Facetable": false<ept id="2">&lt;/code&gt;</ept> to prevent their accidental (and ineffective) use in a faceted navigation.</source>
            <target state="new">In particular, string fields for singleton values, such as an ID or product name, should be set to <bpt id="2">&lt;code&gt;</bpt>"Facetable": false<ept id="2">&lt;/code&gt;</ept> to prevent their accidental (and ineffective) use in a faceted navigation.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Following is the schema for the AdventureWorks Catalog sample app (trimmed of some attributes to reduce overall size):</source>
            <target state="new">Following is the schema for the AdventureWorks Catalog sample app (trimmed of some attributes to reduce overall size):</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Note that <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> is turned off for string fields that shouldn’t be used as facets, such as an ID or name.</source>
            <target state="new">Note that <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> is turned off for string fields that shouldn’t be used as facets, such as an ID or name.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Turning faceting off where you don’t need it helps keep the size of the index small, and generally improves performance.</source>
            <target state="new">Turning faceting off where you don’t need it helps keep the size of the index small, and generally improves performance.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>As a best practice, include the full set of index attributes for each field.</source>
            <target state="new">As a best practice, include the full set of index attributes for each field.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Although <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> is on by default for almost all fields, purposely setting each attribute can help you think through the implications of each schema decision.</source>
            <target state="new">Although <bpt id="2">&lt;code&gt;</bpt>Facetable<ept id="2">&lt;/code&gt;</ept> is on by default for almost all fields, purposely setting each attribute can help you think through the implications of each schema decision.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Check for Data Quality</source>
            <target state="new">Check for Data Quality</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>When developing any data-centric application, preparing the data is often one of the bigger parts of the job.</source>
            <target state="new">When developing any data-centric application, preparing the data is often one of the bigger parts of the job.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Search applications are no exception.</source>
            <target state="new">Search applications are no exception.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>The quality of your data has a direct bearing on whether the faceted navigation structure materializes as you expect it to, as well as its effectiveness in helping you construct filters that reduce the result set.</source>
            <target state="new">The quality of your data has a direct bearing on whether the faceted navigation structure materializes as you expect it to, as well as its effectiveness in helping you construct filters that reduce the result set.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>In Azure Search, the search corpus is formed from documents that populate an index.</source>
            <target state="new">In Azure Search, the search corpus is formed from documents that populate an index.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Documents provide the values that are used to compute facets.</source>
            <target state="new">Documents provide the values that are used to compute facets.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>If you want to facet by Brand or Price, each document should contain values for <bpt id="2">&lt;em&gt;</bpt>BrandName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>ProductPrice<ept id="4">&lt;/em&gt;</ept> that are valid, consistent, and productive as a filter option.</source>
            <target state="new">If you want to facet by Brand or Price, each document should contain values for <bpt id="2">&lt;em&gt;</bpt>BrandName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>ProductPrice<ept id="4">&lt;/em&gt;</ept> that are valid, consistent, and productive as a filter option.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>A few reminders of what to scrub for are listed below:</source>
            <target state="new">A few reminders of what to scrub for are listed below:</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>For every field that you want to facet by, ask yourself whether it contains values that are suitable as filters in self-directed search.</source>
            <target state="new">For every field that you want to facet by, ask yourself whether it contains values that are suitable as filters in self-directed search.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>The values should be short, descriptive, and sufficiently distinctive to offer a clear choice between competing options.</source>
            <target state="new">The values should be short, descriptive, and sufficiently distinctive to offer a clear choice between competing options.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Misspellings or nearly matching values.</source>
            <target state="new">Misspellings or nearly matching values.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>If you facet on Color, and field values include Orange and Ornage (a misspelling), a facet based on the Color field would pick up both.</source>
            <target state="new">If you facet on Color, and field values include Orange and Ornage (a misspelling), a facet based on the Color field would pick up both.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Mixed case text can also wreak havoc in faceted navigation, with orange and Orange appearing as two different values.</source>
            <target state="new">Mixed case text can also wreak havoc in faceted navigation, with orange and Orange appearing as two different values.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Single and plural versions of the same value can result in a separate facet for each.</source>
            <target state="new">Single and plural versions of the same value can result in a separate facet for each.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>As you can imagine, diligence in preparing the data is an essential aspect of effective faceted navigation.</source>
            <target state="new">As you can imagine, diligence in preparing the data is an essential aspect of effective faceted navigation.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Build the query</source>
            <target state="new">Build the query</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>The code that you write for building queries should specify all parts of a valid query, including search expressions, facets, filters, scoring profiles– anything used to formulate a request.</source>
            <target state="new">The code that you write for building queries should specify all parts of a valid query, including search expressions, facets, filters, scoring profiles– anything used to formulate a request.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>In this section, we’ll explore where facets fit into a query, and how filters are used with facets to deliver a reduced result set.</source>
            <target state="new">In this section, we’ll explore where facets fit into a query, and how filters are used with facets to deliver a reduced result set.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>An example is often a good place to begin.</source>
            <target state="new">An example is often a good place to begin.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>The following example, taken from the <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept> file, builds a request that creates facet navigation based on Color, Category, and Price.</source>
            <target state="new">The following example, taken from the <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept> file, builds a request that creates facet navigation based on Color, Category, and Price.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>Notice that facets are integral in this sample application.</source>
            <target state="new">Notice that facets are integral in this sample application.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>The search experience in AdventureWorks Catalog is designed around faceted navigation and filters.</source>
            <target state="new">The search experience in AdventureWorks Catalog is designed around faceted navigation and filters.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>This is evident in the prominent placement of faceted navigation in the page.</source>
            <target state="new">This is evident in the prominent placement of faceted navigation in the page.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>The sample application includes URI parameters for facets (color, category, prices) as properties on the Search method (as constructed in the sample application).</source>
            <target state="new">The sample application includes URI parameters for facets (color, category, prices) as properties on the Search method (as constructed in the sample application).</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>A facet query parameter is set to a field and depending on the data type, can be further parameterized by comma-delimited list that includes <bpt id="2">&lt;code&gt;</bpt>count:&lt;integer&gt;<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>sort:&lt;&gt;<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>intervals:&lt;integer&gt;<ept id="6">&lt;/code&gt;</ept>, and  <bpt id="8">&lt;code&gt;</bpt>values:&lt;list&gt;<ept id="8">&lt;/code&gt;</ept>. A values list is supported for numeric data when setting up ranges. See <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Search Documents (Azure Search API)<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept> for usage details.</source>
            <target state="new">A facet query parameter is set to a field and depending on the data type, can be further parameterized by comma-delimited list that includes <bpt id="2">&lt;code&gt;</bpt>count:&lt;integer&gt;<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>sort:&lt;&gt;<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>intervals:&lt;integer&gt;<ept id="6">&lt;/code&gt;</ept>, and  <bpt id="8">&lt;code&gt;</bpt>values:&lt;list&gt;<ept id="8">&lt;/code&gt;</ept>. A values list is supported for numeric data when setting up ranges. See <bpt id="10CapsExtId1">&lt;link&gt;</bpt><bpt id="10CapsExtId2">&lt;linkText&gt;</bpt>Search Documents (Azure Search API)<ept id="10CapsExtId2">&lt;/linkText&gt;</ept><bpt id="10CapsExtId3">&lt;title&gt;</bpt><ept id="10CapsExtId3">&lt;/title&gt;</ept><ept id="10CapsExtId1">&lt;/link&gt;</ept> for usage details.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>Along with facets, the request formulated by your application should also build filters to narrow down the set of candidate documents based on a facet value selection.</source>
            <target state="new">Along with facets, the request formulated by your application should also build filters to narrow down the set of candidate documents based on a facet value selection.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>For a bike store, faceted navigation provides clues to questions like "What colors, manufacturers, and types of bikes are available", while filtering answers questions like "Which exact bikes are red, mountain bikes, in this price range".</source>
            <target state="new">For a bike store, faceted navigation provides clues to questions like "What colors, manufacturers, and types of bikes are available", while filtering answers questions like "Which exact bikes are red, mountain bikes, in this price range".</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>When a user clicks "Red" to indicate that only Red products should be shown, the next query the application sends would include <bpt id="2">&lt;code&gt;</bpt>$filter=Color eq ‘Red’<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">When a user clicks "Red" to indicate that only Red products should be shown, the next query the application sends would include <bpt id="2">&lt;code&gt;</bpt>$filter=Color eq ‘Red’<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>Best practices for faceted navigation</source>
            <target state="new">Best practices for faceted navigation</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>The following list summarizes a few best practices.</source>
            <target state="new">The following list summarizes a few best practices.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Precision<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Precision<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>Use filters.</source>
            <target state="new">Use filters.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>If you rely on just search expressions alone, stemming could cause a document to be returned that doesn’t have the precise facet value in any of its fields.</source>
            <target state="new">If you rely on just search expressions alone, stemming could cause a document to be returned that doesn’t have the precise facet value in any of its fields.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Target fields<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Target fields<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>In faceted drill down, you typically want to only include documents that have the facet value in a specific (faceted) field, not anywhere across all searchable fields.</source>
            <target state="new">In faceted drill down, you typically want to only include documents that have the facet value in a specific (faceted) field, not anywhere across all searchable fields.</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>Adding a filter reinforces the target field by directing the service to search only in the faceted field for a matching value.</source>
            <target state="new">Adding a filter reinforces the target field by directing the service to search only in the faceted field for a matching value.</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Index efficiency<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Index efficiency<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>If your application uses faceted navigation exclusively (that is, no search box), you can mark the field as <bpt id="2">&lt;code&gt;</bpt>searchable=false<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>facetable=true<ept id="4">&lt;/code&gt;</ept> to produce a more compact index.</source>
            <target state="new">If your application uses faceted navigation exclusively (that is, no search box), you can mark the field as <bpt id="2">&lt;code&gt;</bpt>searchable=false<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>facetable=true<ept id="4">&lt;/code&gt;</ept> to produce a more compact index.</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>In addition, indexing occurs only on whole facet values, with no word-break or indexing of the component parts of a multi-word value.</source>
            <target state="new">In addition, indexing occurs only on whole facet values, with no word-break or indexing of the component parts of a multi-word value.</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Performance<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Performance<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>Filters narrow down the set of candidate documents for search and exclude them from ranking.</source>
            <target state="new">Filters narrow down the set of candidate documents for search and exclude them from ranking.</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>If you have a large set of documents, using a very selective facet drill down will often give you significantly better performance.</source>
            <target state="new">If you have a large set of documents, using a very selective facet drill down will often give you significantly better performance.</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>Tips on how to control faceted navigation</source>
            <target state="new">Tips on how to control faceted navigation</target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source>Below is a tip sheet with guidance on specific issues.</source>
            <target state="new">Below is a tip sheet with guidance on specific issues.</target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Add labels for each field in facet navigation<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Add labels for each field in facet navigation<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>Labels are typically defined in the HTML or form (<bpt id="2">&lt;strong&gt;</bpt>index.cshtml<ept id="2">&lt;/strong&gt;</ept> in the sample application).</source>
            <target state="new">Labels are typically defined in the HTML or form (<bpt id="2">&lt;strong&gt;</bpt>index.cshtml<ept id="2">&lt;/strong&gt;</ept> in the sample application).</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>There is no API in Azure Search for facet navigation labels or any other kind of metadata.</source>
            <target state="new">There is no API in Azure Search for facet navigation labels or any other kind of metadata.</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Define which fields can be used as facet<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Define which fields can be used as facet<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>Recall that the schema of the index determines which fields are available to use as a facet.</source>
            <target state="new">Recall that the schema of the index determines which fields are available to use as a facet.</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>Assuming a field is facetable, the query specifies which fields to facet by.</source>
            <target state="new">Assuming a field is facetable, the query specifies which fields to facet by.</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>The field by which you are faceting provides the values that appear below the label.</source>
            <target state="new">The field by which you are faceting provides the values that appear below the label.</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>The values that appear under each label are retrieved from the index.</source>
            <target state="new">The values that appear under each label are retrieved from the index.</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>For example, if the facet field is <bpt id="2">&lt;em&gt;</bpt>Color<ept id="2">&lt;/em&gt;</ept>, the values available for additional filtering will be the values for that field (Red, Black, and so forth).</source>
            <target state="new">For example, if the facet field is <bpt id="2">&lt;em&gt;</bpt>Color<ept id="2">&lt;/em&gt;</ept>, the values available for additional filtering will be the values for that field (Red, Black, and so forth).</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>For Numeric and DateTime values only, you can explicitly set values on the facet field (for example,</source>
            <target state="new">For Numeric and DateTime values only, you can explicitly set values on the facet field (for example,</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>facet=Rating,values:1|2|3|4|5<ept id="1">&lt;/code&gt;</ept>).</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>facet=Rating,values:1|2|3|4|5<ept id="1">&lt;/code&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>A values list is allowed for these field types to simplify the separation of facet results into contiguous ranges (either ranges based on numeric values or time periods).</source>
            <target state="new">A values list is allowed for these field types to simplify the separation of facet results into contiguous ranges (either ranges based on numeric values or time periods).</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Trim facet results<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Trim facet results<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>Facet results are documents found in the search results that match a facet term.</source>
            <target state="new">Facet results are documents found in the search results that match a facet term.</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>In the following example, in search results for <bpt id="2">&lt;em&gt;</bpt>cloud computing<ept id="2">&lt;/em&gt;</ept>, 254 items also have <bpt id="4">&lt;em&gt;</bpt>internal specification<ept id="4">&lt;/em&gt;</ept> as a content type.</source>
            <target state="new">In the following example, in search results for <bpt id="2">&lt;em&gt;</bpt>cloud computing<ept id="2">&lt;/em&gt;</ept>, 254 items also have <bpt id="4">&lt;em&gt;</bpt>internal specification<ept id="4">&lt;/em&gt;</ept> as a content type.</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>Items are not necessarily mutually exclusive.</source>
            <target state="new">Items are not necessarily mutually exclusive.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source>If an item meets the criteria of both filters, it is counted in each one.</source>
            <target state="new">If an item meets the criteria of both filters, it is counted in each one.</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>This is possible when faceting on <bpt id="2">&lt;code&gt;</bpt>Collection(Edm.String)<ept id="2">&lt;/code&gt;</ept> fields, which are often used to implement document tagging.</source>
            <target state="new">This is possible when faceting on <bpt id="2">&lt;code&gt;</bpt>Collection(Edm.String)<ept id="2">&lt;/code&gt;</ept> fields, which are often used to implement document tagging.</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>In general, if you find that facet results are persistently too large, we recommend that you add more filters, as explained in earlier sections, to give your application users more options for narrowing the search.</source>
            <target state="new">In general, if you find that facet results are persistently too large, we recommend that you add more filters, as explained in earlier sections, to give your application users more options for narrowing the search.</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Limit items in the facet navigation<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Limit items in the facet navigation<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>For each faceted field in the navigation tree, there is a default limit of 10 values.</source>
            <target state="new">For each faceted field in the navigation tree, there is a default limit of 10 values.</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>This default makes sense for navigation structures because it keeps the values list to a manageable size.</source>
            <target state="new">This default makes sense for navigation structures because it keeps the values list to a manageable size.</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>You can override the default by assigning a value to count.</source>
            <target state="new">You can override the default by assigning a value to count.</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>&amp;facet=city,count:5<ept id="1">&lt;/code&gt;</ept> specifies that only the first 5 cities found in the top ranked results are returned as a facet result. Given a search term of “airport” and 32 matches, if the query specifies <bpt id="3">&lt;code&gt;</bpt>&amp;facet=city,count:5<ept id="3">&lt;/code&gt;</ept>, only the first five unique cities with the most documents in the search results are included in the facet results.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>&amp;facet=city,count:5<ept id="1">&lt;/code&gt;</ept> specifies that only the first 5 cities found in the top ranked results are returned as a facet result. Given a search term of “airport” and 32 matches, if the query specifies <bpt id="3">&lt;code&gt;</bpt>&amp;facet=city,count:5<ept id="3">&lt;/code&gt;</ept>, only the first five unique cities with the most documents in the search results are included in the facet results.</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>Notice the distinction between facet results and search results.</source>
            <target state="new">Notice the distinction between facet results and search results.</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>Search results are all the documents that match the query.</source>
            <target state="new">Search results are all the documents that match the query.</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source>Facet results are the matches for each facet value.</source>
            <target state="new">Facet results are the matches for each facet value.</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source>In the example, search results will include City names that are not in the facet classification list (5 in our example).</source>
            <target state="new">In the example, search results will include City names that are not in the facet classification list (5 in our example).</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source>Results that are filtered out through faceted navigation become visible to the user when he or she clears facets, or chooses other facets besides City.</source>
            <target state="new">Results that are filtered out through faceted navigation become visible to the user when he or she clears facets, or chooses other facets besides City.</target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source>Discussing <bpt id="2">&lt;code&gt;</bpt>count<ept id="2">&lt;/code&gt;</ept> when there is more than one type can be confusing.</source>
            <target state="new">Discussing <bpt id="2">&lt;code&gt;</bpt>count<ept id="2">&lt;/code&gt;</ept> when there is more than one type can be confusing.</target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source>The following table offers a brief summary of how the term is used in Azure Search API, sample code, and documentation.</source>
            <target state="new">The following table offers a brief summary of how the term is used in Azure Search API, sample code, and documentation.</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>@colorFacet.count<ept id="1">&lt;/code&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>@colorFacet.count<ept id="1">&lt;/code&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source>In presentation code, you should see a count parameter on the facet, used to display the number of facet results.</source>
            <target state="new">In presentation code, you should see a count parameter on the facet, used to display the number of facet results.</target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source>In facet results, count indicates the number of documents that match on the facet term or range.</source>
            <target state="new">In facet results, count indicates the number of documents that match on the facet term or range.</target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>&amp;facet=City,count:12<ept id="1">&lt;/code&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>&amp;facet=City,count:12<ept id="1">&lt;/code&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source>In a facet query, you can set count to a value.</source>
            <target state="new">In a facet query, you can set count to a value.</target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source>The default is 10, but you can set it higher or lower.</source>
            <target state="new">The default is 10, but you can set it higher or lower.</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source>Setting <bpt id="2">&lt;code&gt;</bpt>count:12<ept id="2">&lt;/code&gt;</ept> gets the top 12 matches in facet results by document count.</source>
            <target state="new">Setting <bpt id="2">&lt;code&gt;</bpt>count:12<ept id="2">&lt;/code&gt;</ept> gets the top 12 matches in facet results by document count.</target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source>"<bpt id="2">&lt;code&gt;</bpt>@odata.count<ept id="2">&lt;/code&gt;</ept>"<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></source>
            <target state="new">"<bpt id="2">&lt;code&gt;</bpt>@odata.count<ept id="2">&lt;/code&gt;</ept>"<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source>In the query response, this value indicates the number of matching items in the search results.</source>
            <target state="new">In the query response, this value indicates the number of matching items in the search results.</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source>On average, it’s larger than the sum of all facet results combined, due to the presence of items that match the search term, but have no facet value matches.</source>
            <target state="new">On average, it’s larger than the sum of all facet results combined, due to the presence of items that match the search term, but have no facet value matches.</target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Levels in faceted navigation<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Levels in faceted navigation<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source>As noted, there is no direct support for nesting facets in a hierarchy.</source>
            <target state="new">As noted, there is no direct support for nesting facets in a hierarchy.</target>
          </trans-unit>
          <trans-unit id="315" xml:space="preserve">
            <source>Out of the box, faceted navigation only supports one level of filters.</source>
            <target state="new">Out of the box, faceted navigation only supports one level of filters.</target>
          </trans-unit>
          <trans-unit id="316" xml:space="preserve">
            <source>However, workarounds do exist.</source>
            <target state="new">However, workarounds do exist.</target>
          </trans-unit>
          <trans-unit id="317" xml:space="preserve">
            <source>You can encode a hierarchical facet structure in a <bpt id="2">&lt;code&gt;</bpt>Collection(Edm.String)<ept id="2">&lt;/code&gt;</ept> with one entry point per hierarchy.</source>
            <target state="new">You can encode a hierarchical facet structure in a <bpt id="2">&lt;code&gt;</bpt>Collection(Edm.String)<ept id="2">&lt;/code&gt;</ept> with one entry point per hierarchy.</target>
          </trans-unit>
          <trans-unit id="318" xml:space="preserve">
            <source>Implementing this workaround is beyond the scope of this article, but you can read about collections in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OData by Example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Implementing this workaround is beyond the scope of this article, but you can read about collections in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OData by Example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="319" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Validate fields<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Validate fields<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="320" xml:space="preserve">
            <source>If you build the list of facets dynamically based on untrusted user input, you should either validate that the names of the faceted fields are valid, or escape the names when building URLs using either <bpt id="2">&lt;code&gt;</bpt>Uri.EscapeDataString()<ept id="2">&lt;/code&gt;</ept> in .NET, or the equivalent in your platform of choice.</source>
            <target state="new">If you build the list of facets dynamically based on untrusted user input, you should either validate that the names of the faceted fields are valid, or escape the names when building URLs using either <bpt id="2">&lt;code&gt;</bpt>Uri.EscapeDataString()<ept id="2">&lt;/code&gt;</ept> in .NET, or the equivalent in your platform of choice.</target>
          </trans-unit>
          <trans-unit id="321" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Counts in facet results<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Counts in facet results<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="322" xml:space="preserve">
            <source>When adding a filter to a faceted query, you might want to retain the facet statement (for example, <bpt id="2">&lt;code&gt;</bpt>facet=Rating&amp;$filter=Rating ge 4<ept id="2">&lt;/code&gt;</ept>). Technically, facet=Rating isn’t needed, but keeping it returns the counts of facet values for ratings 4 and higher. For example, if a user clicks "4" and the query includes a filter for greater or equal to "4", counts are returned for each rating that is 4 and up.</source>
            <target state="new">When adding a filter to a faceted query, you might want to retain the facet statement (for example, <bpt id="2">&lt;code&gt;</bpt>facet=Rating&amp;$filter=Rating ge 4<ept id="2">&lt;/code&gt;</ept>). Technically, facet=Rating isn’t needed, but keeping it returns the counts of facet values for ratings 4 and higher. For example, if a user clicks "4" and the query includes a filter for greater or equal to "4", counts are returned for each rating that is 4 and up.</target>
          </trans-unit>
          <trans-unit id="323" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Sharding implications on facet counts<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Sharding implications on facet counts<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="324" xml:space="preserve">
            <source>Under certain circumstances, you might find that facet counts do not match the result sets (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation in Azure Search (forum post)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Under certain circumstances, you might find that facet counts do not match the result sets (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Faceted navigation in Azure Search (forum post)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="325" xml:space="preserve">
            <source>Facet counts can be inaccurate due to the sharding architecture.</source>
            <target state="new">Facet counts can be inaccurate due to the sharding architecture.</target>
          </trans-unit>
          <trans-unit id="326" xml:space="preserve">
            <source>Every search index has multiple shards, and each one reports the top N facets by document count, which is then combined into a single result.</source>
            <target state="new">Every search index has multiple shards, and each one reports the top N facets by document count, which is then combined into a single result.</target>
          </trans-unit>
          <trans-unit id="327" xml:space="preserve">
            <source>If some shards have a lot of matching values, while others have less, you may find that some facet values are missing or under-counted in the results.</source>
            <target state="new">If some shards have a lot of matching values, while others have less, you may find that some facet values are missing or under-counted in the results.</target>
          </trans-unit>
          <trans-unit id="328" xml:space="preserve">
            <source>Although this behavior could change at any time, if you encounter this behavior today, you can work around it by artificially inflating the count:<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> to a very large number to enforce full reporting from each shard. If the value of count: is greater than or equal to the number of unique values in the field, you are guaranteed accurate results. However, when document counts are really high, there is a performance penalty, so used this option judiciously.</source>
            <target state="new">Although this behavior could change at any time, if you encounter this behavior today, you can work around it by artificially inflating the count:<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> to a very large number to enforce full reporting from each shard. If the value of count: is greater than or equal to the number of unique values in the field, you are guaranteed accurate results. However, when document counts are really high, there is a performance penalty, so used this option judiciously.</target>
          </trans-unit>
          <trans-unit id="329" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="330" xml:space="preserve">
            <source>Facet navigation based on a range values</source>
            <target state="new">Facet navigation based on a range values</target>
          </trans-unit>
          <trans-unit id="331" xml:space="preserve">
            <source>Faceting over ranges is a common search application requirement.</source>
            <target state="new">Faceting over ranges is a common search application requirement.</target>
          </trans-unit>
          <trans-unit id="332" xml:space="preserve">
            <source>Ranges are supported for numeric data and DateTime values.</source>
            <target state="new">Ranges are supported for numeric data and DateTime values.</target>
          </trans-unit>
          <trans-unit id="333" xml:space="preserve">
            <source>You can read more about each approach in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents (Azure Search API)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can read more about each approach in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents (Azure Search API)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="334" xml:space="preserve">
            <source>Azure Search simplifies range construction by providing two approaches for computing a range.</source>
            <target state="new">Azure Search simplifies range construction by providing two approaches for computing a range.</target>
          </trans-unit>
          <trans-unit id="335" xml:space="preserve">
            <source>For both approaches, Azure Search creates the appropriate ranges given the inputs you’ve provided.</source>
            <target state="new">For both approaches, Azure Search creates the appropriate ranges given the inputs you’ve provided.</target>
          </trans-unit>
          <trans-unit id="336" xml:space="preserve">
            <source>For instance, if you specify range values of 10|20|30, it will automatically create ranges of 0 -10, 10-20, 20-30.</source>
            <target state="new">For instance, if you specify range values of 10|20|30, it will automatically create ranges of 0 -10, 10-20, 20-30.</target>
          </trans-unit>
          <trans-unit id="337" xml:space="preserve">
            <source>The sample application removes any intervals that are empty.</source>
            <target state="new">The sample application removes any intervals that are empty.</target>
          </trans-unit>
          <trans-unit id="338" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Approach 1: Use the interval parameter<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Approach 1: Use the interval parameter<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="339" xml:space="preserve">
            <source>To set price facets in $10 increments, you would specify: <bpt id="2">&lt;code&gt;</bpt>&amp;facet=price,interval:10<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">To set price facets in $10 increments, you would specify: <bpt id="2">&lt;code&gt;</bpt>&amp;facet=price,interval:10<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="340" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Approach 2: Use a values list<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Approach 2: Use a values list<ept id="1">&lt;/strong&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="341" xml:space="preserve">
            <source>For numeric data, you can use a values list.</source>
            <target state="new">For numeric data, you can use a values list.</target>
          </trans-unit>
          <trans-unit id="342" xml:space="preserve">
            <source>Consider the facet range for listPrice, rendered as follows:</source>
            <target state="new">Consider the facet range for listPrice, rendered as follows:</target>
          </trans-unit>
          <trans-unit id="343" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="344" xml:space="preserve">
            <source>The range is specified in the <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept> file using a values list:</source>
            <target state="new">The range is specified in the <bpt id="2">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="2">&lt;/strong&gt;</ept> file using a values list:</target>
          </trans-unit>
          <trans-unit id="345" xml:space="preserve">
            <source>Each range is built using 0 as a starting point, a value from the list as an endpoint, and then trimmed of the previous range to create discrete intervals.</source>
            <target state="new">Each range is built using 0 as a starting point, a value from the list as an endpoint, and then trimmed of the previous range to create discrete intervals.</target>
          </trans-unit>
          <trans-unit id="346" xml:space="preserve">
            <source>Azure Search will do this as part of faceted navigation.</source>
            <target state="new">Azure Search will do this as part of faceted navigation.</target>
          </trans-unit>
          <trans-unit id="347" xml:space="preserve">
            <source>You do not have to write code for structuring each interval.</source>
            <target state="new">You do not have to write code for structuring each interval.</target>
          </trans-unit>
          <trans-unit id="348" xml:space="preserve">
            <source>Build a filter for facet ranges</source>
            <target state="new">Build a filter for facet ranges</target>
          </trans-unit>
          <trans-unit id="349" xml:space="preserve">
            <source>To filter documents based on a range selected by the user, you can the <bpt id="2">&lt;code&gt;</bpt>"ge"<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>"lt"<ept id="4">&lt;/code&gt;</ept> filter operators in a two-part expression that defines the endpoints of the range.</source>
            <target state="new">To filter documents based on a range selected by the user, you can the <bpt id="2">&lt;code&gt;</bpt>"ge"<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>"lt"<ept id="4">&lt;/code&gt;</ept> filter operators in a two-part expression that defines the endpoints of the range.</target>
          </trans-unit>
          <trans-unit id="350" xml:space="preserve">
            <source>For example, if the user chooses the range 10-25, the filter would be <bpt id="2">&lt;code&gt;</bpt>$filter=listPrice ge 10 and listPrice lt 25<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, if the user chooses the range 10-25, the filter would be <bpt id="2">&lt;code&gt;</bpt>$filter=listPrice ge 10 and listPrice lt 25<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="351" xml:space="preserve">
            <source>In the sample application, the filter expression uses <bpt id="2">&lt;strong&gt;</bpt>priceFrom<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>priceTo<ept id="4">&lt;/strong&gt;</ept> parameters to set the endpoints.</source>
            <target state="new">In the sample application, the filter expression uses <bpt id="2">&lt;strong&gt;</bpt>priceFrom<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>priceTo<ept id="4">&lt;/strong&gt;</ept> parameters to set the endpoints.</target>
          </trans-unit>
          <trans-unit id="352" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>BuildFilter<ept id="2">&lt;/strong&gt;</ept> method in <bpt id="4">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="4">&lt;/strong&gt;</ept> contains the filter expression that gives you the documents within a range.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>BuildFilter<ept id="2">&lt;/strong&gt;</ept> method in <bpt id="4">&lt;strong&gt;</bpt>CatalogSearch.cs<ept id="4">&lt;/strong&gt;</ept> contains the filter expression that gives you the documents within a range.</target>
          </trans-unit>
          <trans-unit id="353" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="354" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="355" xml:space="preserve">
            <source>Filtered navigation based on GeoPoints</source>
            <target state="new">Filtered navigation based on GeoPoints</target>
          </trans-unit>
          <trans-unit id="356" xml:space="preserve">
            <source>It’s common to see filters that help you choose a store, restaurant, or destination based on its proximity to your current location.</source>
            <target state="new">It’s common to see filters that help you choose a store, restaurant, or destination based on its proximity to your current location.</target>
          </trans-unit>
          <trans-unit id="357" xml:space="preserve">
            <source>While this type of filter might look like faceted navigation, it’s actually just a filter.</source>
            <target state="new">While this type of filter might look like faceted navigation, it’s actually just a filter.</target>
          </trans-unit>
          <trans-unit id="358" xml:space="preserve">
            <source>We mention it here for those of you who are specifically looking for implementation advice for that particular design problem.</source>
            <target state="new">We mention it here for those of you who are specifically looking for implementation advice for that particular design problem.</target>
          </trans-unit>
          <trans-unit id="359" xml:space="preserve">
            <source>There are two Geospatial functions in Azure Search, <bpt id="2">&lt;strong&gt;</bpt>geo.distance<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>geo.intersects<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">There are two Geospatial functions in Azure Search, <bpt id="2">&lt;strong&gt;</bpt>geo.distance<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>geo.intersects<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="360" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>geo.distance<ept id="2">&lt;/strong&gt;</ept> function returns the distance in kilometers between two points, one being a field and one being a constant passed as part of the filter.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>geo.distance<ept id="2">&lt;/strong&gt;</ept> function returns the distance in kilometers between two points, one being a field and one being a constant passed as part of the filter.</target>
          </trans-unit>
          <trans-unit id="361" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>geo.intersects<ept id="2">&lt;/strong&gt;</ept> function returns true if a given point is within a given polygon, where the point is a field and the polygon is specified as a constant list of coordinates passed as part of the filter.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>geo.intersects<ept id="2">&lt;/strong&gt;</ept> function returns true if a given point is within a given polygon, where the point is a field and the polygon is specified as a constant list of coordinates passed as part of the filter.</target>
          </trans-unit>
          <trans-unit id="362" xml:space="preserve">
            <source>You can find filter examples in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OData expression syntax (Azure Search)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can find filter examples in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>OData expression syntax (Azure Search)<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="363" xml:space="preserve">
            <source>To learn more about geospatial search, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a geospatial search application in Azure Search<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn more about geospatial search, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a geospatial search application in Azure Search<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="364" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="365" xml:space="preserve">
            <source>Try it out</source>
            <target state="new">Try it out</target>
          </trans-unit>
          <trans-unit id="366" xml:space="preserve">
            <source>Azure Search Adventure Works Demo on Codeplex contains the examples referenced in this article.</source>
            <target state="new">Azure Search Adventure Works Demo on Codeplex contains the examples referenced in this article.</target>
          </trans-unit>
          <trans-unit id="367" xml:space="preserve">
            <source>As you work with search results, watch the URL for changes in query construction.</source>
            <target state="new">As you work with search results, watch the URL for changes in query construction.</target>
          </trans-unit>
          <trans-unit id="368" xml:space="preserve">
            <source>This application happens to append facets to the URI as you select each one.</source>
            <target state="new">This application happens to append facets to the URI as you select each one.</target>
          </trans-unit>
          <trans-unit id="369" xml:space="preserve">
            <source>Configure the sample application (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first application for instructions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Configure the sample application (see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create your first application for instructions<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="370" xml:space="preserve">
            <source>Notice the schema that is defined in the Program.cs file of the CatalogIndexer project.</source>
            <target state="new">Notice the schema that is defined in the Program.cs file of the CatalogIndexer project.</target>
          </trans-unit>
          <trans-unit id="371" xml:space="preserve">
            <source>It specifies facetable fields for color, listPrice, size, weight, categoryName, and modelName.</source>
            <target state="new">It specifies facetable fields for color, listPrice, size, weight, categoryName, and modelName.</target>
          </trans-unit>
          <trans-unit id="372" xml:space="preserve">
            <source>Only a few of these (color, listPrice, categoryName) are actually implemented in faceted navigation.</source>
            <target state="new">Only a few of these (color, listPrice, categoryName) are actually implemented in faceted navigation.</target>
          </trans-unit>
          <trans-unit id="373" xml:space="preserve">
            <source>Run the application.</source>
            <target state="new">Run the application.</target>
          </trans-unit>
          <trans-unit id="374" xml:space="preserve">
            <source>At first, just the Search box is visible.</source>
            <target state="new">At first, just the Search box is visible.</target>
          </trans-unit>
          <trans-unit id="375" xml:space="preserve">
            <source>You can click the Search button right away to get all results, or type a search term.</source>
            <target state="new">You can click the Search button right away to get all results, or type a search term.</target>
          </trans-unit>
          <trans-unit id="376" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="377" xml:space="preserve">
            <source>Enter a search term, such as bike, and click <bpt id="2">&lt;strong&gt;</bpt>Search<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Enter a search term, such as bike, and click <bpt id="2">&lt;strong&gt;</bpt>Search<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="378" xml:space="preserve">
            <source>The query executes quickly.</source>
            <target state="new">The query executes quickly.</target>
          </trans-unit>
          <trans-unit id="379" xml:space="preserve">
            <source>A faceted navigation structure is also returned with the search results.</source>
            <target state="new">A faceted navigation structure is also returned with the search results.</target>
          </trans-unit>
          <trans-unit id="380" xml:space="preserve">
            <source>In the URL, facets for Colors, Categories, and Prices are null.</source>
            <target state="new">In the URL, facets for Colors, Categories, and Prices are null.</target>
          </trans-unit>
          <trans-unit id="381" xml:space="preserve">
            <source>In the search result page, the faceted navigation structure includes counts for each facet result.</source>
            <target state="new">In the search result page, the faceted navigation structure includes counts for each facet result.</target>
          </trans-unit>
          <trans-unit id="382" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="383" xml:space="preserve">
            <source>Click a color, category, and price range.</source>
            <target state="new">Click a color, category, and price range.</target>
          </trans-unit>
          <trans-unit id="384" xml:space="preserve">
            <source>Facets are null on an initial search, but as they take on values, the search results are trimmed of items that no longer match.</source>
            <target state="new">Facets are null on an initial search, but as they take on values, the search results are trimmed of items that no longer match.</target>
          </trans-unit>
          <trans-unit id="385" xml:space="preserve">
            <source>Notice that the URI picks up the changes to your query.</source>
            <target state="new">Notice that the URI picks up the changes to your query.</target>
          </trans-unit>
          <trans-unit id="386" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="387" xml:space="preserve">
            <source>To clear the faceted query so that you can try different query behaviors, click <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks Catalog<ept id="2">&lt;/strong&gt;</ept> at the top of the page.</source>
            <target state="new">To clear the faceted query so that you can try different query behaviors, click <bpt id="2">&lt;strong&gt;</bpt>AdventureWorks Catalog<ept id="2">&lt;/strong&gt;</ept> at the top of the page.</target>
          </trans-unit>
          <trans-unit id="388" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="389" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="390" xml:space="preserve">
            <source>Next Step</source>
            <target state="new">Next Step</target>
          </trans-unit>
          <trans-unit id="391" xml:space="preserve">
            <source>To test your knowledge, you can add a facet field for <bpt id="2">&lt;em&gt;</bpt>modelName<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">To test your knowledge, you can add a facet field for <bpt id="2">&lt;em&gt;</bpt>modelName<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="392" xml:space="preserve">
            <source>The index is already set up for this facet, so no changes to the index are required.</source>
            <target state="new">The index is already set up for this facet, so no changes to the index are required.</target>
          </trans-unit>
          <trans-unit id="393" xml:space="preserve">
            <source>But you will need to modify the HTML to include a new facet for Models, and add the facet field to the query constructor.</source>
            <target state="new">But you will need to modify the HTML to include a new facet for Models, and add the facet field to the query constructor.</target>
          </trans-unit>
          <trans-unit id="394" xml:space="preserve">
            <source>For more insights on design principles for faceted navigation, we recommend the following links:</source>
            <target state="new">For more insights on design principles for faceted navigation, we recommend the following links:</target>
          </trans-unit>
          <trans-unit id="395" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Designing for Faceted Search<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Designing for Faceted Search<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="396" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Design Patterns: Faceted Navigation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Design Patterns: Faceted Navigation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>