<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:30:09 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5190409a9cfe4f63febba75b6446316e449a2e01</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Queue storage from Ruby | Microsoft Azure</source>
            <target state="new">How to use Queue storage from Ruby | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the Azure Queue service to create and delete queues, and insert, get, and delete messages. Samples written in Ruby.</source>
            <target state="new">Learn how to use the Azure Queue service to create and delete queues, and insert, get, and delete messages. Samples written in Ruby.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Queue storage from Ruby</source>
            <target state="new">How to use Queue storage from Ruby</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-queue-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-queue-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This guide shows you how to perform common scenarios using the Microsoft</source>
            <target state="new">This guide shows you how to perform common scenarios using the Microsoft</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Azure Queue Storage service.</source>
            <target state="new">Azure Queue Storage service.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The samples are written using the Ruby Azure API.</source>
            <target state="new">The samples are written using the Ruby Azure API.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>inserting<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>peeking<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>getting<ept id="6">&lt;/strong&gt;</ept>,</source>
            <target state="new">The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>inserting<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>peeking<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>getting<ept id="6">&lt;/strong&gt;</ept>,</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>and <bpt id="2">&lt;strong&gt;</bpt>deleting<ept id="2">&lt;/strong&gt;</ept> queue messages, as well as **creating and deleting</source>
            <target state="new">and <bpt id="2">&lt;strong&gt;</bpt>deleting<ept id="2">&lt;/strong&gt;</ept> queue messages, as well as **creating and deleting</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>queues**.</source>
            <target state="new">queues**.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-queue-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-queue-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Create a Ruby Application</source>
            <target state="new">Create a Ruby Application</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Create a Ruby application.</source>
            <target state="new">Create a Ruby application.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>For instructions,</source>
            <target state="new">For instructions,</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Ruby Application on Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Ruby Application on Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Configure Your Application to Access Storage</source>
            <target state="new">Configure Your Application to Access Storage</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To use Azure storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.</source>
            <target state="new">To use Azure storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Use RubyGems to obtain the package</source>
            <target state="new">Use RubyGems to obtain the package</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Use a command-line interface such as <bpt id="2">&lt;strong&gt;</bpt>PowerShell<ept id="2">&lt;/strong&gt;</ept> (Windows), <bpt id="4">&lt;strong&gt;</bpt>Terminal<ept id="4">&lt;/strong&gt;</ept> (Mac), or <bpt id="6">&lt;strong&gt;</bpt>Bash<ept id="6">&lt;/strong&gt;</ept> (Unix).</source>
            <target state="new">Use a command-line interface such as <bpt id="2">&lt;strong&gt;</bpt>PowerShell<ept id="2">&lt;/strong&gt;</ept> (Windows), <bpt id="4">&lt;strong&gt;</bpt>Terminal<ept id="4">&lt;/strong&gt;</ept> (Mac), or <bpt id="6">&lt;strong&gt;</bpt>Bash<ept id="6">&lt;/strong&gt;</ept> (Unix).</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Type "gem install azure" in the command window to install the gem and dependencies.</source>
            <target state="new">Type "gem install azure" in the command window to install the gem and dependencies.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Import the package</source>
            <target state="new">Import the package</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Use your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:</source>
            <target state="new">Use your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Setup an Azure Storage Connection</source>
            <target state="new">Setup an Azure Storage Connection</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The azure module will read the environment variables <bpt id="2">&lt;strong&gt;</bpt>AZURE\_STORAGE\_ACCOUNT<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>AZURE\_STORAGE\_ACCESS_KEY<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">The azure module will read the environment variables <bpt id="2">&lt;strong&gt;</bpt>AZURE\_STORAGE\_ACCOUNT<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>AZURE\_STORAGE\_ACCESS_KEY<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>for information required to connect to your Azure storage account.</source>
            <target state="new">for information required to connect to your Azure storage account.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>If these environment variables are not set,</source>
            <target state="new">If these environment variables are not set,</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>you must specify the account information before using <bpt id="2">&lt;strong&gt;</bpt>Azure::QueueService<ept id="2">&lt;/strong&gt;</ept> with the following code:</source>
            <target state="new">you must specify the account information before using <bpt id="2">&lt;strong&gt;</bpt>Azure::QueueService<ept id="2">&lt;/strong&gt;</ept> with the following code:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>To obtain these values:</source>
            <target state="new">To obtain these values:</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Log into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Log into the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Navigate to the storage account you want to use</source>
            <target state="new">Navigate to the storage account you want to use</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> at the bottom of the navigation pane.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>MANAGE KEYS<ept id="2">&lt;/strong&gt;</ept> at the bottom of the navigation pane.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>In the pop up dialog, you will see the storage account name, primary access key and secondary access key.</source>
            <target state="new">In the pop up dialog, you will see the storage account name, primary access key and secondary access key.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>For access key, you can select either the primary one or the secondary one.</source>
            <target state="new">For access key, you can select either the primary one or the secondary one.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>How To: Create a Queue</source>
            <target state="new">How To: Create a Queue</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>Azure::QueueService<ept id="2">&lt;/strong&gt;</ept> object, which enables you to work with queues.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>Azure::QueueService<ept id="2">&lt;/strong&gt;</ept> object, which enables you to work with queues.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>create_queue()<ept id="2">&lt;/strong&gt;</ept> method to create a queue with the specified name.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>create_queue()<ept id="2">&lt;/strong&gt;</ept> method to create a queue with the specified name.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>How To: Insert a Message into a Queue</source>
            <target state="new">How To: Insert a Message into a Queue</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>To insert a message into a queue, use the <bpt id="2">&lt;strong&gt;</bpt>create_message()<ept id="2">&lt;/strong&gt;</ept> method to create a new message and add it to the queue.</source>
            <target state="new">To insert a message into a queue, use the <bpt id="2">&lt;strong&gt;</bpt>create_message()<ept id="2">&lt;/strong&gt;</ept> method to create a new message and add it to the queue.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>How To: Peek at the Next Message</source>
            <target state="new">How To: Peek at the Next Message</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>peek\_messages()<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>peek\_messages()<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>By default, <bpt id="2">&lt;strong&gt;</bpt>peek\_messages()<ept id="2">&lt;/strong&gt;</ept> peeks at a single message.</source>
            <target state="new">By default, <bpt id="2">&lt;strong&gt;</bpt>peek\_messages()<ept id="2">&lt;/strong&gt;</ept> peeks at a single message.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>You can also specify how many messages you want to peek.</source>
            <target state="new">You can also specify how many messages you want to peek.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>How To: Dequeue the Next Message</source>
            <target state="new">How To: Dequeue the Next Message</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>You can remove a message from a queue in two steps.</source>
            <target state="new">You can remove a message from a queue in two steps.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>When you call <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept>, you get the next message in a queue by default.</source>
            <target state="new">When you call <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept>, you get the next message in a queue by default.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>You can also specify how many messages you want to get.</source>
            <target state="new">You can also specify how many messages you want to get.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>The messages returned from <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages from this queue.</source>
            <target state="new">The messages returned from <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages from this queue.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>You pass in the visibility timeout in seconds as a parameter.</source>
            <target state="new">You pass in the visibility timeout in seconds as a parameter.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>To finish removing the message from the queue, you must also call <bpt id="2">&lt;strong&gt;</bpt>delete_message()<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To finish removing the message from the queue, you must also call <bpt id="2">&lt;strong&gt;</bpt>delete_message()<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>This two-step process of removing a message assures that when your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
            <target state="new">This two-step process of removing a message assures that when your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Your code calls <bpt id="2">&lt;strong&gt;</bpt>delete\_message()<ept id="2">&lt;/strong&gt;</ept> right after the message has been processed.</source>
            <target state="new">Your code calls <bpt id="2">&lt;strong&gt;</bpt>delete\_message()<ept id="2">&lt;/strong&gt;</ept> right after the message has been processed.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>How To: Change the Contents of a Queued Message</source>
            <target state="new">How To: Change the Contents of a Queued Message</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>You can change the contents of a message in-place in the queue.</source>
            <target state="new">You can change the contents of a message in-place in the queue.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The code below uses the <bpt id="2">&lt;strong&gt;</bpt>update_message()<ept id="2">&lt;/strong&gt;</ept> method to update a message.</source>
            <target state="new">The code below uses the <bpt id="2">&lt;strong&gt;</bpt>update_message()<ept id="2">&lt;/strong&gt;</ept> method to update a message.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The method will return a tuple which contains the pop receipt of the queue message and a UTC date time value that represents when the message will be visible on the queue.</source>
            <target state="new">The method will return a tuple which contains the pop receipt of the queue message and a UTC date time value that represents when the message will be visible on the queue.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>How To: Additional Options for Dequeuing Messages</source>
            <target state="new">How To: Additional Options for Dequeuing Messages</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>There are two ways you can customize message retrieval from a queue.</source>
            <target state="new">There are two ways you can customize message retrieval from a queue.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>You can get a batch of message.</source>
            <target state="new">You can get a batch of message.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>You can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</source>
            <target state="new">You can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The following code example uses the <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept> method to get 15 messages in one call.</source>
            <target state="new">The following code example uses the <bpt id="2">&lt;strong&gt;</bpt>list\_messages()<ept id="2">&lt;/strong&gt;</ept> method to get 15 messages in one call.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Then it prints and deletes each message.</source>
            <target state="new">Then it prints and deletes each message.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>It also sets the invisibility timeout to five minutes for each message.</source>
            <target state="new">It also sets the invisibility timeout to five minutes for each message.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>How To: Get the Queue Length</source>
            <target state="new">How To: Get the Queue Length</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>You can get an estimation of the number of messages in the queue.</source>
            <target state="new">You can get an estimation of the number of messages in the queue.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>get\_queue\_metadata()<ept id="2">&lt;/strong&gt;</ept> method asks the queue service to return the approximate message count and metadata about the queue.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>get\_queue\_metadata()<ept id="2">&lt;/strong&gt;</ept> method asks the queue service to return the approximate message count and metadata about the queue.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>How To: Delete a Queue</source>
            <target state="new">How To: Delete a Queue</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>To delete a queue and all the messages contained in it, call the <bpt id="2">&lt;strong&gt;</bpt>delete\_queue()<ept id="2">&lt;/strong&gt;</ept> method on the queue object.</source>
            <target state="new">To delete a queue and all the messages contained in it, call the <bpt id="2">&lt;strong&gt;</bpt>delete\_queue()<ept id="2">&lt;/strong&gt;</ept> method on the queue object.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Now that you've learned the basics of queue storage, follow these links to learn about more complex storage tasks.</source>
            <target state="new">Now that you've learned the basics of queue storage, follow these links to learn about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK for Ruby<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub</source>
            <target state="new">Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK for Ruby<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>For a comparision between the Azure Queue Service discussed in this article and Azure Service Bus Queues discussed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Service Bus Queues<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Queues and Azure Service Bus Queues - Compared and Contrasted<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For a comparision between the Azure Queue Service discussed in this article and Azure Service Bus Queues discussed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Service Bus Queues<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article, see <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Queues and Azure Service Bus Queues - Compared and Contrasted<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>