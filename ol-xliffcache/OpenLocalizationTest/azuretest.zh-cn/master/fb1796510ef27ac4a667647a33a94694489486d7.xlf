<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 5:14:50 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb1796510ef27ac4a667647a33a94694489486d7</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Scheduler High-Availability and Reliability</source>
            <target state="new">Scheduler High-Availability and Reliability</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Scheduler High-Availability and Reliability</source>
            <target state="new">Scheduler High-Availability and Reliability</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Azure Scheduler High-Availability</source>
            <target state="new">Azure Scheduler High-Availability</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>As a core Azure platform service, Azure Scheduler is highly available and features both geo-redundant service deployment and geo-regional job replication.</source>
            <target state="new">As a core Azure platform service, Azure Scheduler is highly available and features both geo-redundant service deployment and geo-regional job replication.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Geo-redundant service deployment</source>
            <target state="new">Geo-redundant service deployment</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Azure Scheduler is available via the UI in almost every geo region that's in Azure today.</source>
            <target state="new">Azure Scheduler is available via the UI in almost every geo region that's in Azure today.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The list of regions that Azure Scheduler is available in is <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>listed here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The list of regions that Azure Scheduler is available in is <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>listed here<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>If a data center in a hosted region is rendered unavailable, the failover capabilities of Azure Scheduler are such that the service is available from another data center.</source>
            <target state="new">If a data center in a hosted region is rendered unavailable, the failover capabilities of Azure Scheduler are such that the service is available from another data center.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Geo-regional job replication</source>
            <target state="new">Geo-regional job replication</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Not only is the Azure Scheduler front-end available for management requests, but your own job is also geo-replicated.</source>
            <target state="new">Not only is the Azure Scheduler front-end available for management requests, but your own job is also geo-replicated.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>When there’s an outage in one region, Azure Scheduler fails over and ensures that the job is run from another data center in the paired geographic region.</source>
            <target state="new">When there’s an outage in one region, Azure Scheduler fails over and ensures that the job is run from another data center in the paired geographic region.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For example, if you’ve created a job in South Central US, Azure Scheduler automatically replicates that job in North Central US.</source>
            <target state="new">For example, if you’ve created a job in South Central US, Azure Scheduler automatically replicates that job in North Central US.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>When there’s a failure in South Central US, Azure Scheduler ensures that the job is run from North Central US.</source>
            <target state="new">When there’s a failure in South Central US, Azure Scheduler ensures that the job is run from North Central US.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The list of paired Azure regions is available here<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>The list of paired Azure regions is available here<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>As a result, Azure Scheduler ensures that your data stays within the same broader geographic region in case of an Azure failure.</source>
            <target state="new">As a result, Azure Scheduler ensures that your data stays within the same broader geographic region in case of an Azure failure.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>As a result, you need not duplicate your job just to add high availability – Azure Scheduler automatically provides high-availability capabilities for your jobs.</source>
            <target state="new">As a result, you need not duplicate your job just to add high availability – Azure Scheduler automatically provides high-availability capabilities for your jobs.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Azure Scheduler Reliability</source>
            <target state="new">Azure Scheduler Reliability</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Azure Scheduler guarantees its own high-availability and takes a different approach to user-created jobs.</source>
            <target state="new">Azure Scheduler guarantees its own high-availability and takes a different approach to user-created jobs.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>For example, your job may invoke an HTTP endpoint that’s unavailable.</source>
            <target state="new">For example, your job may invoke an HTTP endpoint that’s unavailable.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Azure Scheduler nonetheless tries to execute your job successfully, by giving you alternative options to deal with failure.</source>
            <target state="new">Azure Scheduler nonetheless tries to execute your job successfully, by giving you alternative options to deal with failure.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Azure Scheduler does this in two ways:</source>
            <target state="new">Azure Scheduler does this in two ways:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Configurable Retry Policy via “retryPolicy”</source>
            <target state="new">Configurable Retry Policy via “retryPolicy”</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Azure Scheduler allows you to configure a retry policy.</source>
            <target state="new">Azure Scheduler allows you to configure a retry policy.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>By default, if a job fails, Scheduler tries the job again four more times, at 30-second intervals.</source>
            <target state="new">By default, if a job fails, Scheduler tries the job again four more times, at 30-second intervals.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>You may re-configure this retry policy to be more aggressive (for example, ten times, at 30-second intervals) or looser (for example, two times, at daily intervals.)</source>
            <target state="new">You may re-configure this retry policy to be more aggressive (for example, ten times, at 30-second intervals) or looser (for example, two times, at daily intervals.)</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>As an example of when this may help, you may create a job that runs once a week and invokes an HTTP endpoint.</source>
            <target state="new">As an example of when this may help, you may create a job that runs once a week and invokes an HTTP endpoint.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>If the HTTP endpoint is down for a few hours when your job runs, you may not want to wait one more week for the job to run again since even the default retry policy will fail.</source>
            <target state="new">If the HTTP endpoint is down for a few hours when your job runs, you may not want to wait one more week for the job to run again since even the default retry policy will fail.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In such cases, you may reconfigure the standard retry policy to retry every three hours (for example) instead of every 30 seconds.</source>
            <target state="new">In such cases, you may reconfigure the standard retry policy to retry every three hours (for example) instead of every 30 seconds.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>To learn how to configure a retry policy, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>retryPolicy<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn how to configure a retry policy, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>retryPolicy<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Alternate Endpoint Configurability via “errorAction”</source>
            <target state="new">Alternate Endpoint Configurability via “errorAction”</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>If the target endpoint for your Azure Scheduler job remains unreachable, Azure Scheduler falls back to the alternate error-handling endpoint after following its retry policy.</source>
            <target state="new">If the target endpoint for your Azure Scheduler job remains unreachable, Azure Scheduler falls back to the alternate error-handling endpoint after following its retry policy.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>If an alternate error-handling endpoint is configured, Azure Scheduler invokes it.</source>
            <target state="new">If an alternate error-handling endpoint is configured, Azure Scheduler invokes it.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>With an alternate endpoint, your own jobs are highly available in the face of failure.</source>
            <target state="new">With an alternate endpoint, your own jobs are highly available in the face of failure.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>As an example, in the diagram below, Azure Scheduler follows its retry policy to hit a New York web service.</source>
            <target state="new">As an example, in the diagram below, Azure Scheduler follows its retry policy to hit a New York web service.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>After the retries fail, it checks if there's an alternate.</source>
            <target state="new">After the retries fail, it checks if there's an alternate.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>It then goes ahead and starts making requests to the alternate with the same retry policy.</source>
            <target state="new">It then goes ahead and starts making requests to the alternate with the same retry policy.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Note that the same retry policy applies to both the original action and the alternate error action.</source>
            <target state="new">Note that the same retry policy applies to both the original action and the alternate error action.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>It’s also possible to have the alternate error action’s action type be different from the main action’s action type.</source>
            <target state="new">It’s also possible to have the alternate error action’s action type be different from the main action’s action type.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>For example, while the main action may be invoking an HTTP endpoint, the error action may instead be a storage queue action that does error-logging.</source>
            <target state="new">For example, while the main action may be invoking an HTTP endpoint, the error action may instead be a storage queue action that does error-logging.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>To learn how to configure an alternate endpoint, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>errorAction<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To learn how to configure an alternate endpoint, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>errorAction<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What is Scheduler?<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What is Scheduler?<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Concepts, Terminology, and Entity Hierarchy<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Concepts, Terminology, and Entity Hierarchy<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started Using Scheduler in the Management Portal<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started Using Scheduler in the Management Portal<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Plans and Billing in Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Plans and Billing in Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Build Complex Schedules and Advanced Recurrence with Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Build Complex Schedules and Advanced Recurrence with Azure Scheduler<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler REST API Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler REST API Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler PowerShell Cmdlets Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler PowerShell Cmdlets Reference<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Limits, Defaults, and Error Codes<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Limits, Defaults, and Error Codes<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Outbound Authentication<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Scheduler Outbound Authentication<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>