<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:52:08 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67177b637b6895a18a806ffd8733108da759a2ed</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Azure Resource Manager Advanced Template Operations</source>
            <target state="new">Azure Resource Manager Advanced Template Operations</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Describes how to use nested templates and the copy operation in an Azure Resource Manager template when deploying apps to Azure.</source>
            <target state="new">Describes how to use nested templates and the copy operation in an Azure Resource Manager template when deploying apps to Azure.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Advanced Template Operations</source>
            <target state="new">Advanced Template Operations</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This topic describes the copy operation and nested templates which you can use to perform more advanced tasks when deploying resources to Azure.</source>
            <target state="new">This topic describes the copy operation and nested templates which you can use to perform more advanced tasks when deploying resources to Azure.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>copy</source>
            <target state="new">copy</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Enables you to iterate a specified number of times when deploying a resource.</source>
            <target state="new">Enables you to iterate a specified number of times when deploying a resource.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The copy operation is particularly helpful when working with arrays because you can iterate through each element in the array.</source>
            <target state="new">The copy operation is particularly helpful when working with arrays because you can iterate through each element in the array.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>copyIndex()<ept id="2">&lt;/strong&gt;</ept> function returns the current value for the iteration.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>copyIndex()<ept id="2">&lt;/strong&gt;</ept> function returns the current value for the iteration.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>You can deploy three web sites named:</source>
            <target state="new">You can deploy three web sites named:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>examplecopy-Contoso</source>
            <target state="new">examplecopy-Contoso</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>examplecopy-Fabrikam</source>
            <target state="new">examplecopy-Fabrikam</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>examplecopy-Coho</source>
            <target state="new">examplecopy-Coho</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>with the following template.</source>
            <target state="new">with the following template.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>You can also use the copy operation without an array.</source>
            <target state="new">You can also use the copy operation without an array.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>For example, you might want to add an incrementing number to the end of each resource name that is deployed.</source>
            <target state="new">For example, you might want to add an incrementing number to the end of each resource name that is deployed.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>You can deploys three web sites named:</source>
            <target state="new">You can deploys three web sites named:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>examplecopy-0</source>
            <target state="new">examplecopy-0</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>examplecopy-1</source>
            <target state="new">examplecopy-1</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>examplecopy-2.</source>
            <target state="new">examplecopy-2.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>with the following template.</source>
            <target state="new">with the following template.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>You'll notice in the previous example that the index value goes from zero to 2.</source>
            <target state="new">You'll notice in the previous example that the index value goes from zero to 2.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>To offset the index value, you can pass a value in the <bpt id="2">&lt;strong&gt;</bpt>copyIndex()<ept id="2">&lt;/strong&gt;</ept> function, such as <bpt id="4">&lt;strong&gt;</bpt>copyIndex(1)<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">To offset the index value, you can pass a value in the <bpt id="2">&lt;strong&gt;</bpt>copyIndex()<ept id="2">&lt;/strong&gt;</ept> function, such as <bpt id="4">&lt;strong&gt;</bpt>copyIndex(1)<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The number of iterations to perform is still specified in the copy element, but the value of copyIndex is offset by the specified value.</source>
            <target state="new">The number of iterations to perform is still specified in the copy element, but the value of copyIndex is offset by the specified value.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>So, using the same template as the previous example, but specifying <bpt id="2">&lt;strong&gt;</bpt>copyIndex(1)<ept id="2">&lt;/strong&gt;</ept> would deploy three web sites named:</source>
            <target state="new">So, using the same template as the previous example, but specifying <bpt id="2">&lt;strong&gt;</bpt>copyIndex(1)<ept id="2">&lt;/strong&gt;</ept> would deploy three web sites named:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>examplecopy-1</source>
            <target state="new">examplecopy-1</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>examplecopy-2</source>
            <target state="new">examplecopy-2</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>examplecopy-3</source>
            <target state="new">examplecopy-3</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Nested template</source>
            <target state="new">Nested template</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>You may need to merge two templates together, or launch a child template from a parent.</source>
            <target state="new">You may need to merge two templates together, or launch a child template from a parent.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>You can accomplish this through the use of a deployment resource within the master template that points to the nested template.</source>
            <target state="new">You can accomplish this through the use of a deployment resource within the master template that points to the nested template.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>You set the <bpt id="2">&lt;strong&gt;</bpt>templateLink<ept id="2">&lt;/strong&gt;</ept> property to the URI of the nested template.</source>
            <target state="new">You set the <bpt id="2">&lt;strong&gt;</bpt>templateLink<ept id="2">&lt;/strong&gt;</ept> property to the URI of the nested template.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>You can provide parameter values for the nested template either by specifying the values directly in your template or by linking to a parameter file.</source>
            <target state="new">You can provide parameter values for the nested template either by specifying the values directly in your template or by linking to a parameter file.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The first example uses the <bpt id="2">&lt;strong&gt;</bpt>parameters<ept id="2">&lt;/strong&gt;</ept> property to specify a paramter value directly.</source>
            <target state="new">The first example uses the <bpt id="2">&lt;strong&gt;</bpt>parameters<ept id="2">&lt;/strong&gt;</ept> property to specify a paramter value directly.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The next example uses the <bpt id="2">&lt;strong&gt;</bpt>parametersLink<ept id="2">&lt;/strong&gt;</ept> property to link to a parameter file.</source>
            <target state="new">The next example uses the <bpt id="2">&lt;strong&gt;</bpt>parametersLink<ept id="2">&lt;/strong&gt;</ept> property to link to a parameter file.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Prochaines étapes</source>
            <target state="new">Prochaines étapes</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Authoring Azure Resource Manager Templates<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Authoring Azure Resource Manager Templates<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Template Functions<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Template Functions<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Deploy an application with Azure Resource Manager Template<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Deploy an application with Azure Resource Manager Template<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Overview<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Resource Manager Overview<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>