<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/19/2016 4:37:06 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07c61a20af5ca7bbcee5c871de476614ad298c7d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>BizTalk XML Validator</source>
            <target state="new">BizTalk XML Validator</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>BizTalk XML Validator</source>
            <target state="new">BizTalk XML Validator</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>BizTalk XML Validator</source>
            <target state="new">BizTalk XML Validator</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>BizTalk XML Validate connector helps your app validate XML data against predefined XML schemas.</source>
            <target state="new">BizTalk XML Validate connector helps your app validate XML data against predefined XML schemas.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Users can use either existing schemas or generate schemas based out of a flat file instance, JSON instance or existing connectors.</source>
            <target state="new">Users can use either existing schemas or generate schemas based out of a flat file instance, JSON instance or existing connectors.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Using the BizTalk XML Validator</source>
            <target state="new">Using the BizTalk XML Validator</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>To use the BizTalk XML Validator, you need to first create an instance of the BizTalk XML Validator API app.</source>
            <target state="new">To use the BizTalk XML Validator, you need to first create an instance of the BizTalk XML Validator API app.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This can be done either inline while creating a logic app or by selecting the BizTalk XML Validator API app from the Azure Marketplace.</source>
            <target state="new">This can be done either inline while creating a logic app or by selecting the BizTalk XML Validator API app from the Azure Marketplace.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Configure BizTalk XML Validator</source>
            <target state="new">Configure BizTalk XML Validator</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>BizTalk XML Validator takes schemas as part of its configuration.</source>
            <target state="new">BizTalk XML Validator takes schemas as part of its configuration.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>User can launch the API App configuration blade by either launching the API App directly from the Azure portal, or through by double clicking the API App on the designer surface.</source>
            <target state="new">User can launch the API App configuration blade by either launching the API App directly from the Azure portal, or through by double clicking the API App on the designer surface.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Configuration<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Configuration<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In the API App blade, user can configure schemas by clicking on <bpt id="2">&lt;em&gt;</bpt>Schemas<ept id="2">&lt;/em&gt;</ept> part</source>
            <target state="new">In the API App blade, user can configure schemas by clicking on <bpt id="2">&lt;em&gt;</bpt>Schemas<ept id="2">&lt;/em&gt;</ept> part</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Schemas Part<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Schemas Part<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Users can upload schemas from disk or generate one from a flat file instance or a JSON instance.</source>
            <target state="new">Users can upload schemas from disk or generate one from a flat file instance or a JSON instance.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Schemas<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Schemas<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Using the BizTalk Flat File Encoder in design surface</source>
            <target state="new">Using the BizTalk Flat File Encoder in design surface</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Once configured, users can click on <bpt id="2">&lt;em&gt;</bpt>-&gt;<ept id="2">&lt;/em&gt;</ept> and choose from an action from a list of actions.</source>
            <target state="new">Once configured, users can click on <bpt id="2">&lt;em&gt;</bpt>-&gt;<ept id="2">&lt;/em&gt;</ept> and choose from an action from a list of actions.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator List of actions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator List of actions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Validate Xml</source>
            <target state="new">Validate Xml</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Validate Xml action Validates a given xml input against pre-configured schemas.</source>
            <target state="new">Validate Xml action Validates a given xml input against pre-configured schemas.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Validate Xml<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk XML Validator Validate Xml<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Description of the parameter</source>
            <target state="new">Description of the parameter</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Input Xml</source>
            <target state="new">Input Xml</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Input Xml to be validated</source>
            <target state="new">Input Xml to be validated</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The action returns the output as an object.</source>
            <target state="new">The action returns the output as an object.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Output contains the model representing response of Xml Validator.</source>
            <target state="new">Output contains the model representing response of Xml Validator.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>It consists of result, schema name, root node and error description.</source>
            <target state="new">It consists of result, schema name, root node and error description.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>![6]</source>
            <target state="new">![6]</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>