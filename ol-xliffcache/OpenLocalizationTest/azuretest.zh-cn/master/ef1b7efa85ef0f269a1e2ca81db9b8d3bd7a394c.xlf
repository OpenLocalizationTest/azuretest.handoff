<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:41:00 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef1b7efa85ef0f269a1e2ca81db9b8d3bd7a394c</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Update the app to call the custom API</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>In Visual Studio, open the default.html file in your quickstart project, locate the <bpt id="2">&lt;strong&gt;</bpt>button<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;code&gt;</bpt>buttonRefresh<ept id="4">&lt;/code&gt;</ept>, and add the following new element right after it:</source>
            <target state="new">In Visual Studio, open the default.html file in your quickstart project, locate the <bpt id="2">&lt;strong&gt;</bpt>button<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;code&gt;</bpt>buttonRefresh<ept id="4">&lt;/code&gt;</ept>, and add the following new element right after it:</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>This adds a new button to the page.</source>
            <target state="new">This adds a new button to the page.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Open the default.js code file in the <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> project folder, locate the <bpt id="4">&lt;strong&gt;</bpt>refreshTodoItems<ept id="4">&lt;/strong&gt;</ept> function and make sure that this function contains the following code:</source>
            <target state="new">Open the default.js code file in the <bpt id="2">&lt;code&gt;</bpt>js<ept id="2">&lt;/code&gt;</ept> project folder, locate the <bpt id="4">&lt;strong&gt;</bpt>refreshTodoItems<ept id="4">&lt;/strong&gt;</ept> function and make sure that this function contains the following code:</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This filters the items so that completed items are not returned by the query.</source>
            <target state="new">This filters the items so that completed items are not returned by the query.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>After the <bpt id="2">&lt;strong&gt;</bpt>refreshTodoItems<ept id="2">&lt;/strong&gt;</ept> function, add the following code:</source>
            <target state="new">After the <bpt id="2">&lt;strong&gt;</bpt>refreshTodoItems<ept id="2">&lt;/strong&gt;</ept> function, add the following code:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</source>
            <target state="new">This method handles the <bpt id="2">&lt;strong&gt;</bpt>Click<ept id="2">&lt;/strong&gt;</ept> event for the new button.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>InvokeApiAsync<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a POST request to the new custom API.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>InvokeApiAsync<ept id="2">&lt;/strong&gt;</ept> method is called on the client, which sends a POST request to the new custom API.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The result returned by the custom API is displayed in a message dialog, as are any errors.</source>
            <target state="new">The result returned by the custom API is displayed in a message dialog, as are any errors.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Test the app</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild the project and start the app.</source>
            <target state="new">In Visual Studio, press the <bpt id="2">&lt;strong&gt;</bpt>F5<ept id="2">&lt;/strong&gt;</ept> key to rebuild the project and start the app.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the app, type some text in <bpt id="2">&lt;strong&gt;</bpt>Insert a TodoItem<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Save<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Repeat the previous step until you have added several todo items to the list.</source>
            <target state="new">Repeat the previous step until you have added several todo items to the list.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Complete All<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</source>
            <target state="new">A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>