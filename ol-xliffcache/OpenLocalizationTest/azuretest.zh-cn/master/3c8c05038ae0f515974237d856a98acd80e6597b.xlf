<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/17/2016 2:50:11 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c8c05038ae0f515974237d856a98acd80e6597b</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Create a Queue</source>
            <target state="new">Create a Queue</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for queues.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for queues.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>All code in this topic uses a storage connection string stored in the Azure application's service configuration.</source>
            <target state="new">All code in this topic uses a storage connection string stored in the Azure application's service configuration.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>There are also other ways to create a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">There are also other ways to create a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>CloudStorageAccount<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt>CloudStorageAccount<ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> documentation for details.</source>
            <target state="new">See the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>CloudStorageAccount<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt>CloudStorageAccount<ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> documentation for details.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>queueClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the queue you want to use.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>queueClient<ept id="2">&lt;/strong&gt;</ept> object to get a reference to the queue you want to use.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The code tries to reference a queue named “myqueue.”</source>
            <target state="new">The code tries to reference a queue named “myqueue.”</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>If it can’t find a queue with that name, it creates one.</source>
            <target state="new">If it can’t find a queue with that name, it creates one.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use this code block in front of the code in the following sections.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use this code block in front of the code in the following sections.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Insert a Message into a Queue</source>
            <target state="new">Insert a Message into a Queue</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>To insert a message into an existing queue, first create a new <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">To insert a message into an existing queue, first create a new <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Next, call the AddMessage() method.</source>
            <target state="new">Next, call the AddMessage() method.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object can be created from either a string (in UTF-8 format) or a byte array.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object can be created from either a string (in UTF-8 format) or a byte array.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.</source>
            <target state="new">Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Peek at the Next Message</source>
            <target state="new">Peek at the Next Message</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>You can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.</source>
            <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Remove the Next Message</source>
            <target state="new">Remove the Next Message</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Your code can remove (de-queue) a message from a queue in two steps.</source>
            <target state="new">Your code can remove (de-queue) a message from a queue in two steps.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Call GetMessage() to get the next message in a queue.</source>
            <target state="new">Call GetMessage() to get the next message in a queue.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>A message returned from GetMessage() becomes invisible to any other code reading messages from this queue.</source>
            <target state="new">A message returned from GetMessage() becomes invisible to any other code reading messages from this queue.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>By default, this message stays invisible for 30 seconds.</source>
            <target state="new">By default, this message stays invisible for 30 seconds.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>To finish removing the message from the queue, call DeleteMessage().</source>
            <target state="new">To finish removing the message from the queue, call DeleteMessage().</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
            <target state="new">This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The following code calls DeleteMessage() right after the message has been processed.</source>
            <target state="new">The following code calls DeleteMessage() right after the message has been processed.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Learn more about Azure Storage<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See also <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Browsing Storage Resources in Server Explorer<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>