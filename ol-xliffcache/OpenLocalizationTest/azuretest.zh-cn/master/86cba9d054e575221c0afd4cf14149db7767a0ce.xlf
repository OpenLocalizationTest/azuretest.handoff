<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="2/18/2016 5:30:18 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86cba9d054e575221c0afd4cf14149db7767a0ce</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Getting started with Azure Queue storage and Visual Studio connected services (Cloud Service projects)</source>
            <target state="new">Getting started with Azure Queue storage and Visual Studio connected services (Cloud Service projects)</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to get started using Azure Queue storage in a cloud service project in Visual Studio</source>
            <target state="new">How to get started using Azure Queue storage in a cloud service project in Visual Studio</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Getting started with Azure Queue storage and Visual Studio connected services (cloud services projects)</source>
            <target state="new">Getting started with Azure Queue storage and Visual Studio connected services (cloud services projects)</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>[AZURE.SELECTOR]</source>
            <target state="new">[AZURE.SELECTOR]</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Getting started<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Getting started<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What happened<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>What happened<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>[AZURE.SELECTOR]</source>
            <target state="new">[AZURE.SELECTOR]</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Blobs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Blobs<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Queues<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tables<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tables<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>This article describes how to get started using Azure Queue storage in Visual Studio after you have created or referenced an Azure storage account in a cloud services project by using the  Visual Studio <bpt id="2">&lt;strong&gt;</bpt>Add Connected Services<ept id="2">&lt;/strong&gt;</ept> dialog.</source>
            <target state="new">This article describes how to get started using Azure Queue storage in Visual Studio after you have created or referenced an Azure storage account in a cloud services project by using the  Visual Studio <bpt id="2">&lt;strong&gt;</bpt>Add Connected Services<ept id="2">&lt;/strong&gt;</ept> dialog.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>We'll show you how to create a queue in code.</source>
            <target state="new">We'll show you how to create a queue in code.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>We'll also show you how to perform basic queue operations, such as adding, modifying, reading and removing queue messages.</source>
            <target state="new">We'll also show you how to perform basic queue operations, such as adding, modifying, reading and removing queue messages.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The samples are written in C# code and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client Library for .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The samples are written in C# code and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client Library for .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Add Connected Services<ept id="2">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Add Connected Services<ept id="2">&lt;/strong&gt;</ept> operation installs the appropriate NuGet packages to access Azure storage in your project and adds the connection string for the storage account to your project configuration files.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Queue Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information on manipulating queues in code.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to use Queue Storage from .NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information on manipulating queues in code.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storage documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for general information about Azure Storage.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storage documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for general information about Azure Storage.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Cloud Services documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for general information about Azure cloud services.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Cloud Services documentation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for general information about Azure cloud services.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ASP.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information about programming ASP.NET applications.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>ASP.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information about programming ASP.NET applications.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Azure Queue storage is a service for storing large numbers of messages that can be accessed from anywhere in the world via authenticated calls using HTTP or HTTPS.</source>
            <target state="new">Azure Queue storage is a service for storing large numbers of messages that can be accessed from anywhere in the world via authenticated calls using HTTP or HTTPS.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>A single queue message can be up to 64 KB in size, and a queue can contain millions of messages, up to the total capacity limit of a storage account.</source>
            <target state="new">A single queue message can be up to 64 KB in size, and a queue can contain millions of messages, up to the total capacity limit of a storage account.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Access queues in code</source>
            <target state="new">Access queues in code</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>To access queues in Visual Studio Cloud Services projects, you need to include the following items to any C# source file that access Azure Queue storage.</source>
            <target state="new">To access queues in Visual Studio Cloud Services projects, you need to include the following items to any C# source file that access Azure Queue storage.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Make sure the namespace declarations at the top of the C# file include these <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements.</source>
            <target state="new">Make sure the namespace declarations at the top of the C# file include these <bpt id="2">&lt;strong&gt;</bpt>using<ept id="2">&lt;/strong&gt;</ept> statements.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Get a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object that represents your storage account information.</source>
            <target state="new">Get a <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> object that represents your storage account information.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</source>
            <target state="new">Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Get a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object to reference the queue objects in your storage account.</source>
            <target state="new">Get a <bpt id="2">&lt;strong&gt;</bpt>CloudQueueClient<ept id="2">&lt;/strong&gt;</ept> object to reference the queue objects in your storage account.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Get a <bpt id="2">&lt;strong&gt;</bpt>CloudQueue<ept id="2">&lt;/strong&gt;</ept> object to reference a specific queue.</source>
            <target state="new">Get a <bpt id="2">&lt;strong&gt;</bpt>CloudQueue<ept id="2">&lt;/strong&gt;</ept> object to reference a specific queue.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use all of the above code in front of the code in the following samples.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>NOTE:<ept id="1">&lt;/strong&gt;</ept> Use all of the above code in front of the code in the following samples.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Create a queue in code</source>
            <target state="new">Create a queue in code</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>To create the queue in code, just add a call to <bpt id="2">&lt;strong&gt;</bpt>CreateIfNotExists<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To create the queue in code, just add a call to <bpt id="2">&lt;strong&gt;</bpt>CreateIfNotExists<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Add a message to a queue</source>
            <target state="new">Add a message to a queue</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>To insert a message into an existing queue, create a new <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object, then call the <bpt id="4">&lt;strong&gt;</bpt>AddMessage<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">To insert a message into an existing queue, create a new <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object, then call the <bpt id="4">&lt;strong&gt;</bpt>AddMessage<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object can be created from either a string (in UTF-8 format) or a byte array.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudQueueMessage<ept id="2">&lt;/strong&gt;</ept> object can be created from either a string (in UTF-8 format) or a byte array.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Here is an example which inserts the message 'Hello, World'.</source>
            <target state="new">Here is an example which inserts the message 'Hello, World'.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Read a message in a queue</source>
            <target state="new">Read a message in a queue</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>PeekMessage<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="2">&lt;strong&gt;</bpt>PeekMessage<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Read and remove a message in a queue</source>
            <target state="new">Read and remove a message in a queue</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Your code can remove (de-queue) a message from a queue in two steps.</source>
            <target state="new">Your code can remove (de-queue) a message from a queue in two steps.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Call <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> to get the next message in a queue.</source>
            <target state="new">Call <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> to get the next message in a queue.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>A message returned from <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages from this queue.</source>
            <target state="new">A message returned from <bpt id="2">&lt;strong&gt;</bpt>GetMessage<ept id="2">&lt;/strong&gt;</ept> becomes invisible to any other code reading messages from this queue.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>By default, this message stays invisible for 30 seconds.</source>
            <target state="new">By default, this message stays invisible for 30 seconds.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>To finish removing the message from the queue, call <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To finish removing the message from the queue, call <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
            <target state="new">This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The following code calls <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept> right after the message has been processed.</source>
            <target state="new">The following code calls <bpt id="2">&lt;strong&gt;</bpt>DeleteMessage<ept id="2">&lt;/strong&gt;</ept> right after the message has been processed.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Leverage additional options for processing and removing queue messages</source>
            <target state="new">Leverage additional options for processing and removing queue messages</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>There are two ways you can customize message retrieval from a queue.</source>
            <target state="new">There are two ways you can customize message retrieval from a queue.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>You can get a batch of messages (up to 32).</source>
            <target state="new">You can get a batch of messages (up to 32).</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>You can set a longer or shorter invisibility timeout, allowing your code more or less</source>
            <target state="new">You can set a longer or shorter invisibility timeout, allowing your code more or less</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>time to fully process each message.</source>
            <target state="new">time to fully process each message.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The following code example uses the</source>
            <target state="new">The following code example uses the</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>GetMessages<ept id="1">&lt;/strong&gt;</ept> method to get 20 messages in one call.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>GetMessages<ept id="1">&lt;/strong&gt;</ept> method to get 20 messages in one call.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Then it processes</source>
            <target state="new">Then it processes</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>each message using a <bpt id="2">&lt;strong&gt;</bpt>foreach<ept id="2">&lt;/strong&gt;</ept> loop.</source>
            <target state="new">each message using a <bpt id="2">&lt;strong&gt;</bpt>foreach<ept id="2">&lt;/strong&gt;</ept> loop.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>It also sets the invisibility</source>
            <target state="new">It also sets the invisibility</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>timeout to five minutes for each message.</source>
            <target state="new">timeout to five minutes for each message.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Note that the 5 minutes starts</source>
            <target state="new">Note that the 5 minutes starts</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>for all messages at the same time, so after 5 minutes have passed since</source>
            <target state="new">for all messages at the same time, so after 5 minutes have passed since</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>the call to <bpt id="2">&lt;strong&gt;</bpt>GetMessages<ept id="2">&lt;/strong&gt;</ept>, any messages which have not been deleted</source>
            <target state="new">the call to <bpt id="2">&lt;strong&gt;</bpt>GetMessages<ept id="2">&lt;/strong&gt;</ept>, any messages which have not been deleted</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>will become visible again.</source>
            <target state="new">will become visible again.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Here's an example:</source>
            <target state="new">Here's an example:</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Get the queue length</source>
            <target state="new">Get the queue length</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>You can get an estimate of the number of messages in a queue.</source>
            <target state="new">You can get an estimate of the number of messages in a queue.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>The</source>
            <target state="new">The</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method asks the Queue service to</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method asks the Queue service to</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>retrieve the queue attributes, including the message count.</source>
            <target state="new">retrieve the queue attributes, including the message count.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>ApproximateMethodCount<ept id="2">&lt;/strong&gt;</ept></source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>ApproximateMethodCount<ept id="2">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>property returns the last value retrieved by the</source>
            <target state="new">property returns the last value retrieved by the</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method, without calling the Queue service.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>FetchAttributes<ept id="1">&lt;/strong&gt;</ept> method, without calling the Queue service.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Use Async-Await Pattern with common Azure Queue APIs</source>
            <target state="new">Use Async-Await Pattern with common Azure Queue APIs</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>This example shows how to use the Async-Await pattern with common Azure Queue APIs.</source>
            <target state="new">This example shows how to use the Async-Await pattern with common Azure Queue APIs.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>The sample calls the async version of each of the given methods, this can be seen by the <bpt id="2">&lt;strong&gt;</bpt>Async<ept id="2">&lt;/strong&gt;</ept> post-fix of each method.</source>
            <target state="new">The sample calls the async version of each of the given methods, this can be seen by the <bpt id="2">&lt;strong&gt;</bpt>Async<ept id="2">&lt;/strong&gt;</ept> post-fix of each method.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>When an async method is used the async-await pattern suspends local execution until the call completes.</source>
            <target state="new">When an async method is used the async-await pattern suspends local execution until the call completes.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>This behavior allows the current thread to do other work which helps avoid performance bottlenecks and improves the overall responsiveness of your application.</source>
            <target state="new">This behavior allows the current thread to do other work which helps avoid performance bottlenecks and improves the overall responsiveness of your application.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>For more details on using the Async-Await pattern in .NET see [Async and Await (C# and Visual Basic)] (https://msdn.microsoft.com/library/hh191443.aspx)</source>
            <target state="new">For more details on using the Async-Await pattern in .NET see [Async and Await (C# and Visual Basic)] (https://msdn.microsoft.com/library/hh191443.aspx)</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Delete a queue</source>
            <target state="new">Delete a queue</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>To delete a queue and all the messages contained in it, call the <bpt id="2">&lt;strong&gt;</bpt>Delete<ept id="2">&lt;/strong&gt;</ept> method on the queue object.</source>
            <target state="new">To delete a queue and all the messages contained in it, call the <bpt id="2">&lt;strong&gt;</bpt>Delete<ept id="2">&lt;/strong&gt;</ept> method on the queue object.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/vs-storage-dotnet-queues-next-steps.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/vs-storage-dotnet-queues-next-steps.md"/&gt;</ph></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>