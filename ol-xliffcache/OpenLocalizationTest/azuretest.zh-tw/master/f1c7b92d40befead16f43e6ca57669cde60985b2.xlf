<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 11:13:29 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1c7b92d40befead16f43e6ca57669cde60985b2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Using the SQL Connector in Logic Apps | Microsoft Azure App Service</source>
            <target state="new">Using the SQL Connector in Logic Apps | Microsoft Azure App Service</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to create and configure the SQL Connector or API app and use it in a logic app in Azure App Service</source>
            <target state="new">How to create and configure the SQL Connector or API app and use it in a logic app in Azure App Service</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Get started with the Microsoft SQL Connector and add it to your Logic App</source>
            <target state="new">Get started with the Microsoft SQL Connector and add it to your Logic App</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Connect to an on-premises SQL Server or an Azure SQL Database to create and change your information or data.</source>
            <target state="new">Connect to an on-premises SQL Server or an Azure SQL Database to create and change your information or data.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Connectors can be used in Logic Apps to retrieve, process, or push data as a part of a "workflow".</source>
            <target state="new">Connectors can be used in Logic Apps to retrieve, process, or push data as a part of a "workflow".</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>When you use the SQL Connector in your workflow, you can achieve a variety of scenarios.</source>
            <target state="new">When you use the SQL Connector in your workflow, you can achieve a variety of scenarios.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For example, you can:</source>
            <target state="new">For example, you can:</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Expose a section of the data residing in your SQL database using a web or mobile application.</source>
            <target state="new">Expose a section of the data residing in your SQL database using a web or mobile application.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Insert data into a SQL database table for storage.</source>
            <target state="new">Insert data into a SQL database table for storage.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>For example, you can enter employee records, update sales orders, and so on.</source>
            <target state="new">For example, you can enter employee records, update sales orders, and so on.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Get data from SQL and use it in a business process.</source>
            <target state="new">Get data from SQL and use it in a business process.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>For example, you can get customer records and put those customer records in SalesForce.</source>
            <target state="new">For example, you can get customer records and put those customer records in SalesForce.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>You can add the SQL Connector to your business workflow and process data as part of this workflow within a Logic App.</source>
            <target state="new">You can add the SQL Connector to your business workflow and process data as part of this workflow within a Logic App.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Triggers and Actions</source>
            <target state="new">Triggers and Actions</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>Triggers<ept id="1">&lt;/em&gt;</ept> are events that happen.</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>Triggers<ept id="1">&lt;/em&gt;</ept> are events that happen.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>For example, when an order is updated or when a new customer is added.</source>
            <target state="new">For example, when an order is updated or when a new customer is added.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>An <bpt id="2">&lt;em&gt;</bpt>Action<ept id="2">&lt;/em&gt;</ept> is the result of the trigger.</source>
            <target state="new">An <bpt id="2">&lt;em&gt;</bpt>Action<ept id="2">&lt;/em&gt;</ept> is the result of the trigger.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>For example, when an order is updated, send an alert to the salesperson.</source>
            <target state="new">For example, when an order is updated, send an alert to the salesperson.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Or, when a new customer is added, send a welcome email to the new customer.</source>
            <target state="new">Or, when a new customer is added, send a welcome email to the new customer.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The SQL Connector can be used as a trigger or an action in a logic app and supports data in JSON and XML formats.</source>
            <target state="new">The SQL Connector can be used as a trigger or an action in a logic app and supports data in JSON and XML formats.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>For every table included in your package settings (more on that later in this topic), there is a set of JSON actions and a set of XML actions.</source>
            <target state="new">For every table included in your package settings (more on that later in this topic), there is a set of JSON actions and a set of XML actions.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>The SQL Connector has the following Triggers and Actions available:</source>
            <target state="new">The SQL Connector has the following Triggers and Actions available:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Triggers</source>
            <target state="new">Triggers</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Actions</source>
            <target state="new">Actions</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Poll Data</source>
            <target state="new">Poll Data</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Insert Into Table<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Update Table<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Select From Table<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>Delete From Table<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>Call Stored Procedure<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Insert Into Table<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Update Table<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Select From Table<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>Delete From Table<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>Call Stored Procedure<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Create the SQL Connector</source>
            <target state="new">Create the SQL Connector</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>A connector can be created within a logic app or be created directly from the Azure Marketplace.</source>
            <target state="new">A connector can be created within a logic app or be created directly from the Azure Marketplace.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>To create a connector from the Marketplace:</source>
            <target state="new">To create a connector from the Marketplace:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In the Azure startboard, select <bpt id="2">&lt;strong&gt;</bpt>Marketplace<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the Azure startboard, select <bpt id="2">&lt;strong&gt;</bpt>Marketplace<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Search for “SQL Connector”, select it, and select <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Search for “SQL Connector”, select it, and select <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Enter the Name, App Service Plan, and other properties.</source>
            <target state="new">Enter the Name, App Service Plan, and other properties.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Enter the following package settings:</source>
            <target state="new">Enter the following package settings:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Server Name</source>
            <target state="new">Server Name</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Enter the SQL Server name.</source>
            <target state="new">Enter the SQL Server name.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>For example, enter <bpt id="2">&lt;em&gt;</bpt>SQLserver/sqlexpress<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>SQLserver.mydomain.com<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">For example, enter <bpt id="2">&lt;em&gt;</bpt>SQLserver/sqlexpress<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>SQLserver.mydomain.com<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Port</source>
            <target state="new">Port</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Default is 1433.</source>
            <target state="new">Default is 1433.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>User Name</source>
            <target state="new">User Name</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Enter a user name that can log into the SQL Server.</source>
            <target state="new">Enter a user name that can log into the SQL Server.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>If connecting to an on-premises SQL Server, enter SQL Authentication credentials.</source>
            <target state="new">If connecting to an on-premises SQL Server, enter SQL Authentication credentials.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Password</source>
            <target state="new">Password</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Enter the user name password.</source>
            <target state="new">Enter the user name password.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Database Name</source>
            <target state="new">Database Name</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Enter the database you are connecting.</source>
            <target state="new">Enter the database you are connecting.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>For example, you can enter <bpt id="2">&lt;em&gt;</bpt>Customers<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>dbo/orders<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">For example, you can enter <bpt id="2">&lt;em&gt;</bpt>Customers<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>dbo/orders<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>On-Premises</source>
            <target state="new">On-Premises</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Default is False.</source>
            <target state="new">Default is False.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Enter False if connecting to an Azure SQL database.</source>
            <target state="new">Enter False if connecting to an Azure SQL database.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Enter True if connecting to an on-premises SQL Server.</source>
            <target state="new">Enter True if connecting to an on-premises SQL Server.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Service Bus Connection String</source>
            <target state="new">Service Bus Connection String</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>If you're connecting to on-premises, enter the Service Bus relay connection string.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Using the Hybrid Connection Manager<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept><bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Service Bus Pricing<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">If you're connecting to on-premises, enter the Service Bus relay connection string.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Using the Hybrid Connection Manager<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept><bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Service Bus Pricing<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Partner Server Name</source>
            <target state="new">Partner Server Name</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>If the primary server is unavailable, you can enter a partner server as an alternate or backup server.</source>
            <target state="new">If the primary server is unavailable, you can enter a partner server as an alternate or backup server.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Tables</source>
            <target state="new">Tables</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>List the database tables that can be updated by the connector.</source>
            <target state="new">List the database tables that can be updated by the connector.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>For example, enter <bpt id="2">&lt;em&gt;</bpt>OrdersTable<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>EmployeeTable<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">For example, enter <bpt id="2">&lt;em&gt;</bpt>OrdersTable<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>EmployeeTable<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>If no tables are entered, all tables can be used.</source>
            <target state="new">If no tables are entered, all tables can be used.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Valid tables and/or Stored Procedures are required to use this connector as an action.</source>
            <target state="new">Valid tables and/or Stored Procedures are required to use this connector as an action.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Stored Procedures</source>
            <target state="new">Stored Procedures</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Enter an existing stored procedure that can be called by the connector.</source>
            <target state="new">Enter an existing stored procedure that can be called by the connector.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>For example, enter <bpt id="2">&lt;em&gt;</bpt>sp_IsEmployeeEligible<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>sp_CalculateOrderDiscount<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">For example, enter <bpt id="2">&lt;em&gt;</bpt>sp_IsEmployeeEligible<ept id="2">&lt;/em&gt;</ept> or <bpt id="4">&lt;em&gt;</bpt>sp_CalculateOrderDiscount<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Valid tables and/or Stored Procedures are required to use this connector as an action.</source>
            <target state="new">Valid tables and/or Stored Procedures are required to use this connector as an action.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Data Available Query</source>
            <target state="new">Data Available Query</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>For trigger support</source>
            <target state="new">For trigger support</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>SQL statement to determine whether any data is available for polling a SQL Server database table.</source>
            <target state="new">SQL statement to determine whether any data is available for polling a SQL Server database table.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>This should return a numeric value representing the number of rows of data available.</source>
            <target state="new">This should return a numeric value representing the number of rows of data available.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Example: SELECT COUNT(*) from table_name.</source>
            <target state="new">Example: SELECT COUNT(*) from table_name.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Poll Data Query</source>
            <target state="new">Poll Data Query</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>For trigger support</source>
            <target state="new">For trigger support</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>The SQL statement to poll the SQL Server database table.</source>
            <target state="new">The SQL statement to poll the SQL Server database table.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>You can enter any number of SQL statements separated by a semicolon.</source>
            <target state="new">You can enter any number of SQL statements separated by a semicolon.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>This statement is executed transactionally and only committed when the data is safely stored in your logic app.</source>
            <target state="new">This statement is executed transactionally and only committed when the data is safely stored in your logic app.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>Example: SELECT * FROM table_name; DELETE FROM table_name.</source>
            <target state="new">Example: SELECT * FROM table_name; DELETE FROM table_name.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;strong&gt;</bpt>Note<ept id="3">&lt;/strong&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>You must provide a poll statement that avoids an infinite loop by deleting, moving or updating selected data to ensure that same data isn't polled again.</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;strong&gt;</bpt>Note<ept id="3">&lt;/strong&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>You must provide a poll statement that avoids an infinite loop by deleting, moving or updating selected data to ensure that same data isn't polled again.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>When complete, the Package Settings look similar to the following:</source>
            <target state="new">When complete, the Package Settings look similar to the following:</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Use the Connector as a Trigger</source>
            <target state="new">Use the Connector as a Trigger</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Let's look at a simple logic app that polls data from a SQL table, adds the data in another table, and updates the data.</source>
            <target state="new">Let's look at a simple logic app that polls data from a SQL table, adds the data in another table, and updates the data.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>To use the SQL connector as a trigger, enter the <bpt id="2">&lt;strong&gt;</bpt>Data Available Query<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Poll Data Query<ept id="4">&lt;/strong&gt;</ept> values.</source>
            <target state="new">To use the SQL connector as a trigger, enter the <bpt id="2">&lt;strong&gt;</bpt>Data Available Query<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Poll Data Query<ept id="4">&lt;/strong&gt;</ept> values.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Data Available Query<ept id="1">&lt;/strong&gt;</ept> is executed on the schedule you enter and determines if any data is available.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Data Available Query<ept id="1">&lt;/strong&gt;</ept> is executed on the schedule you enter and determines if any data is available.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Since this query only returns a scalar number, it can be tuned and optimized for frequent execution.</source>
            <target state="new">Since this query only returns a scalar number, it can be tuned and optimized for frequent execution.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Poll Data Query<ept id="1">&lt;/strong&gt;</ept> is only executed when the Data Available Query indicates that data is available.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Poll Data Query<ept id="1">&lt;/strong&gt;</ept> is only executed when the Data Available Query indicates that data is available.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>This statement executes within a transaction and is only committed when the extracted data is durably stored in your workflow.</source>
            <target state="new">This statement executes within a transaction and is only committed when the extracted data is durably stored in your workflow.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>It is important to avoid infinitely re-extracting the same data.</source>
            <target state="new">It is important to avoid infinitely re-extracting the same data.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>The transactional nature of this execution can be used to delete or update the data to ensure it isn't collected the next time data is queried.</source>
            <target state="new">The transactional nature of this execution can be used to delete or update the data to ensure it isn't collected the next time data is queried.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>The schema returned by this statement identifies the available properties in your connector.</source>
            <target state="new">The schema returned by this statement identifies the available properties in your connector.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>All columns must be named.</source>
            <target state="new">All columns must be named.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Data Available Query Example</source>
            <target state="new">Data Available Query Example</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Poll Data Query Example</source>
            <target state="new">Poll Data Query Example</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Add the Trigger</source>
            <target state="new">Add the Trigger</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>When creating or editing a logic app, select the SQL Connector you created as the trigger.</source>
            <target state="new">When creating or editing a logic app, select the SQL Connector you created as the trigger.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>This lists the available triggers: <bpt id="2">&lt;strong&gt;</bpt>Poll Data (JSON)<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Poll Data (XML)<ept id="4">&lt;/strong&gt;</ept>:</source>
            <target state="new">This lists the available triggers: <bpt id="2">&lt;strong&gt;</bpt>Poll Data (JSON)<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Poll Data (XML)<ept id="4">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Select the <bpt id="2">&lt;strong&gt;</bpt>Poll Data (JSON)<ept id="2">&lt;/strong&gt;</ept> trigger, enter the frequency, and click the ✓:</source>
            <target state="new">Select the <bpt id="2">&lt;strong&gt;</bpt>Poll Data (JSON)<ept id="2">&lt;/strong&gt;</ept> trigger, enter the frequency, and click the ✓:</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>The trigger now appears as configured in the logic app.</source>
            <target state="new">The trigger now appears as configured in the logic app.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>The output(s) of the trigger are shown and can be used as inputs in any subsequent actions:</source>
            <target state="new">The output(s) of the trigger are shown and can be used as inputs in any subsequent actions:</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Use the Connector as an Action</source>
            <target state="new">Use the Connector as an Action</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Using our simple logic app scenario that polls data from a SQL table, adds the data in another table, and updates the data.</source>
            <target state="new">Using our simple logic app scenario that polls data from a SQL table, adds the data in another table, and updates the data.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>To use the SQL Connector as an action, enter the name of the Tables and/or Stored Procedures you entered when you created the SQL Connector:</source>
            <target state="new">To use the SQL Connector as an action, enter the name of the Tables and/or Stored Procedures you entered when you created the SQL Connector:</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>After your trigger (or choose 'run this logic manually'), add the SQL connector you created from the gallery.</source>
            <target state="new">After your trigger (or choose 'run this logic manually'), add the SQL connector you created from the gallery.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Select one of the Insert actions, like <bpt id="2">&lt;em&gt;</bpt>Insert Into TempEmployeeDetails (JSON)<ept id="2">&lt;/em&gt;</ept>:</source>
            <target state="new">Select one of the Insert actions, like <bpt id="2">&lt;em&gt;</bpt>Insert Into TempEmployeeDetails (JSON)<ept id="2">&lt;/em&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Enter the input values of the record to be inserted, and click on the ✓:</source>
            <target state="new">Enter the input values of the record to be inserted, and click on the ✓:</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>From the gallery, select the same SQL connector you created.</source>
            <target state="new">From the gallery, select the same SQL connector you created.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>As an action, select the Update action on the same table, like <bpt id="2">&lt;em&gt;</bpt>Update EmployeeDetails<ept id="2">&lt;/em&gt;</ept>:</source>
            <target state="new">As an action, select the Update action on the same table, like <bpt id="2">&lt;em&gt;</bpt>Update EmployeeDetails<ept id="2">&lt;/em&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Enter the input values for the update action, and click on the ✓:</source>
            <target state="new">Enter the input values for the update action, and click on the ✓:</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>You can test the logic app by adding a new record in the table that is being polled.</source>
            <target state="new">You can test the logic app by adding a new record in the table that is being polled.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>What you can and cannot do</source>
            <target state="new">What you can and cannot do</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>SQL Query</source>
            <target state="new">SQL Query</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Supported</source>
            <target state="new">Supported</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>Not Supported</source>
            <target state="new">Not Supported</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Where clause</source>
            <target state="new">Where clause</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Operators: AND, OR, =, &lt;&gt;, <bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>, &gt;= and LIKE<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept><bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept>Multiple sub conditions can be combined by ‘(‘ and ‘)’<bpt id="9">&lt;html&gt;</bpt><ept id="9">&lt;/html&gt;</ept><bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>String literals, Datetime (enclosed in single quotes), numbers (should only contain numeric characters)<bpt id="12">&lt;html&gt;</bpt><ept id="12">&lt;/html&gt;</ept><bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept>Should strictly be in a binary expression format, like ((operand operator operand) AND/OR (operand operator operand))*<bpt id="15">&lt;html&gt;</bpt><ept id="15">&lt;/html&gt;</ept><bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Operators: AND, OR, =, &lt;&gt;, <bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>, &gt;= and LIKE<bpt id="6">&lt;html&gt;</bpt><ept id="6">&lt;/html&gt;</ept><bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept>Multiple sub conditions can be combined by ‘(‘ and ‘)’<bpt id="9">&lt;html&gt;</bpt><ept id="9">&lt;/html&gt;</ept><bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept>String literals, Datetime (enclosed in single quotes), numbers (should only contain numeric characters)<bpt id="12">&lt;html&gt;</bpt><ept id="12">&lt;/html&gt;</ept><bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept>Should strictly be in a binary expression format, like ((operand operator operand) AND/OR (operand operator operand))*<bpt id="15">&lt;html&gt;</bpt><ept id="15">&lt;/html&gt;</ept><bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Operators: Between, IN<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>All built-in functions like ADD(), MAX() NOW(), POWER(), and so on<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Math operators like *, -, +, and so on<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>String concatenations using +.<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>All Joins<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept>IS NULL and IS NOT Null<bpt id="19">&lt;html&gt;</bpt><ept id="19">&lt;/html&gt;</ept><bpt id="20">&lt;html&gt;</bpt><ept id="20">&lt;/html&gt;</ept>Any numbers with non-numeric characters, like hexadecimal numbers<bpt id="22">&lt;html&gt;</bpt><ept id="22">&lt;/html&gt;</ept><bpt id="23">&lt;html&gt;</bpt><ept id="23">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Operators: Between, IN<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>All built-in functions like ADD(), MAX() NOW(), POWER(), and so on<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>Math operators like *, -, +, and so on<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>String concatenations using +.<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>All Joins<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept>IS NULL and IS NOT Null<bpt id="19">&lt;html&gt;</bpt><ept id="19">&lt;/html&gt;</ept><bpt id="20">&lt;html&gt;</bpt><ept id="20">&lt;/html&gt;</ept>Any numbers with non-numeric characters, like hexadecimal numbers<bpt id="22">&lt;html&gt;</bpt><ept id="22">&lt;/html&gt;</ept><bpt id="23">&lt;html&gt;</bpt><ept id="23">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Fields (in Select query)</source>
            <target state="new">Fields (in Select query)</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Valid column names separated by commas.No table name prefixes allowed (the connector works on one table at a time).<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Names can be escaped with ‘[‘ and ‘]’<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Valid column names separated by commas.No table name prefixes allowed (the connector works on one table at a time).<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Names can be escaped with ‘[‘ and ‘]’<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Keywords like TOP, DISTINCT, and so on<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Aliasing, like Street + City + Zip AS Address<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>All built-in functions, like ADD(), MAX() NOW(), POWER(), and so on<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>Math operators, like *, -, +, and so on<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>String concatenations using +<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Keywords like TOP, DISTINCT, and so on<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept><bpt id="5">&lt;html&gt;</bpt><ept id="5">&lt;/html&gt;</ept>Aliasing, like Street + City + Zip AS Address<bpt id="7">&lt;html&gt;</bpt><ept id="7">&lt;/html&gt;</ept><bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>All built-in functions, like ADD(), MAX() NOW(), POWER(), and so on<bpt id="10">&lt;html&gt;</bpt><ept id="10">&lt;/html&gt;</ept><bpt id="11">&lt;html&gt;</bpt><ept id="11">&lt;/html&gt;</ept>Math operators, like *, -, +, and so on<bpt id="13">&lt;html&gt;</bpt><ept id="13">&lt;/html&gt;</ept><bpt id="14">&lt;html&gt;</bpt><ept id="14">&lt;/html&gt;</ept>String concatenations using +<bpt id="16">&lt;html&gt;</bpt><ept id="16">&lt;/html&gt;</ept><bpt id="17">&lt;html&gt;</bpt><ept id="17">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Tips</source>
            <target state="new">Tips</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>For advanced queries, we suggest creating a stored procedure and execute using the execute stored procedure API.</source>
            <target state="new">For advanced queries, we suggest creating a stored procedure and execute using the execute stored procedure API.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>When using inner queries, use them within stored procedures.</source>
            <target state="new">When using inner queries, use them within stored procedures.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>For joining multiple conditions, you can use the 'AND' and 'OR' operators.</source>
            <target state="new">For joining multiple conditions, you can use the 'AND' and 'OR' operators.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>Hybrid Configuration (Optional)</source>
            <target state="new">Hybrid Configuration (Optional)</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>This step is required only if you are using SQL Server on-premises behind your firewall.</source>
            <target state="new">This step is required only if you are using SQL Server on-premises behind your firewall.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>App Service uses the Hybrid Configuration Manager to connect securely to your on-premises system.</source>
            <target state="new">App Service uses the Hybrid Configuration Manager to connect securely to your on-premises system.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>If you're connector uses an on-premises SQL Server, the Hybrid Connection Manager is required.</source>
            <target state="new">If you're connector uses an on-premises SQL Server, the Hybrid Connection Manager is required.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using the Hybrid Connection Manager<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using the Hybrid Connection Manager<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>Do more with your Connector</source>
            <target state="new">Do more with your Connector</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>Now that the connector is created, you can add it to a business workflow using a Logic App.</source>
            <target state="new">Now that the connector is created, you can add it to a business workflow using a Logic App.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What are Logic Apps?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What are Logic Apps?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>View the Swagger REST API reference at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connectors and API Apps Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">View the Swagger REST API reference at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Connectors and API Apps Reference<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>You can also review performance statistics and control security to the connector.</source>
            <target state="new">You can also review performance statistics and control security to the connector.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Manage and Monitor your built-in API Apps and Connectors<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Manage and Monitor your built-in API Apps and Connectors<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>