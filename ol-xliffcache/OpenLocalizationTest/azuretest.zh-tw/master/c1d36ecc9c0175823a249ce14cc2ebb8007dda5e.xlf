<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/21/2016 7:06:52 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1d36ecc9c0175823a249ce14cc2ebb8007dda5e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Advanced Analytics Process and Technology in Action: using SQL Server | Microsoft Azure</source>
            <target state="new">Advanced Analytics Process and Technology in Action: using SQL Server | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Advanced Analytics Process and Technology in Action</source>
            <target state="new">Advanced Analytics Process and Technology in Action</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Advanced Analytics Process and Technology in Action: using SQL Server</source>
            <target state="new">Advanced Analytics Process and Technology in Action: using SQL Server</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>In this tutorial, you walkthrough building and deploying a model using a publicly available dataset -- the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi Trips<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> dataset.</source>
            <target state="new">In this tutorial, you walkthrough building and deploying a model using a publicly available dataset -- the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi Trips<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> dataset.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The procedure follows the Azure Advanced Analytics Process and Technology (ADAPT) guide.</source>
            <target state="new">The procedure follows the Azure Advanced Analytics Process and Technology (ADAPT) guide.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>NYC Taxi Trips Dataset Description</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>NYC Taxi Trips Dataset Description</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The NYC Taxi Trip data is about 20GB of compressed CSV files (~48GB uncompressed), comprising more than 173 million individual trips and the fares paid for each trip.</source>
            <target state="new">The NYC Taxi Trip data is about 20GB of compressed CSV files (~48GB uncompressed), comprising more than 173 million individual trips and the fares paid for each trip.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Each trip record includes the pickup and drop-off location and time, anonymized hack (driver's) license number and medallion (taxi’s unique id) number.</source>
            <target state="new">Each trip record includes the pickup and drop-off location and time, anonymized hack (driver's) license number and medallion (taxi’s unique id) number.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The data covers all trips in the year 2013 and is provided in the following two datasets for each month:</source>
            <target state="new">The data covers all trips in the year 2013 and is provided in the following two datasets for each month:</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The 'trip_data' CSV contains trip details, such as number of passengers, pickup and dropoff points, trip duration, and trip length.</source>
            <target state="new">The 'trip_data' CSV contains trip details, such as number of passengers, pickup and dropoff points, trip duration, and trip length.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Here are a few sample records:</source>
            <target state="new">Here are a few sample records:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The 'trip_fare' CSV contains details of the fare paid for each trip, such as payment type, fare amount, surcharge and taxes, tips and tolls, and the total amount paid.</source>
            <target state="new">The 'trip_fare' CSV contains details of the fare paid for each trip, such as payment type, fare amount, surcharge and taxes, tips and tolls, and the total amount paid.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Here are a few sample records:</source>
            <target state="new">Here are a few sample records:</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The unique key to join trip\_data and trip\_fare is composed of the fields: medallion, hack\_licence and pickup\_datetime.</source>
            <target state="new">The unique key to join trip\_data and trip\_fare is composed of the fields: medallion, hack\_licence and pickup\_datetime.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Examples of Prediction Tasks</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Examples of Prediction Tasks</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>We will formulate three prediction problems based on the <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept>, namely:</source>
            <target state="new">We will formulate three prediction problems based on the <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept>, namely:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Binary classification: Predict whether or not a tip was paid for a trip, i.e. a <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept> that is greater than $0 is a positive example, while a <bpt id="4">&lt;em&gt;</bpt>tip\_amount<ept id="4">&lt;/em&gt;</ept> of $0 is a negative example.</source>
            <target state="new">Binary classification: Predict whether or not a tip was paid for a trip, i.e. a <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept> that is greater than $0 is a positive example, while a <bpt id="4">&lt;em&gt;</bpt>tip\_amount<ept id="4">&lt;/em&gt;</ept> of $0 is a negative example.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Multiclass classification: To predict the range of tip paid for the trip.</source>
            <target state="new">Multiclass classification: To predict the range of tip paid for the trip.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>We divide the <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept> into five bins or classes:</source>
            <target state="new">We divide the <bpt id="2">&lt;em&gt;</bpt>tip\_amount<ept id="2">&lt;/em&gt;</ept> into five bins or classes:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Regression task: To predict the amount of tip paid for a trip.</source>
            <target state="new">Regression task: To predict the amount of tip paid for a trip.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Setting Up the Azure data science environment for advanced analytics</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Setting Up the Azure data science environment for advanced analytics</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>As you can see from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Plan Your Environment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> guide, there are several options to work with the NYC Taxi Trips dataset in Azure:</source>
            <target state="new">As you can see from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Plan Your Environment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> guide, there are several options to work with the NYC Taxi Trips dataset in Azure:</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Work with the data in Azure blobs then model in Azure Machine Learning</source>
            <target state="new">Work with the data in Azure blobs then model in Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Load the data into a SQL Server database then model in Azure Machine Learning</source>
            <target state="new">Load the data into a SQL Server database then model in Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In this tutorial we will demonstrate parallel bulk import of the data to a SQL Server, data exploration, feature engineering and down sampling using SQL Server Management Studio as well as using IPython Notebook.</source>
            <target state="new">In this tutorial we will demonstrate parallel bulk import of the data to a SQL Server, data exploration, feature engineering and down sampling using SQL Server Management Studio as well as using IPython Notebook.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Sample scripts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> and <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>IPython notebooks<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> are shared in GitHub.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Sample scripts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> and <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>IPython notebooks<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept> are shared in GitHub.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>A sample IPython notebook to work with the data in Azure blobs is also available in the same location.</source>
            <target state="new">A sample IPython notebook to work with the data in Azure blobs is also available in the same location.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>To set up your Azure Data Science environment:</source>
            <target state="new">To set up your Azure Data Science environment:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create a storage account<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create a storage account<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure ML workspace<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure ML workspace<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Provision a Data Science Virtual Machine<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which will serve as a SQL Server as well an IPython Notebook server.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Provision a Data Science Virtual Machine<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, which will serve as a SQL Server as well an IPython Notebook server.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>The sample scripts and IPython notebooks will be downloaded to your Data Science virtual machine during the setup process.</source>
            <target state="new">The sample scripts and IPython notebooks will be downloaded to your Data Science virtual machine during the setup process.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>When the VM post-installation script completes, the samples will be in your VM's Documents library:</source>
            <target state="new">When the VM post-installation script completes, the samples will be in your VM's Documents library:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>- Sample Scripts: <bpt id="2">&lt;code&gt;</bpt>C:\Users\&lt;user_name&gt;\Documents\Data Science Scripts<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">- Sample Scripts: <bpt id="2">&lt;code&gt;</bpt>C:\Users\&lt;user_name&gt;\Documents\Data Science Scripts<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>- Sample IPython Notebooks: <bpt id="2">&lt;code&gt;</bpt>C:\Users\&lt;user_name&gt;\Documents\IPython Notebooks\DataScienceSamples<ept id="2">&lt;/code&gt;</ept></source>
            <target state="new">- Sample IPython Notebooks: <bpt id="2">&lt;code&gt;</bpt>C:\Users\&lt;user_name&gt;\Documents\IPython Notebooks\DataScienceSamples<ept id="2">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>where <bpt id="2">&lt;code&gt;</bpt>&lt;user_name&gt;<ept id="2">&lt;/code&gt;</ept> is your VM's Windows login name. We will refer to the sample folders as <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">where <bpt id="2">&lt;code&gt;</bpt>&lt;user_name&gt;<ept id="2">&lt;/code&gt;</ept> is your VM's Windows login name. We will refer to the sample folders as <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Based on the dataset size, data source location, and the selected Azure target environment, this scenario is similar to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scenario \#5: Large dataset in a local files, target SQL Server in Azure VM<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Based on the dataset size, data source location, and the selected Azure target environment, this scenario is similar to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Scenario \#5: Large dataset in a local files, target SQL Server in Azure VM<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Get the Data from Public Source</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Get the Data from Public Source</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>To get the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi Trips<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> dataset from its public location, you may use any of the methods described in <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Move Data to and from Azure Blob Storage<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to copy the data to your new virtual machine.</source>
            <target state="new">To get the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi Trips<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> dataset from its public location, you may use any of the methods described in <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Move Data to and from Azure Blob Storage<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to copy the data to your new virtual machine.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>To copy the data using AzCopy:</source>
            <target state="new">To copy the data using AzCopy:</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Log in to your virtual machine (VM)</source>
            <target state="new">Log in to your virtual machine (VM)</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Create a new directory in the VM's data disk (Note: Do not use the Temporary Disk which comes with the VM as a Data Disk).</source>
            <target state="new">Create a new directory in the VM's data disk (Note: Do not use the Temporary Disk which comes with the VM as a Data Disk).</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>In a Command Prompt window, run the following Azcopy command line, replacing <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> with your data folder created in (2):</source>
            <target state="new">In a Command Prompt window, run the following Azcopy command line, replacing <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept> with your data folder created in (2):</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>When the AzCopy completes, a total of 24 zipped CSV files (12 for trip\_data and 12 for trip\_fare) should be in the data folder.</source>
            <target state="new">When the AzCopy completes, a total of 24 zipped CSV files (12 for trip\_data and 12 for trip\_fare) should be in the data folder.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Unzip the downloaded files. Note the folder where the uncompressed files reside. This folder will be referred to as the <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>.</source>
            <target state="new">Unzip the downloaded files. Note the folder where the uncompressed files reside. This folder will be referred to as the <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Bulk Import Data into SQL Server Database</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Bulk Import Data into SQL Server Database</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The performance of loading/transferring large amounts of data to an SQL database and subsequent queries can be improved by using _Partitioned Tables and Views_.</source>
            <target state="new">The performance of loading/transferring large amounts of data to an SQL database and subsequent queries can be improved by using _Partitioned Tables and Views_.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>In this section, we will follow the instructions described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Parallel Bulk Data Import Using SQL Partition Tables<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to create a new database and load the data into partitioned tables in parallel.</source>
            <target state="new">In this section, we will follow the instructions described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Parallel Bulk Data Import Using SQL Partition Tables<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to create a new database and load the data into partitioned tables in parallel.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>While logged in to your VM, start <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">While logged in to your VM, start <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Connect using Windows Authentication.</source>
            <target state="new">Connect using Windows Authentication.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>SSMS Connect<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>SSMS Connect<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>If you have not yet changed the SQL Server authentication mode and created a new SQL login user, open the script file named <bpt id="2">&lt;strong&gt;</bpt>change\_auth.sql<ept id="2">&lt;/strong&gt;</ept> in the <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">If you have not yet changed the SQL Server authentication mode and created a new SQL login user, open the script file named <bpt id="2">&lt;strong&gt;</bpt>change\_auth.sql<ept id="2">&lt;/strong&gt;</ept> in the <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Change the  default user name and password.</source>
            <target state="new">Change the  default user name and password.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> in the toolbar to run the script.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> in the toolbar to run the script.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Execute Script<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Execute Script<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Verify and/or change the SQL Server default database and log folders to ensure that newly created databases will be stored in a Data Disk.</source>
            <target state="new">Verify and/or change the SQL Server default database and log folders to ensure that newly created databases will be stored in a Data Disk.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The SQL Server VM image that is optimized for datawarehousing loads is pre-configured with data and log disks.</source>
            <target state="new">The SQL Server VM image that is optimized for datawarehousing loads is pre-configured with data and log disks.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>If your VM did not include a Data Disk and you added new virtual hard disks during the VM setup process, change the default folders as follows:</source>
            <target state="new">If your VM did not include a Data Disk and you added new virtual hard disks during the VM setup process, change the default folders as follows:</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Right-click the SQL Server name in the left panel and click <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click the SQL Server name in the left panel and click <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>SQL Server Properties<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>SQL Server Properties<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Database Settings<ept id="2">&lt;/strong&gt;</ept> from the <bpt id="4">&lt;strong&gt;</bpt>Select a page<ept id="4">&lt;/strong&gt;</ept> list to the left.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Database Settings<ept id="2">&lt;/strong&gt;</ept> from the <bpt id="4">&lt;strong&gt;</bpt>Select a page<ept id="4">&lt;/strong&gt;</ept> list to the left.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Verify and/or change the <bpt id="2">&lt;strong&gt;</bpt>Database default locations<ept id="2">&lt;/strong&gt;</ept> to the <bpt id="4">&lt;strong&gt;</bpt>Data Disk<ept id="4">&lt;/strong&gt;</ept> locations of your choice.</source>
            <target state="new">Verify and/or change the <bpt id="2">&lt;strong&gt;</bpt>Database default locations<ept id="2">&lt;/strong&gt;</ept> to the <bpt id="4">&lt;strong&gt;</bpt>Data Disk<ept id="4">&lt;/strong&gt;</ept> locations of your choice.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>This is where new databases reside if created with the default location settings.</source>
            <target state="new">This is where new databases reside if created with the default location settings.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>SQL Database Defaults<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>SQL Database Defaults<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>To create a new database and a set of filegroups to hold the partitioned tables, open the sample script <bpt id="2">&lt;strong&gt;</bpt>create\_db\_default.sql<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To create a new database and a set of filegroups to hold the partitioned tables, open the sample script <bpt id="2">&lt;strong&gt;</bpt>create\_db\_default.sql<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>The script will create a new database named <bpt id="2">&lt;strong&gt;</bpt>TaxiNYC<ept id="2">&lt;/strong&gt;</ept> and 12 filegroups in the default data location.</source>
            <target state="new">The script will create a new database named <bpt id="2">&lt;strong&gt;</bpt>TaxiNYC<ept id="2">&lt;/strong&gt;</ept> and 12 filegroups in the default data location.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Each filegroup will hold one month of trip\_data and trip\_fare data.</source>
            <target state="new">Each filegroup will hold one month of trip\_data and trip\_fare data.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Modify the database name, if desired.</source>
            <target state="new">Modify the database name, if desired.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> to run the script.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> to run the script.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Next, create two partition tables, one for the trip\_data and another for the trip\_fare.</source>
            <target state="new">Next, create two partition tables, one for the trip\_data and another for the trip\_fare.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Open the sample script <bpt id="2">&lt;strong&gt;</bpt>create\_partitioned\_table.sql<ept id="2">&lt;/strong&gt;</ept>, which will:</source>
            <target state="new">Open the sample script <bpt id="2">&lt;strong&gt;</bpt>create\_partitioned\_table.sql<ept id="2">&lt;/strong&gt;</ept>, which will:</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Create a partition function to split the data by month.</source>
            <target state="new">Create a partition function to split the data by month.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Create a partition scheme to map each month's data to a different filegroup.</source>
            <target state="new">Create a partition scheme to map each month's data to a different filegroup.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Create two partitioned tables mapped to the partition scheme: <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> will hold the trip\_data and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept> will hold the trip\_fare data.</source>
            <target state="new">Create two partitioned tables mapped to the partition scheme: <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> will hold the trip\_data and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept> will hold the trip\_fare data.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> to run the script and create the partitioned tables.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> to run the script and create the partitioned tables.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Sample Scripts<ept id="2">&lt;/strong&gt;</ept> folder, there are two sample PowerShell scripts provided to demonstrate parallel bulk imports of data to SQL Server tables.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Sample Scripts<ept id="2">&lt;/strong&gt;</ept> folder, there are two sample PowerShell scripts provided to demonstrate parallel bulk imports of data to SQL Server tables.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>bcp\_parallel\_generic.ps1<ept id="1">&lt;/strong&gt;</ept> is a generic script to parallel bulk import data into a table.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>bcp\_parallel\_generic.ps1<ept id="1">&lt;/strong&gt;</ept> is a generic script to parallel bulk import data into a table.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Modify this script to set the input and target variables as indicated in the comment lines in the script.</source>
            <target state="new">Modify this script to set the input and target variables as indicated in the comment lines in the script.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>bcp\_parallel\_nyctaxi.ps1<ept id="1">&lt;/strong&gt;</ept> is a pre-configured version of the generic script and can be used to to load both tables for the NYC Taxi Trips data.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>bcp\_parallel\_nyctaxi.ps1<ept id="1">&lt;/strong&gt;</ept> is a pre-configured version of the generic script and can be used to to load both tables for the NYC Taxi Trips data.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Right-click the <bpt id="2">&lt;strong&gt;</bpt>bcp\_parallel\_nyctaxi.ps1<ept id="2">&lt;/strong&gt;</ept> script name and click <bpt id="4">&lt;strong&gt;</bpt>Edit<ept id="4">&lt;/strong&gt;</ept> to open it in PowerShell.</source>
            <target state="new">Right-click the <bpt id="2">&lt;strong&gt;</bpt>bcp\_parallel\_nyctaxi.ps1<ept id="2">&lt;/strong&gt;</ept> script name and click <bpt id="4">&lt;strong&gt;</bpt>Edit<ept id="4">&lt;/strong&gt;</ept> to open it in PowerShell.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Review the preset variables and modify according to your selected database name, input data folder, target log folder, and paths to the  sample format files <bpt id="2">&lt;strong&gt;</bpt>nyctaxi_trip.xml<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare.xml<ept id="4">&lt;/strong&gt;</ept> (provided in the <bpt id="6">&lt;strong&gt;</bpt>Sample Scripts<ept id="6">&lt;/strong&gt;</ept> folder).</source>
            <target state="new">Review the preset variables and modify according to your selected database name, input data folder, target log folder, and paths to the  sample format files <bpt id="2">&lt;strong&gt;</bpt>nyctaxi_trip.xml<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare.xml<ept id="4">&lt;/strong&gt;</ept> (provided in the <bpt id="6">&lt;strong&gt;</bpt>Sample Scripts<ept id="6">&lt;/strong&gt;</ept> folder).</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Bulk Import Data<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Bulk Import Data<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>You may also select the authentication mode, default is Windows Authentication.</source>
            <target state="new">You may also select the authentication mode, default is Windows Authentication.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Click the green arrow in the toolbar to run.</source>
            <target state="new">Click the green arrow in the toolbar to run.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>The script will launch 24 bulk import operations in parallel, 12 for each partitioned table.</source>
            <target state="new">The script will launch 24 bulk import operations in parallel, 12 for each partitioned table.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>You may monitor the data import progress by opening the SQL Server default data folder as set above.</source>
            <target state="new">You may monitor the data import progress by opening the SQL Server default data folder as set above.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The PowerShell script reports the starting and ending times.</source>
            <target state="new">The PowerShell script reports the starting and ending times.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>When all bulk imports complete, the ending time is reported.</source>
            <target state="new">When all bulk imports complete, the ending time is reported.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Check the target log folder to verify that the bulk imports were successful, i.e., no errors reported in the target log folder.</source>
            <target state="new">Check the target log folder to verify that the bulk imports were successful, i.e., no errors reported in the target log folder.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>Your database is now ready for exploration, feature engineering, and other operations as desired.</source>
            <target state="new">Your database is now ready for exploration, feature engineering, and other operations as desired.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Since the tables are partitioned according to the <bpt id="2">&lt;strong&gt;</bpt>pickup\_datetime<ept id="2">&lt;/strong&gt;</ept> field, queries which include <bpt id="4">&lt;strong&gt;</bpt>pickup\_datetime<ept id="4">&lt;/strong&gt;</ept> conditions in the <bpt id="6">&lt;strong&gt;</bpt>WHERE<ept id="6">&lt;/strong&gt;</ept> clause will benefit from the partition scheme.</source>
            <target state="new">Since the tables are partitioned according to the <bpt id="2">&lt;strong&gt;</bpt>pickup\_datetime<ept id="2">&lt;/strong&gt;</ept> field, queries which include <bpt id="4">&lt;strong&gt;</bpt>pickup\_datetime<ept id="4">&lt;/strong&gt;</ept> conditions in the <bpt id="6">&lt;strong&gt;</bpt>WHERE<ept id="6">&lt;/strong&gt;</ept> clause will benefit from the partition scheme.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>, explore the provided sample script <bpt id="4">&lt;strong&gt;</bpt>sample\_queries.sql<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>, explore the provided sample script <bpt id="4">&lt;strong&gt;</bpt>sample\_queries.sql<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>To run any of the sample queries, highlight the query lines then click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> in the toolbar.</source>
            <target state="new">To run any of the sample queries, highlight the query lines then click <bpt id="2">&lt;strong&gt;</bpt>!Execute<ept id="2">&lt;/strong&gt;</ept> in the toolbar.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>The NYC Taxi Trips data is loaded in two separate tables.</source>
            <target state="new">The NYC Taxi Trips data is loaded in two separate tables.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>To improve join operations, it is highly recommended to index the tables.</source>
            <target state="new">To improve join operations, it is highly recommended to index the tables.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The sample script <bpt id="2">&lt;strong&gt;</bpt>create\_partitioned\_index.sql<ept id="2">&lt;/strong&gt;</ept> creates partitioned indexes on the composite join key <bpt id="4">&lt;strong&gt;</bpt>medallion, hack\_license, and pickup\_datetime<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The sample script <bpt id="2">&lt;strong&gt;</bpt>create\_partitioned\_index.sql<ept id="2">&lt;/strong&gt;</ept> creates partitioned indexes on the composite join key <bpt id="4">&lt;strong&gt;</bpt>medallion, hack\_license, and pickup\_datetime<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data Exploration and Feature Engineering in SQL Server</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data Exploration and Feature Engineering in SQL Server</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>In this section, we will perform data exploration and feature generation by running SQL queries directly in the <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept> using the SQL Server database created earlier.</source>
            <target state="new">In this section, we will perform data exploration and feature generation by running SQL queries directly in the <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept> using the SQL Server database created earlier.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>A sample script named <bpt id="2">&lt;strong&gt;</bpt>sample\_queries.sql<ept id="2">&lt;/strong&gt;</ept> is provided in the <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">A sample script named <bpt id="2">&lt;strong&gt;</bpt>sample\_queries.sql<ept id="2">&lt;/strong&gt;</ept> is provided in the <bpt id="4">&lt;strong&gt;</bpt>Sample Scripts<ept id="4">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Modify the script to change the database name, if it is different from the default: <bpt id="2">&lt;strong&gt;</bpt>TaxiNYC<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Modify the script to change the database name, if it is different from the default: <bpt id="2">&lt;strong&gt;</bpt>TaxiNYC<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>In this exercise, we will:</source>
            <target state="new">In this exercise, we will:</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Connect to <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept> using either Windows Authentication or using SQL Authentication and the SQL login name and password.</source>
            <target state="new">Connect to <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept> using either Windows Authentication or using SQL Authentication and the SQL login name and password.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Explore data distributions of a few fields in varying time windows.</source>
            <target state="new">Explore data distributions of a few fields in varying time windows.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Investigate data quality of the longitude and latitude fields.</source>
            <target state="new">Investigate data quality of the longitude and latitude fields.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Generate binary and multiclass classification labels based on the <bpt id="2">&lt;strong&gt;</bpt>tip\_amount<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Generate binary and multiclass classification labels based on the <bpt id="2">&lt;strong&gt;</bpt>tip\_amount<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Generate features and compute/compare trip distances.</source>
            <target state="new">Generate features and compute/compare trip distances.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Join the two tables and extract a random sample that will be used to build models.</source>
            <target state="new">Join the two tables and extract a random sample that will be used to build models.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>When you are ready to proceed to Azure Machine Learning, you may either:</source>
            <target state="new">When you are ready to proceed to Azure Machine Learning, you may either:</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Save the final SQL query to extract and sample the data and copy-paste the query directly into a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning, or</source>
            <target state="new">Save the final SQL query to extract and sample the data and copy-paste the query directly into a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning, or</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Persist the sampled and engineered data you plan to use for model building in a new database table and use the new table in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning.</source>
            <target state="new">Persist the sampled and engineered data you plan to use for model building in a new database table and use the new table in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>In this section we will save the final query to extract and sample the data.</source>
            <target state="new">In this section we will save the final query to extract and sample the data.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>The second method is demonstrated in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in IPython Notebook<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">The second method is demonstrated in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in IPython Notebook<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>For a quick verification of the number of rows and columns in the tables populated earlier using parallel bulk import,</source>
            <target state="new">For a quick verification of the number of rows and columns in the tables populated earlier using parallel bulk import,</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Exploration: Trip distribution by medallion</source>
            <target state="new">Exploration: Trip distribution by medallion</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>This example identifies the medallion (taxi numbers) with more than 100 trips within a given time period.</source>
            <target state="new">This example identifies the medallion (taxi numbers) with more than 100 trips within a given time period.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>The query would benefit from the partitioned table access since it is conditioned by the partition scheme of <bpt id="2">&lt;strong&gt;</bpt>pickup\_datetime<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The query would benefit from the partitioned table access since it is conditioned by the partition scheme of <bpt id="2">&lt;strong&gt;</bpt>pickup\_datetime<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Querying the full dataset will also make use of the partitioned table and/or index scan.</source>
            <target state="new">Querying the full dataset will also make use of the partitioned table and/or index scan.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Exploration: Trip distribution by medallion and hack_license</source>
            <target state="new">Exploration: Trip distribution by medallion and hack_license</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Data Quality Assessment: Verify records with incorrect longitude and/or latitude</source>
            <target state="new">Data Quality Assessment: Verify records with incorrect longitude and/or latitude</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>This example investigates if any of the longitude and/or latitude fields either contain an invalid value (radian degrees should be between -90 and 90), or have (0, 0) coordinates.</source>
            <target state="new">This example investigates if any of the longitude and/or latitude fields either contain an invalid value (radian degrees should be between -90 and 90), or have (0, 0) coordinates.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Exploration: Tipped vs. Not Tipped Trips distribution</source>
            <target state="new">Exploration: Tipped vs. Not Tipped Trips distribution</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>This example finds the number of trips that were tipped vs. not tipped in a given time period (or in the full dataset if covering the full year).</source>
            <target state="new">This example finds the number of trips that were tipped vs. not tipped in a given time period (or in the full dataset if covering the full year).</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>This distribution reflects the binary label distribution to be later used for binary classification modeling.</source>
            <target state="new">This distribution reflects the binary label distribution to be later used for binary classification modeling.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Exploration: Tip Class/Range Distribution</source>
            <target state="new">Exploration: Tip Class/Range Distribution</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>This example computes the distribution of tip ranges in a given time period (or in the full dataset if covering the full year).</source>
            <target state="new">This example computes the distribution of tip ranges in a given time period (or in the full dataset if covering the full year).</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>This is the distribution of the label classes that will be used later for multiclass classification modeling.</source>
            <target state="new">This is the distribution of the label classes that will be used later for multiclass classification modeling.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>Exploration: Compute and Compare Trip Distance</source>
            <target state="new">Exploration: Compute and Compare Trip Distance</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>This example converts the pickup and drop-off longitude and latitude to SQL geography points, computes the trip distance using SQL geography points difference, and returns a random sample of the results for comparison.</source>
            <target state="new">This example converts the pickup and drop-off longitude and latitude to SQL geography points, computes the trip distance using SQL geography points difference, and returns a random sample of the results for comparison.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>The example limits the results to valid coordinates only using the data quality assessment query covered earlier.</source>
            <target state="new">The example limits the results to valid coordinates only using the data quality assessment query covered earlier.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Feature Engineering in SQL Queries</source>
            <target state="new">Feature Engineering in SQL Queries</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>The label generation and geography conversion exploration queries can also be used to generate labels/features by removing the counting part.</source>
            <target state="new">The label generation and geography conversion exploration queries can also be used to generate labels/features by removing the counting part.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Additional feature engineering SQL examples are provided in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in IPython Notebook<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">Additional feature engineering SQL examples are provided in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in IPython Notebook<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>It is more efficient to run the feature generation queries on the full dataset or a large subset of it using SQL queries which run directly on the SQL Server database instance.</source>
            <target state="new">It is more efficient to run the feature generation queries on the full dataset or a large subset of it using SQL queries which run directly on the SQL Server database instance.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>The queries may be executed in <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>, IPython Notebook or any development tool/environment which can access the database locally or remotely.</source>
            <target state="new">The queries may be executed in <bpt id="2">&lt;strong&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/strong&gt;</ept>, IPython Notebook or any development tool/environment which can access the database locally or remotely.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Preparing Data for Model Building</source>
            <target state="new">Preparing Data for Model Building</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>The following query joins the <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept> tables, generates a binary classification label <bpt id="6">&lt;strong&gt;</bpt>tipped<ept id="6">&lt;/strong&gt;</ept>, a multi-class classification label <bpt id="8">&lt;strong&gt;</bpt>tip\_class<ept id="8">&lt;/strong&gt;</ept>, and extracts a 1% random sample from the full joined dataset.</source>
            <target state="new">The following query joins the <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept> tables, generates a binary classification label <bpt id="6">&lt;strong&gt;</bpt>tipped<ept id="6">&lt;/strong&gt;</ept>, a multi-class classification label <bpt id="8">&lt;strong&gt;</bpt>tip\_class<ept id="8">&lt;/strong&gt;</ept>, and extracts a 1% random sample from the full joined dataset.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>This query can be copied then pasted directly in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module for direct data ingestion from the SQL Server database instance in Azure.</source>
            <target state="new">This query can be copied then pasted directly in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> module for direct data ingestion from the SQL Server database instance in Azure.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>The query excludes records with incorrect (0, 0) coordinates.</source>
            <target state="new">The query excludes records with incorrect (0, 0) coordinates.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data Exploration and Feature Engineering in IPython Notebook</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Data Exploration and Feature Engineering in IPython Notebook</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>In this section, we will perform data exploration and feature generation</source>
            <target state="new">In this section, we will perform data exploration and feature generation</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>using both Python and SQL queries against the SQL Server database created earlier.</source>
            <target state="new">using both Python and SQL queries against the SQL Server database created earlier.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>A sample IPython notebook named <bpt id="2">&lt;strong&gt;</bpt>machine-Learning-data-science-process-sql-story.ipynb<ept id="2">&lt;/strong&gt;</ept> is provided in the <bpt id="4">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="4">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">A sample IPython notebook named <bpt id="2">&lt;strong&gt;</bpt>machine-Learning-data-science-process-sql-story.ipynb<ept id="2">&lt;/strong&gt;</ept> is provided in the <bpt id="4">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="4">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>This notebook is also available on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">This notebook is also available on <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>GitHub<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>The recommended sequence when working with big data is the following:</source>
            <target state="new">The recommended sequence when working with big data is the following:</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Read in a small sample of the data into an in-memory data frame.</source>
            <target state="new">Read in a small sample of the data into an in-memory data frame.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>Perform some visualizations and explorations using the sampled data.</source>
            <target state="new">Perform some visualizations and explorations using the sampled data.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>Experiment with feature engineering using the sampled data.</source>
            <target state="new">Experiment with feature engineering using the sampled data.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>For larger data exploration, data manipulation and feature engineering, use Python to issue SQL Queries directly against the SQL Server database in the Azure VM.</source>
            <target state="new">For larger data exploration, data manipulation and feature engineering, use Python to issue SQL Queries directly against the SQL Server database in the Azure VM.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>Decide the sample size to use for Azure Machine Learning model building.</source>
            <target state="new">Decide the sample size to use for Azure Machine Learning model building.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>When ready to proceed to Azure Machine Learning, you may either:</source>
            <target state="new">When ready to proceed to Azure Machine Learning, you may either:</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>Save the final SQL query to extract and sample the data and copy-paste the query directly into a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning.</source>
            <target state="new">Save the final SQL query to extract and sample the data and copy-paste the query directly into a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module in Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>This method is demonstrated in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building Models in Azure Machine Learning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">This method is demonstrated in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building Models in Azure Machine Learning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>Persist the sampled and engineered data you plan to use for model building in a new database table, then use the new table in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">Persist the sampled and engineered data you plan to use for model building in a new database table, then use the new table in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>The following are a few data exploration, data visualization, and feature engineering examples.</source>
            <target state="new">The following are a few data exploration, data visualization, and feature engineering examples.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>For more examples, see the sample SQL IPython notebook in the <bpt id="2">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="2">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">For more examples, see the sample SQL IPython notebook in the <bpt id="2">&lt;strong&gt;</bpt>Sample IPython Notebooks<ept id="2">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>Initialize Database Credentials</source>
            <target state="new">Initialize Database Credentials</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>Initialize your database connection settings in the following variables:</source>
            <target state="new">Initialize your database connection settings in the following variables:</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>Create Database Connection</source>
            <target state="new">Create Database Connection</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>Report number of rows and columns in table nyctaxi_trip</source>
            <target state="new">Report number of rows and columns in table nyctaxi_trip</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>Total number of rows = 173179759</source>
            <target state="new">Total number of rows = 173179759</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>Total number of columns = 14</source>
            <target state="new">Total number of columns = 14</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>Read-in a small data sample from the SQL Server Database</source>
            <target state="new">Read-in a small data sample from the SQL Server Database</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>Time to read the sample table is 6.492000 seconds</source>
            <target state="new">Time to read the sample table is 6.492000 seconds</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Number of rows and columns retrieved = (84952, 21)</source>
            <target state="new">Number of rows and columns retrieved = (84952, 21)</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>Descriptive Statistics</source>
            <target state="new">Descriptive Statistics</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Now are ready to explore the sampled data.</source>
            <target state="new">Now are ready to explore the sampled data.</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>We start with</source>
            <target state="new">We start with</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>looking at descriptive statistics for the <bpt id="2">&lt;strong&gt;</bpt>trip\_distance<ept id="2">&lt;/strong&gt;</ept> (or any other) field(s):</source>
            <target state="new">looking at descriptive statistics for the <bpt id="2">&lt;strong&gt;</bpt>trip\_distance<ept id="2">&lt;/strong&gt;</ept> (or any other) field(s):</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>Visualization: Box Plot Example</source>
            <target state="new">Visualization: Box Plot Example</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>Next we look at the box plot for the trip distance to visualize the quantiles</source>
            <target state="new">Next we look at the box plot for the trip distance to visualize the quantiles</target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #1<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #1<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>Visualization: Distribution Plot Example</source>
            <target state="new">Visualization: Distribution Plot Example</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #2<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #2<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>Visualization: Bar and Line Plots</source>
            <target state="new">Visualization: Bar and Line Plots</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>In this example, we bin the trip distance into five bins and visualize the binning results.</source>
            <target state="new">In this example, we bin the trip distance into five bins and visualize the binning results.</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>We can plot the above bin distribution in a bar or line plot as below</source>
            <target state="new">We can plot the above bin distribution in a bar or line plot as below</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #3<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #3<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #4<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #4<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>Visualization: Scatterplot Example</source>
            <target state="new">Visualization: Scatterplot Example</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>We show scatter plot between <bpt id="2">&lt;strong&gt;</bpt>trip\_time\_in\_secs<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>trip\_distance<ept id="4">&lt;/strong&gt;</ept> to see if there</source>
            <target state="new">We show scatter plot between <bpt id="2">&lt;strong&gt;</bpt>trip\_time\_in\_secs<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>trip\_distance<ept id="4">&lt;/strong&gt;</ept> to see if there</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>is any correlation</source>
            <target state="new">is any correlation</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #6<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #6<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>Similarly we can check the relationship between <bpt id="2">&lt;strong&gt;</bpt>rate\_code<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>trip\_distance<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Similarly we can check the relationship between <bpt id="2">&lt;strong&gt;</bpt>rate\_code<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>trip\_distance<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Plot #8<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Plot #8<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>Sub-Sampling the Data in SQL</source>
            <target state="new">Sub-Sampling the Data in SQL</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>When preparing data for model building in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you may either decide on the <bpt id="4">&lt;strong&gt;</bpt>SQL query to use directly in the Reader module<ept id="4">&lt;/strong&gt;</ept> or persist the engineered and sampled data in a new table, which you could use in the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module with a simple **SELECT * FROM <bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>**.</source>
            <target state="new">When preparing data for model building in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you may either decide on the <bpt id="4">&lt;strong&gt;</bpt>SQL query to use directly in the Reader module<ept id="4">&lt;/strong&gt;</ept> or persist the engineered and sampled data in a new table, which you could use in the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module with a simple **SELECT * FROM <bpt id="8">&lt;html&gt;</bpt><ept id="8">&lt;/html&gt;</ept>**.</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>In this section we will create a new table to hold the sampled and engineered data.</source>
            <target state="new">In this section we will create a new table to hold the sampled and engineered data.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source>An example of a direct SQL query for model building is provided in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in SQL Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">An example of a direct SQL query for model building is provided in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in SQL Server<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>Create a Sample Table and Populate with 1% of the Joined Tables. Drop Table First if it Exists.</source>
            <target state="new">Create a Sample Table and Populate with 1% of the Joined Tables. Drop Table First if it Exists.</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>In this section, we join the tables <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept>, extract a 1% random sample, and persist the sampled data in a new table name <bpt id="6">&lt;strong&gt;</bpt>nyctaxi\_one\_percent<ept id="6">&lt;/strong&gt;</ept>:</source>
            <target state="new">In this section, we join the tables <bpt id="2">&lt;strong&gt;</bpt>nyctaxi\_trip<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>nyctaxi\_fare<ept id="4">&lt;/strong&gt;</ept>, extract a 1% random sample, and persist the sampled data in a new table name <bpt id="6">&lt;strong&gt;</bpt>nyctaxi\_one\_percent<ept id="6">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source>Data Exploration using SQL Queries in IPython Notebook</source>
            <target state="new">Data Exploration using SQL Queries in IPython Notebook</target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>In this section, we explore data distributions using the 1% sampled data which is persisted in the new table we created above.</source>
            <target state="new">In this section, we explore data distributions using the 1% sampled data which is persisted in the new table we created above.</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>Note that similar explorations can be performed using the original tables, optionally using <bpt id="2">&lt;strong&gt;</bpt>TABLESAMPLE<ept id="2">&lt;/strong&gt;</ept> to limit the exploration sample or by limiting the results to a given time period using the <bpt id="4">&lt;strong&gt;</bpt>pickup\_datetime<ept id="4">&lt;/strong&gt;</ept> partitions, as illustrated in the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in SQL Server<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">Note that similar explorations can be performed using the original tables, optionally using <bpt id="2">&lt;strong&gt;</bpt>TABLESAMPLE<ept id="2">&lt;/strong&gt;</ept> to limit the exploration sample or by limiting the results to a given time period using the <bpt id="4">&lt;strong&gt;</bpt>pickup\_datetime<ept id="4">&lt;/strong&gt;</ept> partitions, as illustrated in the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Data Exploration and Feature Engineering in SQL Server<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>Exploration: Daily distribution of trips</source>
            <target state="new">Exploration: Daily distribution of trips</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source>Exploration: Trip distribution per medallion</source>
            <target state="new">Exploration: Trip distribution per medallion</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>Feature Generation Using SQL Queries in IPython Notebook</source>
            <target state="new">Feature Generation Using SQL Queries in IPython Notebook</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>In this section we will generate new labels and features directly using SQL queries, operating on the 1% sample table we created in the previous section.</source>
            <target state="new">In this section we will generate new labels and features directly using SQL queries, operating on the 1% sample table we created in the previous section.</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source>Label Generation: Generate Class Labels</source>
            <target state="new">Label Generation: Generate Class Labels</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source>In the following example, we generate two sets of labels to use for modeling:</source>
            <target state="new">In the following example, we generate two sets of labels to use for modeling:</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source>Binary Class Labels <bpt id="2">&lt;strong&gt;</bpt>tipped<ept id="2">&lt;/strong&gt;</ept> (predicting if a tip will be given)</source>
            <target state="new">Binary Class Labels <bpt id="2">&lt;strong&gt;</bpt>tipped<ept id="2">&lt;/strong&gt;</ept> (predicting if a tip will be given)</target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source>Multiclass Labels <bpt id="2">&lt;strong&gt;</bpt>tip\_class<ept id="2">&lt;/strong&gt;</ept> (predicting the tip bin or range)</source>
            <target state="new">Multiclass Labels <bpt id="2">&lt;strong&gt;</bpt>tip\_class<ept id="2">&lt;/strong&gt;</ept> (predicting the tip bin or range)</target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source>Feature Engineering: Count Features for Categorical Columns</source>
            <target state="new">Feature Engineering: Count Features for Categorical Columns</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source>This example transforms a categorical field into a numeric field by replacing each category with the count of its occurrences in the data.</source>
            <target state="new">This example transforms a categorical field into a numeric field by replacing each category with the count of its occurrences in the data.</target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source>Feature Engineering: Bin features for Numerical Columns</source>
            <target state="new">Feature Engineering: Bin features for Numerical Columns</target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source>This example transforms a continuous numeric field into preset category ranges, i.e., transform numeric field into a categorical field.</source>
            <target state="new">This example transforms a continuous numeric field into preset category ranges, i.e., transform numeric field into a categorical field.</target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source>Feature Engineering: Extract Location Features from Decimal Latitude/Longitude</source>
            <target state="new">Feature Engineering: Extract Location Features from Decimal Latitude/Longitude</target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source>This example breaks down the decimal representation of a latitude and/or longitude field into multiple region fields of different granularity, such as, country, city, town, block, etc.</source>
            <target state="new">This example breaks down the decimal representation of a latitude and/or longitude field into multiple region fields of different granularity, such as, country, city, town, block, etc.</target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source>Note that the new geo-fields are not mapped to actual locations.</source>
            <target state="new">Note that the new geo-fields are not mapped to actual locations.</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source>For information on mapping geocode locations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Bing Maps REST Services<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information on mapping geocode locations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Bing Maps REST Services<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source>Verify the final form of the featurized table</source>
            <target state="new">Verify the final form of the featurized table</target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source>We are now ready to proceed to model building and model deployment in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">We are now ready to proceed to model building and model deployment in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source>The data is ready for any of the prediction problems identified earlier, namely:</source>
            <target state="new">The data is ready for any of the prediction problems identified earlier, namely:</target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source>Binary classification: To predict whether or not a tip was paid for a trip.</source>
            <target state="new">Binary classification: To predict whether or not a tip was paid for a trip.</target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source>Multiclass classification: To predict the range of tip paid, according to the previously defined classes.</source>
            <target state="new">Multiclass classification: To predict the range of tip paid, according to the previously defined classes.</target>
          </trans-unit>
          <trans-unit id="315" xml:space="preserve">
            <source>Regression task: To predict the amount of tip paid for a trip.</source>
            <target state="new">Regression task: To predict the amount of tip paid for a trip.</target>
          </trans-unit>
          <trans-unit id="316" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Building Models in Azure Machine Learning</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Building Models in Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="317" xml:space="preserve">
            <source>To begin the modeling exercise, log in to your Azure Machine Learning workspace.</source>
            <target state="new">To begin the modeling exercise, log in to your Azure Machine Learning workspace.</target>
          </trans-unit>
          <trans-unit id="318" xml:space="preserve">
            <source>If you have not yet created a machine learning workspace, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure ML workspace<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you have not yet created a machine learning workspace, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an Azure ML workspace<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="319" xml:space="preserve">
            <source>To get started with Azure Machine Learning, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What is Azure Machine Learning Studio?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">To get started with Azure Machine Learning, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What is Azure Machine Learning Studio?<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="320" xml:space="preserve">
            <source>Log in to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Log in to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Studio<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="321" xml:space="preserve">
            <source>The Studio Home page provides a wealth of information, videos, tutorials, links to the Modules Reference, and other resources.</source>
            <target state="new">The Studio Home page provides a wealth of information, videos, tutorials, links to the Modules Reference, and other resources.</target>
          </trans-unit>
          <trans-unit id="322" xml:space="preserve">
            <source>Fore more information about Azure Machine Learning, consult the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Documentation Center<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Fore more information about Azure Machine Learning, consult the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Machine Learning Documentation Center<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="323" xml:space="preserve">
            <source>A typical training experiment consists of the following:</source>
            <target state="new">A typical training experiment consists of the following:</target>
          </trans-unit>
          <trans-unit id="324" xml:space="preserve">
            <source>Create a <bpt id="2">&lt;strong&gt;</bpt>+NEW<ept id="2">&lt;/strong&gt;</ept> experiment.</source>
            <target state="new">Create a <bpt id="2">&lt;strong&gt;</bpt>+NEW<ept id="2">&lt;/strong&gt;</ept> experiment.</target>
          </trans-unit>
          <trans-unit id="325" xml:space="preserve">
            <source>Get the data to Azure ML.</source>
            <target state="new">Get the data to Azure ML.</target>
          </trans-unit>
          <trans-unit id="326" xml:space="preserve">
            <source>Pre-process, transform and manipulate the data as needed.</source>
            <target state="new">Pre-process, transform and manipulate the data as needed.</target>
          </trans-unit>
          <trans-unit id="327" xml:space="preserve">
            <source>Generate features as needed.</source>
            <target state="new">Generate features as needed.</target>
          </trans-unit>
          <trans-unit id="328" xml:space="preserve">
            <source>Split the data into training/validation/testing datasets(or have separate datasets for each).</source>
            <target state="new">Split the data into training/validation/testing datasets(or have separate datasets for each).</target>
          </trans-unit>
          <trans-unit id="329" xml:space="preserve">
            <source>Select one or more machine learning algorithms depending on the learning problem to solve.</source>
            <target state="new">Select one or more machine learning algorithms depending on the learning problem to solve.</target>
          </trans-unit>
          <trans-unit id="330" xml:space="preserve">
            <source>E.g., binary classification, multiclass classification, regression.</source>
            <target state="new">E.g., binary classification, multiclass classification, regression.</target>
          </trans-unit>
          <trans-unit id="331" xml:space="preserve">
            <source>Train one or more models using the training dataset.</source>
            <target state="new">Train one or more models using the training dataset.</target>
          </trans-unit>
          <trans-unit id="332" xml:space="preserve">
            <source>Score the validation dataset using the trained model(s).</source>
            <target state="new">Score the validation dataset using the trained model(s).</target>
          </trans-unit>
          <trans-unit id="333" xml:space="preserve">
            <source>Evaluate the model(s) to compute the relevant metrics for the learning problem.</source>
            <target state="new">Evaluate the model(s) to compute the relevant metrics for the learning problem.</target>
          </trans-unit>
          <trans-unit id="334" xml:space="preserve">
            <source>Fine tune the model(s) and select the best model to deploy.</source>
            <target state="new">Fine tune the model(s) and select the best model to deploy.</target>
          </trans-unit>
          <trans-unit id="335" xml:space="preserve">
            <source>In this exercise, we have already explored and engineered the data in SQL Server, and decided on the sample size to ingest in Azure ML.</source>
            <target state="new">In this exercise, we have already explored and engineered the data in SQL Server, and decided on the sample size to ingest in Azure ML.</target>
          </trans-unit>
          <trans-unit id="336" xml:space="preserve">
            <source>To build one or more of the prediction models we decided:</source>
            <target state="new">To build one or more of the prediction models we decided:</target>
          </trans-unit>
          <trans-unit id="337" xml:space="preserve">
            <source>Get the data to Azure ML using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, available in the <bpt id="4">&lt;strong&gt;</bpt>Data Input and Output<ept id="4">&lt;/strong&gt;</ept> section.</source>
            <target state="new">Get the data to Azure ML using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module, available in the <bpt id="4">&lt;strong&gt;</bpt>Data Input and Output<ept id="4">&lt;/strong&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="338" xml:space="preserve">
            <source>For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module reference page.</source>
            <target state="new">For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Reader[reader]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module reference page.</target>
          </trans-unit>
          <trans-unit id="339" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Reader<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Reader<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="340" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Azure SQL Database<ept id="2">&lt;/strong&gt;</ept> as the <bpt id="4">&lt;strong&gt;</bpt>Data source<ept id="4">&lt;/strong&gt;</ept> in the <bpt id="6">&lt;strong&gt;</bpt>Properties<ept id="6">&lt;/strong&gt;</ept> panel.</source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Azure SQL Database<ept id="2">&lt;/strong&gt;</ept> as the <bpt id="4">&lt;strong&gt;</bpt>Data source<ept id="4">&lt;/strong&gt;</ept> in the <bpt id="6">&lt;strong&gt;</bpt>Properties<ept id="6">&lt;/strong&gt;</ept> panel.</target>
          </trans-unit>
          <trans-unit id="341" xml:space="preserve">
            <source>Enter the database DNS name in the <bpt id="2">&lt;strong&gt;</bpt>Database server name<ept id="2">&lt;/strong&gt;</ept> field. Format: <bpt id="4">&lt;code&gt;</bpt>tcp:&lt;your_virtual_machine_DNS_name&gt;,1433<ept id="4">&lt;/code&gt;</ept></source>
            <target state="new">Enter the database DNS name in the <bpt id="2">&lt;strong&gt;</bpt>Database server name<ept id="2">&lt;/strong&gt;</ept> field. Format: <bpt id="4">&lt;code&gt;</bpt>tcp:&lt;your_virtual_machine_DNS_name&gt;,1433<ept id="4">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="342" xml:space="preserve">
            <source>Enter the <bpt id="2">&lt;strong&gt;</bpt>Database name<ept id="2">&lt;/strong&gt;</ept> in the corresponding field.</source>
            <target state="new">Enter the <bpt id="2">&lt;strong&gt;</bpt>Database name<ept id="2">&lt;/strong&gt;</ept> in the corresponding field.</target>
          </trans-unit>
          <trans-unit id="343" xml:space="preserve">
            <source>Enter the <bpt id="2">&lt;strong&gt;</bpt>SQL user name<ept id="2">&lt;/strong&gt;</ept> in the <bpt id="4">&lt;strong&gt;</bpt>Server user aqccount name, and the password in the **Server user account password<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Enter the <bpt id="2">&lt;strong&gt;</bpt>SQL user name<ept id="2">&lt;/strong&gt;</ept> in the <bpt id="4">&lt;strong&gt;</bpt>Server user aqccount name, and the password in the **Server user account password<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="344" xml:space="preserve">
            <source>Check <bpt id="2">&lt;strong&gt;</bpt>Accept any server certificate<ept id="2">&lt;/strong&gt;</ept> option.</source>
            <target state="new">Check <bpt id="2">&lt;strong&gt;</bpt>Accept any server certificate<ept id="2">&lt;/strong&gt;</ept> option.</target>
          </trans-unit>
          <trans-unit id="345" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Database query<ept id="2">&lt;/strong&gt;</ept> edit text area, paste the query which extracts the necessary database fields (including any computed fields such as the labels) and down samples the data to the desired sample size.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Database query<ept id="2">&lt;/strong&gt;</ept> edit text area, paste the query which extracts the necessary database fields (including any computed fields such as the labels) and down samples the data to the desired sample size.</target>
          </trans-unit>
          <trans-unit id="346" xml:space="preserve">
            <source>An example of a binary classification experiment reading data directly from the SQL Server database is in the figure below.</source>
            <target state="new">An example of a binary classification experiment reading data directly from the SQL Server database is in the figure below.</target>
          </trans-unit>
          <trans-unit id="347" xml:space="preserve">
            <source>Similar experiments can be constructed for multiclass classification and regression problems.</source>
            <target state="new">Similar experiments can be constructed for multiclass classification and regression problems.</target>
          </trans-unit>
          <trans-unit id="348" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Train<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Train<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="349" xml:space="preserve">
            <source>In the modeling data extraction and sampling query examples provided in previous sections, <bpt id="2">&lt;strong&gt;</bpt>all labels for the three modeling exercises are included in the query<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the modeling data extraction and sampling query examples provided in previous sections, <bpt id="2">&lt;strong&gt;</bpt>all labels for the three modeling exercises are included in the query<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="350" xml:space="preserve">
            <source>An important (required) step in each of the modeling exercises is to <bpt id="2">&lt;strong&gt;</bpt>exclude<ept id="2">&lt;/strong&gt;</ept> the unnecessary labels for the other two problems, and any other <bpt id="4">&lt;strong&gt;</bpt>target leaks<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">An important (required) step in each of the modeling exercises is to <bpt id="2">&lt;strong&gt;</bpt>exclude<ept id="2">&lt;/strong&gt;</ept> the unnecessary labels for the other two problems, and any other <bpt id="4">&lt;strong&gt;</bpt>target leaks<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="351" xml:space="preserve">
            <source>For e.g., when using binary classification, use the label <bpt id="2">&lt;strong&gt;</bpt>tipped<ept id="2">&lt;/strong&gt;</ept> and exclude the fields <bpt id="4">&lt;strong&gt;</bpt>tip\_class<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>tip\_amount<ept id="6">&lt;/strong&gt;</ept>, and <bpt id="8">&lt;strong&gt;</bpt>total\_amount<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">For e.g., when using binary classification, use the label <bpt id="2">&lt;strong&gt;</bpt>tipped<ept id="2">&lt;/strong&gt;</ept> and exclude the fields <bpt id="4">&lt;strong&gt;</bpt>tip\_class<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>tip\_amount<ept id="6">&lt;/strong&gt;</ept>, and <bpt id="8">&lt;strong&gt;</bpt>total\_amount<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="352" xml:space="preserve">
            <source>The latter are target leaks since they imply the tip paid.</source>
            <target state="new">The latter are target leaks since they imply the tip paid.</target>
          </trans-unit>
          <trans-unit id="353" xml:space="preserve">
            <source>To exclude unnecessary columns and/or target leaks, you may use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module or the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Metadata Editor[metadata-editor]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To exclude unnecessary columns and/or target leaks, you may use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> module or the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Metadata Editor[metadata-editor]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="354" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Metadata Editor[metadata-editor]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> reference pages.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Metadata Editor[metadata-editor]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> reference pages.</target>
          </trans-unit>
          <trans-unit id="355" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Deploying Models in Azure Machine Learning</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Deploying Models in Azure Machine Learning</target>
          </trans-unit>
          <trans-unit id="356" xml:space="preserve">
            <source>When your model is ready, you can easily deploy it as a web service directly from the experiment.</source>
            <target state="new">When your model is ready, you can easily deploy it as a web service directly from the experiment.</target>
          </trans-unit>
          <trans-unit id="357" xml:space="preserve">
            <source>For more information about publishing Azure ML web services, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Publish an Azure Machine Learning web service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about publishing Azure ML web services, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Publish an Azure Machine Learning web service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="358" xml:space="preserve">
            <source>To deploy a new web service, you need to:</source>
            <target state="new">To deploy a new web service, you need to:</target>
          </trans-unit>
          <trans-unit id="359" xml:space="preserve">
            <source>Create a scoring experiment.</source>
            <target state="new">Create a scoring experiment.</target>
          </trans-unit>
          <trans-unit id="360" xml:space="preserve">
            <source>Publish the web service.</source>
            <target state="new">Publish the web service.</target>
          </trans-unit>
          <trans-unit id="361" xml:space="preserve">
            <source>To create a scoring experiment from a <bpt id="2">&lt;strong&gt;</bpt>Finished<ept id="2">&lt;/strong&gt;</ept> training experiment, click <bpt id="4">&lt;strong&gt;</bpt>CREATE SCORING EXPERIMENT<ept id="4">&lt;/strong&gt;</ept> in the lower action bar.</source>
            <target state="new">To create a scoring experiment from a <bpt id="2">&lt;strong&gt;</bpt>Finished<ept id="2">&lt;/strong&gt;</ept> training experiment, click <bpt id="4">&lt;strong&gt;</bpt>CREATE SCORING EXPERIMENT<ept id="4">&lt;/strong&gt;</ept> in the lower action bar.</target>
          </trans-unit>
          <trans-unit id="362" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Azure Scoring<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Azure Scoring<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="363" xml:space="preserve">
            <source>Azure Machine Learning will attempt to create a scoring experiment based on the components of the training experiment.</source>
            <target state="new">Azure Machine Learning will attempt to create a scoring experiment based on the components of the training experiment.</target>
          </trans-unit>
          <trans-unit id="364" xml:space="preserve">
            <source>In particular, it will:</source>
            <target state="new">In particular, it will:</target>
          </trans-unit>
          <trans-unit id="365" xml:space="preserve">
            <source>Save the trained model and remove the model training modules.</source>
            <target state="new">Save the trained model and remove the model training modules.</target>
          </trans-unit>
          <trans-unit id="366" xml:space="preserve">
            <source>Identify a logical <bpt id="2">&lt;strong&gt;</bpt>input port<ept id="2">&lt;/strong&gt;</ept> to represent the expected input data schema.</source>
            <target state="new">Identify a logical <bpt id="2">&lt;strong&gt;</bpt>input port<ept id="2">&lt;/strong&gt;</ept> to represent the expected input data schema.</target>
          </trans-unit>
          <trans-unit id="367" xml:space="preserve">
            <source>Identify a logical <bpt id="2">&lt;strong&gt;</bpt>output port<ept id="2">&lt;/strong&gt;</ept> to represent the expected web service output schema.</source>
            <target state="new">Identify a logical <bpt id="2">&lt;strong&gt;</bpt>output port<ept id="2">&lt;/strong&gt;</ept> to represent the expected web service output schema.</target>
          </trans-unit>
          <trans-unit id="368" xml:space="preserve">
            <source>When the scoring experiment is created, review it and adjust as needed.</source>
            <target state="new">When the scoring experiment is created, review it and adjust as needed.</target>
          </trans-unit>
          <trans-unit id="369" xml:space="preserve">
            <source>A typical adjustment is to replace the input dataset and/or query with one which excludes label fields, as these will not be available when the service is called.</source>
            <target state="new">A typical adjustment is to replace the input dataset and/or query with one which excludes label fields, as these will not be available when the service is called.</target>
          </trans-unit>
          <trans-unit id="370" xml:space="preserve">
            <source>It is also a good practice to reduce the size of the input dataset and/or query to a few records, just enough to indicate the input schema.</source>
            <target state="new">It is also a good practice to reduce the size of the input dataset and/or query to a few records, just enough to indicate the input schema.</target>
          </trans-unit>
          <trans-unit id="371" xml:space="preserve">
            <source>For the output port, it is common to exclude all input fields and only include the <bpt id="2">&lt;strong&gt;</bpt>Scored Labels<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Scored Probabilities<ept id="4">&lt;/strong&gt;</ept> in the output using the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module.</source>
            <target state="new">For the output port, it is common to exclude all input fields and only include the <bpt id="2">&lt;strong&gt;</bpt>Scored Labels<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Scored Probabilities<ept id="4">&lt;/strong&gt;</ept> in the output using the <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Project Columns[project-columns]<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> module.</target>
          </trans-unit>
          <trans-unit id="372" xml:space="preserve">
            <source>A sample scoring experiment is in the figure below.</source>
            <target state="new">A sample scoring experiment is in the figure below.</target>
          </trans-unit>
          <trans-unit id="373" xml:space="preserve">
            <source>When ready to publish, click the <bpt id="2">&lt;strong&gt;</bpt>PUBLISH WEB SERVICE<ept id="2">&lt;/strong&gt;</ept> button in the lower action bar.</source>
            <target state="new">When ready to publish, click the <bpt id="2">&lt;strong&gt;</bpt>PUBLISH WEB SERVICE<ept id="2">&lt;/strong&gt;</ept> button in the lower action bar.</target>
          </trans-unit>
          <trans-unit id="374" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Publish<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Azure ML Publish<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="375" xml:space="preserve">
            <source>To recap, in this walkthrough tutorial, you have created an Azure data science environment, worked with a large public dataset all the way from data acquisition to model training and publishing of an Azure Machine Learning web service.</source>
            <target state="new">To recap, in this walkthrough tutorial, you have created an Azure data science environment, worked with a large public dataset all the way from data acquisition to model training and publishing of an Azure Machine Learning web service.</target>
          </trans-unit>
          <trans-unit id="376" xml:space="preserve">
            <source>License Information</source>
            <target state="new">License Information</target>
          </trans-unit>
          <trans-unit id="377" xml:space="preserve">
            <source>This sample walkthrough and its accompanying scripts and IPython notebook(s) are shared by Microsoft under the MIT license.</source>
            <target state="new">This sample walkthrough and its accompanying scripts and IPython notebook(s) are shared by Microsoft under the MIT license.</target>
          </trans-unit>
          <trans-unit id="378" xml:space="preserve">
            <source>Please check the LICENSE.txt file in in the directory of the sample code on GitHub for more details.</source>
            <target state="new">Please check the LICENSE.txt file in in the directory of the sample code on GitHub for more details.</target>
          </trans-unit>
          <trans-unit id="379" xml:space="preserve">
            <source>References</source>
            <target state="new">References</target>
          </trans-unit>
          <trans-unit id="380" xml:space="preserve">
            <source>•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Andrés Monroy NYC Taxi Trips Download Page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Andrés Monroy NYC Taxi Trips Download Page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="381" xml:space="preserve">
            <source>•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>FOILing NYC’s Taxi Trip Data by Chris Whong<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>FOILing NYC’s Taxi Trip Data by Chris Whong<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="382" xml:space="preserve">
            <source>•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi and Limousine Commission Research and Statistics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">•   <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>NYC Taxi and Limousine Commission Research and Statistics<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="383" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>