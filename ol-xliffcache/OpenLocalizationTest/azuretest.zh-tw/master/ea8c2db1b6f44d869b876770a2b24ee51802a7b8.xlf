<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:27:08 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea8c2db1b6f44d869b876770a2b24ee51802a7b8</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Typical workflow for Azure Search development | Microsoft Azure</source>
            <target state="new">Typical workflow for Azure Search development | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>A workflow or roadmap for building prototype and production applications that integrate with Azure Search.</source>
            <target state="new">A workflow or roadmap for building prototype and production applications that integrate with Azure Search.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Typical workflow for Azure Search development</source>
            <target state="new">Typical workflow for Azure Search development</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This article is a roadmap for including Azure Search as a component that provides the search experience in your custom application.</source>
            <target state="new">This article is a roadmap for including Azure Search as a component that provides the search experience in your custom application.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Depending on whether you are testing the waters or ready to dive right in, you’ll want some preliminary guidance on how to integrate Azure Search into your custom development project.</source>
            <target state="new">Depending on whether you are testing the waters or ready to dive right in, you’ll want some preliminary guidance on how to integrate Azure Search into your custom development project.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In the following sections, we break out a typical workflow for an initial prototype that will help you evaluate how well Azure Search meets the search requirements of your application.</source>
            <target state="new">In the following sections, we break out a typical workflow for an initial prototype that will help you evaluate how well Azure Search meets the search requirements of your application.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Part two of this article covers important design decisions that factor into a more serious application development effort.</source>
            <target state="new">Part two of this article covers important design decisions that factor into a more serious application development effort.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Before you start prototyping, we recommend that you ramp up with one of our Getting Started tutorials or this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>one-hour deep dive presentation video<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Before you start prototyping, we recommend that you ramp up with one of our Getting Started tutorials or this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>one-hour deep dive presentation video<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Get Started tutorials are offered in these languages: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Java<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Node.JS<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Get Started tutorials are offered in these languages: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Java<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Node.JS<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Prototype development</source>
            <target state="new">Prototype development</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The quickest path to a successful prototype typically includes the steps in this section.</source>
            <target state="new">The quickest path to a successful prototype typically includes the steps in this section.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Steps include provisioning a service, define a schema for your index, load the index with documents, and query the index.</source>
            <target state="new">Steps include provisioning a service, define a schema for your index, load the index with documents, and query the index.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>For applications with volatile data (for example, if the common case includes rapid changes to inventory or content), your prototype should include a component for updating documents as well.</source>
            <target state="new">For applications with volatile data (for example, if the common case includes rapid changes to inventory or content), your prototype should include a component for updating documents as well.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Step 1: Provision the service</source>
            <target state="new">Step 1: Provision the service</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Azure Search is a fully-managed online service available through an Azure subscription.</source>
            <target state="new">Azure Search is a fully-managed online service available through an Azure subscription.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Once you sign up for Azure<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, adding the Search service is quick.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Once you sign up for Azure<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept>, adding the Search service is quick.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Visit <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Search service in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for instructions on how to add a Search service to your subscription.</source>
            <target state="new">Visit <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create a Search service in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for instructions on how to add a Search service to your subscription.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>There are two pricing tiers to choose from.</source>
            <target state="new">There are two pricing tiers to choose from.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>We recommend the shared (free) service for prototyping, with the caveat that you will need to work with a small subset of your data.</source>
            <target state="new">We recommend the shared (free) service for prototyping, with the caveat that you will need to work with a small subset of your data.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The shared service is free to existing subscribers (through trial or regular memberships) and is fast to set up, but it constrains the number of indexes and documents you can use to 3 indexes, up to 10,000 documents per index, or 50 MB of storage total, whichever comes first.</source>
            <target state="new">The shared service is free to existing subscribers (through trial or regular memberships) and is fast to set up, but it constrains the number of indexes and documents you can use to 3 indexes, up to 10,000 documents per index, or 50 MB of storage total, whichever comes first.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Step 2: Create the index</source>
            <target state="new">Step 2: Create the index</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>After you create the service, you are ready to create an index, starting with its schema definition.</source>
            <target state="new">After you create the service, you are ready to create an index, starting with its schema definition.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The fastest and easiest way to create an index is through the Azure portal.</source>
            <target state="new">The fastest and easiest way to create an index is through the Azure portal.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>At a minimum, each document must have a unique key and at least one field that contains searchable data.</source>
            <target state="new">At a minimum, each document must have a unique key and at least one field that contains searchable data.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>To get started, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an index in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To get started, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create an index in the portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Inside an Azure Search Index</source>
            <target state="new">Inside an Azure Search Index</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>An <bpt id="2">&lt;em&gt;</bpt>index<ept id="2">&lt;/em&gt;</ept> is organized, persisted data that serves as the <bpt id="4">&lt;em&gt;</bpt>search corpus<ept id="4">&lt;/em&gt;</ept> for all subsequent search operations.</source>
            <target state="new">An <bpt id="2">&lt;em&gt;</bpt>index<ept id="2">&lt;/em&gt;</ept> is organized, persisted data that serves as the <bpt id="4">&lt;em&gt;</bpt>search corpus<ept id="4">&lt;/em&gt;</ept> for all subsequent search operations.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Your search corpus is stored in the cloud as part of your Search service subscription, which enables search operations to execute quickly and consistently.</source>
            <target state="new">Your search corpus is stored in the cloud as part of your Search service subscription, which enables search operations to execute quickly and consistently.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In search terminology, an item in your search corpus is called a <bpt id="2">&lt;em&gt;</bpt>document<ept id="2">&lt;/em&gt;</ept>, and the sum total of all documents is the <bpt id="4">&lt;em&gt;</bpt>documents collection<ept id="4">&lt;/em&gt;</ept>.</source>
            <target state="new">In search terminology, an item in your search corpus is called a <bpt id="2">&lt;em&gt;</bpt>document<ept id="2">&lt;/em&gt;</ept>, and the sum total of all documents is the <bpt id="4">&lt;em&gt;</bpt>documents collection<ept id="4">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>An <bpt id="2">&lt;em&gt;</bpt>index schema<ept id="2">&lt;/em&gt;</ept> defines all of the fields within a document by name, data type, and attributes that specify whether the field is searchable, filterable, facetable, and so forth.</source>
            <target state="new">An <bpt id="2">&lt;em&gt;</bpt>index schema<ept id="2">&lt;/em&gt;</ept> defines all of the fields within a document by name, data type, and attributes that specify whether the field is searchable, filterable, facetable, and so forth.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Besides document structure, an index schema also specifies scoring profiles that provide criteria for boosting a search score, and configuration settings that enable auto-complete queries (suggesters) and CORS for cross-domain query requests.</source>
            <target state="new">Besides document structure, an index schema also specifies scoring profiles that provide criteria for boosting a search score, and configuration settings that enable auto-complete queries (suggesters) and CORS for cross-domain query requests.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;em&gt;</bpt>For prototypes, we recommend that you start out simply by specifying just the fields in a document<ept id="1">&lt;/em&gt;</ept>, and then add other features incrementally (see Step 5 for a list of additional functionality to add later).</source>
            <target state="new"><bpt id="1">&lt;em&gt;</bpt>For prototypes, we recommend that you start out simply by specifying just the fields in a document<ept id="1">&lt;/em&gt;</ept>, and then add other features incrementally (see Step 5 for a list of additional functionality to add later).</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Applied to a real-world example, consider an e-commerce application.</source>
            <target state="new">Applied to a real-world example, consider an e-commerce application.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>The search index would contain all of the products or services that are searchable in your application (anything that comes back in a search results).</source>
            <target state="new">The search index would contain all of the products or services that are searchable in your application (anything that comes back in a search results).</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>There would be one document for each SKU.</source>
            <target state="new">There would be one document for each SKU.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Each document would include the product name, brand, sizes, price, colors, and even references to images or other resource files that you want returned within search results.</source>
            <target state="new">Each document would include the product name, brand, sizes, price, colors, and even references to images or other resource files that you want returned within search results.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Step 3: Load documents</source>
            <target state="new">Step 3: Load documents</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>After saving the index in Azure Search, the next step is to populate the index with documents.</source>
            <target state="new">After saving the index in Azure Search, the next step is to populate the index with documents.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>In this step, data is uploaded, analyzed, tokenized, and stored in data structures (such as inverted indexes) that are designed for search workloads.</source>
            <target state="new">In this step, data is uploaded, analyzed, tokenized, and stored in data structures (such as inverted indexes) that are designed for search workloads.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Data that you upload to an index must conform to the schema you defined in the previous step.</source>
            <target state="new">Data that you upload to an index must conform to the schema you defined in the previous step.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Document data is represented as a set of key/value pairs for each field, in JSON format.</source>
            <target state="new">Document data is represented as a set of key/value pairs for each field, in JSON format.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>If your schema specifies an ID (key) field, a name field, a number field, and a URL field (which you might do if external images are part of your search results), then all the documents you feed into the index must have values (or null) for each field.</source>
            <target state="new">If your schema specifies an ID (key) field, a name field, a number field, and a URL field (which you might do if external images are part of your search results), then all the documents you feed into the index must have values (or null) for each field.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>There are several ways to load documents, but right now, all of them require an API.</source>
            <target state="new">There are several ways to load documents, but right now, all of them require an API.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>For most prototypes, this step might be the most time consuming due to a coding requirement.</source>
            <target state="new">For most prototypes, this step might be the most time consuming due to a coding requirement.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Options are described later in this article.</source>
            <target state="new">Options are described later in this article.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Remember that the shared service limits you to 10,000 documents per index.</source>
            <target state="new">Remember that the shared service limits you to 10,000 documents per index.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Be sure to reduce your dataset so that it stays under the limits.</source>
            <target state="new">Be sure to reduce your dataset so that it stays under the limits.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Limits and constraints<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Limits and constraints<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>How to load data into an index</source>
            <target state="new">How to load data into an index</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>One approach is to use an indexer.</source>
            <target state="new">One approach is to use an indexer.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>For Azure DocumentDB or SQL Server relational data sources in Azure (specifically Azure SQL Database, or SQL Server in an Azure VM), you can use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>indexers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to retrieve documents from a supported data source.</source>
            <target state="new">For Azure DocumentDB or SQL Server relational data sources in Azure (specifically Azure SQL Database, or SQL Server in an Azure VM), you can use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>indexers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to retrieve documents from a supported data source.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Code samples that use indexers for loading documents can be found in any of these getting started tutorials: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Java<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Node.JS<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Code samples that use indexers for loading documents can be found in any of these getting started tutorials: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>.NET<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Java<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Node.JS<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>A second option is to write a simple program using either the REST API or the .NET library that loads the documents:</source>
            <target state="new">A second option is to write a simple program using either the REST API or the .NET library that loads the documents:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Add, update, or delete documents (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Add, update, or delete documents (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>DocumentOperationsExtensions Class<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>DocumentOperationsExtensions Class<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>A third option that works for very small datasets is to use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Fiddler<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Chrome Postman<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to upload documents.</source>
            <target state="new">A third option that works for very small datasets is to use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Fiddler<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Chrome Postman<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to upload documents.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>A fourth option, perhaps the easiest one, is to borrow code from either the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Adventure Works C# REST API Example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that loads documents from an embedded database (.mdf) in the solution, or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Scoring Profiles C# REST API Example<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> that loads data from JSON data files included in the solution.</source>
            <target state="new">A fourth option, perhaps the easiest one, is to borrow code from either the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Adventure Works C# REST API Example<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> that loads documents from an embedded database (.mdf) in the solution, or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Scoring Profiles C# REST API Example<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> that loads data from JSON data files included in the solution.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>You could modify and run the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>scoring profiles sample<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, replacing the data JSON files and schema.json file with data that is valid for your application.</source>
            <target state="new">You could modify and run the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>scoring profiles sample<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, replacing the data JSON files and schema.json file with data that is valid for your application.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Step 4: Query documents</source>
            <target state="new">Step 4: Query documents</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Once documents are loaded into the index, you can write your first query.</source>
            <target state="new">Once documents are loaded into the index, you can write your first query.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The fastest way to get initial search results back from your Search service is to use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Fiddler<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Chrome Postman<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to view a response, but realistically, you will want to write some simple UI code to view the results in a readable format.</source>
            <target state="new">The fastest way to get initial search results back from your Search service is to use <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Fiddler<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Chrome Postman<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to view a response, but realistically, you will want to write some simple UI code to view the results in a readable format.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>APIs for search operations include:</source>
            <target state="new">APIs for search operations include:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Search Documents operation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Search Documents operation<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SearchIndexClient Class<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>SearchIndexClient Class<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Queries in Azure Search can be very simple. Including <bpt id="2">&lt;code&gt;</bpt>search=*<ept id="2">&lt;/code&gt;</ept> on the URI will return the first 50 items in your search corpus; specifying <bpt id="4">&lt;code&gt;</bpt>search=&lt;some phrase&gt;<ept id="4">&lt;/code&gt;</ept> will perform a full-text search on the phrase, returning up to 50 documents, assuming there are at least 50 documents that contain a match on the term input.</source>
            <target state="new">Queries in Azure Search can be very simple. Including <bpt id="2">&lt;code&gt;</bpt>search=*<ept id="2">&lt;/code&gt;</ept> on the URI will return the first 50 items in your search corpus; specifying <bpt id="4">&lt;code&gt;</bpt>search=&lt;some phrase&gt;<ept id="4">&lt;/code&gt;</ept> will perform a full-text search on the phrase, returning up to 50 documents, assuming there are at least 50 documents that contain a match on the term input.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>50 documents is the default.</source>
            <target state="new">50 documents is the default.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>You can change the number of items returned using the <bpt id="2">&lt;code&gt;</bpt>$Count<ept id="2">&lt;/code&gt;</ept> query parameter.</source>
            <target state="new">You can change the number of items returned using the <bpt id="2">&lt;code&gt;</bpt>$Count<ept id="2">&lt;/code&gt;</ept> query parameter.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>This parameter is documented in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">This parameter is documented in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The most comprehensive list of query examples can be found in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but you might also want to review the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>syntax reference<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to review the list of supported operators.</source>
            <target state="new">The most comprehensive list of query examples can be found in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but you might also want to review the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>syntax reference<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to review the list of supported operators.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Step 5: Explore more features</source>
            <target state="new">Step 5: Explore more features</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Now that you have a service and index, you can experiment with features to further evolve the search experience.</source>
            <target state="new">Now that you have a service and index, you can experiment with features to further evolve the search experience.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>A short list of features to investigate are listed next.</source>
            <target state="new">A short list of features to investigate are listed next.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Search pages<ept id="1">&lt;/strong&gt;</ept> often include document counts in a result set, or use pagination to subdivide results into more manageable numbers.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Search pages<ept id="1">&lt;/strong&gt;</ept> often include document counts in a result set, or use pagination to subdivide results into more manageable numbers.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Pagination<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Pagination<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>searchMode=all<ept id="1">&lt;/strong&gt;</ept> is a query parameter that changes how Azure Search evaluates the NOT operator.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>searchMode=all<ept id="1">&lt;/strong&gt;</ept> is a query parameter that changes how Azure Search evaluates the NOT operator.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>By default, queries that include NOT (-) expand rather than narrow the results.</source>
            <target state="new">By default, queries that include NOT (-) expand rather than narrow the results.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>You can set this parameter to change how the operator is evaluated.</source>
            <target state="new">You can set this parameter to change how the operator is evaluated.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>It’s documented in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SearchMode Enumeration<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">It’s documented in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>SearchMode Enumeration<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Scoring profiles<ept id="1">&lt;/strong&gt;</ept> are used to boost search scores, causing items that meet predefined criteria to appear higher in the search results.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Scoring profiles<ept id="1">&lt;/strong&gt;</ept> are used to boost search scores, causing items that meet predefined criteria to appear higher in the search results.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with scoring profiles<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to step through this feature.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get started with scoring profiles<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to step through this feature.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Filters<ept id="1">&lt;/strong&gt;</ept> are used to narrow search results by providing additional criteria on the selection.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Filters<ept id="1">&lt;/strong&gt;</ept> are used to narrow search results by providing additional criteria on the selection.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Filter expressions are placed within the query.</source>
            <target state="new">Filter expressions are placed within the query.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Search Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Faceted navigation<ept id="1">&lt;/strong&gt;</ept> is used for self-directed filtering.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Faceted navigation<ept id="1">&lt;/strong&gt;</ept> is used for self-directed filtering.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Azure Search builds and returns the structure, and your code renders the faceted navigation structure in a search results page.</source>
            <target state="new">Azure Search builds and returns the structure, and your code renders the faceted navigation structure in a search results page.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Faceted Navigation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Faceted Navigation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for details.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Suggesters<ept id="1">&lt;/strong&gt;</ept> refers to type-ahead or auto-complete queries that return suggested search terms as the user types in the first characters of a search phrase.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Suggesters<ept id="1">&lt;/strong&gt;</ept> refers to type-ahead or auto-complete queries that return suggested search terms as the user types in the first characters of a search phrase.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Suggestions operation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Suggesters Class<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Suggestions operation<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Suggesters Class<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Language analyzers<ept id="1">&lt;/strong&gt;</ept> provide the linguistic rules used during text analysis.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Language analyzers<ept id="1">&lt;/strong&gt;</ept> provide the linguistic rules used during text analysis.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The default language analyzer for Azure Search is Lucene English, but you can use different, or even multiple, analyzers by specifying them in your index.</source>
            <target state="new">The default language analyzer for Azure Search is Lucene English, but you can use different, or even multiple, analyzers by specifying them in your index.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>Lucene analyzers are available in all APIs.</source>
            <target state="new">Lucene analyzers are available in all APIs.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>Microsoft natural language processors are only available in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>2015-02-28-Preview REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Microsoft natural language processors are only available in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>2015-02-28-Preview REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Language Support<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Language Support<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for more information.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Step 6: Update indexes and documents</source>
            <target state="new">Step 6: Update indexes and documents</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Some of the features that you want to evaluate might require an update to your index, which often has the downstream effect of requiring updates to your documents.</source>
            <target state="new">Some of the features that you want to evaluate might require an update to your index, which often has the downstream effect of requiring updates to your documents.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>If you need to update an index or documents, for example to add suggesters or specify language analyzers on fields that you’ve added for that purpose, see the following links for instructions:</source>
            <target state="new">If you need to update an index or documents, for example to add suggesters or specify language analyzers on fields that you’ve added for that purpose, see the following links for instructions:</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Update Index operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Update Index operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Update Indexer operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Update Indexer operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Add, update or delete documents operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Add, update or delete documents operation (REST API)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Index Class (.NET library)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Index Class (.NET library)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Documents Class (.NET library)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Documents Class (.NET library)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Once you have built a prototype that establishes proof-of-concept, you can take what you’ve learned to the next level by designing a development project that can support production workloads.</source>
            <target state="new">Once you have built a prototype that establishes proof-of-concept, you can take what you’ve learned to the next level by designing a development project that can support production workloads.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>Application development</source>
            <target state="new">Application development</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>Advancing to the next phase now requires decisions about which APIs to use, how to manage documents and upload frequency, and whether to include external resources in your search results.</source>
            <target state="new">Advancing to the next phase now requires decisions about which APIs to use, how to manage documents and upload frequency, and whether to include external resources in your search results.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Your solution design will still need to include all of the steps described for prototypes, but instead of prioritizing the most expedient path, you will want to consider which approaches are the most compatible with your overall solution.</source>
            <target state="new">Your solution design will still need to include all of the steps described for prototypes, but instead of prioritizing the most expedient path, you will want to consider which approaches are the most compatible with your overall solution.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Choose an API</source>
            <target state="new">Choose an API</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Azure Search provides two programming models: the .NET library for managed code, and a REST API for programming languages like Java, JavaScript, or another language that does not target the Microsoft .NET Framework.</source>
            <target state="new">Azure Search provides two programming models: the .NET library for managed code, and a REST API for programming languages like Java, JavaScript, or another language that does not target the Microsoft .NET Framework.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Currently, a small subset of features are not yet in the .NET library, so even if you prefer to write managed code, you might need to use the REST API to get the features you want.</source>
            <target state="new">Currently, a small subset of features are not yet in the .NET library, so even if you prefer to write managed code, you might need to use the REST API to get the features you want.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Features that are only available in the REST API include:</source>
            <target state="new">Features that are only available in the REST API include:</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Natural Language processors - preview only<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Natural Language processors - preview only<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>moreLikeThis feature - preview only<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>moreLikeThis feature - preview only<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Management API<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Management API<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>You can periodically check the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What’s New<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article to monitor changes in feature status.</source>
            <target state="new">You can periodically check the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>What’s New<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article to monitor changes in feature status.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Determine data synchronization methods: Push or Pull</source>
            <target state="new">Determine data synchronization methods: Push or Pull</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>Push and pull models refer to how documents are updated in the index.</source>
            <target state="new">Push and pull models refer to how documents are updated in the index.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>Often, the scenario dictates which model is right for you.</source>
            <target state="new">Often, the scenario dictates which model is right for you.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>If your business is online retail, you most likely need a push model so that you can push or double-write any change in inventory to both your OLTP database and your Azure Search index.</source>
            <target state="new">If your business is online retail, you most likely need a push model so that you can push or double-write any change in inventory to both your OLTP database and your Azure Search index.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>When a specific SKU is sold out, or a size or color becomes unavailable, you will want the index to be updated as quickly as possible to avoid customer frustration.</source>
            <target state="new">When a specific SKU is sold out, or a size or color becomes unavailable, you will want the index to be updated as quickly as possible to avoid customer frustration.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Only push models can provide near real-time updates to your search index.</source>
            <target state="new">Only push models can provide near real-time updates to your search index.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>There is no specific mechanism in Azure Search for implementing a push model.</source>
            <target state="new">There is no specific mechanism in Azure Search for implementing a push model.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Your application code, at the data layer, must handle the documents update operation using either the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>.NET Library<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to update documents in the collection.</source>
            <target state="new">Your application code, at the data layer, must handle the documents update operation using either the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>.NET Library<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> to update documents in the collection.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>As an implementation detail, using a product SKU for the document key can help with this task.</source>
            <target state="new">As an implementation detail, using a product SKU for the document key can help with this task.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Pull models are usually scheduled operations that retrieve data from external data sources.</source>
            <target state="new">Pull models are usually scheduled operations that retrieve data from external data sources.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>In Azure Search, a pull model is available through <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Indexers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which are in turn available for specific data sources: Azure DocumentDB or Azure SQL Database (and also SQL Server on Azure VMs).</source>
            <target state="new">In Azure Search, a pull model is available through <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Indexers<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, which are in turn available for specific data sources: Azure DocumentDB or Azure SQL Database (and also SQL Server on Azure VMs).</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>Loading documents in batches</source>
            <target state="new">Loading documents in batches</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>We recommend adding documents in batches to improve throughput.</source>
            <target state="new">We recommend adding documents in batches to improve throughput.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>You can batch up to 1,000 documents, assuming an average document size of about 1 to 2 KB.</source>
            <target state="new">You can batch up to 1,000 documents, assuming an average document size of about 1 to 2 KB.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>There is an overall status code for the POST request.</source>
            <target state="new">There is an overall status code for the POST request.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>Status codes are either HTTP 200 (Success) or HTTP 207 (Multi-Status) if there is combination of successful and failed documents.</source>
            <target state="new">Status codes are either HTTP 200 (Success) or HTTP 207 (Multi-Status) if there is combination of successful and failed documents.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>In addition to the status code for the POST request, Azure Search maintains a status field for each document.</source>
            <target state="new">In addition to the status code for the POST request, Azure Search maintains a status field for each document.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Given a batch upload, you need a way to get per-document status that indicates whether the insert succeeded or failed for each document.</source>
            <target state="new">Given a batch upload, you need a way to get per-document status that indicates whether the insert succeeded or failed for each document.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>The status field provides that information.</source>
            <target state="new">The status field provides that information.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>It will be set to false if the document failed to load.</source>
            <target state="new">It will be set to false if the document failed to load.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Under heavy load, it's not uncommon to have some upload failures.</source>
            <target state="new">Under heavy load, it's not uncommon to have some upload failures.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>Should this occur, the overall status code is 207, indicating a partial success, and the documents that failed indexing will have the 'status' property set to false.</source>
            <target state="new">Should this occur, the overall status code is 207, indicating a partial success, and the documents that failed indexing will have the 'status' property set to false.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>When the service receives documents, they are queued up for indexing and may not be immediately included in search results.</source>
            <target state="new">When the service receives documents, they are queued up for indexing and may not be immediately included in search results.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>When not under a heavy load, documents are typically indexed within a few seconds.</source>
            <target state="new">When not under a heavy load, documents are typically indexed within a few seconds.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>When updating an index, you can combine multiple actions (insert, merge, delete) into the same batch, eliminating the need for multiple round trips.</source>
            <target state="new">When updating an index, you can combine multiple actions (insert, merge, delete) into the same batch, eliminating the need for multiple round trips.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>Currently Azure Search does not support partial updates (HTTP PATCH), so if you need to update an index, you must resend the index definition.</source>
            <target state="new">Currently Azure Search does not support partial updates (HTTP PATCH), so if you need to update an index, you must resend the index definition.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Integrating external data into search results</source>
            <target state="new">Integrating external data into search results</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>Azure Search uses internal storage for the indexes and documents used in search operations.</source>
            <target state="new">Azure Search uses internal storage for the indexes and documents used in search operations.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>Text analysis and index parsing is dependent on having all searchable fields and associated attributes readily available.</source>
            <target state="new">Text analysis and index parsing is dependent on having all searchable fields and associated attributes readily available.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>However, not all fields in a document will be searchable.</source>
            <target state="new">However, not all fields in a document will be searchable.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>For example, if your application is an online catalog for music or videos, we recommend storing binary files in the Azure Blob service or some other storage format.</source>
            <target state="new">For example, if your application is an online catalog for music or videos, we recommend storing binary files in the Azure Blob service or some other storage format.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>The binary files themselves are not searchable, hence there is no need to persist them in Azure Search storage.</source>
            <target state="new">The binary files themselves are not searchable, hence there is no need to persist them in Azure Search storage.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>Although you should store images, videos, and audio files in other services or locations, you should include a field that references the URL to the file location.</source>
            <target state="new">Although you should store images, videos, and audio files in other services or locations, you should include a field that references the URL to the file location.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>This way, you can return the external data as part of your search results.</source>
            <target state="new">This way, you can return the external data as part of your search results.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>To use external data, you should define a field in your index that stores a URL pointer to the external data file.</source>
            <target state="new">To use external data, you should define a field in your index that stores a URL pointer to the external data file.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>If you issue a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lookup Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> request, or include the field in search results, the binary file appears in the context of a document.</source>
            <target state="new">If you issue a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Lookup Documents<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> request, or include the field in search results, the binary file appears in the context of a document.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>Capacity planning</source>
            <target state="new">Capacity planning</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>One of the more compelling feature in Azure Search is the ease with which you can scale up or scale down resources in response to demand.</source>
            <target state="new">One of the more compelling feature in Azure Search is the ease with which you can scale up or scale down resources in response to demand.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>While this capability doesn’t eliminate the need for capacity planning, it does minimize most of the risk.</source>
            <target state="new">While this capability doesn’t eliminate the need for capacity planning, it does minimize most of the risk.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>You’re not stuck with extra hardware, or the wrong hardware, for running your search workloads.</source>
            <target state="new">You’re not stuck with extra hardware, or the wrong hardware, for running your search workloads.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>As a last step, review the existing resource levels for both replicas and partitions, and determine whether adjustments are needed.</source>
            <target state="new">As a last step, review the existing resource levels for both replicas and partitions, and determine whether adjustments are needed.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>The easiest way to adjust capacity is in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The easiest way to adjust capacity is in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>Remember that only the standard pricing tier can be scaled up or down.</source>
            <target state="new">Remember that only the standard pricing tier can be scaled up or down.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>Additionally, depending on the degree of adjustment, it can take anywhere from several minutes to several hours to deploy additional clusters for your service.</source>
            <target state="new">Additionally, depending on the degree of adjustment, it can take anywhere from several minutes to several hours to deploy additional clusters for your service.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>Capacity can be adjusted programmatically by using the Management REST API.</source>
            <target state="new">Capacity can be adjusted programmatically by using the Management REST API.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>