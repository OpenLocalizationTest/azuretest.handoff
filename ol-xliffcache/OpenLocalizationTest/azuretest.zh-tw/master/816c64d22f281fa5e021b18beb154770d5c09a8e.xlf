<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:01:44 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">816c64d22f281fa5e021b18beb154770d5c09a8e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Managing Media Services Assets across Multiple Storage Accounts</source>
            <target state="new">Managing Media Services Assets across Multiple Storage Accounts</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This articles give you guidance on how to manage media services assets across multiple storage accounts.</source>
            <target state="new">This articles give you guidance on how to manage media services assets across multiple storage accounts.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Managing Media Services Assets across Multiple Storage Accounts</source>
            <target state="new">Managing Media Services Assets across Multiple Storage Accounts</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Starting with Microsoft Azure Media Services 2.2, you can attach multiple storage accounts to a single Media Services account.</source>
            <target state="new">Starting with Microsoft Azure Media Services 2.2, you can attach multiple storage accounts to a single Media Services account.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Ability to attach multiple storage accounts to a Media Services account provides the following benefits:</source>
            <target state="new">Ability to attach multiple storage accounts to a Media Services account provides the following benefits:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Load balancing your assets across multiple storage accounts.</source>
            <target state="new">Load balancing your assets across multiple storage accounts.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Scaling Media Services for large amounts of content processing (as currently a single storage account has a max limit of 500 TB).</source>
            <target state="new">Scaling Media Services for large amounts of content processing (as currently a single storage account has a max limit of 500 TB).</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This topic demonstrates how to attach multiple storage accounts to a Media Services account using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">This topic demonstrates how to attach multiple storage accounts to a Media Services account using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>It also shows how to specify different storage accounts when creating assets using the Media Services SDK.</source>
            <target state="new">It also shows how to specify different storage accounts when creating assets using the Media Services SDK.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Considerations</source>
            <target state="new">Considerations</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>When attaching multiple storage accounts to your Media Services account, the following considerations apply:</source>
            <target state="new">When attaching multiple storage accounts to your Media Services account, the following considerations apply:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>All storage accounts attached to a Media Services account must be in the same data center as the Media Services account.</source>
            <target state="new">All storage accounts attached to a Media Services account must be in the same data center as the Media Services account.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Currently, once a storage account is attached to the specified Media Services account, it cannot be detached.</source>
            <target state="new">Currently, once a storage account is attached to the specified Media Services account, it cannot be detached.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Primary storage account is the one indicated during Media Services account creation time.</source>
            <target state="new">Primary storage account is the one indicated during Media Services account creation time.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Currently, you cannot change the default storage account.</source>
            <target state="new">Currently, you cannot change the default storage account.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Other considerations:</source>
            <target state="new">Other considerations:</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Media Services uses the value of the <bpt id="2">&lt;strong&gt;</bpt>IAssetFile.Name<ept id="2">&lt;/strong&gt;</ept> property when building URLs for the streaming content (for example, http://{WAMSAccount}.origin.mediaservices.windows.net/{GUID}/{IAssetFile.Name}/streamingParameters.) For this reason, percent-encoding is not allowed. The value of the Name property cannot have any of the following <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>percent-encoding-reserved characters<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>: !*'();:@&amp;=+$,/?%#[]". Also, there can only be one ‘.’ for the file name extension.</source>
            <target state="new">Media Services uses the value of the <bpt id="2">&lt;strong&gt;</bpt>IAssetFile.Name<ept id="2">&lt;/strong&gt;</ept> property when building URLs for the streaming content (for example, http://{WAMSAccount}.origin.mediaservices.windows.net/{GUID}/{IAssetFile.Name}/streamingParameters.) For this reason, percent-encoding is not allowed. The value of the Name property cannot have any of the following <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>percent-encoding-reserved characters<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>: !*'();:@&amp;=+$,/?%#[]". Also, there can only be one ‘.’ for the file name extension.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>To attach a Storage Account with Azure Service Management REST API</source>
            <target state="new">To attach a Storage Account with Azure Service Management REST API</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Currently, the only way to attach multiple storage accounts is by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Currently, the only way to attach multiple storage accounts is by using <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The code sample in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Use Media Services Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic defines the <bpt id="4">&lt;strong&gt;</bpt>AttachStorageAccountToMediaServiceAccount<ept id="4">&lt;/strong&gt;</ept> method that attaches a storage account to the specified Media Services account.</source>
            <target state="new">The code sample in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to: Use Media Services Management REST API<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic defines the <bpt id="4">&lt;strong&gt;</bpt>AttachStorageAccountToMediaServiceAccount<ept id="4">&lt;/strong&gt;</ept> method that attaches a storage account to the specified Media Services account.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The code in the same topic defines the <bpt id="2">&lt;strong&gt;</bpt>ListStorageAccountDetails<ept id="2">&lt;/strong&gt;</ept> method that lists all the storage accounts attached to the specified Media Services account.</source>
            <target state="new">The code in the same topic defines the <bpt id="2">&lt;strong&gt;</bpt>ListStorageAccountDetails<ept id="2">&lt;/strong&gt;</ept> method that lists all the storage accounts attached to the specified Media Services account.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>To manage Media Services assets across multiple Storage Accounts</source>
            <target state="new">To manage Media Services assets across multiple Storage Accounts</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The following code uses the latest Media Services SDK to perform the following tasks:</source>
            <target state="new">The following code uses the latest Media Services SDK to perform the following tasks:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Display all the storage accounts associated with the specified Media Services account.</source>
            <target state="new">Display all the storage accounts associated with the specified Media Services account.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Retrieve the name of the default storage account.</source>
            <target state="new">Retrieve the name of the default storage account.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Create a new asset in the default storage account.</source>
            <target state="new">Create a new asset in the default storage account.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Create an output asset of the encoding job in the specified storage account.</source>
            <target state="new">Create an output asset of the encoding job in the specified storage account.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>