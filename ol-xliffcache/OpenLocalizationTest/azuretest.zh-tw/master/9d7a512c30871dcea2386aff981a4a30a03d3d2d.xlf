<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:44:27 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d7a512c30871dcea2386aff981a4a30a03d3d2d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Table storage from Java | Microsoft Azure</source>
            <target state="new">How to use Table storage from Java | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the table storage service in Azure. Code samples are written in Java code.</source>
            <target state="new">Learn how to use the table storage service in Azure. Code samples are written in Java code.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Table storage from Java</source>
            <target state="new">How to use Table storage from Java</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-table-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-table-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This guide will show you how to perform common scenarios using the Azure Table storage service.</source>
            <target state="new">This guide will show you how to perform common scenarios using the Azure Table storage service.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The samples are written in Java and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The samples are written in Java and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>creating<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>listing<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>deleting<ept id="6">&lt;/strong&gt;</ept> tables, as well as <bpt id="8">&lt;strong&gt;</bpt>inserting<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>querying<ept id="10">&lt;/strong&gt;</ept>, <bpt id="12">&lt;strong&gt;</bpt>modifying<ept id="12">&lt;/strong&gt;</ept>, and <bpt id="14">&lt;strong&gt;</bpt>deleting<ept id="14">&lt;/strong&gt;</ept> entities in a table.</source>
            <target state="new">The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>creating<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>listing<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>deleting<ept id="6">&lt;/strong&gt;</ept> tables, as well as <bpt id="8">&lt;strong&gt;</bpt>inserting<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>querying<ept id="10">&lt;/strong&gt;</ept>, <bpt id="12">&lt;strong&gt;</bpt>modifying<ept id="12">&lt;/strong&gt;</ept>, and <bpt id="14">&lt;strong&gt;</bpt>deleting<ept id="14">&lt;/strong&gt;</ept> entities in a table.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For more information on tables, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information on tables, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Note: An SDK is available for developers who are using Azure Storage on Android devices.</source>
            <target state="new">Note: An SDK is available for developers who are using Azure Storage on Android devices.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Android[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Android[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-table-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-table-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Create a Java application</source>
            <target state="new">Create a Java application</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In this guide, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</source>
            <target state="new">In this guide, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>To do so, you will need to install the Java Development Kit (JDK) and create an Azure storage account in your Azure subscription.</source>
            <target state="new">To do so, you will need to install the Java Development Kit (JDK) and create an Azure storage account in your Azure subscription.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub.</source>
            <target state="new">Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> repository on GitHub.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</source>
            <target state="new">If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</source>
            <target state="new">Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Configure your application to access table storage</source>
            <target state="new">Configure your application to access table storage</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Add the following import statements to the top of the Java file where you want to use Microsoft Azure storage APIs to access tables:</source>
            <target state="new">Add the following import statements to the top of the Java file where you want to use Microsoft Azure storage APIs to access tables:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Setup an Azure storage connection string</source>
            <target state="new">Setup an Azure storage connection string</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</source>
            <target state="new">An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Management Portal for the <bpt id="2">&lt;em&gt;</bpt>AccountName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>AccountKey<ept id="4">&lt;/em&gt;</ept> values.</source>
            <target state="new">When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Management Portal for the <bpt id="2">&lt;em&gt;</bpt>AccountName<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>AccountKey<ept id="4">&lt;/em&gt;</ept> values.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>This example shows how you can declare a static field to hold the connection string:</source>
            <target state="new">This example shows how you can declare a static field to hold the connection string:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="2">&lt;em&gt;</bpt>ServiceConfiguration.cscfg<ept id="2">&lt;/em&gt;</ept>, and can be accessed with a call to the <bpt id="4">&lt;strong&gt;</bpt>RoleEnvironment.getConfigurationSettings<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="2">&lt;em&gt;</bpt>ServiceConfiguration.cscfg<ept id="2">&lt;/em&gt;</ept>, and can be accessed with a call to the <bpt id="4">&lt;strong&gt;</bpt>RoleEnvironment.getConfigurationSettings<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Here's an example of getting the connection string from a <bpt id="2">&lt;strong&gt;</bpt>Setting<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;em&gt;</bpt>StorageConnectionString<ept id="4">&lt;/em&gt;</ept> in the service configuration file:</source>
            <target state="new">Here's an example of getting the connection string from a <bpt id="2">&lt;strong&gt;</bpt>Setting<ept id="2">&lt;/strong&gt;</ept> element named <bpt id="4">&lt;em&gt;</bpt>StorageConnectionString<ept id="4">&lt;/em&gt;</ept> in the service configuration file:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The following samples assume that you have used one of these two methods to get the storage connection string.</source>
            <target state="new">The following samples assume that you have used one of these two methods to get the storage connection string.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>How to: Create a table</source>
            <target state="new">How to: Create a table</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for tables</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object lets you get reference objects for tables</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>and entities.</source>
            <target state="new">and entities.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient<ept id="2">&lt;/strong&gt;</ept> object</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>and uses it to create a new <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object which represents a table named "people".</source>
            <target state="new">and uses it to create a new <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object which represents a table named "people".</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>(Note: There are additional ways to create <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> objects; for more information, see <bpt id="4">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].)</source>
            <target state="new">(Note: There are additional ways to create <bpt id="2">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="2">&lt;/strong&gt;</ept> objects; for more information, see <bpt id="4">&lt;strong&gt;</bpt>CloudStorageAccount<ept id="4">&lt;/strong&gt;</ept> in the [Azure Storage Client SDK Reference].)</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>How to: List the tables</source>
            <target state="new">How to: List the tables</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>To get a list of tables, call the <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient.listTables()<ept id="2">&lt;/strong&gt;</ept> method to retrieve an iterable list of table names.</source>
            <target state="new">To get a list of tables, call the <bpt id="2">&lt;strong&gt;</bpt>CloudTableClient.listTables()<ept id="2">&lt;/strong&gt;</ept> method to retrieve an iterable list of table names.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>How to: Add an entity to a table</source>
            <target state="new">How to: Add an entity to a table</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Entities map to Java objects using a custom class implementing <bpt id="2">&lt;strong&gt;</bpt>TableEntity<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Entities map to Java objects using a custom class implementing <bpt id="2">&lt;strong&gt;</bpt>TableEntity<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>For convenience, the <bpt id="2">&lt;strong&gt;</bpt>TableServiceEntity<ept id="2">&lt;/strong&gt;</ept> class implements <bpt id="4">&lt;strong&gt;</bpt>TableEntity<ept id="4">&lt;/strong&gt;</ept> and uses reflection to map properties to getter and setter methods named for the properties.</source>
            <target state="new">For convenience, the <bpt id="2">&lt;strong&gt;</bpt>TableServiceEntity<ept id="2">&lt;/strong&gt;</ept> class implements <bpt id="4">&lt;strong&gt;</bpt>TableEntity<ept id="4">&lt;/strong&gt;</ept> and uses reflection to map properties to getter and setter methods named for the properties.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>To add an entity to a table, first create a class that defines the properties of your entity.</source>
            <target state="new">To add an entity to a table, first create a class that defines the properties of your entity.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The following code defines an entity class which uses the customer's first name as the row key, and last name as the partition key.</source>
            <target state="new">The following code defines an entity class which uses the customer's first name as the row key, and last name as the partition key.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Together, an entity's partition and row key uniquely identify the entity in the table.</source>
            <target state="new">Together, an entity's partition and row key uniquely identify the entity in the table.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Entities with the same partition key can be queried faster than those with different partition keys.</source>
            <target state="new">Entities with the same partition key can be queried faster than those with different partition keys.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Table operations involving entities require a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">Table operations involving entities require a <bpt id="2">&lt;strong&gt;</bpt>TableOperation<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>This object defines the operation to be performed on an entity, which can be executed with a <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">This object defines the operation to be performed on an entity, which can be executed with a <bpt id="2">&lt;strong&gt;</bpt>CloudTable<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>The following code creates a new instance of the <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> class with some customer data to be stored.</source>
            <target state="new">The following code creates a new instance of the <bpt id="2">&lt;strong&gt;</bpt>CustomerEntity<ept id="2">&lt;/strong&gt;</ept> class with some customer data to be stored.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The code next calls <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrReplace<ept id="2">&lt;/strong&gt;</ept> to create a <bpt id="4">&lt;strong&gt;</bpt>TableOperation<ept id="4">&lt;/strong&gt;</ept> object to insert an entity into a table, and associates the new <bpt id="6">&lt;strong&gt;</bpt>CustomerEntity<ept id="6">&lt;/strong&gt;</ept> with it.</source>
            <target state="new">The code next calls <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrReplace<ept id="2">&lt;/strong&gt;</ept> to create a <bpt id="4">&lt;strong&gt;</bpt>TableOperation<ept id="4">&lt;/strong&gt;</ept> object to insert an entity into a table, and associates the new <bpt id="6">&lt;strong&gt;</bpt>CustomerEntity<ept id="6">&lt;/strong&gt;</ept> with it.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Finally, the code calls the <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> method on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, specifying the "people" table and the new <bpt id="6">&lt;strong&gt;</bpt>TableOperation<ept id="6">&lt;/strong&gt;</ept>, which then sends a request to the storage service to insert the new customer entity into the "people" table, or replace the entity if it already exists.</source>
            <target state="new">Finally, the code calls the <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> method on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, specifying the "people" table and the new <bpt id="6">&lt;strong&gt;</bpt>TableOperation<ept id="6">&lt;/strong&gt;</ept>, which then sends a request to the storage service to insert the new customer entity into the "people" table, or replace the entity if it already exists.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>How to: Insert a batch of entities</source>
            <target state="new">How to: Insert a batch of entities</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>You can insert a batch of entities to the table service in one write operation.</source>
            <target state="new">You can insert a batch of entities to the table service in one write operation.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>TableBatchOperation<ept id="2">&lt;/strong&gt;</ept> object, then adds three insert operations to it.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>TableBatchOperation<ept id="2">&lt;/strong&gt;</ept> object, then adds three insert operations to it.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Each insert operation is added by creating a new entity object, setting its values, and then calling the <bpt id="2">&lt;strong&gt;</bpt>insert<ept id="2">&lt;/strong&gt;</ept> method on the <bpt id="4">&lt;strong&gt;</bpt>TableBatchOperation<ept id="4">&lt;/strong&gt;</ept> object to associate the entity with a new insert operation.</source>
            <target state="new">Each insert operation is added by creating a new entity object, setting its values, and then calling the <bpt id="2">&lt;strong&gt;</bpt>insert<ept id="2">&lt;/strong&gt;</ept> method on the <bpt id="4">&lt;strong&gt;</bpt>TableBatchOperation<ept id="4">&lt;/strong&gt;</ept> object to associate the entity with a new insert operation.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Then the code calls <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, specifying the "people" table and the <bpt id="6">&lt;strong&gt;</bpt>TableBatchOperation<ept id="6">&lt;/strong&gt;</ept> object, which sends the batch of table operations to the storage service in a single request.</source>
            <target state="new">Then the code calls <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, specifying the "people" table and the <bpt id="6">&lt;strong&gt;</bpt>TableBatchOperation<ept id="6">&lt;/strong&gt;</ept> object, which sends the batch of table operations to the storage service in a single request.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Some things to note on batch operations:</source>
            <target state="new">Some things to note on batch operations:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>You can perform up to 100 insert, delete, merge, replace, insert or merge, and insert or replace operations in any combination in a single batch.</source>
            <target state="new">You can perform up to 100 insert, delete, merge, replace, insert or merge, and insert or replace operations in any combination in a single batch.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>A batch operation can have a retrieve operation, if it is the only operation in the batch.</source>
            <target state="new">A batch operation can have a retrieve operation, if it is the only operation in the batch.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>All entities in a single batch operation must have the same partition key.</source>
            <target state="new">All entities in a single batch operation must have the same partition key.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>A batch operation is limited to a 4MB data payload.</source>
            <target state="new">A batch operation is limited to a 4MB data payload.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>How to: Retrieve all entities in a partition</source>
            <target state="new">How to: Retrieve all entities in a partition</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>To query a table for entities in a partition, you can use a <bpt id="2">&lt;strong&gt;</bpt>TableQuery<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To query a table for entities in a partition, you can use a <bpt id="2">&lt;strong&gt;</bpt>TableQuery<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Call <bpt id="2">&lt;strong&gt;</bpt>TableQuery.from<ept id="2">&lt;/strong&gt;</ept> to create a query on a particular table that returns a specified result type.</source>
            <target state="new">Call <bpt id="2">&lt;strong&gt;</bpt>TableQuery.from<ept id="2">&lt;/strong&gt;</ept> to create a query on a particular table that returns a specified result type.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The following code specifies a filter for entities where 'Smith' is the partition key.</source>
            <target state="new">The following code specifies a filter for entities where 'Smith' is the partition key.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>TableQuery.generateFilterCondition<ept id="1">&lt;/strong&gt;</ept> is a helper method to create filters for queries.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>TableQuery.generateFilterCondition<ept id="1">&lt;/strong&gt;</ept> is a helper method to create filters for queries.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Call <bpt id="2">&lt;strong&gt;</bpt>where<ept id="2">&lt;/strong&gt;</ept> on the reference returned by the <bpt id="4">&lt;strong&gt;</bpt>TableQuery.from<ept id="4">&lt;/strong&gt;</ept> method to apply the filter to the query.</source>
            <target state="new">Call <bpt id="2">&lt;strong&gt;</bpt>where<ept id="2">&lt;/strong&gt;</ept> on the reference returned by the <bpt id="4">&lt;strong&gt;</bpt>TableQuery.from<ept id="4">&lt;/strong&gt;</ept> method to apply the filter to the query.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>When the query is executed with a call to <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, it returns an <bpt id="6">&lt;strong&gt;</bpt>Iterator<ept id="6">&lt;/strong&gt;</ept> with the <bpt id="8">&lt;strong&gt;</bpt>CustomerEntity<ept id="8">&lt;/strong&gt;</ept> result type specified.</source>
            <target state="new">When the query is executed with a call to <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object, it returns an <bpt id="6">&lt;strong&gt;</bpt>Iterator<ept id="6">&lt;/strong&gt;</ept> with the <bpt id="8">&lt;strong&gt;</bpt>CustomerEntity<ept id="8">&lt;/strong&gt;</ept> result type specified.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>You can then use the <bpt id="2">&lt;strong&gt;</bpt>Iterator<ept id="2">&lt;/strong&gt;</ept> returned in a for each loop to consume the results.</source>
            <target state="new">You can then use the <bpt id="2">&lt;strong&gt;</bpt>Iterator<ept id="2">&lt;/strong&gt;</ept> returned in a for each loop to consume the results.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>This code prints the fields of each entity in the query results to the console.</source>
            <target state="new">This code prints the fields of each entity in the query results to the console.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>How to: Retrieve a range of entities in a partition</source>
            <target state="new">How to: Retrieve a range of entities in a partition</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>If you don't want to query all the entities in a partition, you can specify a range by using comparison operators in a filter.</source>
            <target state="new">If you don't want to query all the entities in a partition, you can specify a range by using comparison operators in a filter.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The following code combines two filters to get all entities in partition "Smith" where the row key (first name) starts with a letter up to 'E' in the alphabet.</source>
            <target state="new">The following code combines two filters to get all entities in partition "Smith" where the row key (first name) starts with a letter up to 'E' in the alphabet.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Then it prints the query results.</source>
            <target state="new">Then it prints the query results.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>If you use the entities added to the table in the batch insert section of this guide, only two entities are returned this time (Ben and Denise Smith); Jeff Smith is not included.</source>
            <target state="new">If you use the entities added to the table in the batch insert section of this guide, only two entities are returned this time (Ben and Denise Smith); Jeff Smith is not included.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>How to: Retrieve a single entity</source>
            <target state="new">How to: Retrieve a single entity</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>You can write a query to retrieve a single, specific entity.</source>
            <target state="new">You can write a query to retrieve a single, specific entity.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>The following code calls <bpt id="2">&lt;strong&gt;</bpt>TableOperation.retrieve<ept id="2">&lt;/strong&gt;</ept> with partition key and row key parameters to specify the customer "Jeff Smith", instead of creating a <bpt id="4">&lt;strong&gt;</bpt>TableQuery<ept id="4">&lt;/strong&gt;</ept> and using filters to do the same thing.</source>
            <target state="new">The following code calls <bpt id="2">&lt;strong&gt;</bpt>TableOperation.retrieve<ept id="2">&lt;/strong&gt;</ept> with partition key and row key parameters to specify the customer "Jeff Smith", instead of creating a <bpt id="4">&lt;strong&gt;</bpt>TableQuery<ept id="4">&lt;/strong&gt;</ept> and using filters to do the same thing.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>When executed, the retrieve operation returns just one entity, rather than a collection.</source>
            <target state="new">When executed, the retrieve operation returns just one entity, rather than a collection.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>getResultAsType<ept id="2">&lt;/strong&gt;</ept> method casts the result to the type of the assignment target, a <bpt id="4">&lt;strong&gt;</bpt>CustomerEntity<ept id="4">&lt;/strong&gt;</ept> object.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>getResultAsType<ept id="2">&lt;/strong&gt;</ept> method casts the result to the type of the assignment target, a <bpt id="4">&lt;strong&gt;</bpt>CustomerEntity<ept id="4">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>If this type is not compatible with the type specified for the query, an exception will be thrown.</source>
            <target state="new">If this type is not compatible with the type specified for the query, an exception will be thrown.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>A null value is returned if no entity has an exact partition and row key match.</source>
            <target state="new">A null value is returned if no entity has an exact partition and row key match.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the Table service.</source>
            <target state="new">Specifying both partition and row keys in a query is the fastest way to retrieve a single entity from the Table service.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>How to: Modify an entity</source>
            <target state="new">How to: Modify an entity</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>To modify an entity, retrieve it from the table service, make changes to the entity object, and save the changes back to the table service with a replace or merge operation.</source>
            <target state="new">To modify an entity, retrieve it from the table service, make changes to the entity object, and save the changes back to the table service with a replace or merge operation.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>The following code changes an existing customer's phone number.</source>
            <target state="new">The following code changes an existing customer's phone number.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Instead of calling <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insert<ept id="2">&lt;/strong&gt;</ept> like we did to insert, this code calls <bpt id="4">&lt;strong&gt;</bpt>TableOperation.replace<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Instead of calling <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insert<ept id="2">&lt;/strong&gt;</ept> like we did to insert, this code calls <bpt id="4">&lt;strong&gt;</bpt>TableOperation.replace<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>CloudTable.execute<ept id="2">&lt;/strong&gt;</ept> method calls the table service, and the entity is replaced, unless another application changed it in the time since this application retrieved it.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>CloudTable.execute<ept id="2">&lt;/strong&gt;</ept> method calls the table service, and the entity is replaced, unless another application changed it in the time since this application retrieved it.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>When that happens, an exception is thrown, and the entity must be retrieved, modified, and saved again.</source>
            <target state="new">When that happens, an exception is thrown, and the entity must be retrieved, modified, and saved again.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>This optimistic concurrency retry pattern is common in a distributed storage system.</source>
            <target state="new">This optimistic concurrency retry pattern is common in a distributed storage system.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>How to: Query a subset of entity properties</source>
            <target state="new">How to: Query a subset of entity properties</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>A query to a table can retrieve just a few properties from an entity.</source>
            <target state="new">A query to a table can retrieve just a few properties from an entity.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>This technique, called projection, reduces bandwidth and can improve query performance, especially for large entities.</source>
            <target state="new">This technique, called projection, reduces bandwidth and can improve query performance, especially for large entities.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>The query in the following code uses the <bpt id="2">&lt;strong&gt;</bpt>select<ept id="2">&lt;/strong&gt;</ept> method to return only the email addresses of entities in the table.</source>
            <target state="new">The query in the following code uses the <bpt id="2">&lt;strong&gt;</bpt>select<ept id="2">&lt;/strong&gt;</ept> method to return only the email addresses of entities in the table.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>The results are projected into a collection of <bpt id="2">&lt;strong&gt;</bpt>String<ept id="2">&lt;/strong&gt;</ept> with the help of an <bpt id="4">&lt;strong&gt;</bpt>EntityResolver<ept id="4">&lt;/strong&gt;</ept>, which does the type conversion on the entities returned from the server.</source>
            <target state="new">The results are projected into a collection of <bpt id="2">&lt;strong&gt;</bpt>String<ept id="2">&lt;/strong&gt;</ept> with the help of an <bpt id="4">&lt;strong&gt;</bpt>EntityResolver<ept id="4">&lt;/strong&gt;</ept>, which does the type conversion on the entities returned from the server.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>You can learn more about projection in this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>blog post[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can learn more about projection in this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>blog post[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Note that projection is not supported on the local storage emulator, so this code runs only when using an account on the table service.</source>
            <target state="new">Note that projection is not supported on the local storage emulator, so this code runs only when using an account on the table service.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>How to: Insert or Replace an entity</source>
            <target state="new">How to: Insert or Replace an entity</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Often you want to add an entity to a table without knowing if it already exists in the table.</source>
            <target state="new">Often you want to add an entity to a table without knowing if it already exists in the table.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>An insert-or-replace operation allows you to make a single request which will insert the entity if it does not exist or replace the existing one if it does.</source>
            <target state="new">An insert-or-replace operation allows you to make a single request which will insert the entity if it does not exist or replace the existing one if it does.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Building on prior examples, the following code inserts or replaces the entity for "Walter Harp".</source>
            <target state="new">Building on prior examples, the following code inserts or replaces the entity for "Walter Harp".</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>After creating a new entity, this code calls the <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrReplace<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">After creating a new entity, this code calls the <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrReplace<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>This code then calls <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object with the table and the insert or replace table operation as the parameters.</source>
            <target state="new">This code then calls <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object with the table and the insert or replace table operation as the parameters.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>To update only part of an entity, the <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrMerge<ept id="2">&lt;/strong&gt;</ept> method can be used instead.</source>
            <target state="new">To update only part of an entity, the <bpt id="2">&lt;strong&gt;</bpt>TableOperation.insertOrMerge<ept id="2">&lt;/strong&gt;</ept> method can be used instead.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Note that insert-or-replace is not supported on the local storage emulator, so this code runs only when using an account on the table service.</source>
            <target state="new">Note that insert-or-replace is not supported on the local storage emulator, so this code runs only when using an account on the table service.</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>You can learn more about insert-or-replace and insert-or-merge in this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>blog post[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You can learn more about insert-or-replace and insert-or-merge in this <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>blog post[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>How to: Delete an entity</source>
            <target state="new">How to: Delete an entity</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>You can easily delete an entity after you have retrieved it.</source>
            <target state="new">You can easily delete an entity after you have retrieved it.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Once the entity is retrieved, call <bpt id="2">&lt;strong&gt;</bpt>TableOperation.delete<ept id="2">&lt;/strong&gt;</ept> with the entity to delete.</source>
            <target state="new">Once the entity is retrieved, call <bpt id="2">&lt;strong&gt;</bpt>TableOperation.delete<ept id="2">&lt;/strong&gt;</ept> with the entity to delete.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Then call <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object.</source>
            <target state="new">Then call <bpt id="2">&lt;strong&gt;</bpt>execute<ept id="2">&lt;/strong&gt;</ept> on the <bpt id="4">&lt;strong&gt;</bpt>CloudTable<ept id="4">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>The following code retrieves and deletes a customer entity.</source>
            <target state="new">The following code retrieves and deletes a customer entity.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>How to: Delete a table</source>
            <target state="new">How to: Delete a table</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Finally, the following code deletes a table from a storage account.</source>
            <target state="new">Finally, the following code deletes a table from a storage account.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>A table which has been deleted will be unavailable to be recreated for a period of time following the deletion, usually less than forty seconds.</source>
            <target state="new">A table which has been deleted will be unavailable to be recreated for a period of time following the deletion, usually less than forty seconds.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Now that you've learned the basics of table storage, follow these links to learn how to do more complex storage tasks.</source>
            <target state="new">Now that you've learned the basics of table storage, follow these links to learn how to do more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage SDK for Java[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Client SDK Reference[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage REST API[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>