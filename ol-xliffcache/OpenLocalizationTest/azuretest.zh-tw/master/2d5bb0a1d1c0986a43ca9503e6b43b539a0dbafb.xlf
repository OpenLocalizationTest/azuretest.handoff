<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 1:27:31 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5bb0a1d1c0986a43ca9503e6b43b539a0dbafb</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Receive messages with EventProcessorHost</source>
            <target state="new">Receive messages with EventProcessorHost</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>[EventProcessorHost] is a .NET class that simplifies receiving events from Event Hubs by managing persistent checkpoints and parallel receives from those Event Hubs.</source>
            <target state="new">[EventProcessorHost] is a .NET class that simplifies receiving events from Event Hubs by managing persistent checkpoints and parallel receives from those Event Hubs.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Using [EventProcessorHost], you can split events across multiple receivers, even when hosted in different nodes.</source>
            <target state="new">Using [EventProcessorHost], you can split events across multiple receivers, even when hosted in different nodes.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This example shows how to use [EventProcessorHost] for a single receiver.</source>
            <target state="new">This example shows how to use [EventProcessorHost] for a single receiver.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The [Scaled out event processing] sample shows how to use [EventProcessorHost] with multiple receivers.</source>
            <target state="new">The [Scaled out event processing] sample shows how to use [EventProcessorHost] with multiple receivers.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In order to use [EventProcessorHost], you must have an [Azure Storage account]:</source>
            <target state="new">In order to use [EventProcessorHost], you must have an [Azure Storage account]:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Log on to the [Azure portal], and click <bpt id="2">&lt;strong&gt;</bpt>NEW<ept id="2">&lt;/strong&gt;</ept> at the bottom of the screen.</source>
            <target state="new">Log on to the [Azure portal], and click <bpt id="2">&lt;strong&gt;</bpt>NEW<ept id="2">&lt;/strong&gt;</ept> at the bottom of the screen.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Data Services<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>Storage<ept id="4">&lt;/strong&gt;</ept>, then <bpt id="6">&lt;strong&gt;</bpt>Quick Create<ept id="6">&lt;/strong&gt;</ept>, and then type a name for your storage account.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Data Services<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>Storage<ept id="4">&lt;/strong&gt;</ept>, then <bpt id="6">&lt;strong&gt;</bpt>Quick Create<ept id="6">&lt;/strong&gt;</ept>, and then type a name for your storage account.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Select your desired region, and then click <bpt id="2">&lt;strong&gt;</bpt>Create Storage Account<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select your desired region, and then click <bpt id="2">&lt;strong&gt;</bpt>Create Storage Account<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Click the newly created storage account, and then click <bpt id="2">&lt;strong&gt;</bpt>Manage Access Keys<ept id="2">&lt;/strong&gt;</ept>:</source>
            <target state="new">Click the newly created storage account, and then click <bpt id="2">&lt;strong&gt;</bpt>Manage Access Keys<ept id="2">&lt;/strong&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Copy the access key to use later in this tutorial.</source>
            <target state="new">Copy the access key to use later in this tutorial.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In Visual Studio, create a new Visual C# Desktop App project using the <bpt id="2">&lt;strong&gt;</bpt>Console  Application<ept id="2">&lt;/strong&gt;</ept> project template.</source>
            <target state="new">In Visual Studio, create a new Visual C# Desktop App project using the <bpt id="2">&lt;strong&gt;</bpt>Console  Application<ept id="2">&lt;/strong&gt;</ept> project template.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Name the project <bpt id="2">&lt;strong&gt;</bpt>Receiver<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Name the project <bpt id="2">&lt;strong&gt;</bpt>Receiver<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>In Solution Explorer, right-click the solution, and then click <bpt id="2">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Solution Explorer, right-click the solution, and then click <bpt id="2">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="2">&lt;/strong&gt;</ept> dialog box appears.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="2">&lt;/strong&gt;</ept> dialog box appears.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Search for <bpt id="2">&lt;code&gt;</bpt>Microsoft Azure Service Bus Event Hub - EventProcessorHost<ept id="2">&lt;/code&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Install<ept id="4">&lt;/strong&gt;</ept>, and accept the terms of use.</source>
            <target state="new">Search for <bpt id="2">&lt;code&gt;</bpt>Microsoft Azure Service Bus Event Hub - EventProcessorHost<ept id="2">&lt;/code&gt;</ept>, click <bpt id="4">&lt;strong&gt;</bpt>Install<ept id="4">&lt;/strong&gt;</ept>, and accept the terms of use.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>This downloads, installs, and adds a reference to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Bus Event Hub - EventProcessorHost NuGet package<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, with all its dependencies.</source>
            <target state="new">This downloads, installs, and adds a reference to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Service Bus Event Hub - EventProcessorHost NuGet package<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, with all its dependencies.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Right-click the <bpt id="2">&lt;strong&gt;</bpt>Receiver<ept id="2">&lt;/strong&gt;</ept> project, click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>, and then click <bpt id="6">&lt;strong&gt;</bpt>Class<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click the <bpt id="2">&lt;strong&gt;</bpt>Receiver<ept id="2">&lt;/strong&gt;</ept> project, click <bpt id="4">&lt;strong&gt;</bpt>Add<ept id="4">&lt;/strong&gt;</ept>, and then click <bpt id="6">&lt;strong&gt;</bpt>Class<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Name the new class <bpt id="2">&lt;strong&gt;</bpt>SimpleEventProcessor<ept id="2">&lt;/strong&gt;</ept>, and then click <bpt id="4">&lt;strong&gt;</bpt>OK<ept id="4">&lt;/strong&gt;</ept> to create the class.</source>
            <target state="new">Name the new class <bpt id="2">&lt;strong&gt;</bpt>SimpleEventProcessor<ept id="2">&lt;/strong&gt;</ept>, and then click <bpt id="4">&lt;strong&gt;</bpt>OK<ept id="4">&lt;/strong&gt;</ept> to create the class.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Add the following statements at the top of the SimpleEventProcessor.cs file:</source>
            <target state="new">Add the following statements at the top of the SimpleEventProcessor.cs file:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Then, substitute the following code for the body of the class:</source>
            <target state="new">Then, substitute the following code for the body of the class:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>This class will be called by the <bpt id="2">&lt;strong&gt;</bpt>EventProcessorHost<ept id="2">&lt;/strong&gt;</ept> to process events received from the Event Hub.</source>
            <target state="new">This class will be called by the <bpt id="2">&lt;strong&gt;</bpt>EventProcessorHost<ept id="2">&lt;/strong&gt;</ept> to process events received from the Event Hub.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Note that the <bpt id="2">&lt;code&gt;</bpt>SimpleEventProcessor<ept id="2">&lt;/code&gt;</ept> class uses a stopwatch to periodically call the checkpoint method on the <bpt id="4">&lt;strong&gt;</bpt>EventProcessorHost<ept id="4">&lt;/strong&gt;</ept> context.</source>
            <target state="new">Note that the <bpt id="2">&lt;code&gt;</bpt>SimpleEventProcessor<ept id="2">&lt;/code&gt;</ept> class uses a stopwatch to periodically call the checkpoint method on the <bpt id="4">&lt;strong&gt;</bpt>EventProcessorHost<ept id="4">&lt;/strong&gt;</ept> context.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>This ensures that, if the receiver is restarted, it will lose no more than five minutes of processing work.</source>
            <target state="new">This ensures that, if the receiver is restarted, it will lose no more than five minutes of processing work.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Program<ept id="2">&lt;/strong&gt;</ept> class, add the following <bpt id="4">&lt;code&gt;</bpt>using<ept id="4">&lt;/code&gt;</ept> statements at the top:</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Program<ept id="2">&lt;/strong&gt;</ept> class, add the following <bpt id="4">&lt;code&gt;</bpt>using<ept id="4">&lt;/code&gt;</ept> statements at the top:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Then, modify the <bpt id="2">&lt;strong&gt;</bpt>Main<ept id="2">&lt;/strong&gt;</ept> method to the <bpt id="4">&lt;strong&gt;</bpt>Program<ept id="4">&lt;/strong&gt;</ept> class as shown below, substituting the Event Hub name and connection string, and the storage account and key that you copied in the previous sections:</source>
            <target state="new">Then, modify the <bpt id="2">&lt;strong&gt;</bpt>Main<ept id="2">&lt;/strong&gt;</ept> method to the <bpt id="4">&lt;strong&gt;</bpt>Program<ept id="4">&lt;/strong&gt;</ept> class as shown below, substituting the Event Hub name and connection string, and the storage account and key that you copied in the previous sections:</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>This tutorial uses a single instance of [EventProcessorHost].</source>
            <target state="new">This tutorial uses a single instance of [EventProcessorHost].</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>To increase throughput, it is recommended that you run multiple instances of [EventProcessorHost], as shown in the [Scaled out event processing] sample.</source>
            <target state="new">To increase throughput, it is recommended that you run multiple instances of [EventProcessorHost], as shown in the [Scaled out event processing] sample.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>In those cases, the various instances  automatically coordinate with each other in order to load balance the received events.</source>
            <target state="new">In those cases, the various instances  automatically coordinate with each other in order to load balance the received events.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>If you want multiple receivers to each process <bpt id="2">&lt;em&gt;</bpt>all<ept id="2">&lt;/em&gt;</ept> the events, you must use the <bpt id="4">&lt;strong&gt;</bpt>ConsumerGroup<ept id="4">&lt;/strong&gt;</ept> concept.</source>
            <target state="new">If you want multiple receivers to each process <bpt id="2">&lt;em&gt;</bpt>all<ept id="2">&lt;/em&gt;</ept> the events, you must use the <bpt id="4">&lt;strong&gt;</bpt>ConsumerGroup<ept id="4">&lt;/strong&gt;</ept> concept.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>When receiving events from different machines, it might be useful to specify names for [EventProcessorHost] instances based on the machines (or roles) in which they are deployed.</source>
            <target state="new">When receiving events from different machines, it might be useful to specify names for [EventProcessorHost] instances based on the machines (or roles) in which they are deployed.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>For more information about these topics, refer to the [Event Hubs Overview] and [Event Hubs Programming Guide] topics.</source>
            <target state="new">For more information about these topics, refer to the [Event Hubs Overview] and [Event Hubs Programming Guide] topics.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>