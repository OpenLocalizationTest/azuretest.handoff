<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 12:45:18 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f13c6f0c02d73e4115b1dd38b7fd5389014c019</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Azure Blob storage from Python | Microsoft Azure</source>
            <target state="new">How to use Azure Blob storage from Python | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the Azure Blob storage from Python to upload, list, download, and delete blobs.</source>
            <target state="new">Learn how to use the Azure Blob storage from Python to upload, list, download, and delete blobs.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use Azure Blob storage from Python</source>
            <target state="new">How to use Azure Blob storage from Python</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-blob-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-blob-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This article will show you how to perform common scenarios using Blob storage.</source>
            <target state="new">This article will show you how to perform common scenarios using Blob storage.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The samples are written in Python and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Python Azure Storage package[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The samples are written in Python and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Python Azure Storage package[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The scenarios covered include uploading, listing,</source>
            <target state="new">The scenarios covered include uploading, listing,</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>downloading, and deleting blobs.</source>
            <target state="new">downloading, and deleting blobs.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-blob-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-blob-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Create a container</source>
            <target state="new">Create a container</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>If you need to install Python or the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Python Azure package[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, see the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Python Installation Guide<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">If you need to install Python or the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Python Azure package[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, see the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Python Installation Guide<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object lets you work with containers and blobs.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object lets you work with containers and blobs.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The</source>
            <target state="new">The</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>following code creates a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object.</source>
            <target state="new">following code creates a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Add the following near</source>
            <target state="new">Add the following near</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>the top of any Python file in which you wish to programmatically access Azure Storage.</source>
            <target state="new">the top of any Python file in which you wish to programmatically access Azure Storage.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The following code creates a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object using the storage account name and account key.</source>
            <target state="new">The following code creates a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object using the storage account name and account key.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Replace 'myaccount' and 'mykey' with the real account and key.</source>
            <target state="new">Replace 'myaccount' and 'mykey' with the real account and key.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-container-naming-rules-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-container-naming-rules-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In the following code example, you can use a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object to create the container if it doesn't exist.</source>
            <target state="new">In the following code example, you can use a <bpt id="2">&lt;strong&gt;</bpt>BlobService<ept id="2">&lt;/strong&gt;</ept> object to create the container if it doesn't exist.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</source>
            <target state="new">By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>If you want to make the files within the container available to everyone, you can create the container and pass the public access level using the following code.</source>
            <target state="new">If you want to make the files within the container available to everyone, you can create the container and pass the public access level using the following code.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Alternatively, you can modify a container after you have created it using the following code.</source>
            <target state="new">Alternatively, you can modify a container after you have created it using the following code.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>After this change, anyone on the Internet can see blobs in a public</source>
            <target state="new">After this change, anyone on the Internet can see blobs in a public</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>container, but only you can modify or delete them.</source>
            <target state="new">container, but only you can modify or delete them.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Upload a blob into a container</source>
            <target state="new">Upload a blob into a container</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>To upload data to a blob, use the <bpt id="2">&lt;strong&gt;</bpt>put\_block\_blob\_from\_path<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>put\_block\_blob\_from\_file<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>put\_block\_blob\_from\_bytes<ept id="6">&lt;/strong&gt;</ept> or <bpt id="8">&lt;strong&gt;</bpt>put\_block\_blob\_from\_text<ept id="8">&lt;/strong&gt;</ept> methods.</source>
            <target state="new">To upload data to a blob, use the <bpt id="2">&lt;strong&gt;</bpt>put\_block\_blob\_from\_path<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>put\_block\_blob\_from\_file<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>put\_block\_blob\_from\_bytes<ept id="6">&lt;/strong&gt;</ept> or <bpt id="8">&lt;strong&gt;</bpt>put\_block\_blob\_from\_text<ept id="8">&lt;/strong&gt;</ept> methods.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</source>
            <target state="new">They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>put\_block\_blob\_from\_path<ept id="1">&lt;/strong&gt;</ept> uploads the contents of a file from the specified path, and <bpt id="3">&lt;strong&gt;</bpt>put\_block\_blob\_from\_file<ept id="3">&lt;/strong&gt;</ept> uploads the contents from an already opened file/stream.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>put\_block\_blob\_from\_path<ept id="1">&lt;/strong&gt;</ept> uploads the contents of a file from the specified path, and <bpt id="3">&lt;strong&gt;</bpt>put\_block\_blob\_from\_file<ept id="3">&lt;/strong&gt;</ept> uploads the contents from an already opened file/stream.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>put\_block\_blob\_from\_bytes<ept id="1">&lt;/strong&gt;</ept> uploads an array of bytes, and <bpt id="3">&lt;strong&gt;</bpt>put\_block\_blob\_from\_text<ept id="3">&lt;/strong&gt;</ept> uploads the specified text value using the specified encoding (defaults to UTF-8).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>put\_block\_blob\_from\_bytes<ept id="1">&lt;/strong&gt;</ept> uploads an array of bytes, and <bpt id="3">&lt;strong&gt;</bpt>put\_block\_blob\_from\_text<ept id="3">&lt;/strong&gt;</ept> uploads the specified text value using the specified encoding (defaults to UTF-8).</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The following example uploads the contents of the <bpt id="2">&lt;strong&gt;</bpt>sunset.png<ept id="2">&lt;/strong&gt;</ept> file into the <bpt id="4">&lt;strong&gt;</bpt>myblob<ept id="4">&lt;/strong&gt;</ept> blob.</source>
            <target state="new">The following example uploads the contents of the <bpt id="2">&lt;strong&gt;</bpt>sunset.png<ept id="2">&lt;/strong&gt;</ept> file into the <bpt id="4">&lt;strong&gt;</bpt>myblob<ept id="4">&lt;/strong&gt;</ept> blob.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>List the blobs in a container</source>
            <target state="new">List the blobs in a container</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>To list the blobs in a container, use the <bpt id="2">&lt;strong&gt;</bpt>list\_blobs<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">To list the blobs in a container, use the <bpt id="2">&lt;strong&gt;</bpt>list\_blobs<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Each</source>
            <target state="new">Each</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>call to <bpt id="2">&lt;strong&gt;</bpt>list\_blobs<ept id="2">&lt;/strong&gt;</ept> will return a segment of results.</source>
            <target state="new">call to <bpt id="2">&lt;strong&gt;</bpt>list\_blobs<ept id="2">&lt;/strong&gt;</ept> will return a segment of results.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>To get all results,</source>
            <target state="new">To get all results,</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>check the <bpt id="2">&lt;strong&gt;</bpt>next\_marker<ept id="2">&lt;/strong&gt;</ept> of the results and call <bpt id="4">&lt;strong&gt;</bpt>list\_blobs<ept id="4">&lt;/strong&gt;</ept> again as</source>
            <target state="new">check the <bpt id="2">&lt;strong&gt;</bpt>next\_marker<ept id="2">&lt;/strong&gt;</ept> of the results and call <bpt id="4">&lt;strong&gt;</bpt>list\_blobs<ept id="4">&lt;/strong&gt;</ept> again as</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>needed.</source>
            <target state="new">needed.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The following code outputs the <bpt id="2">&lt;strong&gt;</bpt>name<ept id="2">&lt;/strong&gt;</ept> of each blob in a container</source>
            <target state="new">The following code outputs the <bpt id="2">&lt;strong&gt;</bpt>name<ept id="2">&lt;/strong&gt;</ept> of each blob in a container</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>to the console.</source>
            <target state="new">to the console.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Download blobs</source>
            <target state="new">Download blobs</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Each segment of results can contain a variable number of blobs up to a maximum</source>
            <target state="new">Each segment of results can contain a variable number of blobs up to a maximum</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>of 5000.</source>
            <target state="new">of 5000.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>If <bpt id="2">&lt;strong&gt;</bpt>next\_marker<ept id="2">&lt;/strong&gt;</ept> exists for a particular segment, there may be</source>
            <target state="new">If <bpt id="2">&lt;strong&gt;</bpt>next\_marker<ept id="2">&lt;/strong&gt;</ept> exists for a particular segment, there may be</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>more blobs in the container.</source>
            <target state="new">more blobs in the container.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>To download data from a blob, use <bpt id="2">&lt;strong&gt;</bpt>get\_blob\_to\_path<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>get\_blob\_to\_file<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>get\_blob\_to\_bytes<ept id="6">&lt;/strong&gt;</ept>, or <bpt id="8">&lt;strong&gt;</bpt>get\_blob\_to\_text<ept id="8">&lt;/strong&gt;</ept>.</source>
            <target state="new">To download data from a blob, use <bpt id="2">&lt;strong&gt;</bpt>get\_blob\_to\_path<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>get\_blob\_to\_file<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>get\_blob\_to\_bytes<ept id="6">&lt;/strong&gt;</ept>, or <bpt id="8">&lt;strong&gt;</bpt>get\_blob\_to\_text<ept id="8">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</source>
            <target state="new">They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>The following example demonstrates using <bpt id="2">&lt;strong&gt;</bpt>get\_blob\_to\_path<ept id="2">&lt;/strong&gt;</ept> to download the contents of the <bpt id="4">&lt;strong&gt;</bpt>myblob<ept id="4">&lt;/strong&gt;</ept> blob and store it to the <bpt id="6">&lt;strong&gt;</bpt>out-sunset.png<ept id="6">&lt;/strong&gt;</ept> file.</source>
            <target state="new">The following example demonstrates using <bpt id="2">&lt;strong&gt;</bpt>get\_blob\_to\_path<ept id="2">&lt;/strong&gt;</ept> to download the contents of the <bpt id="4">&lt;strong&gt;</bpt>myblob<ept id="4">&lt;/strong&gt;</ept> blob and store it to the <bpt id="6">&lt;strong&gt;</bpt>out-sunset.png<ept id="6">&lt;/strong&gt;</ept> file.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Delete a blob</source>
            <target state="new">Delete a blob</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Finally, to delete a blob, call <bpt id="2">&lt;strong&gt;</bpt>delete_blob<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Finally, to delete a blob, call <bpt id="2">&lt;strong&gt;</bpt>delete_blob<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Now that you have learned the basics of Blob storage, follow these links</source>
            <target state="new">Now that you have learned the basics of Blob storage, follow these links</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>to learn about more complex storage tasks.</source>
            <target state="new">to learn about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storing and Accessing Data in Azure[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Storing and Accessing Data in Azure[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage Team Blog[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>