<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/21/2016 7:32:17 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a34d5ea8ccefae36977bd8907563ff3fc9e47d2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to Use iOS Client Library for Azure Mobile Services</source>
            <target state="new">How to Use iOS Client Library for Azure Mobile Services</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>How to Use iOS Client Library for Mobile Services</source>
            <target state="new">How to Use iOS Client Library for Mobile Services</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to Use iOS Client Library for Azure Mobile Services</source>
            <target state="new">How to Use iOS Client Library for Azure Mobile Services</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-selector-client-library.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-selector-client-library.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This guide teaches you to perform common scenarios using the Azure Mobile Services [iOS SDK].</source>
            <target state="new">This guide teaches you to perform common scenarios using the Azure Mobile Services [iOS SDK].</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>If you are new to Mobile Services, first complete [Mobile Services Quick Start] or [Add Mobile Services to Existing App] to configure your account, create a table, and create a mobile service.</source>
            <target state="new">If you are new to Mobile Services, first complete [Mobile Services Quick Start] or [Add Mobile Services to Existing App] to configure your account, create a table, and create a mobile service.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This guide uses the latest <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>iOS Mobile Services SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>. If your project uses an older version of the SDK, first upgrade the framework in Xcode.</source>
            <target state="new">This guide uses the latest <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>iOS Mobile Services SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>. If your project uses an older version of the SDK, first upgrade the framework in Xcode.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-concepts.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-concepts.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Setup and Prerequisites</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Setup and Prerequisites</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This guide assumes that you have created a mobile service with a table.</source>
            <target state="new">This guide assumes that you have created a mobile service with a table.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>For more information see [Create a table], or reuse the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> table created in [Mobile Services Quick Start] or [Add Mobile Services to Existing App].</source>
            <target state="new">For more information see [Create a table], or reuse the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> table created in [Mobile Services Quick Start] or [Add Mobile Services to Existing App].</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>This guide assumes that the table has the same schema as the tables in those tutorials.</source>
            <target state="new">This guide assumes that the table has the same schema as the tables in those tutorials.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>This guide also assumes that your Xcode references <bpt id="2">&lt;code&gt;</bpt>WindowsAzureMobileServices.framework<ept id="2">&lt;/code&gt;</ept> and imports <bpt id="4">&lt;code&gt;</bpt>WindowsAzureMobileServices/WindowsAzureMobileServices.h<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">This guide also assumes that your Xcode references <bpt id="2">&lt;code&gt;</bpt>WindowsAzureMobileServices.framework<ept id="2">&lt;/code&gt;</ept> and imports <bpt id="4">&lt;code&gt;</bpt>WindowsAzureMobileServices/WindowsAzureMobileServices.h<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Create Mobile Services Client</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Create Mobile Services Client</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To access an Azure mobile service in your project, create an <bpt id="2">&lt;code&gt;</bpt>MSClient<ept id="2">&lt;/code&gt;</ept> client object.</source>
            <target state="new">To access an Azure mobile service in your project, create an <bpt id="2">&lt;code&gt;</bpt>MSClient<ept id="2">&lt;/code&gt;</ept> client object.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Replace <bpt id="2">&lt;code&gt;</bpt>AppUrl<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>AppKey<ept id="4">&lt;/code&gt;</ept> with the mobile service URL and the application key Dashboard values, respectively.</source>
            <target state="new">Replace <bpt id="2">&lt;code&gt;</bpt>AppUrl<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>AppKey<ept id="4">&lt;/code&gt;</ept> with the mobile service URL and the application key Dashboard values, respectively.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Create Table Reference</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Create Table Reference</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>To access or update data for your Azure mobile service, create a reference to the table.</source>
            <target state="new">To access or update data for your Azure mobile service, create a reference to the table.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Replace <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> with the name of your table.</source>
            <target state="new">Replace <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> with the name of your table.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Query Data</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Query Data</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>To create a database query, query the <bpt id="2">&lt;code&gt;</bpt>MSTable<ept id="2">&lt;/code&gt;</ept> object.</source>
            <target state="new">To create a database query, query the <bpt id="2">&lt;code&gt;</bpt>MSTable<ept id="2">&lt;/code&gt;</ept> object.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>The following query gets all the items in <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> and logs the text of each item.</source>
            <target state="new">The following query gets all the items in <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> and logs the text of each item.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Filter Returned Data</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Filter Returned Data</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>To filter results, there are many available options.</source>
            <target state="new">To filter results, there are many available options.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>To filter using a predicate, use an <bpt id="2">&lt;code&gt;</bpt>NSPredicate<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>readWithPredicate<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">To filter using a predicate, use an <bpt id="2">&lt;code&gt;</bpt>NSPredicate<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>readWithPredicate<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The following filters returned data to find only incomplete Todo items.</source>
            <target state="new">The following filters returned data to find only incomplete Todo items.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Use MSQuery</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Use MSQuery</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>To perform a complex query (including sorting and paging), create an <bpt id="2">&lt;code&gt;</bpt>MSQuery<ept id="2">&lt;/code&gt;</ept> object, directly or by using a predicate:</source>
            <target state="new">To perform a complex query (including sorting and paging), create an <bpt id="2">&lt;code&gt;</bpt>MSQuery<ept id="2">&lt;/code&gt;</ept> object, directly or by using a predicate:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>MSQuery<ept id="1">&lt;/code&gt;</ept> lets you control several query behaviors, including the following.</source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>MSQuery<ept id="1">&lt;/code&gt;</ept> lets you control several query behaviors, including the following.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Execute an <bpt id="2">&lt;code&gt;</bpt>MSQuery<ept id="2">&lt;/code&gt;</ept> query by calling <bpt id="4">&lt;code&gt;</bpt>readWithCompletion<ept id="4">&lt;/code&gt;</ept> on it, as shown in the next example.</source>
            <target state="new">Execute an <bpt id="2">&lt;code&gt;</bpt>MSQuery<ept id="2">&lt;/code&gt;</ept> query by calling <bpt id="4">&lt;code&gt;</bpt>readWithCompletion<ept id="4">&lt;/code&gt;</ept> on it, as shown in the next example.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Specify order of results</source>
            <target state="new">Specify order of results</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Limit which fields to return</source>
            <target state="new">Limit which fields to return</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Limit how many records to return</source>
            <target state="new">Limit how many records to return</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Specify total count in response</source>
            <target state="new">Specify total count in response</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Specify custom query string parameters in request</source>
            <target state="new">Specify custom query string parameters in request</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Apply additional functions</source>
            <target state="new">Apply additional functions</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Sort Data with MSQuery</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Sort Data with MSQuery</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>To sort results, let's look at an example.</source>
            <target state="new">To sort results, let's look at an example.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>To first ascendingly by field <bpt id="2">&lt;code&gt;</bpt>text<ept id="2">&lt;/code&gt;</ept> and then descendingly by field <bpt id="4">&lt;code&gt;</bpt>completion<ept id="4">&lt;/code&gt;</ept>, invoke <bpt id="6">&lt;code&gt;</bpt>MSQuery<ept id="6">&lt;/code&gt;</ept> like so:</source>
            <target state="new">To first ascendingly by field <bpt id="2">&lt;code&gt;</bpt>text<ept id="2">&lt;/code&gt;</ept> and then descendingly by field <bpt id="4">&lt;code&gt;</bpt>completion<ept id="4">&lt;/code&gt;</ept>, invoke <bpt id="6">&lt;code&gt;</bpt>MSQuery<ept id="6">&lt;/code&gt;</ept> like so:</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Return Data in Pages with MSQuery</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Return Data in Pages with MSQuery</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Mobile Services limits the amount of records that are returned in a single response.</source>
            <target state="new">Mobile Services limits the amount of records that are returned in a single response.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>To control the number of records displayed to your users you must implement a paging system.</source>
            <target state="new">To control the number of records displayed to your users you must implement a paging system.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Paging is performed by using the following three properties of the <bpt id="2">&lt;strong&gt;</bpt>MSQuery<ept id="2">&lt;/strong&gt;</ept> object:</source>
            <target state="new">Paging is performed by using the following three properties of the <bpt id="2">&lt;strong&gt;</bpt>MSQuery<ept id="2">&lt;/strong&gt;</ept> object:</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>In the following example, a simple function requests 5 records from the server and then appends them to the local collection of previously loaded records:</source>
            <target state="new">In the following example, a simple function requests 5 records from the server and then appends them to the local collection of previously loaded records:</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>How to: Limit Fields and Expand Query String Parameters with MSQuery</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept><bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>How to: Limit Fields and Expand Query String Parameters with MSQuery</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>To limit fields to be returned in a query, specify the names of the fields in the <bpt id="2">&lt;strong&gt;</bpt>selectFields<ept id="2">&lt;/strong&gt;</ept> property.</source>
            <target state="new">To limit fields to be returned in a query, specify the names of the fields in the <bpt id="2">&lt;strong&gt;</bpt>selectFields<ept id="2">&lt;/strong&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>This returns only the text and completed fields:</source>
            <target state="new">This returns only the text and completed fields:</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <bpt id="2">&lt;code&gt;</bpt>query.parameters<ept id="2">&lt;/code&gt;</ept> like so:</source>
            <target state="new">To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <bpt id="2">&lt;code&gt;</bpt>query.parameters<ept id="2">&lt;/code&gt;</ept> like so:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Insert Data</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Insert Data</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>To insert a new table row, create a new <bpt id="2">&lt;code&gt;</bpt>NSDictionary<ept id="2">&lt;/code&gt;</ept> and invoke <bpt id="4">&lt;code&gt;</bpt>table insert<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">To insert a new table row, create a new <bpt id="2">&lt;code&gt;</bpt>NSDictionary<ept id="2">&lt;/code&gt;</ept> and invoke <bpt id="4">&lt;code&gt;</bpt>table insert<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Mobile Services automatically generates new columns based on the <bpt id="2">&lt;code&gt;</bpt>NSDictionary<ept id="2">&lt;/code&gt;</ept> if [Dynamic Schema] is not disabled.</source>
            <target state="new">Mobile Services automatically generates new columns based on the <bpt id="2">&lt;code&gt;</bpt>NSDictionary<ept id="2">&lt;/code&gt;</ept> if [Dynamic Schema] is not disabled.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>If <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> is not provided, the backend automatically generates a new unique ID.</source>
            <target state="new">If <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> is not provided, the backend automatically generates a new unique ID.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Provide your own <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> to use email addresses, usernames, or your own custom values as ID.</source>
            <target state="new">Provide your own <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> to use email addresses, usernames, or your own custom values as ID.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Providing your own ID may ease joins and business-oriented database logic.</source>
            <target state="new">Providing your own ID may ease joins and business-oriented database logic.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Modify Data</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Modify Data</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>To update an existing row, modify an item and call <bpt id="2">&lt;code&gt;</bpt>update<ept id="2">&lt;/code&gt;</ept>:</source>
            <target state="new">To update an existing row, modify an item and call <bpt id="2">&lt;code&gt;</bpt>update<ept id="2">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Alternatively, supply the row ID and the updated field:</source>
            <target state="new">Alternatively, supply the row ID and the updated field:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>At minimum, the <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> attribute must be set when making updates.</source>
            <target state="new">At minimum, the <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> attribute must be set when making updates.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Delete Data</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Delete Data</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>To delete an item, invoke <bpt id="2">&lt;code&gt;</bpt>delete<ept id="2">&lt;/code&gt;</ept> with the item:</source>
            <target state="new">To delete an item, invoke <bpt id="2">&lt;code&gt;</bpt>delete<ept id="2">&lt;/code&gt;</ept> with the item:</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Alternatively, delete by providing a row ID:</source>
            <target state="new">Alternatively, delete by providing a row ID:</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>At minimum, the <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> attribute must be set when making deletes.</source>
            <target state="new">At minimum, the <bpt id="2">&lt;code&gt;</bpt>id<ept id="2">&lt;/code&gt;</ept> attribute must be set when making deletes.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Authenticate Users</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Authenticate Users</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Azure Mobile Services supports various identity providers.</source>
            <target state="new">Azure Mobile Services supports various identity providers.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>For a basic tutorial, see [Authentication].</source>
            <target state="new">For a basic tutorial, see [Authentication].</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Azure Mobile Services supports two authentication workflows:</source>
            <target state="new">Azure Mobile Services supports two authentication workflows:</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Server-managed Login<ept id="1">&lt;/strong&gt;</ept>: Azure Mobile Services manages the login process on behalf of your app.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Server-managed Login<ept id="1">&lt;/strong&gt;</ept>: Azure Mobile Services manages the login process on behalf of your app.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>It displays a provider-specific login page and authenticates with the chosen provider.</source>
            <target state="new">It displays a provider-specific login page and authenticates with the chosen provider.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Client-managed Login<ept id="1">&lt;/strong&gt;</ept>: The <bpt id="3">&lt;em&gt;</bpt>app<ept id="3">&lt;/em&gt;</ept> requests a token from the identity provider and presents this token to Azure Mobile Services for authentication.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Client-managed Login<ept id="1">&lt;/strong&gt;</ept>: The <bpt id="3">&lt;em&gt;</bpt>app<ept id="3">&lt;/em&gt;</ept> requests a token from the identity provider and presents this token to Azure Mobile Services for authentication.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>When authentication succeeds, you get back a user object with a user ID value and the auth token.</source>
            <target state="new">When authentication succeeds, you get back a user object with a user ID value and the auth token.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>To use this user ID to authorize users, see [Service-side Authorization].</source>
            <target state="new">To use this user ID to authorize users, see [Service-side Authorization].</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>To restrict table access to only authenticated users, see [Permissions].</source>
            <target state="new">To restrict table access to only authenticated users, see [Permissions].</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Server-managed Login</source>
            <target state="new">Server-managed Login</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>Here is how you can add server-managed login to the [Mobile Services Quick Start] project; you may use similar code for your other projects.</source>
            <target state="new">Here is how you can add server-managed login to the [Mobile Services Quick Start] project; you may use similar code for your other projects.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>For more information and to see an end-to-end example in action, see [Authentication].</source>
            <target state="new">For more information and to see an end-to-end example in action, see [Authentication].</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-ios-authenticate-app.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-ios-authenticate-app.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Client-managed Login (Single Sign-on)</source>
            <target state="new">Client-managed Login (Single Sign-on)</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>You may do the login process outside the Mobile Services client, either to enable single sign-on or if your app contacts the identity provider directly.</source>
            <target state="new">You may do the login process outside the Mobile Services client, either to enable single sign-on or if your app contacts the identity provider directly.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>In such cases, you can log in to Mobile Services by providing a token obtained independently from a supported identity provider.</source>
            <target state="new">In such cases, you can log in to Mobile Services by providing a token obtained independently from a supported identity provider.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>The following example uses the [Live Connect SDK] to enable single sign-on for iOS apps.</source>
            <target state="new">The following example uses the [Live Connect SDK] to enable single sign-on for iOS apps.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>It assumes that you have a <bpt id="2">&lt;strong&gt;</bpt>LiveConnectClient<ept id="2">&lt;/strong&gt;</ept> instance named <bpt id="4">&lt;code&gt;</bpt>liveClient<ept id="4">&lt;/code&gt;</ept> in the controller and the user is logged in.</source>
            <target state="new">It assumes that you have a <bpt id="2">&lt;strong&gt;</bpt>LiveConnectClient<ept id="2">&lt;/strong&gt;</ept> instance named <bpt id="4">&lt;code&gt;</bpt>liveClient<ept id="4">&lt;/code&gt;</ept> in the controller and the user is logged in.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Cache Authentication Tokens</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Cache Authentication Tokens</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Let's see how you may cache tokens in the [Mobile Services Quick Start] project; you may apply similar steps to any project.</source>
            <target state="new">Let's see how you may cache tokens in the [Mobile Services Quick Start] project; you may apply similar steps to any project.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-ios-authenticate-app-with-token.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-ios-authenticate-app-with-token.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Handle Errors</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>How to: Handle Errors</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>When you call a mobile service, the completion block contains an <bpt id="2">&lt;code&gt;</bpt>NSError *error<ept id="2">&lt;/code&gt;</ept> parameter.</source>
            <target state="new">When you call a mobile service, the completion block contains an <bpt id="2">&lt;code&gt;</bpt>NSError *error<ept id="2">&lt;/code&gt;</ept> parameter.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>When an error occurs, this parameter is non-nil.</source>
            <target state="new">When an error occurs, this parameter is non-nil.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>In your code, you should check this parameter and handle the error as needed.</source>
            <target state="new">In your code, you should check this parameter and handle the error as needed.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>The file [<bpt id="2">&lt;code&gt;</bpt>&lt;WindowsAzureMobileServices/MSError.h&gt;<ept id="2">&lt;/code&gt;</ept>](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h) defines the constants <bpt id="4">&lt;code&gt;</bpt>MSErrorResponseKey<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>MSErrorRequestKey<ept id="6">&lt;/code&gt;</ept>, and <bpt id="8">&lt;code&gt;</bpt>MSErrorServerItemKey<ept id="8">&lt;/code&gt;</ept> to get more data related to the error. In addition, the file defines constants for each error code. For an example on how to use these constants, see [Conflict-Handler] for its usage of <bpt id="10">&lt;code&gt;</bpt>MSErrorServerItemKey<ept id="10">&lt;/code&gt;</ept> and <bpt id="12">&lt;code&gt;</bpt>MSErrorPreconditionFailed<ept id="12">&lt;/code&gt;</ept>.</source>
            <target state="new">The file [<bpt id="2">&lt;code&gt;</bpt>&lt;WindowsAzureMobileServices/MSError.h&gt;<ept id="2">&lt;/code&gt;</ept>](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h) defines the constants <bpt id="4">&lt;code&gt;</bpt>MSErrorResponseKey<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>MSErrorRequestKey<ept id="6">&lt;/code&gt;</ept>, and <bpt id="8">&lt;code&gt;</bpt>MSErrorServerItemKey<ept id="8">&lt;/code&gt;</ept> to get more data related to the error. In addition, the file defines constants for each error code. For an example on how to use these constants, see [Conflict-Handler] for its usage of <bpt id="10">&lt;code&gt;</bpt>MSErrorServerItemKey<ept id="10">&lt;/code&gt;</ept> and <bpt id="12">&lt;code&gt;</bpt>MSErrorPreconditionFailed<ept id="12">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>