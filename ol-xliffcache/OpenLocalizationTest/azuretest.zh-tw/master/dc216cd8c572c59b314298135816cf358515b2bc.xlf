<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/21/2016 7:19:04 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc216cd8c572c59b314298135816cf358515b2bc</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to Deliver Streaming Content from Media Services</source>
            <target state="new">How to Deliver Streaming Content from Media Services</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to create a locator that is used to build a streaming URL. The code uses REST API.</source>
            <target state="new">Learn how to create a locator that is used to build a streaming URL. The code uses REST API.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to: Deliver streaming content</source>
            <target state="new">How to: Deliver streaming content</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>You can stream an adaptive bitrate MP4 set by creating an OnDemand streaming locator and building a streaming URL.</source>
            <target state="new">You can stream an adaptive bitrate MP4 set by creating an OnDemand streaming locator and building a streaming URL.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>encoding an asset<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic shows how to encode into an adaptive bitrate MP4 set.</source>
            <target state="new">The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>encoding an asset<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic shows how to encode into an adaptive bitrate MP4 set.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>If your content is encrypted, configure asset delivery policy (as described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>this<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic) before creating a locator.</source>
            <target state="new">If your content is encrypted, configure asset delivery policy (as described in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>this<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic) before creating a locator.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>You can also use an OnDemand streaming locator to build URLs that point to MP4 files that can be progressively downloaded.</source>
            <target state="new">You can also use an OnDemand streaming locator to build URLs that point to MP4 files that can be progressively downloaded.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This topic shows how to create an OnDemand streaming locator in order to publish your asset and build a Smooth, MPEG DASH, and HLS streaming URLs.</source>
            <target state="new">This topic shows how to create an OnDemand streaming locator in order to publish your asset and build a Smooth, MPEG DASH, and HLS streaming URLs.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>It also shows hot to build progressive download URLs.</source>
            <target state="new">It also shows hot to build progressive download URLs.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>following<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section shows the enum types whose values are used in the REST calls.</source>
            <target state="new">The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>following<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section shows the enum types whose values are used in the REST calls.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Create an OnDemand streaming locator</source>
            <target state="new">Create an OnDemand streaming locator</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>To create the OnDemand streaming locator and get URLs you need to do the following:</source>
            <target state="new">To create the OnDemand streaming locator and get URLs you need to do the following:</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>If the content is encrypted, define an access policy.</source>
            <target state="new">If the content is encrypted, define an access policy.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Create an OnDemand streaming locator.</source>
            <target state="new">Create an OnDemand streaming locator.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>If you plan to stream, get the streaming manifest file (.ism) in the asset.</source>
            <target state="new">If you plan to stream, get the streaming manifest file (.ism) in the asset.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>If you plan to progressively download, get the names of MP4 files in the asset.</source>
            <target state="new">If you plan to progressively download, get the names of MP4 files in the asset.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Build URLs to the manifest file or MP4 files.</source>
            <target state="new">Build URLs to the manifest file or MP4 files.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Create an access policy</source>
            <target state="new">Create an access policy</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Request:</source>
            <target state="new">Request:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Response:</source>
            <target state="new">Response:</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Create an OnDemand streaming locator</source>
            <target state="new">Create an OnDemand streaming locator</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Create the locator for the specified asset and asset policy.</source>
            <target state="new">Create the locator for the specified asset and asset policy.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Request:</source>
            <target state="new">Request:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Response:</source>
            <target state="new">Response:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Build streaming URLs</source>
            <target state="new">Build streaming URLs</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> value returned after the creation of the locator to build the Smooth, HLS, and MPEG DASH URLs.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> value returned after the creation of the locator to build the Smooth, HLS, and MPEG DASH URLs.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Smooth Streaming: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest"</source>
            <target state="new">Smooth Streaming: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest"</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>example:</source>
            <target state="new">example:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>HLS: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest(format=m3u8-aapl)"</source>
            <target state="new">HLS: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest(format=m3u8-aapl)"</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>example:</source>
            <target state="new">example:</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>DASH: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest(format=mpd-time-csf)"</source>
            <target state="new">DASH: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + manifest file name + "/manifest(format=mpd-time-csf)"</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>example:</source>
            <target state="new">example:</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Build progressive download URLs</source>
            <target state="new">Build progressive download URLs</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Use the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> value returned after the creation of the locator to build the progressive download URL.</source>
            <target state="new">Use the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> value returned after the creation of the locator to build the progressive download URL.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>URL: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + asset file mp4 name</source>
            <target state="new">URL: <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> + asset file mp4 name</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>example:</source>
            <target state="new">example:</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enum types</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Enum types</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>test</source>
            <target state="new">test</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>