<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="2/20/2016 11:36:51 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf34cc71eec264f9888b636130ae80a9ba22c210</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Serve Content from Azure CDN in Your Web Application</source>
            <target state="new">Serve Content from Azure CDN in Your Web Application</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>A tutorial that teaches you how to use content from a CDN to improve the performance of your Web application.</source>
            <target state="new">A tutorial that teaches you how to use content from a CDN to improve the performance of your Web application.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Serve Content from Azure CDN in Your Web Application</source>
            <target state="new">Serve Content from Azure CDN in Your Web Application</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This tutorial shows you how to take advantage of Azure CDN to improve the reach and performance of your Web application.</source>
            <target state="new">This tutorial shows you how to take advantage of Azure CDN to improve the reach and performance of your Web application.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Azure CDN can help improve the performance of your Web application when:</source>
            <target state="new">Azure CDN can help improve the performance of your Web application when:</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>You have many links to static or semi-static content on your pages</source>
            <target state="new">You have many links to static or semi-static content on your pages</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Your application is accessed by clients globally</source>
            <target state="new">Your application is accessed by clients globally</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>You want to offload traffic from your Web server</source>
            <target state="new">You want to offload traffic from your Web server</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>You want to reduce the number of concurrent client connections to your Web server (there is a great discussion on this at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Bundling and Minification<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">You want to reduce the number of concurrent client connections to your Web server (there is a great discussion on this at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Bundling and Minification<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>You want to increase the perceived load/refresh time of your pages</source>
            <target state="new">You want to increase the perceived load/refresh time of your pages</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>What you will learn</source>
            <target state="new">What you will learn</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>In this tutorial, you will learn how to do the following:</source>
            <target state="new">In this tutorial, you will learn how to do the following:</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Serve static content from an Azure CDN endpoint<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Serve static content from an Azure CDN endpoint<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configure the CDN cache to reflect the desired content update<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configure the CDN cache to reflect the desired content update<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately using query strings<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately using query strings<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>What you will need</source>
            <target state="new">What you will need</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>This tutorial has the following prerequisites:</source>
            <target state="new">This tutorial has the following prerequisites:</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>An active <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">An active <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft Azure account<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>You can sign up for a trial account</source>
            <target state="new">You can sign up for a trial account</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Visual Studio 2013 with <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for blob management GUI</source>
            <target state="new">Visual Studio 2013 with <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> for blob management GUI</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure PowerShell<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (used by <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure PowerShell<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> (used by <bpt id="3CapsExtId1">&lt;link&gt;</bpt><bpt id="3CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="3CapsExtId2">&lt;/linkText&gt;</ept><bpt id="3CapsExtId3">&lt;title&gt;</bpt><ept id="3CapsExtId3">&lt;/title&gt;</ept><ept id="3CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>You need an Azure account to complete this tutorial:</source>
            <target state="new">You need an Azure account to complete this tutorial:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>+ You can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>open an Azure account for free<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> - You get credits you can use to try out paid Azure services, and even after they're used up you can keep the account and use free Azure services, such as Websites.</source>
            <target state="new">+ You can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>open an Azure account for free<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> - You get credits you can use to try out paid Azure services, and even after they're used up you can keep the account and use free Azure services, such as Websites.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>+ You can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>activate MSDN subscriber benefits<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> - Your MSDN subscription gives you credits every month that you can use for paid Azure services.</source>
            <target state="new">+ You can <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>activate MSDN subscriber benefits<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> - Your MSDN subscription gives you credits every month that you can use for paid Azure services.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Serve static content from an Azure CDN endpoint</source>
            <target state="new">Serve static content from an Azure CDN endpoint</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In this tutorial section, you will learn how to create a CDN and use it to serve your static content.</source>
            <target state="new">In this tutorial section, you will learn how to create a CDN and use it to serve your static content.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The major steps involved are:</source>
            <target state="new">The major steps involved are:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Create a storage account</source>
            <target state="new">Create a storage account</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Create a CDN linked to the storage account</source>
            <target state="new">Create a CDN linked to the storage account</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Create a blob container in your storage account</source>
            <target state="new">Create a blob container in your storage account</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Upload content to your blob container</source>
            <target state="new">Upload content to your blob container</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Link to the the content you uploaded using its CDN URL</source>
            <target state="new">Link to the the content you uploaded using its CDN URL</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Let's get to it.</source>
            <target state="new">Let's get to it.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Follow the steps below to start using the Azure CDN:</source>
            <target state="new">Follow the steps below to start using the Azure CDN:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>To create a CDN endpoint, log into your <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure management portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">To create a CDN endpoint, log into your <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure management portal<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Create a storage account by clicking <bpt id="2">&lt;strong&gt;</bpt>New &gt; Data Services &gt; Storage &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Create a storage account by clicking <bpt id="2">&lt;strong&gt;</bpt>New &gt; Data Services &gt; Storage &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Specify a URL, a location, and click <bpt id="2">&lt;strong&gt;</bpt>Create Storage Account<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Specify a URL, a location, and click <bpt id="2">&lt;strong&gt;</bpt>Create Storage Account<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Note that I'm using East Asia as the region as it is far enough away for me to test my CDN from North America later.</source>
            <target state="new">Note that I'm using East Asia as the region as it is far enough away for me to test my CDN from North America later.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Once the new storage account's status is <bpt id="2">&lt;strong&gt;</bpt>Online<ept id="2">&lt;/strong&gt;</ept>, create a new CDN endpoint that's tied to the storage account you created.</source>
            <target state="new">Once the new storage account's status is <bpt id="2">&lt;strong&gt;</bpt>Online<ept id="2">&lt;/strong&gt;</ept>, create a new CDN endpoint that's tied to the storage account you created.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>New &gt; App Services &gt; CDN &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>New &gt; App Services &gt; CDN &gt; Quick Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Select the storage account you created and click <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Select the storage account you created and click <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Once your CDN is created, the Azure portal will show you its URL and the origin domain that it's tied to.</source>
            <target state="new">Once your CDN is created, the Azure portal will show you its URL and the origin domain that it's tied to.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>However, it can take awhile for the CDN endpoint's configuration to be fully propagated to all the node locations.</source>
            <target state="new">However, it can take awhile for the CDN endpoint's configuration to be fully propagated to all the node locations.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Test your CDN endpoint to make sure that it's online by pinging it.</source>
            <target state="new">Test your CDN endpoint to make sure that it's online by pinging it.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>If your CDN endpoint has not propagated to all the nodes, you will see a message similar to the one below.</source>
            <target state="new">If your CDN endpoint has not propagated to all the nodes, you will see a message similar to the one below.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Wait another hour and test again.</source>
            <target state="new">Wait another hour and test again.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Once your CDN endpoint has finished propagating to the nodes, it should respond to your pings.</source>
            <target state="new">Once your CDN endpoint has finished propagating to the nodes, it should respond to your pings.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>At this point, you can already see where the CDN endpoint determines to be the closest CDN node to you.</source>
            <target state="new">At this point, you can already see where the CDN endpoint determines to be the closest CDN node to you.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>From my desktop computer, the responding IP address is <bpt id="2">&lt;strong&gt;</bpt>93.184.215.201<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">From my desktop computer, the responding IP address is <bpt id="2">&lt;strong&gt;</bpt>93.184.215.201<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Plug it into a site like <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>www.ip-address.org<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and see that the server is located in Washington D.C.</source>
            <target state="new">Plug it into a site like <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>www.ip-address.org<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and see that the server is located in Washington D.C.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>For a list of all CDN node locations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Content Delivery Network (CDN) Node Locations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For a list of all CDN node locations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Content Delivery Network (CDN) Node Locations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Back in the Azure portal, in the <bpt id="2">&lt;strong&gt;</bpt>CDN<ept id="2">&lt;/strong&gt;</ept> tab, click the name of the CDN endpoint you just created.</source>
            <target state="new">Back in the Azure portal, in the <bpt id="2">&lt;strong&gt;</bpt>CDN<ept id="2">&lt;/strong&gt;</ept> tab, click the name of the CDN endpoint you just created.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Enable Query String<ept id="2">&lt;/strong&gt;</ept> to enable query strings in the Azure CDN cache.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Enable Query String<ept id="2">&lt;/strong&gt;</ept> to enable query strings in the Azure CDN cache.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Once you enable this, the same link accessed with different query strings will be cached as separate entries.</source>
            <target state="new">Once you enable this, the same link accessed with different query strings will be cached as separate entries.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>While enabling the query string is not necessary for this part of the tutorial, you want to do this as early as possible for convenience sake since any change here is going to take time to propagate to the rest of the nodes, and you don't want any non-query-string-enabled content to clog up the CDN cache (updating CDN content will be discussed later).</source>
            <target state="new">While enabling the query string is not necessary for this part of the tutorial, you want to do this as early as possible for convenience sake since any change here is going to take time to propagate to the rest of the nodes, and you don't want any non-query-string-enabled content to clog up the CDN cache (updating CDN content will be discussed later).</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>You will find out how to take advantage of this in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately through query strings<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">You will find out how to take advantage of this in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately through query strings<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>In Visual Studio 2013, in Server Explorer, click the <bpt id="2">&lt;strong&gt;</bpt>Connect to Microsoft Azure<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">In Visual Studio 2013, in Server Explorer, click the <bpt id="2">&lt;strong&gt;</bpt>Connect to Microsoft Azure<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Follow the prompt to sign into your Azure account.</source>
            <target state="new">Follow the prompt to sign into your Azure account.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Once you sign in, expand the <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure &gt; Storage &gt; your storage account<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Once you sign in, expand the <bpt id="2">&lt;strong&gt;</bpt>Microsoft Azure &gt; Storage &gt; your storage account<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Right-click <bpt id="2">&lt;strong&gt;</bpt>Blob<ept id="2">&lt;/strong&gt;</ept> and select <bpt id="4">&lt;strong&gt;</bpt>Create Blob Container<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click <bpt id="2">&lt;strong&gt;</bpt>Blob<ept id="2">&lt;/strong&gt;</ept> and select <bpt id="4">&lt;strong&gt;</bpt>Create Blob Container<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Specify a blob container name and click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Specify a blob container name and click <bpt id="2">&lt;strong&gt;</bpt>OK<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>In Server Explorer, double-click the blob container you created to manage it.</source>
            <target state="new">In Server Explorer, double-click the blob container you created to manage it.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>You should see the management interface in the center pane.</source>
            <target state="new">You should see the management interface in the center pane.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Upload Blob<ept id="2">&lt;/strong&gt;</ept> button to upload images, scripts, or stylesheets that are used by your Web pages into the blob container.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Upload Blob<ept id="2">&lt;/strong&gt;</ept> button to upload images, scripts, or stylesheets that are used by your Web pages into the blob container.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>The upload progress will be shown in the <bpt id="2">&lt;strong&gt;</bpt>Azure Activity Log<ept id="2">&lt;/strong&gt;</ept>, and the blobs will appear in the container view when they are uploaded.</source>
            <target state="new">The upload progress will be shown in the <bpt id="2">&lt;strong&gt;</bpt>Azure Activity Log<ept id="2">&lt;/strong&gt;</ept>, and the blobs will appear in the container view when they are uploaded.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Now that you have uploaded the blobs, you must make them public for you to access them.</source>
            <target state="new">Now that you have uploaded the blobs, you must make them public for you to access them.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>In Server Explorer, right-click the container and select <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Server Explorer, right-click the container and select <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Set the <bpt id="2">&lt;strong&gt;</bpt>Public Read Access<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>Blob<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">Set the <bpt id="2">&lt;strong&gt;</bpt>Public Read Access<ept id="2">&lt;/strong&gt;</ept> property to <bpt id="4">&lt;strong&gt;</bpt>Blob<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Test the public access of your blobs by navigating to the URL for one of the blobs in a browser.</source>
            <target state="new">Test the public access of your blobs by navigating to the URL for one of the blobs in a browser.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>For example, I can test the first image in my uploaded list with <bpt id="2">&lt;code&gt;</bpt>http://cephalinstorage.blob.core.windows.net/cdn/cephas_lin.png<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, I can test the first image in my uploaded list with <bpt id="2">&lt;code&gt;</bpt>http://cephalinstorage.blob.core.windows.net/cdn/cephas_lin.png<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Note that I'm not using the HTTPS address given in the blob management interface in Visual Studio.</source>
            <target state="new">Note that I'm not using the HTTPS address given in the blob management interface in Visual Studio.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>By using HTTP, you test whether the content is publicly accessible, which is a requirement for Azure CDN.</source>
            <target state="new">By using HTTP, you test whether the content is publicly accessible, which is a requirement for Azure CDN.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>If you can see the blob rendered properly in your browser, change the URL from <bpt id="2">&lt;code&gt;</bpt>http://&lt;yourStorageAccountName&gt;.blob.core.windows.net<ept id="2">&lt;/code&gt;</ept> to the URL of your Azure CDN. In my case, to test the first image at my CDN endpoint, I would use <bpt id="4">&lt;code&gt;</bpt>http://az623979.vo.msecnd.net/cdn/cephas_lin.png<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">If you can see the blob rendered properly in your browser, change the URL from <bpt id="2">&lt;code&gt;</bpt>http://&lt;yourStorageAccountName&gt;.blob.core.windows.net<ept id="2">&lt;/code&gt;</ept> to the URL of your Azure CDN. In my case, to test the first image at my CDN endpoint, I would use <bpt id="4">&lt;code&gt;</bpt>http://az623979.vo.msecnd.net/cdn/cephas_lin.png<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>You can find the CDN endpoint's URL in the Azure management portal, in the CDN tab.</source>
            <target state="new">You can find the CDN endpoint's URL in the Azure management portal, in the CDN tab.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>If you compare the performance of direct blob access and CDN access, you can see the performance gain from using Azure CDN.</source>
            <target state="new">If you compare the performance of direct blob access and CDN access, you can see the performance gain from using Azure CDN.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>Below is the Internet Explorer 11 F12 developer tools screenshot for blob URL access of my image:</source>
            <target state="new">Below is the Internet Explorer 11 F12 developer tools screenshot for blob URL access of my image:</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>And for CDN URL access of the same image</source>
            <target state="new">And for CDN URL access of the same image</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>Pay attention to the numbers for the <bpt id="2">&lt;strong&gt;</bpt>Request<ept id="2">&lt;/strong&gt;</ept> timing, which is the time to first byte, or the time taken to send the request and receive the first response from the server.</source>
            <target state="new">Pay attention to the numbers for the <bpt id="2">&lt;strong&gt;</bpt>Request<ept id="2">&lt;/strong&gt;</ept> timing, which is the time to first byte, or the time taken to send the request and receive the first response from the server.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>When I access the blob, which is hosted in the East Asia region, it takes 266 ms for me - since the request must traverse the entire Pacific Ocean just to get to the server.</source>
            <target state="new">When I access the blob, which is hosted in the East Asia region, it takes 266 ms for me - since the request must traverse the entire Pacific Ocean just to get to the server.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>However, when I access the Azure CDN, it takes only 16 ms, which is nearly a <bpt id="2">&lt;strong&gt;</bpt>20-fold gain in performance<ept id="2">&lt;/strong&gt;</ept>!</source>
            <target state="new">However, when I access the Azure CDN, it takes only 16 ms, which is nearly a <bpt id="2">&lt;strong&gt;</bpt>20-fold gain in performance<ept id="2">&lt;/strong&gt;</ept>!</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Now, it's just a matter of using the new link in your Web page.</source>
            <target state="new">Now, it's just a matter of using the new link in your Web page.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>For example, I can add the following image tag:</source>
            <target state="new">For example, I can add the following image tag:</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>In this section, you have learned how to create a CDN endpoint, upload content to it, and link to CDN contentfrom any Web page.</source>
            <target state="new">In this section, you have learned how to create a CDN endpoint, upload content to it, and link to CDN contentfrom any Web page.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Automate content upload from your ASP.NET application to your CDN endpoint</source>
            <target state="new">Automate content upload from your ASP.NET application to your CDN endpoint</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>If you want to easily upload all of the static content in your ASP.NET Web application to your CDN endpoint, or if your deploy your Web application using continuous delivery (for an example, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Continuous Delivery for Cloud Services in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you can use Azure PowerShell to automate the synchronization of the latest content files to Azure blobs every time you deploy your Web application.</source>
            <target state="new">If you want to easily upload all of the static content in your ASP.NET Web application to your CDN endpoint, or if your deploy your Web application using continuous delivery (for an example, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Continuous Delivery for Cloud Services in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, you can use Azure PowerShell to automate the synchronization of the latest content files to Azure blobs every time you deploy your Web application.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>For example, you can run the script at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Upload Content Files from ASP.NET Application to Azure Blobs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> upload all the content files in an ASP.NET application.</source>
            <target state="new">For example, you can run the script at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Upload Content Files from ASP.NET Application to Azure Blobs<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> upload all the content files in an ASP.NET application.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>To use this script:</source>
            <target state="new">To use this script:</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>From the <bpt id="2">&lt;strong&gt;</bpt>Start<ept id="2">&lt;/strong&gt;</ept> menu, run <bpt id="4">&lt;strong&gt;</bpt>Microsoft Azure PowerShell<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">From the <bpt id="2">&lt;strong&gt;</bpt>Start<ept id="2">&lt;/strong&gt;</ept> menu, run <bpt id="4">&lt;strong&gt;</bpt>Microsoft Azure PowerShell<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>In the Azure PowerShell window, run <bpt id="2">&lt;code&gt;</bpt>Get-AzurePublishSettingsFile<ept id="2">&lt;/code&gt;</ept> to download a publish settings file for your Azure account.</source>
            <target state="new">In the Azure PowerShell window, run <bpt id="2">&lt;code&gt;</bpt>Get-AzurePublishSettingsFile<ept id="2">&lt;/code&gt;</ept> to download a publish settings file for your Azure account.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>Once you have downloaded your publish settings file, run the following:</source>
            <target state="new">Once you have downloaded your publish settings file, run the following:</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>Once you import your publish settings file, it will be the default Azure account used for all Azure PowerShell sessions.</source>
            <target state="new">Once you import your publish settings file, it will be the default Azure account used for all Azure PowerShell sessions.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>This means that the above steps only need to be done once.</source>
            <target state="new">This means that the above steps only need to be done once.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>Download the script from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Download the script from the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>download page<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>Save it into your ASP.NET application's project folder.</source>
            <target state="new">Save it into your ASP.NET application's project folder.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Right-click the downloaded script and click <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Right-click the downloaded script and click <bpt id="2">&lt;strong&gt;</bpt>Properties<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Unblock<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Unblock<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>Open a PowerShell window and run the following:</source>
            <target state="new">Open a PowerShell window and run the following:</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>This script uploads all files from your <bpt id="2">&lt;em&gt;</bpt>\Content<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>\Scripts<ept id="4">&lt;/em&gt;</ept> folders to the specified storage account and container.</source>
            <target state="new">This script uploads all files from your <bpt id="2">&lt;em&gt;</bpt>\Content<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>\Scripts<ept id="4">&lt;/em&gt;</ept> folders to the specified storage account and container.</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>It has the following advantages:</source>
            <target state="new">It has the following advantages:</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Automatically replicate the file structure of your Visual Studio project</source>
            <target state="new">Automatically replicate the file structure of your Visual Studio project</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>Automatically create blob containers as needed</source>
            <target state="new">Automatically create blob containers as needed</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>Reuse the same Azure storage account and CDN endpoint for multiple Web applications, each in a separate blob container</source>
            <target state="new">Reuse the same Azure storage account and CDN endpoint for multiple Web applications, each in a separate blob container</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>Easily update the Azure CDN with new content.</source>
            <target state="new">Easily update the Azure CDN with new content.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>For more information on updating content, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure the CDN cache to reflect the desired content update<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information on updating content, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure the CDN cache to reflect the desired content update<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>For the <bpt id="2">&lt;code&gt;</bpt>-StorageContainer<ept id="2">&lt;/code&gt;</ept> parameter, it makes sense to use the name of your Web application, or the Visual Studio project name.</source>
            <target state="new">For the <bpt id="2">&lt;code&gt;</bpt>-StorageContainer<ept id="2">&lt;/code&gt;</ept> parameter, it makes sense to use the name of your Web application, or the Visual Studio project name.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Whereas I used the generic "cdn" as the container name previously, using the name of your Web application allows related content to be organized into the same easily identifiable container.</source>
            <target state="new">Whereas I used the generic "cdn" as the container name previously, using the name of your Web application allows related content to be organized into the same easily identifiable container.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Once the content has finished uploading, you can link to anything in your <bpt id="2">&lt;em&gt;</bpt>\Content<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>\Scripts<ept id="4">&lt;/em&gt;</ept> folder in your HTML code, such as in your .cshtml files, using <bpt id="6">&lt;code&gt;</bpt>http://&lt;yourCDNName&gt;.vo.msecnd.net/&lt;containerName&gt;<ept id="6">&lt;/code&gt;</ept>. Here is an example of something I can use in a Razor view:</source>
            <target state="new">Once the content has finished uploading, you can link to anything in your <bpt id="2">&lt;em&gt;</bpt>\Content<ept id="2">&lt;/em&gt;</ept> and <bpt id="4">&lt;em&gt;</bpt>\Scripts<ept id="4">&lt;/em&gt;</ept> folder in your HTML code, such as in your .cshtml files, using <bpt id="6">&lt;code&gt;</bpt>http://&lt;yourCDNName&gt;.vo.msecnd.net/&lt;containerName&gt;<ept id="6">&lt;/code&gt;</ept>. Here is an example of something I can use in a Razor view:</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>For an example of integrating PowerShell scripts into your continuous delivery configuration, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Continuous Delivery for Cloud Services in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For an example of integrating PowerShell scripts into your continuous delivery configuration, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Continuous Delivery for Cloud Services in Azure<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Configure the CDN cache to reflect the desired content update</source>
            <target state="new">Configure the CDN cache to reflect the desired content update</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>Now, suppose after you have uploaded the static files from your Web app in a blob container, you make a change to one of the files in your project and upload it to the blob container again.</source>
            <target state="new">Now, suppose after you have uploaded the static files from your Web app in a blob container, you make a change to one of the files in your project and upload it to the blob container again.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>You may think that it's automatically updated to your CDN endpoint, but are actually puzzled why you don't see the update reflected when you access the content's CDN URL.</source>
            <target state="new">You may think that it's automatically updated to your CDN endpoint, but are actually puzzled why you don't see the update reflected when you access the content's CDN URL.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>The truth is that the CDN does indeed automatically update from your blob storage, but it does so by applying a default 7-day caching rule to the content.</source>
            <target state="new">The truth is that the CDN does indeed automatically update from your blob storage, but it does so by applying a default 7-day caching rule to the content.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>This means that once a CDN node pulls your content from blob storage, the same content is not refreshed until it expires in the cache.</source>
            <target state="new">This means that once a CDN node pulls your content from blob storage, the same content is not refreshed until it expires in the cache.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>The good news is that you can customize cache expiration.</source>
            <target state="new">The good news is that you can customize cache expiration.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>Similar to most browsers, Azure CDN respects the expiration time specified in the content's Cache-Control header.</source>
            <target state="new">Similar to most browsers, Azure CDN respects the expiration time specified in the content's Cache-Control header.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>You can specify a custom Cache-Control header value by navigating to the blob container in the Azure portal and editing the blob properties.</source>
            <target state="new">You can specify a custom Cache-Control header value by navigating to the blob container in the Azure portal and editing the blob properties.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>The screenshot below shows cache expiration set to 1 hour (3600 seconds).</source>
            <target state="new">The screenshot below shows cache expiration set to 1 hour (3600 seconds).</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>You can also do this in your PowerShell script to set all blobs' Cache-Control headers.</source>
            <target state="new">You can also do this in your PowerShell script to set all blobs' Cache-Control headers.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>For the script in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, find the following code snippet:</source>
            <target state="new">For the script in <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Automate content upload from your ASP.NET application to your CDN endpoint<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, find the following code snippet:</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>and modify it as follows:</source>
            <target state="new">and modify it as follows:</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>You may still need to wait for the full 7-day cached content on your Azure CDN to expire before it pulls the new content, with the new Cache-Control header.</source>
            <target state="new">You may still need to wait for the full 7-day cached content on your Azure CDN to expire before it pulls the new content, with the new Cache-Control header.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>This illustrates the fact that custom caching values do not help if you want your content update to go live immediately, such as JavaScript or CSS updates.</source>
            <target state="new">This illustrates the fact that custom caching values do not help if you want your content update to go live immediately, such as JavaScript or CSS updates.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source>However, you can work around this issue by renamiving the files or versioning them through query strings.</source>
            <target state="new">However, you can work around this issue by renamiving the files or versioning them through query strings.</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately using query strings<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Serve fresh content immediately using query strings<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>There is, of course, a time and place for caching.</source>
            <target state="new">There is, of course, a time and place for caching.</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source>For example, you may have content that does not require the frequent update, such as the upcoming World Cup games that can be refreshed every 3 hours, but gets enough global traffic that you want to offload it from your own Web server.</source>
            <target state="new">For example, you may have content that does not require the frequent update, such as the upcoming World Cup games that can be refreshed every 3 hours, but gets enough global traffic that you want to offload it from your own Web server.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>That can be a good candidate to use the Azure CDN caching.</source>
            <target state="new">That can be a good candidate to use the Azure CDN caching.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept></target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source>Serve fresh content immediately using query strings</source>
            <target state="new">Serve fresh content immediately using query strings</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>In Azure CDN, you can enable query strings so that content from URLs with specific query strings are cached separately.</source>
            <target state="new">In Azure CDN, you can enable query strings so that content from URLs with specific query strings are cached separately.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>This is a great feature to use if you want to push certain content updates to the client browsers immediately instead of waiting for the cached CDN content to expire.</source>
            <target state="new">This is a great feature to use if you want to push certain content updates to the client browsers immediately instead of waiting for the cached CDN content to expire.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>Suppose I publish my Web page with a version number in the URL.</source>
            <target state="new">Suppose I publish my Web page with a version number in the URL.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source>When I publish a CSS update and use a different version number in my CSS URL:</source>
            <target state="new">When I publish a CSS update and use a different version number in my CSS URL:</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>To a CDN endpoint that has query strings enabled, the two URLs are unique to each other, and it will make a new request to my Web server to retrieve the new <bpt id="2">&lt;em&gt;</bpt>bootstrap.css<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">To a CDN endpoint that has query strings enabled, the two URLs are unique to each other, and it will make a new request to my Web server to retrieve the new <bpt id="2">&lt;em&gt;</bpt>bootstrap.css<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source>To a CDN endpoint that doesn't have query strings enabled, however, these are the same URL, and it will simply serve the cached <bpt id="2">&lt;em&gt;</bpt>bootstrap.css<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">To a CDN endpoint that doesn't have query strings enabled, however, these are the same URL, and it will simply serve the cached <bpt id="2">&lt;em&gt;</bpt>bootstrap.css<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>The trick then is to update the version number automatically.</source>
            <target state="new">The trick then is to update the version number automatically.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>In Visual Studio, this is easy to do.</source>
            <target state="new">In Visual Studio, this is easy to do.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source>In a .cshtml file where I would use the link above, I can specify a version number based on the assembly number.</source>
            <target state="new">In a .cshtml file where I would use the link above, I can specify a version number based on the assembly number.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>If you change the assembly number as part of every publish cycle, then you can likewise be sure to get a unique version number every time you publish your Web app, which will remain the same until the next publish cycle.</source>
            <target state="new">If you change the assembly number as part of every publish cycle, then you can likewise be sure to get a unique version number every time you publish your Web app, which will remain the same until the next publish cycle.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>Or, you can make Visual Studio automatically increment the assembly version number every time the Web app builds by opening <bpt id="2">&lt;em&gt;</bpt>Properties\AssemblyInfo.cs<ept id="2">&lt;/em&gt;</ept> in your Visual Studio project and use <bpt id="4">&lt;code&gt;</bpt>*<ept id="4">&lt;/code&gt;</ept> in <bpt id="6">&lt;code&gt;</bpt>AssemblyVersion<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">Or, you can make Visual Studio automatically increment the assembly version number every time the Web app builds by opening <bpt id="2">&lt;em&gt;</bpt>Properties\AssemblyInfo.cs<ept id="2">&lt;/em&gt;</ept> in your Visual Studio project and use <bpt id="4">&lt;code&gt;</bpt>*<ept id="4">&lt;/code&gt;</ept> in <bpt id="6">&lt;code&gt;</bpt>AssemblyVersion<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>What about bundled scripts and stylesheets in ASP.NET?</source>
            <target state="new">What about bundled scripts and stylesheets in ASP.NET?</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>With <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure App Service Web Apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Cloud Services<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, you get the best Azure CDN integration with <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>ASP.NET bundling and minification<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">With <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure App Service Web Apps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Azure Cloud Services<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, you get the best Azure CDN integration with <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>ASP.NET bundling and minification<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Integrating Azure App Service or Azure Cloud Services with Azure CDN gives you the following advantages:</source>
            <target state="new">Integrating Azure App Service or Azure Cloud Services with Azure CDN gives you the following advantages:</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>Integrate content deployment (images, scripts, and stylesheets) as part of your Azure web app's <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>continuous deployment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> process</source>
            <target state="new">Integrate content deployment (images, scripts, and stylesheets) as part of your Azure web app's <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>continuous deployment<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> process</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Easily upgrade your CDN-served NuGet packages, such as jQuery or Bootstrap versions</source>
            <target state="new">Easily upgrade your CDN-served NuGet packages, such as jQuery or Bootstrap versions</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>Manage your Web application and your CDN-served content from the same Visual Studio interface</source>
            <target state="new">Manage your Web application and your CDN-served content from the same Visual Studio interface</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>For related tutorials, see:</source>
            <target state="new">For related tutorials, see:</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Use Azure CDN in Azure App Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Use Azure CDN in Azure App Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Integrate a cloud service with Azure CDN<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Integrate a cloud service with Azure CDN<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source>Without integration with Azure App Service Web Apps or Azure Cloud Services, it is possible to use Azure CDN for your script bundles, with the following caveats:</source>
            <target state="new">Without integration with Azure App Service Web Apps or Azure Cloud Services, it is possible to use Azure CDN for your script bundles, with the following caveats:</target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>You must manually upload the bundled scripts to blob storage.</source>
            <target state="new">You must manually upload the bundled scripts to blob storage.</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>A programmatic solution is proposed at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>stackoverflow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">A programmatic solution is proposed at <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>stackoverflow<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>In your .cshtml files, transform the rendered script/CSS tags to use the Azure CDN.</source>
            <target state="new">In your .cshtml files, transform the rendered script/CSS tags to use the Azure CDN.</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>More Information</source>
            <target state="new">More Information</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Overview of the Azure Content Delivery Network (CDN)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Overview of the Azure Content Delivery Network (CDN)<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Use Azure CDN in Azure App Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Use Azure CDN in Azure App Service<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Integrate a cloud service with Azure CDN<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Integrate a cloud service with Azure CDN<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Map Content Delivery Network (CDN) Content to a Custom Domain<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>How to Map Content Delivery Network (CDN) Content to a Custom Domain<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using CDN for Azure<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using CDN for Azure<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>