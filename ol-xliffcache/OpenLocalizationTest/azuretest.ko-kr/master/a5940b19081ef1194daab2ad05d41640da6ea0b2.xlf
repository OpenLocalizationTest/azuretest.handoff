<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 6:55:29 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5940b19081ef1194daab2ad05d41640da6ea0b2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Receive messages with Apache Storm</source>
            <target state="new">Receive messages with Apache Storm</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Apache Storm**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> is a distributed real time computation system that simplifies reliable processing of unbounded streams of data.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>**Apache Storm**<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> is a distributed real time computation system that simplifies reliable processing of unbounded streams of data.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>This section shows how to use an Event Hubs Storm spout to receive events from Event Hubs.</source>
            <target state="new">This section shows how to use an Event Hubs Storm spout to receive events from Event Hubs.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Using Apache Storm, you can split events across multiple processes hosted in different nodes.</source>
            <target state="new">Using Apache Storm, you can split events across multiple processes hosted in different nodes.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The Event Hubs integration with Storm simplifies event consumption by transparently checkpointing its progress using Storm's Zookeeper installation, managing persistent checkpoints and parallel receives from Event Hubs.</source>
            <target state="new">The Event Hubs integration with Storm simplifies event consumption by transparently checkpointing its progress using Storm's Zookeeper installation, managing persistent checkpoints and parallel receives from Event Hubs.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>For more information about Event Hubs receive patterns, see the [Event Hubs Overview].</source>
            <target state="new">For more information about Event Hubs receive patterns, see the [Event Hubs Overview].</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>This tutorial uses an [HDInsight Storm] installation, which comes with the Event Hubs spout already available.</source>
            <target state="new">This tutorial uses an [HDInsight Storm] installation, which comes with the Event Hubs spout already available.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>HDInsight Storm - Get Started<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> procedure to create a new HDInsight cluster, and connect to it via Remote Desktop.</source>
            <target state="new">Follow the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>HDInsight Storm - Get Started<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> procedure to create a new HDInsight cluster, and connect to it via Remote Desktop.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Copy the <bpt id="2">&lt;code&gt;</bpt>%STORM_HOME%\examples\eventhubspout\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="2">&lt;/code&gt;</ept> file to your local development environment.</source>
            <target state="new">Copy the <bpt id="2">&lt;code&gt;</bpt>%STORM_HOME%\examples\eventhubspout\eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="2">&lt;/code&gt;</ept> file to your local development environment.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>This contains the events-storm-spout.</source>
            <target state="new">This contains the events-storm-spout.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Use the following command to install the package into the local Maven store.</source>
            <target state="new">Use the following command to install the package into the local Maven store.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>This enables you to add it as a reference in the Storm project in a later step.</source>
            <target state="new">This enables you to add it as a reference in the Storm project in a later step.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In Eclipse, create a new Maven project (click <bpt id="2">&lt;strong&gt;</bpt>File<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>New<ept id="4">&lt;/strong&gt;</ept>, then <bpt id="6">&lt;strong&gt;</bpt>Project<ept id="6">&lt;/strong&gt;</ept>).</source>
            <target state="new">In Eclipse, create a new Maven project (click <bpt id="2">&lt;strong&gt;</bpt>File<ept id="2">&lt;/strong&gt;</ept>, then <bpt id="4">&lt;strong&gt;</bpt>New<ept id="4">&lt;/strong&gt;</ept>, then <bpt id="6">&lt;strong&gt;</bpt>Project<ept id="6">&lt;/strong&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Select <bpt id="2">&lt;strong&gt;</bpt>Use default Workspace location<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Next<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Select <bpt id="2">&lt;strong&gt;</bpt>Use default Workspace location<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Next<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Select the <bpt id="2">&lt;strong&gt;</bpt>maven-archetype-quickstart<ept id="2">&lt;/strong&gt;</ept> archetype, then click <bpt id="4">&lt;strong&gt;</bpt>Next<ept id="4">&lt;/strong&gt;</ept></source>
            <target state="new">Select the <bpt id="2">&lt;strong&gt;</bpt>maven-archetype-quickstart<ept id="2">&lt;/strong&gt;</ept> archetype, then click <bpt id="4">&lt;strong&gt;</bpt>Next<ept id="4">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Insert a <bpt id="2">&lt;strong&gt;</bpt>GroupId<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>ArtifactId<ept id="4">&lt;/strong&gt;</ept>, then click <bpt id="6">&lt;strong&gt;</bpt>Finish<ept id="6">&lt;/strong&gt;</ept></source>
            <target state="new">Insert a <bpt id="2">&lt;strong&gt;</bpt>GroupId<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>ArtifactId<ept id="4">&lt;/strong&gt;</ept>, then click <bpt id="6">&lt;strong&gt;</bpt>Finish<ept id="6">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>In <bpt id="2">&lt;strong&gt;</bpt>pom.xml<ept id="2">&lt;/strong&gt;</ept>, add the following dependencies in the <bpt id="4">&lt;code&gt;</bpt>&lt;dependency&gt;<ept id="4">&lt;/code&gt;</ept> node.</source>
            <target state="new">In <bpt id="2">&lt;strong&gt;</bpt>pom.xml<ept id="2">&lt;/strong&gt;</ept>, add the following dependencies in the <bpt id="4">&lt;code&gt;</bpt>&lt;dependency&gt;<ept id="4">&lt;/code&gt;</ept> node.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>src<ept id="2">&lt;/strong&gt;</ept> folder, create a file called <bpt id="4">&lt;strong&gt;</bpt>Config.properties<ept id="4">&lt;/strong&gt;</ept> and copy the following content, substituting the following values:</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>src<ept id="2">&lt;/strong&gt;</ept> folder, create a file called <bpt id="4">&lt;strong&gt;</bpt>Config.properties<ept id="4">&lt;/strong&gt;</ept> and copy the following content, substituting the following values:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The value for <bpt id="2">&lt;strong&gt;</bpt>eventhub.receiver.credits<ept id="2">&lt;/strong&gt;</ept> determines how many events are batched before releasing them to the Storm pipeline.</source>
            <target state="new">The value for <bpt id="2">&lt;strong&gt;</bpt>eventhub.receiver.credits<ept id="2">&lt;/strong&gt;</ept> determines how many events are batched before releasing them to the Storm pipeline.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>For the sake of simplicity, this example sets this value to 10.</source>
            <target state="new">For the sake of simplicity, this example sets this value to 10.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>In production, it should usually be set to higher values; for example, 1024.</source>
            <target state="new">In production, it should usually be set to higher values; for example, 1024.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Create a new class called <bpt id="2">&lt;strong&gt;</bpt>LoggerBolt<ept id="2">&lt;/strong&gt;</ept> with the following code:</source>
            <target state="new">Create a new class called <bpt id="2">&lt;strong&gt;</bpt>LoggerBolt<ept id="2">&lt;/strong&gt;</ept> with the following code:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>This Storm bolt logs the content of the received events.</source>
            <target state="new">This Storm bolt logs the content of the received events.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>This can easily be extended to store tuples in a storage service.</source>
            <target state="new">This can easily be extended to store tuples in a storage service.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The [HDInsight sensor analysis tutorial] uses this same approach to store data into HBase.</source>
            <target state="new">The [HDInsight sensor analysis tutorial] uses this same approach to store data into HBase.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Create a class called <bpt id="2">&lt;strong&gt;</bpt>LogTopology<ept id="2">&lt;/strong&gt;</ept> with the following code:</source>
            <target state="new">Create a class called <bpt id="2">&lt;strong&gt;</bpt>LogTopology<ept id="2">&lt;/strong&gt;</ept> with the following code:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>This class creates a new Event Hubs spout, using the properties in the configuration file to instatiate it.</source>
            <target state="new">This class creates a new Event Hubs spout, using the properties in the configuration file to instatiate it.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>It is important to note that this example creates as many spouts tasks as the number of partitions in the Event Hub, in order to use the maximum parallelism allowed by that Event Hub.</source>
            <target state="new">It is important to note that this example creates as many spouts tasks as the number of partitions in the Event Hub, in order to use the maximum parallelism allowed by that Event Hub.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>