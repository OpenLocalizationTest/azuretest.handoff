<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 3:41:03 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed086792f60d3aff19a66389454f3866a1ba1c1</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Working with Channels that Receive Multi-bitrate Live Stream from On-premises Encoders</source>
            <target state="new">Working with Channels that Receive Multi-bitrate Live Stream from On-premises Encoders</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>This topic describes how to set up a Channel that receives a multi-bitrate live stream from an on-premises encoder. The stream can then be delivered to client playback applications through one or more Streaming Endpoints, using one of the following adaptive streaming protocols: HLS, Smooth Stream, MPEG DASH, HDS.</source>
            <target state="new">This topic describes how to set up a Channel that receives a multi-bitrate live stream from an on-premises encoder. The stream can then be delivered to client playback applications through one or more Streaming Endpoints, using one of the following adaptive streaming protocols: HLS, Smooth Stream, MPEG DASH, HDS.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Working with Channels that Receive Multi-bitrate Live Stream from On-premises Encoders</source>
            <target state="new">Working with Channels that Receive Multi-bitrate Live Stream from On-premises Encoders</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>In Azure Media Services, a <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> represents a pipeline for processing live streaming content.</source>
            <target state="new">In Azure Media Services, a <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> represents a pipeline for processing live streaming content.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> receives live input streams in the following way:</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> receives live input streams in the following way:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>An on-premises live encoder sends multi-bitrate <bpt id="2">&lt;strong&gt;</bpt>RTMP<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>Smooth Streaming<ept id="4">&lt;/strong&gt;</ept> (Fragmented MP4) to the Channel.</source>
            <target state="new">An on-premises live encoder sends multi-bitrate <bpt id="2">&lt;strong&gt;</bpt>RTMP<ept id="2">&lt;/strong&gt;</ept> or <bpt id="4">&lt;strong&gt;</bpt>Smooth Streaming<ept id="4">&lt;/strong&gt;</ept> (Fragmented MP4) to the Channel.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>You can use the following live encoders that output multi-bitrate Smooth Streaming: Elemental, Envivio, Cisco.</source>
            <target state="new">You can use the following live encoders that output multi-bitrate Smooth Streaming: Elemental, Envivio, Cisco.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The following live encoders output RTMP: Adobe Flash Live, Telestream Wirecast, and Tricaster transcoders.</source>
            <target state="new">The following live encoders output RTMP: Adobe Flash Live, Telestream Wirecast, and Tricaster transcoders.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The ingested streams pass through <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> without any further processing.</source>
            <target state="new">The ingested streams pass through <bpt id="2">&lt;strong&gt;</bpt>Channel<ept id="2">&lt;/strong&gt;</ept> without any further processing.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Your live encoder can lso send a single bitrate stream, but that is not recommended.</source>
            <target state="new">Your live encoder can lso send a single bitrate stream, but that is not recommended.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>When requested, Media Services delivers the stream to customers.</source>
            <target state="new">When requested, Media Services delivers the stream to customers.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>The following diagram represents a live streaming workflow that uses an on-premises live encoder to output multi-bitrate RTMP or Fragmented MP4 (Smooth Streaming) streams.</source>
            <target state="new">The following diagram represents a live streaming workflow that uses an on-premises live encoder to output multi-bitrate RTMP or Fragmented MP4 (Smooth Streaming) streams.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Live workflow<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Live workflow<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>This topic covers the following:</source>
            <target state="new">This topic covers the following:</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Common live streaming scenario<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Common live streaming scenario<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Description of a Channel and its related components<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Description of a Channel and its related components<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Considerations<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Considerations<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tasks related to Live Streaming<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Tasks related to Live Streaming<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Common live streaming scenario</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Common live streaming scenario</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The following steps describe tasks involved in creating common live streaming applications.</source>
            <target state="new">The following steps describe tasks involved in creating common live streaming applications.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Connect a video camera to a computer.</source>
            <target state="new">Connect a video camera to a computer.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Launch and configure an on-premises live encoder that outputs a multi-bitrate RTMP or Fragmented MP4 (Smooth Streaming) stream.</source>
            <target state="new">Launch and configure an on-premises live encoder that outputs a multi-bitrate RTMP or Fragmented MP4 (Smooth Streaming) stream.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services RTMP Support and Live Encoders<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services RTMP Support and Live Encoders<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>This step could also be performed after you create your Channel.</source>
            <target state="new">This step could also be performed after you create your Channel.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Create and start a Channel.</source>
            <target state="new">Create and start a Channel.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Retrieve the Channel ingest URL.</source>
            <target state="new">Retrieve the Channel ingest URL.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The ingest URL is used by the live encoder to send the stream to the Channel.</source>
            <target state="new">The ingest URL is used by the live encoder to send the stream to the Channel.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Retrieve the Channel preview URL.</source>
            <target state="new">Retrieve the Channel preview URL.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Use this URL to verify that your channel is properly receiving the live stream.</source>
            <target state="new">Use this URL to verify that your channel is properly receiving the live stream.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Create a program.</source>
            <target state="new">Create a program.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>When using the Azure Management Portal, creating a program also creates an asset.</source>
            <target state="new">When using the Azure Management Portal, creating a program also creates an asset.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>When using .NET SDK or REST you need to create an asset and specify to use this asset when creating a Program.</source>
            <target state="new">When using .NET SDK or REST you need to create an asset and specify to use this asset when creating a Program.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Publish the asset associated with the program.</source>
            <target state="new">Publish the asset associated with the program.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Make sure to have at least one streaming reserved unit on the streaming endpoint from which you want to stream content.</source>
            <target state="new">Make sure to have at least one streaming reserved unit on the streaming endpoint from which you want to stream content.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Start the program when you are ready to start streaming and archiving.</source>
            <target state="new">Start the program when you are ready to start streaming and archiving.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Optionally, the live encoder can be signaled to start an advertisement.</source>
            <target state="new">Optionally, the live encoder can be signaled to start an advertisement.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The advertisement is inserted in the output stream.</source>
            <target state="new">The advertisement is inserted in the output stream.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Stop the program whenever you want to stop streaming and archiving the event.</source>
            <target state="new">Stop the program whenever you want to stop streaming and archiving the event.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Delete the Program (and optionally delete the asset).</source>
            <target state="new">Delete the Program (and optionally delete the asset).</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>live streaming tasks<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section links to topics that demonstrate how to achieve tasks described above.</source>
            <target state="new">The <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>live streaming tasks<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section links to topics that demonstrate how to achieve tasks described above.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Description of a Channel and its related components</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Description of a Channel and its related components</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Channel input (ingest) configurations</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Channel input (ingest) configurations</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ingest streaming protocol</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Ingest streaming protocol</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Media Services supports ingesting live feeds using the following streaming protocol:</source>
            <target state="new">Media Services supports ingesting live feeds using the following streaming protocol:</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Multi-bitrate Fragmented MP4<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Multi-bitrate Fragmented MP4<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Multi-bitrate RTMP<ept id="1">&lt;/strong&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Multi-bitrate RTMP<ept id="1">&lt;/strong&gt;</ept></target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>When the <bpt id="2">&lt;strong&gt;</bpt>RTMP<ept id="2">&lt;/strong&gt;</ept> ingest streaming protocol is selected, two ingest(input) endpoints are created for the channel:</source>
            <target state="new">When the <bpt id="2">&lt;strong&gt;</bpt>RTMP<ept id="2">&lt;/strong&gt;</ept> ingest streaming protocol is selected, two ingest(input) endpoints are created for the channel:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Primary URL<ept id="1">&lt;/strong&gt;</ept>: Specifies the fully qualified URL of the channel's primary RTMP ingest endpoint.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Primary URL<ept id="1">&lt;/strong&gt;</ept>: Specifies the fully qualified URL of the channel's primary RTMP ingest endpoint.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Secondary URL<ept id="1">&lt;/strong&gt;</ept> (optional): Specifies the fully qualified URL of the channel's secondary RTMP ingest endpoint.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Secondary URL<ept id="1">&lt;/strong&gt;</ept> (optional): Specifies the fully qualified URL of the channel's secondary RTMP ingest endpoint.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Use the secondary URL if you want to improve the durability and fault tolerance of your ingest stream as well as encoder failover and fault-tolerance, especially for the following scenarios.</source>
            <target state="new">Use the secondary URL if you want to improve the durability and fault tolerance of your ingest stream as well as encoder failover and fault-tolerance, especially for the following scenarios.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Single encoder double pushing to both Primary and Secondary URLs:</source>
            <target state="new">Single encoder double pushing to both Primary and Secondary URLs:</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Multiple encoders each encoder pushing to dedicated point:</source>
            <target state="new">Multiple encoders each encoder pushing to dedicated point:</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Multiple encoder double pushing to both primary and secondary URLs:</source>
            <target state="new">Multiple encoder double pushing to both primary and secondary URLs:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>For information about RTMP live encoders, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services RTMP Support and Live Encoders<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about RTMP live encoders, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services RTMP Support and Live Encoders<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The following considerations apply:</source>
            <target state="new">The following considerations apply:</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Make sure you have sufficient free Internet connectivity to send data to the ingest points.</source>
            <target state="new">Make sure you have sufficient free Internet connectivity to send data to the ingest points.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Using secondary ingest URL requires additional bandwidth.</source>
            <target state="new">Using secondary ingest URL requires additional bandwidth.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The incoming multi-bitrate stream can have a maximum of 10 video quality levels (aka layers), and a maximum of 5 audio tracks.</source>
            <target state="new">The incoming multi-bitrate stream can have a maximum of 10 video quality levels (aka layers), and a maximum of 5 audio tracks.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>The highest average bitrate for any of the video quality levels or layers should be below 10 Mbps.</source>
            <target state="new">The highest average bitrate for any of the video quality levels or layers should be below 10 Mbps.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The aggregate of the average bitrates for all the video and audio streams should be below 25 Mbps.</source>
            <target state="new">The aggregate of the average bitrates for all the video and audio streams should be below 25 Mbps.</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>You cannot change the input protocol while the Channel or its associated programs are running.</source>
            <target state="new">You cannot change the input protocol while the Channel or its associated programs are running.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>If you require different protocols, you should create separate channels for each input protocol.</source>
            <target state="new">If you require different protocols, you should create separate channels for each input protocol.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>You can ingest a single bitrate into your channel, but since the stream is not processed by the channel, the client applications will also receive a single bitrate stream (this option is not recommended).</source>
            <target state="new">You can ingest a single bitrate into your channel, but since the stream is not processed by the channel, the client applications will also receive a single bitrate stream (this option is not recommended).</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Ingest URLs (endpoints)</source>
            <target state="new">Ingest URLs (endpoints)</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>A Channel provides an input endpoint (ingest URL) that you specify in the live encoder, so the encoder can push streams to your channels.</source>
            <target state="new">A Channel provides an input endpoint (ingest URL) that you specify in the live encoder, so the encoder can push streams to your channels.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>You can get the ingest URLs when you create the channel.</source>
            <target state="new">You can get the ingest URLs when you create the channel.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>To get these URLs, the channel does not have to be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</source>
            <target state="new">To get these URLs, the channel does not have to be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>When you are ready to start pushing data into the channel, the channel must be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</source>
            <target state="new">When you are ready to start pushing data into the channel, the channel must be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>Once the channel starts ingesting data, you can preview your stream through the preview URL.</source>
            <target state="new">Once the channel starts ingesting data, you can preview your stream through the preview URL.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>You have an option of ingesting Fragmented MP4 (Smooth Streaming) live stream over an SSL connection.</source>
            <target state="new">You have an option of ingesting Fragmented MP4 (Smooth Streaming) live stream over an SSL connection.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>To ingest over SSL, make sure to update the ingest URL to HTTPS.</source>
            <target state="new">To ingest over SSL, make sure to update the ingest URL to HTTPS.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Currently, you cannot ingest RTMP over SSL.</source>
            <target state="new">Currently, you cannot ingest RTMP over SSL.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Keyframe interval</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Keyframe interval</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>When using an on-premises live encoder to generate multi-bitrate stream, the keyframe interval specifies GOP duration (as used by that external encoder).</source>
            <target state="new">When using an on-premises live encoder to generate multi-bitrate stream, the keyframe interval specifies GOP duration (as used by that external encoder).</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Once this incoming stream is received by the Channel, you can then deliver your live stream to client playback applications in any of the following formats: Smooth Streaming, DASH and HLS.</source>
            <target state="new">Once this incoming stream is received by the Channel, you can then deliver your live stream to client playback applications in any of the following formats: Smooth Streaming, DASH and HLS.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>When doing live streaming, HLS is always packaged dynamically.</source>
            <target state="new">When doing live streaming, HLS is always packaged dynamically.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>By default, Media Services automatically calculates HLS segment packaging ratio (fragments per segment) based on the keyframe interval, also referred to as Group of Pictures – GOP, that is received from the live encoder.</source>
            <target state="new">By default, Media Services automatically calculates HLS segment packaging ratio (fragments per segment) based on the keyframe interval, also referred to as Group of Pictures – GOP, that is received from the live encoder.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>The following table shows how the segment duration is being calculated:</source>
            <target state="new">The following table shows how the segment duration is being calculated:</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>Keyframe Interval</source>
            <target state="new">Keyframe Interval</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>HLS segment packaging ratio (FragmentsPerSegment)</source>
            <target state="new">HLS segment packaging ratio (FragmentsPerSegment)</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>less than or equal to 3 seconds</source>
            <target state="new">less than or equal to 3 seconds</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>3:1</source>
            <target state="new">3:1</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>If the KeyFrameInterval (or GOP) is 2 seconds long, the default HLS segment packaging ratio will be 3 to 1, which will create a 6 seconds HLS segment.</source>
            <target state="new">If the KeyFrameInterval (or GOP) is 2 seconds long, the default HLS segment packaging ratio will be 3 to 1, which will create a 6 seconds HLS segment.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>3 to 5  seconds</source>
            <target state="new">3 to 5  seconds</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>2:1</source>
            <target state="new">2:1</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>If the KeyFrameInterval (or GOP) is 4 seconds long, the default HLS segment packaging ratio will be 2 to 1, which will create a 8 seconds HLS segment.</source>
            <target state="new">If the KeyFrameInterval (or GOP) is 4 seconds long, the default HLS segment packaging ratio will be 2 to 1, which will create a 8 seconds HLS segment.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>greater than 5 seconds</source>
            <target state="new">greater than 5 seconds</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>1:1</source>
            <target state="new">1:1</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>If the KeyFrameInterval (or GOP) is 6 seconds long, the default HLS segment packaging ratio will be 1 to 1, which will create a 6 second long HLS segment.</source>
            <target state="new">If the KeyFrameInterval (or GOP) is 6 seconds long, the default HLS segment packaging ratio will be 1 to 1, which will create a 6 second long HLS segment.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>You can change the fragments per segment ratio by configuring channel’s output and setting FragmentsPerSegment on ChannelOutputHls.</source>
            <target state="new">You can change the fragments per segment ratio by configuring channel’s output and setting FragmentsPerSegment on ChannelOutputHls.</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>You can also change the keyframe interval value, by setting the KeyFrameInterval property on ChanneInput.</source>
            <target state="new">You can also change the keyframe interval value, by setting the KeyFrameInterval property on ChanneInput.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>If you explicitly set the KeyFrameInterval, the HLS segment packaging ratio FragmentsPerSegment is calculated using the rules described above.</source>
            <target state="new">If you explicitly set the KeyFrameInterval, the HLS segment packaging ratio FragmentsPerSegment is calculated using the rules described above.</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>If you explicitly set both KeyFrameInterval and FragmentsPerSegment, Media Services will use the values set by you.</source>
            <target state="new">If you explicitly set both KeyFrameInterval and FragmentsPerSegment, Media Services will use the values set by you.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>Allowed IP addresses</source>
            <target state="new">Allowed IP addresses</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>You can define the IP addresses that are allowed to publish video to this channel.</source>
            <target state="new">You can define the IP addresses that are allowed to publish video to this channel.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Allowed IP addresses can be specified as either a single IP address (e.g. ‘10.0.0.1’), an IP range using an IP address and a CIDR subnet mask (e.g. ‘10.0.0.1/22’), or an IP range using an IP address and a dotted decimal subnet mask (e.g. ‘10.0.0.1(255.255.252.0)’).</source>
            <target state="new">Allowed IP addresses can be specified as either a single IP address (e.g. ‘10.0.0.1’), an IP range using an IP address and a CIDR subnet mask (e.g. ‘10.0.0.1/22’), or an IP range using an IP address and a dotted decimal subnet mask (e.g. ‘10.0.0.1(255.255.252.0)’).</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>If no IP addresses are specified and there is no rule definition, then no IP address will be allowed.</source>
            <target state="new">If no IP addresses are specified and there is no rule definition, then no IP address will be allowed.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>To allow any IP address, create a rule and set 0.0.0.0/0.</source>
            <target state="new">To allow any IP address, create a rule and set 0.0.0.0/0.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>Channel preview</source>
            <target state="new">Channel preview</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Preview URLs</source>
            <target state="new">Preview URLs</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>Channels provide a preview endpoint (preview URL) that you use to preview and validate your stream before further processing and delivery.</source>
            <target state="new">Channels provide a preview endpoint (preview URL) that you use to preview and validate your stream before further processing and delivery.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>You can get the preview URL when you create the channel.</source>
            <target state="new">You can get the preview URL when you create the channel.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>To get the URL, the channel does not have to be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</source>
            <target state="new">To get the URL, the channel does not have to be in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>Once the Channel starts ingesting data, you can preview your stream.</source>
            <target state="new">Once the Channel starts ingesting data, you can preview your stream.</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>Note that currently the preview stream can only be delivered in Fragmented MP4 (Smooth Streaming) format regardless of the specified input type.</source>
            <target state="new">Note that currently the preview stream can only be delivered in Fragmented MP4 (Smooth Streaming) format regardless of the specified input type.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>You can use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://smf.cloudapp.net/healthmonitor<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> player to test the Smooth Stream.</source>
            <target state="new">You can use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>http://smf.cloudapp.net/healthmonitor<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> player to test the Smooth Stream.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>You can also use a player hosted in the Azure Management Portal to view your stream.</source>
            <target state="new">You can also use a player hosted in the Azure Management Portal to view your stream.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Allowed IP Addresses</source>
            <target state="new">Allowed IP Addresses</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>You can define the IP addresses that are allowed to connect to the preview endpoint.</source>
            <target state="new">You can define the IP addresses that are allowed to connect to the preview endpoint.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>If no IP addresses are specified any IP address will be allowed.</source>
            <target state="new">If no IP addresses are specified any IP address will be allowed.</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Allowed IP addresses can be specified as either a single IP address (e.g. ‘10.0.0.1’), an IP range using an IP address and a CIDR subnet mask (e.g. ‘10.0.0.1/22’), or an IP range using an IP address and a dotted decimal subnet mask (e.g. ‘10.0.0.1(255.255.252.0)’).</source>
            <target state="new">Allowed IP addresses can be specified as either a single IP address (e.g. ‘10.0.0.1’), an IP range using an IP address and a CIDR subnet mask (e.g. ‘10.0.0.1/22’), or an IP range using an IP address and a dotted decimal subnet mask (e.g. ‘10.0.0.1(255.255.252.0)’).</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>Channel output</source>
            <target state="new">Channel output</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>For more information see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>setting keyframe interval<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>setting keyframe interval<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>Channel's programs</source>
            <target state="new">Channel's programs</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>A channel is associated with programs that enable you to control the publishing and storage of segments in a live stream.</source>
            <target state="new">A channel is associated with programs that enable you to control the publishing and storage of segments in a live stream.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Channels manage Programs.</source>
            <target state="new">Channels manage Programs.</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>The Channel and Program relationship is very similar to traditional media where a channel has a constant stream of content and a program is scoped to some timed event on that channel.</source>
            <target state="new">The Channel and Program relationship is very similar to traditional media where a channel has a constant stream of content and a program is scoped to some timed event on that channel.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>You can specify the number of hours you want to retain the recorded content for the program by setting the <bpt id="2">&lt;strong&gt;</bpt>Archive Window<ept id="2">&lt;/strong&gt;</ept> length.</source>
            <target state="new">You can specify the number of hours you want to retain the recorded content for the program by setting the <bpt id="2">&lt;strong&gt;</bpt>Archive Window<ept id="2">&lt;/strong&gt;</ept> length.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>This value can be set from a minimum of 5 minutes to a maximum of 25 hours.</source>
            <target state="new">This value can be set from a minimum of 5 minutes to a maximum of 25 hours.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>Archive window length also dictates the maximum amount of time clients can seek back in time from the current live position.</source>
            <target state="new">Archive window length also dictates the maximum amount of time clients can seek back in time from the current live position.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>Programs can run over the specified amount of time, but content that falls behind the window length is continuously discarded.</source>
            <target state="new">Programs can run over the specified amount of time, but content that falls behind the window length is continuously discarded.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>This value of this property also determines how long the client manifests can grow.</source>
            <target state="new">This value of this property also determines how long the client manifests can grow.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>Each program is associated with an Asset which stores the streamed content.</source>
            <target state="new">Each program is associated with an Asset which stores the streamed content.</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>An asset is mapped to a blob container in the Azure Storage account and the files in the asset are stored as blobs in that container.</source>
            <target state="new">An asset is mapped to a blob container in the Azure Storage account and the files in the asset are stored as blobs in that container.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>To publish the program so your customers can view the stream you must create an OnDemand locator for the associated asset.</source>
            <target state="new">To publish the program so your customers can view the stream you must create an OnDemand locator for the associated asset.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>Having this locator will enable you to build a streaming URL that you can provide to your clients.</source>
            <target state="new">Having this locator will enable you to build a streaming URL that you can provide to your clients.</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>A channel supports up to three concurrently running programs so you can create multiple archives of the same incoming stream.</source>
            <target state="new">A channel supports up to three concurrently running programs so you can create multiple archives of the same incoming stream.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>This allows you to publish and archive different parts of an event as needed.</source>
            <target state="new">This allows you to publish and archive different parts of an event as needed.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>For example, your business requirement is to archive 6 hours of a program, but to broadcast only last 10 minutes.</source>
            <target state="new">For example, your business requirement is to archive 6 hours of a program, but to broadcast only last 10 minutes.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>To accomplish this, you need to create two concurrently running programs.</source>
            <target state="new">To accomplish this, you need to create two concurrently running programs.</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>One program is set to archive 6 hours of the event but the program is not published.</source>
            <target state="new">One program is set to archive 6 hours of the event but the program is not published.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>The other program is set to archive for 10 minutes and this program is published.</source>
            <target state="new">The other program is set to archive for 10 minutes and this program is published.</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>You should not reuse existing programs for new events.</source>
            <target state="new">You should not reuse existing programs for new events.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>Instead, create and start a new program for each event as described in the Programming Live Streaming Applications section.</source>
            <target state="new">Instead, create and start a new program for each event as described in the Programming Live Streaming Applications section.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Start the program when you are ready to start streaming and archiving.</source>
            <target state="new">Start the program when you are ready to start streaming and archiving.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Stop the program whenever you want to stop streaming and archiving the event.</source>
            <target state="new">Stop the program whenever you want to stop streaming and archiving the event.</target>
          </trans-unit>
          <trans-unit id="239" xml:space="preserve">
            <source>To delete archived content, stop and delete the program and then delete the associated asset.</source>
            <target state="new">To delete archived content, stop and delete the program and then delete the associated asset.</target>
          </trans-unit>
          <trans-unit id="240" xml:space="preserve">
            <source>An asset cannot be deleted if it is used by a program; the program must be deleted first.</source>
            <target state="new">An asset cannot be deleted if it is used by a program; the program must be deleted first.</target>
          </trans-unit>
          <trans-unit id="241" xml:space="preserve">
            <source>Even after you stop and delete the program, the users would be able to stream your archived content as a video on demand, for as long as you do not delete the asset.</source>
            <target state="new">Even after you stop and delete the program, the users would be able to stream your archived content as a video on demand, for as long as you do not delete the asset.</target>
          </trans-unit>
          <trans-unit id="242" xml:space="preserve">
            <source>If you do want to retain the archived content, but not have it available for streaming, delete the streaming locator.</source>
            <target state="new">If you do want to retain the archived content, but not have it available for streaming, delete the streaming locator.</target>
          </trans-unit>
          <trans-unit id="243" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Channel states and how states map to the billing mode</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Channel states and how states map to the billing mode</target>
          </trans-unit>
          <trans-unit id="244" xml:space="preserve">
            <source>The current state of a Channel.</source>
            <target state="new">The current state of a Channel.</target>
          </trans-unit>
          <trans-unit id="245" xml:space="preserve">
            <source>Possible values include:</source>
            <target state="new">Possible values include:</target>
          </trans-unit>
          <trans-unit id="246" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Stopped<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Stopped<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="247" xml:space="preserve">
            <source>This is the initial state of the Channel after its creation.</source>
            <target state="new">This is the initial state of the Channel after its creation.</target>
          </trans-unit>
          <trans-unit id="248" xml:space="preserve">
            <source>In this state, the Channel properties can be updated but streaming is not allowed.</source>
            <target state="new">In this state, the Channel properties can be updated but streaming is not allowed.</target>
          </trans-unit>
          <trans-unit id="249" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Starting<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Starting<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="250" xml:space="preserve">
            <source>The Channel is being started.</source>
            <target state="new">The Channel is being started.</target>
          </trans-unit>
          <trans-unit id="251" xml:space="preserve">
            <source>No updates or streaming is allowed during this state.</source>
            <target state="new">No updates or streaming is allowed during this state.</target>
          </trans-unit>
          <trans-unit id="252" xml:space="preserve">
            <source>If an error occurs, the Channel returns to the Stopped state.</source>
            <target state="new">If an error occurs, the Channel returns to the Stopped state.</target>
          </trans-unit>
          <trans-unit id="253" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Running<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Running<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="254" xml:space="preserve">
            <source>The Channel is capable of processing live streams.</source>
            <target state="new">The Channel is capable of processing live streams.</target>
          </trans-unit>
          <trans-unit id="255" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Stopping<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Stopping<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="256" xml:space="preserve">
            <source>The Channel is being stopped.</source>
            <target state="new">The Channel is being stopped.</target>
          </trans-unit>
          <trans-unit id="257" xml:space="preserve">
            <source>No updates or streaming is allowed during this state.</source>
            <target state="new">No updates or streaming is allowed during this state.</target>
          </trans-unit>
          <trans-unit id="258" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Deleting<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Deleting<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="259" xml:space="preserve">
            <source>The Channel is being deleted.</source>
            <target state="new">The Channel is being deleted.</target>
          </trans-unit>
          <trans-unit id="260" xml:space="preserve">
            <source>No updates or streaming is allowed during this state.</source>
            <target state="new">No updates or streaming is allowed during this state.</target>
          </trans-unit>
          <trans-unit id="261" xml:space="preserve">
            <source>The following table shows how Channel states map to the billing mode.</source>
            <target state="new">The following table shows how Channel states map to the billing mode.</target>
          </trans-unit>
          <trans-unit id="262" xml:space="preserve">
            <source>Channel state</source>
            <target state="new">Channel state</target>
          </trans-unit>
          <trans-unit id="263" xml:space="preserve">
            <source>Portal UI Indicators</source>
            <target state="new">Portal UI Indicators</target>
          </trans-unit>
          <trans-unit id="264" xml:space="preserve">
            <source>Billed?</source>
            <target state="new">Billed?</target>
          </trans-unit>
          <trans-unit id="265" xml:space="preserve">
            <source>Starting</source>
            <target state="new">Starting</target>
          </trans-unit>
          <trans-unit id="266" xml:space="preserve">
            <source>Starting</source>
            <target state="new">Starting</target>
          </trans-unit>
          <trans-unit id="267" xml:space="preserve">
            <source>No (transient state)</source>
            <target state="new">No (transient state)</target>
          </trans-unit>
          <trans-unit id="268" xml:space="preserve">
            <source>Running</source>
            <target state="new">Running</target>
          </trans-unit>
          <trans-unit id="269" xml:space="preserve">
            <source>Ready (no running programs)<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>or<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>Streaming (at least one running program)</source>
            <target state="new">Ready (no running programs)<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>or<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept>Streaming (at least one running program)</target>
          </trans-unit>
          <trans-unit id="270" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="271" xml:space="preserve">
            <source>Stopping</source>
            <target state="new">Stopping</target>
          </trans-unit>
          <trans-unit id="272" xml:space="preserve">
            <source>Stopping</source>
            <target state="new">Stopping</target>
          </trans-unit>
          <trans-unit id="273" xml:space="preserve">
            <source>No (transient state)</source>
            <target state="new">No (transient state)</target>
          </trans-unit>
          <trans-unit id="274" xml:space="preserve">
            <source>Stopped</source>
            <target state="new">Stopped</target>
          </trans-unit>
          <trans-unit id="275" xml:space="preserve">
            <source>Stopped</source>
            <target state="new">Stopped</target>
          </trans-unit>
          <trans-unit id="276" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="277" xml:space="preserve">
            <source>Closed Captioning and Ad Insertion</source>
            <target state="new">Closed Captioning and Ad Insertion</target>
          </trans-unit>
          <trans-unit id="278" xml:space="preserve">
            <source>The following table demonstrates supported closed captioning and ad insertion standards.</source>
            <target state="new">The following table demonstrates supported closed captioning and ad insertion standards.</target>
          </trans-unit>
          <trans-unit id="279" xml:space="preserve">
            <source>Standard</source>
            <target state="new">Standard</target>
          </trans-unit>
          <trans-unit id="280" xml:space="preserve">
            <source>Notes</source>
            <target state="new">Notes</target>
          </trans-unit>
          <trans-unit id="281" xml:space="preserve">
            <source>CEA-708 and EIA-608 (708/608)</source>
            <target state="new">CEA-708 and EIA-608 (708/608)</target>
          </trans-unit>
          <trans-unit id="282" xml:space="preserve">
            <source>CEA-708 and EIA-608 are closed captioning standards for the United States and Canada.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Currently, captioning is only supported if carried in the encoded input stream. You need to use a live media encoder that can insert 608 or 708 captions into the encoded stream which is sent to Media Services. Media Services will deliver the content with inserted captions to your viewers.</source>
            <target state="new">CEA-708 and EIA-608 are closed captioning standards for the United States and Canada.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Currently, captioning is only supported if carried in the encoded input stream. You need to use a live media encoder that can insert 608 or 708 captions into the encoded stream which is sent to Media Services. Media Services will deliver the content with inserted captions to your viewers.</target>
          </trans-unit>
          <trans-unit id="283" xml:space="preserve">
            <source>TTML inside ismt (Smooth Streaming Text Tracks)</source>
            <target state="new">TTML inside ismt (Smooth Streaming Text Tracks)</target>
          </trans-unit>
          <trans-unit id="284" xml:space="preserve">
            <source>Media Services dynamic packaging enables your clients to stream content in any of the following formats: MPEG DASH, HLS or Smooth Streaming.</source>
            <target state="new">Media Services dynamic packaging enables your clients to stream content in any of the following formats: MPEG DASH, HLS or Smooth Streaming.</target>
          </trans-unit>
          <trans-unit id="285" xml:space="preserve">
            <source>However, if you ingest fragmented MP4 (Smooth Streaming) with captions inside .ismt (Smooth Streaming text tracks), you would only be able to deliver the stream to Smooth Streaming clients.</source>
            <target state="new">However, if you ingest fragmented MP4 (Smooth Streaming) with captions inside .ismt (Smooth Streaming text tracks), you would only be able to deliver the stream to Smooth Streaming clients.</target>
          </trans-unit>
          <trans-unit id="286" xml:space="preserve">
            <source>SCTE-35</source>
            <target state="new">SCTE-35</target>
          </trans-unit>
          <trans-unit id="287" xml:space="preserve">
            <source>Digital signaling system used to cue advertising insertion. Downstream receivers use the signal to splice advertising into the stream for the allotted time. SCTE-35 must be sent as a sparse track in the input stream.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Note that currently, the only supported input stream format that carries ad signals is fragmented MP4 (Smooth Streaming). The only supported output format is also Smooth Streaming.</source>
            <target state="new">Digital signaling system used to cue advertising insertion. Downstream receivers use the signal to splice advertising into the stream for the allotted time. SCTE-35 must be sent as a sparse track in the input stream.<bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept><bpt id="3">&lt;html&gt;</bpt><ept id="3">&lt;/html&gt;</ept>Note that currently, the only supported input stream format that carries ad signals is fragmented MP4 (Smooth Streaming). The only supported output format is also Smooth Streaming.</target>
          </trans-unit>
          <trans-unit id="288" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Considerations</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Considerations</target>
          </trans-unit>
          <trans-unit id="289" xml:space="preserve">
            <source>When using an on-premises live encoder to send a multi-bitrate stream into a Channel, the following constraints apply:</source>
            <target state="new">When using an on-premises live encoder to send a multi-bitrate stream into a Channel, the following constraints apply:</target>
          </trans-unit>
          <trans-unit id="290" xml:space="preserve">
            <source>Make sure you have sufficient free internet connectivity to send data to the ingest points.</source>
            <target state="new">Make sure you have sufficient free internet connectivity to send data to the ingest points.</target>
          </trans-unit>
          <trans-unit id="291" xml:space="preserve">
            <source>The incoming multi-bitrate stream can have a maximum of 10 video quality levels (10 layers), and maximum of 5 audio tracks.</source>
            <target state="new">The incoming multi-bitrate stream can have a maximum of 10 video quality levels (10 layers), and maximum of 5 audio tracks.</target>
          </trans-unit>
          <trans-unit id="292" xml:space="preserve">
            <source>The highest average bitrate for any of the video quality levels or layers should be below 10 Mbps</source>
            <target state="new">The highest average bitrate for any of the video quality levels or layers should be below 10 Mbps</target>
          </trans-unit>
          <trans-unit id="293" xml:space="preserve">
            <source>The aggregate of the average bitrates for all the video and audio streams should be below 25 Mbps</source>
            <target state="new">The aggregate of the average bitrates for all the video and audio streams should be below 25 Mbps</target>
          </trans-unit>
          <trans-unit id="294" xml:space="preserve">
            <source>You cannot change the input protocol while the Channel or its associated programs are running.</source>
            <target state="new">You cannot change the input protocol while the Channel or its associated programs are running.</target>
          </trans-unit>
          <trans-unit id="295" xml:space="preserve">
            <source>If you require different protocols, you should create separate channels for each input protocol.</source>
            <target state="new">If you require different protocols, you should create separate channels for each input protocol.</target>
          </trans-unit>
          <trans-unit id="296" xml:space="preserve">
            <source>Other considerations related to working with channels and related components:</source>
            <target state="new">Other considerations related to working with channels and related components:</target>
          </trans-unit>
          <trans-unit id="297" xml:space="preserve">
            <source>Every time you reconfigure the live encoder, call the <bpt id="2">&lt;strong&gt;</bpt>Reset<ept id="2">&lt;/strong&gt;</ept> method on the channel.</source>
            <target state="new">Every time you reconfigure the live encoder, call the <bpt id="2">&lt;strong&gt;</bpt>Reset<ept id="2">&lt;/strong&gt;</ept> method on the channel.</target>
          </trans-unit>
          <trans-unit id="298" xml:space="preserve">
            <source>Before you reset the channel, you have to stop the program.</source>
            <target state="new">Before you reset the channel, you have to stop the program.</target>
          </trans-unit>
          <trans-unit id="299" xml:space="preserve">
            <source>After you reset the channel, restart the program.</source>
            <target state="new">After you reset the channel, restart the program.</target>
          </trans-unit>
          <trans-unit id="300" xml:space="preserve">
            <source>A channel can be stopped only when it is in the Running state, and all programs on the channel have been stopped.</source>
            <target state="new">A channel can be stopped only when it is in the Running state, and all programs on the channel have been stopped.</target>
          </trans-unit>
          <trans-unit id="301" xml:space="preserve">
            <source>By default you can only add 5 channels to your Media Services account.</source>
            <target state="new">By default you can only add 5 channels to your Media Services account.</target>
          </trans-unit>
          <trans-unit id="302" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Quotas and Limitations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Quotas and Limitations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="303" xml:space="preserve">
            <source>You cannot change the input protocol while the Channel or its associated programs are running.</source>
            <target state="new">You cannot change the input protocol while the Channel or its associated programs are running.</target>
          </trans-unit>
          <trans-unit id="304" xml:space="preserve">
            <source>If you require different protocols, you should create separate channels for each input protocol.</source>
            <target state="new">If you require different protocols, you should create separate channels for each input protocol.</target>
          </trans-unit>
          <trans-unit id="305" xml:space="preserve">
            <source>You are only billed when your Channel is in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</source>
            <target state="new">You are only billed when your Channel is in the <bpt id="2">&lt;strong&gt;</bpt>Running<ept id="2">&lt;/strong&gt;</ept> state.</target>
          </trans-unit>
          <trans-unit id="306" xml:space="preserve">
            <source>For more information, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>this<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information, refer to <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>this<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="307" xml:space="preserve">
            <source>How to create channels that receive multi-bitrate live stream from on-premises encoders</source>
            <target state="new">How to create channels that receive multi-bitrate live stream from on-premises encoders</target>
          </trans-unit>
          <trans-unit id="308" xml:space="preserve">
            <source>For more information about on-premises live encoders, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using 3rd Party Live Encoders with Azure Media Services<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about on-premises live encoders, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Using 3rd Party Live Encoders with Azure Media Services<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="309" xml:space="preserve">
            <source>Choose <bpt id="2">&lt;strong&gt;</bpt>Portal<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>.NET<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>REST API<ept id="6">&lt;/strong&gt;</ept> to see how to create and manage channels and programs.</source>
            <target state="new">Choose <bpt id="2">&lt;strong&gt;</bpt>Portal<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>.NET<ept id="4">&lt;/strong&gt;</ept>, <bpt id="6">&lt;strong&gt;</bpt>REST API<ept id="6">&lt;/strong&gt;</ept> to see how to create and manage channels and programs.</target>
          </trans-unit>
          <trans-unit id="310" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/media-services-selector-manage-channels.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/media-services-selector-manage-channels.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="311" xml:space="preserve">
            <source>Related topics</source>
            <target state="new">Related topics</target>
          </trans-unit>
          <trans-unit id="312" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services Fragmented MP4 Live Ingest Specification<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Azure Media Services Fragmented MP4 Live Ingest Specification<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="313" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Delivering Live Streaming Events with Azure Media Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Delivering Live Streaming Events with Azure Media Services<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="314" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Media Services Concepts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Media Services Concepts<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>