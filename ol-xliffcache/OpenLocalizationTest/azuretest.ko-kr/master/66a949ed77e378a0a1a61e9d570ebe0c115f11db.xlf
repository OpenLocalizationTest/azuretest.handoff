<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 5:18:01 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66a949ed77e378a0a1a61e9d570ebe0c115f11db</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use table storage from PHP | Microsoft Azure</source>
            <target state="new">How to use table storage from PHP | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the Table service from PHP to create and delete a table, and insert, delete, and query the table.</source>
            <target state="new">Learn how to use the Table service from PHP to create and delete a table, and insert, delete, and query the table.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use table storage from PHP</source>
            <target state="new">How to use table storage from PHP</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-selector-table-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-selector-table-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>This guide shows you how to perform common scenarios using the Azure Table service.</source>
            <target state="new">This guide shows you how to perform common scenarios using the Azure Table service.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The samples are written in PHP and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK for PHP[download]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">The samples are written in PHP and use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure SDK for PHP[download]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>creating and deleting a table, and inserting, deleting, and querying entities in a table<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The scenarios covered include <bpt id="2">&lt;strong&gt;</bpt>creating and deleting a table, and inserting, deleting, and querying entities in a table<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For more information on the Azure Table service, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information on the Azure Table service, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-table-concepts-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-table-concepts-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/storage-create-account-include.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Create a PHP application</source>
            <target state="new">Create a PHP application</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>The only requirement for creating a PHP application that accesses the Azure Table service is the referencing of classes in the Azure SDK for PHP from within your code.</source>
            <target state="new">The only requirement for creating a PHP application that accesses the Azure Table service is the referencing of classes in the Azure SDK for PHP from within your code.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>You can use any development tools to create your application, including Notepad.</source>
            <target state="new">You can use any development tools to create your application, including Notepad.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>In this guide, you use Table service features which can be called from within a PHP application locally, or in code running within an Azure web role, worker role, or website.</source>
            <target state="new">In this guide, you use Table service features which can be called from within a PHP application locally, or in code running within an Azure web role, worker role, or website.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Get the Azure Client Libraries</source>
            <target state="new">Get the Azure Client Libraries</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/get-client-libraries.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/get-client-libraries.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Configure your application to access the Table service</source>
            <target state="new">Configure your application to access the Table service</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>To use the Azure Table service APIs, you need to:</source>
            <target state="new">To use the Azure Table service APIs, you need to:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Reference the autoloader file using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>require_once[require_once]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> statement, and</source>
            <target state="new">Reference the autoloader file using the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>require_once[require_once]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> statement, and</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Reference any classes you might use.</source>
            <target state="new">Reference any classes you might use.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>The following example shows how to include the autoloader file and reference the <bpt id="2">&lt;strong&gt;</bpt>ServicesBuilder<ept id="2">&lt;/strong&gt;</ept> class.</source>
            <target state="new">The following example shows how to include the autoloader file and reference the <bpt id="2">&lt;strong&gt;</bpt>ServicesBuilder<ept id="2">&lt;/strong&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>This example (and other examples in this article) assume you have installed the PHP Client Libraries for Azure via Composer.</source>
            <target state="new">This example (and other examples in this article) assume you have installed the PHP Client Libraries for Azure via Composer.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>If you installed the libraries manually or as a PEAR package, you need to reference the <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>WindowsAzure.php<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> autoloader file.</source>
            <target state="new">If you installed the libraries manually or as a PEAR package, you need to reference the <bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>WindowsAzure.php<bpt id="4">&lt;html&gt;</bpt><ept id="4">&lt;/html&gt;</ept> autoloader file.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>In the examples below, the <bpt id="2">&lt;code&gt;</bpt>require_once<ept id="2">&lt;/code&gt;</ept> statement is always shown, but only the classes necessary for the example to execute are referenced.</source>
            <target state="new">In the examples below, the <bpt id="2">&lt;code&gt;</bpt>require_once<ept id="2">&lt;/code&gt;</ept> statement is always shown, but only the classes necessary for the example to execute are referenced.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Set up an Azure storage connection</source>
            <target state="new">Set up an Azure storage connection</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>To instantiate an Azure Table service client, you must first have a valid connection string.</source>
            <target state="new">To instantiate an Azure Table service client, you must first have a valid connection string.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>The format for the Table service connection string is:</source>
            <target state="new">The format for the Table service connection string is:</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>For accessing a live service:</source>
            <target state="new">For accessing a live service:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>For accessing the emulator storage:</source>
            <target state="new">For accessing the emulator storage:</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>To create any Azure service client, you need to use the <bpt id="2">&lt;strong&gt;</bpt>ServicesBuilder<ept id="2">&lt;/strong&gt;</ept> class.</source>
            <target state="new">To create any Azure service client, you need to use the <bpt id="2">&lt;strong&gt;</bpt>ServicesBuilder<ept id="2">&lt;/strong&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>You can:</source>
            <target state="new">You can:</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>pass the connection string directly to it or</source>
            <target state="new">pass the connection string directly to it or</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>use the <bpt id="2">&lt;strong&gt;</bpt>CloudConfigurationManager (CCM)<ept id="2">&lt;/strong&gt;</ept> to check multiple external sources for the connection string:</source>
            <target state="new">use the <bpt id="2">&lt;strong&gt;</bpt>CloudConfigurationManager (CCM)<ept id="2">&lt;/strong&gt;</ept> to check multiple external sources for the connection string:</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>by default, it comes with support for one external source - environmental variables</source>
            <target state="new">by default, it comes with support for one external source - environmental variables</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>you can add new sources by extending the <bpt id="2">&lt;strong&gt;</bpt>ConnectionStringSource<ept id="2">&lt;/strong&gt;</ept> class</source>
            <target state="new">you can add new sources by extending the <bpt id="2">&lt;strong&gt;</bpt>ConnectionStringSource<ept id="2">&lt;/strong&gt;</ept> class</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>For the examples outlined here, the connection string will be passed directly.</source>
            <target state="new">For the examples outlined here, the connection string will be passed directly.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Create a table</source>
            <target state="new">Create a table</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>A <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy<ept id="2">&lt;/strong&gt;</ept> object lets you create a table with the <bpt id="4">&lt;strong&gt;</bpt>createTable<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">A <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy<ept id="2">&lt;/strong&gt;</ept> object lets you create a table with the <bpt id="4">&lt;strong&gt;</bpt>createTable<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>When creating a table, you can set the Table service timeout.</source>
            <target state="new">When creating a table, you can set the Table service timeout.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>(For more information about the Table service timeout, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Setting timeouts for Table service operations[table-service-timeouts]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.)</source>
            <target state="new">(For more information about the Table service timeout, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Setting timeouts for Table service operations[table-service-timeouts]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.)</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>For information about restrictions on table names, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Understanding the Table service data model[table-data-model]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about restrictions on table names, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Understanding the Table service data model[table-data-model]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Add an entity to a table</source>
            <target state="new">Add an entity to a table</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>To add an entity to a table, create a new <bpt id="2">&lt;strong&gt;</bpt>Entity<ept id="2">&lt;/strong&gt;</ept> object and pass it to <bpt id="4">&lt;strong&gt;</bpt>TableRestProxy-&gt;insertEntity<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">To add an entity to a table, create a new <bpt id="2">&lt;strong&gt;</bpt>Entity<ept id="2">&lt;/strong&gt;</ept> object and pass it to <bpt id="4">&lt;strong&gt;</bpt>TableRestProxy-&gt;insertEntity<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Note that when you create an entity, you must specify a <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">Note that when you create an entity, you must specify a <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>These are the unique identifiers for an entity and are values that can be queried much faster than other entity properties.</source>
            <target state="new">These are the unique identifiers for an entity and are values that can be queried much faster than other entity properties.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>The system uses <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> to automatically distribute the table’s entities over many storage nodes.</source>
            <target state="new">The system uses <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> to automatically distribute the table’s entities over many storage nodes.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Entities with the same <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> are stored on the same node.</source>
            <target state="new">Entities with the same <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> are stored on the same node.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>(Operations on multiple entities stored on the same node perform better than on entities stored across different nodes.)</source>
            <target state="new">(Operations on multiple entities stored on the same node perform better than on entities stored across different nodes.)</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>RowKey<ept id="2">&lt;/code&gt;</ept> is the unique ID of an entity within a partition.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>RowKey<ept id="2">&lt;/code&gt;</ept> is the unique ID of an entity within a partition.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For information about Table properties and types, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Understanding the Table service data model[table-data-model]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about Table properties and types, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Understanding the Table service data model[table-data-model]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy<ept id="2">&lt;/strong&gt;</ept> class offers two alternative methods for inserting entities: <bpt id="4">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>insertOrReplaceEntity<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy<ept id="2">&lt;/strong&gt;</ept> class offers two alternative methods for inserting entities: <bpt id="4">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="4">&lt;/strong&gt;</ept> and <bpt id="6">&lt;strong&gt;</bpt>insertOrReplaceEntity<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>To use these methods, create a new <bpt id="2">&lt;strong&gt;</bpt>Entity<ept id="2">&lt;/strong&gt;</ept> and pass it as a parameter to either method.</source>
            <target state="new">To use these methods, create a new <bpt id="2">&lt;strong&gt;</bpt>Entity<ept id="2">&lt;/strong&gt;</ept> and pass it as a parameter to either method.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Each method will insert the entity if it does not exist.</source>
            <target state="new">Each method will insert the entity if it does not exist.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>If the entity already exists, <bpt id="2">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="2">&lt;/strong&gt;</ept> updates property values if the properties already exist and adds new properties if they do not exist, while <bpt id="4">&lt;strong&gt;</bpt>insertOrReplaceEntity<ept id="4">&lt;/strong&gt;</ept> completely replaces an existing entity.</source>
            <target state="new">If the entity already exists, <bpt id="2">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="2">&lt;/strong&gt;</ept> updates property values if the properties already exist and adds new properties if they do not exist, while <bpt id="4">&lt;strong&gt;</bpt>insertOrReplaceEntity<ept id="4">&lt;/strong&gt;</ept> completely replaces an existing entity.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>The following example shows how to use <bpt id="2">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The following example shows how to use <bpt id="2">&lt;strong&gt;</bpt>insertOrMergeEntity<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>If the entity with <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> "tasksSeattle" and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept> "1" does not already exist, it will be inserted.</source>
            <target state="new">If the entity with <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> "tasksSeattle" and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept> "1" does not already exist, it will be inserted.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>However, if it has previously been inserted (as shown in the example above), the <bpt id="2">&lt;code&gt;</bpt>DueDate<ept id="2">&lt;/code&gt;</ept> property will be updated, and the <bpt id="4">&lt;code&gt;</bpt>Status<ept id="4">&lt;/code&gt;</ept> property will be added.</source>
            <target state="new">However, if it has previously been inserted (as shown in the example above), the <bpt id="2">&lt;code&gt;</bpt>DueDate<ept id="2">&lt;/code&gt;</ept> property will be updated, and the <bpt id="4">&lt;code&gt;</bpt>Status<ept id="4">&lt;/code&gt;</ept> property will be added.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>Description<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>Location<ept id="4">&lt;/code&gt;</ept> properties are also updated, but with values that effectively leave them unchanged.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>Description<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>Location<ept id="4">&lt;/code&gt;</ept> properties are also updated, but with values that effectively leave them unchanged.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>If these latter two properties were not added as shown in the example, but existed on the target entity, their existing values would remain unchanged.</source>
            <target state="new">If these latter two properties were not added as shown in the example, but existed on the target entity, their existing values would remain unchanged.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Retrieve a single entity</source>
            <target state="new">Retrieve a single entity</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;getEntity<ept id="2">&lt;/strong&gt;</ept> method allows you to retrieve a single entity by querying for its <bpt id="4">&lt;code&gt;</bpt>PartitionKey<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>RowKey<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;getEntity<ept id="2">&lt;/strong&gt;</ept> method allows you to retrieve a single entity by querying for its <bpt id="4">&lt;code&gt;</bpt>PartitionKey<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>RowKey<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>In the example below, the partition key <bpt id="2">&lt;code&gt;</bpt>tasksSeattle<ept id="2">&lt;/code&gt;</ept> and row key <bpt id="4">&lt;code&gt;</bpt>1<ept id="4">&lt;/code&gt;</ept> are passed to the <bpt id="6">&lt;strong&gt;</bpt>getEntity<ept id="6">&lt;/strong&gt;</ept> method.</source>
            <target state="new">In the example below, the partition key <bpt id="2">&lt;code&gt;</bpt>tasksSeattle<ept id="2">&lt;/code&gt;</ept> and row key <bpt id="4">&lt;code&gt;</bpt>1<ept id="4">&lt;/code&gt;</ept> are passed to the <bpt id="6">&lt;strong&gt;</bpt>getEntity<ept id="6">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>Retrieve all entities in a partition</source>
            <target state="new">Retrieve all entities in a partition</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Entity queries are constructed using filters (for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Querying Tables and Entities[filters]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>).</source>
            <target state="new">Entity queries are constructed using filters (for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Querying Tables and Entities[filters]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>To retrieve all entities in partition, use the filter "PartitionKey eq <bpt id="2">&lt;em&gt;</bpt>partition_name<ept id="2">&lt;/em&gt;</ept>".</source>
            <target state="new">To retrieve all entities in partition, use the filter "PartitionKey eq <bpt id="2">&lt;em&gt;</bpt>partition_name<ept id="2">&lt;/em&gt;</ept>".</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>The following example shows how to retrieve all entities in the <bpt id="2">&lt;code&gt;</bpt>tasksSeattle<ept id="2">&lt;/code&gt;</ept> partition by passing a filter to the <bpt id="4">&lt;strong&gt;</bpt>queryEntities<ept id="4">&lt;/strong&gt;</ept> method.</source>
            <target state="new">The following example shows how to retrieve all entities in the <bpt id="2">&lt;code&gt;</bpt>tasksSeattle<ept id="2">&lt;/code&gt;</ept> partition by passing a filter to the <bpt id="4">&lt;strong&gt;</bpt>queryEntities<ept id="4">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Retrieve a subset of entities in a partition</source>
            <target state="new">Retrieve a subset of entities in a partition</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>The same pattern used in the previous example can be used to retrieve any subset of entities in a partition.</source>
            <target state="new">The same pattern used in the previous example can be used to retrieve any subset of entities in a partition.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The subset of entities you retrieve are determined by the filter you use (for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Querying tables and entities[filters]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>).The following example shows how to use a filter to retrieve all entities with a specific <bpt id="4">&lt;code&gt;</bpt>Location<ept id="4">&lt;/code&gt;</ept> and a <bpt id="6">&lt;code&gt;</bpt>DueDate<ept id="6">&lt;/code&gt;</ept> less than a specified date.</source>
            <target state="new">The subset of entities you retrieve are determined by the filter you use (for more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Querying tables and entities[filters]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>).The following example shows how to use a filter to retrieve all entities with a specific <bpt id="4">&lt;code&gt;</bpt>Location<ept id="4">&lt;/code&gt;</ept> and a <bpt id="6">&lt;code&gt;</bpt>DueDate<ept id="6">&lt;/code&gt;</ept> less than a specified date.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>Retrieve a subset of entity properties</source>
            <target state="new">Retrieve a subset of entity properties</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>A query can retrieve a subset of entity properties.</source>
            <target state="new">A query can retrieve a subset of entity properties.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>This technique, called <bpt id="2">&lt;em&gt;</bpt>projection<ept id="2">&lt;/em&gt;</ept>, reduces bandwidth and can improve query performance, especially for large entities.</source>
            <target state="new">This technique, called <bpt id="2">&lt;em&gt;</bpt>projection<ept id="2">&lt;/em&gt;</ept>, reduces bandwidth and can improve query performance, especially for large entities.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>To specify a property to be retrieved, pass the name of the property to the <bpt id="2">&lt;strong&gt;</bpt>Query-&gt;addSelectField<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">To specify a property to be retrieved, pass the name of the property to the <bpt id="2">&lt;strong&gt;</bpt>Query-&gt;addSelectField<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>You can call this method multiple times to add more properties.</source>
            <target state="new">You can call this method multiple times to add more properties.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>After executing <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;queryEntities<ept id="2">&lt;/strong&gt;</ept>, the returned entities will only have the selected properties.</source>
            <target state="new">After executing <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;queryEntities<ept id="2">&lt;/strong&gt;</ept>, the returned entities will only have the selected properties.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>(If you want to return a subset of Table entities, use a filter as shown in the queries above.)</source>
            <target state="new">(If you want to return a subset of Table entities, use a filter as shown in the queries above.)</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Update an entity</source>
            <target state="new">Update an entity</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>An existing entity can be updated by using the <bpt id="2">&lt;strong&gt;</bpt>Entity-&gt;setProperty<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Entity-&gt;addProperty<ept id="4">&lt;/strong&gt;</ept> methods on the entity, and then calling <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;updateEntity<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">An existing entity can be updated by using the <bpt id="2">&lt;strong&gt;</bpt>Entity-&gt;setProperty<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Entity-&gt;addProperty<ept id="4">&lt;/strong&gt;</ept> methods on the entity, and then calling <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;updateEntity<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>The following example retrieves an entity, modifies one property, removes another property, and adds a new property.</source>
            <target state="new">The following example retrieves an entity, modifies one property, removes another property, and adds a new property.</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Note that you can remove a property by setting its value to <bpt id="2">&lt;strong&gt;</bpt>null<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Note that you can remove a property by setting its value to <bpt id="2">&lt;strong&gt;</bpt>null<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Delete an entity</source>
            <target state="new">Delete an entity</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>To delete an entity, pass the table name, and the entity's <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept> to the <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;deleteEntity<ept id="6">&lt;/strong&gt;</ept> method.</source>
            <target state="new">To delete an entity, pass the table name, and the entity's <bpt id="2">&lt;code&gt;</bpt>PartitionKey<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>RowKey<ept id="4">&lt;/code&gt;</ept> to the <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;deleteEntity<ept id="6">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Note that for concurrency checks, you can set the Etag for an entity to be deleted by using the <bpt id="2">&lt;strong&gt;</bpt>DeleteEntityOptions-&gt;setEtag<ept id="2">&lt;/strong&gt;</ept> method and passing the <bpt id="4">&lt;strong&gt;</bpt>DeleteEntityOptions<ept id="4">&lt;/strong&gt;</ept> object to <bpt id="6">&lt;strong&gt;</bpt>deleteEntity<ept id="6">&lt;/strong&gt;</ept> as a fourth parameter.</source>
            <target state="new">Note that for concurrency checks, you can set the Etag for an entity to be deleted by using the <bpt id="2">&lt;strong&gt;</bpt>DeleteEntityOptions-&gt;setEtag<ept id="2">&lt;/strong&gt;</ept> method and passing the <bpt id="4">&lt;strong&gt;</bpt>DeleteEntityOptions<ept id="4">&lt;/strong&gt;</ept> object to <bpt id="6">&lt;strong&gt;</bpt>deleteEntity<ept id="6">&lt;/strong&gt;</ept> as a fourth parameter.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Batch table operations</source>
            <target state="new">Batch table operations</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;batch<ept id="2">&lt;/strong&gt;</ept> method allows you to execute multiple operations in a single request.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;batch<ept id="2">&lt;/strong&gt;</ept> method allows you to execute multiple operations in a single request.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The pattern here involves adding operations to <bpt id="2">&lt;strong&gt;</bpt>BatchRequest<ept id="2">&lt;/strong&gt;</ept> object and then passing the <bpt id="4">&lt;strong&gt;</bpt>BatchRequest<ept id="4">&lt;/strong&gt;</ept> object to the <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;batch<ept id="6">&lt;/strong&gt;</ept> method.</source>
            <target state="new">The pattern here involves adding operations to <bpt id="2">&lt;strong&gt;</bpt>BatchRequest<ept id="2">&lt;/strong&gt;</ept> object and then passing the <bpt id="4">&lt;strong&gt;</bpt>BatchRequest<ept id="4">&lt;/strong&gt;</ept> object to the <bpt id="6">&lt;strong&gt;</bpt>TableRestProxy-&gt;batch<ept id="6">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>To add an operation to a <bpt id="2">&lt;strong&gt;</bpt>BatchRequest<ept id="2">&lt;/strong&gt;</ept> object, you can call any of the following methods multiple times:</source>
            <target state="new">To add an operation to a <bpt id="2">&lt;strong&gt;</bpt>BatchRequest<ept id="2">&lt;/strong&gt;</ept> object, you can call any of the following methods multiple times:</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addInsertEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addInsertEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertEntity operation)</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addUpdateEntity<ept id="1">&lt;/strong&gt;</ept> (adds an updateEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addUpdateEntity<ept id="1">&lt;/strong&gt;</ept> (adds an updateEntity operation)</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addMergeEntity<ept id="1">&lt;/strong&gt;</ept> (adds a mergeEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addMergeEntity<ept id="1">&lt;/strong&gt;</ept> (adds a mergeEntity operation)</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addInsertOrReplaceEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertOrReplaceEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addInsertOrReplaceEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertOrReplaceEntity operation)</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addInsertOrMergeEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertOrMergeEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addInsertOrMergeEntity<ept id="1">&lt;/strong&gt;</ept> (adds an insertOrMergeEntity operation)</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>addDeleteEntity<ept id="1">&lt;/strong&gt;</ept> (adds a deleteEntity operation)</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>addDeleteEntity<ept id="1">&lt;/strong&gt;</ept> (adds a deleteEntity operation)</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source>The following example shows how to execute <bpt id="2">&lt;strong&gt;</bpt>insertEntity<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>deleteEntity<ept id="4">&lt;/strong&gt;</ept> operations in a single request:</source>
            <target state="new">The following example shows how to execute <bpt id="2">&lt;strong&gt;</bpt>insertEntity<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>deleteEntity<ept id="4">&lt;/strong&gt;</ept> operations in a single request:</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>For more information about batching Table operations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Performing entity group transactions[entity-group-transactions]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about batching Table operations, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Performing entity group transactions[entity-group-transactions]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Delete a table</source>
            <target state="new">Delete a table</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>Finally, to delete a table, pass the table name to the <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;deleteTable<ept id="2">&lt;/strong&gt;</ept> method.</source>
            <target state="new">Finally, to delete a table, pass the table name to the <bpt id="2">&lt;strong&gt;</bpt>TableRestProxy-&gt;deleteTable<ept id="2">&lt;/strong&gt;</ept> method.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>Now that you’ve learned the basics of the Azure Table service, follow these links to learn about more complex storage tasks.</source>
            <target state="new">Now that you’ve learned the basics of the Azure Table service, follow these links to learn about more complex storage tasks.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">See the MSDN Reference: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage team blog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">Visit the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Storage team blog<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>