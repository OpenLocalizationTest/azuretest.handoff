<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 3:43:01 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38997d5a856c586a027672f97b315d424f3c2de3</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Use PlayReady DRM Dynamic Encryption and License Delivery Service</source>
            <target state="new">Use PlayReady DRM Dynamic Encryption and License Delivery Service</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with Microsoft PlayReady DRM. This topic shows how to dynamically encrypt with PlayReady DRM and use the key delivery service.</source>
            <target state="new">Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with Microsoft PlayReady DRM. This topic shows how to dynamically encrypt with PlayReady DRM and use the key delivery service.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Use PlayReady DRM Dynamic Encryption and License Delivery Service</source>
            <target state="new">Use PlayReady DRM Dynamic Encryption and License Delivery Service</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft PlayReady DRM<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Microsoft PlayReady DRM<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Media Services now provides a service for delivering Microsoft PlayReady licenses.</source>
            <target state="new">Media Services now provides a service for delivering Microsoft PlayReady licenses.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Media Services also provides APIs that let you configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</source>
            <target state="new">Media Services also provides APIs that let you configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>When a user requests to watch PlayReady protected content, the client player application requests the content from Azure Media Services.</source>
            <target state="new">When a user requests to watch PlayReady protected content, the client player application requests the content from Azure Media Services.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Azure Media Services then redirects the client to an Azure Media Services PlayReady licensing server that authenticates and authorizes the user’s access to the content.</source>
            <target state="new">Azure Media Services then redirects the client to an Azure Media Services PlayReady licensing server that authenticates and authorizes the user’s access to the content.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>A PlayReady license contains the decryption key that can be used by the client player to decrypt and stream the content.</source>
            <target state="new">A PlayReady license contains the decryption key that can be used by the client player to decrypt and stream the content.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
            <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</source>
            <target state="new">The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</source>
            <target state="new">The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Media Services supports tokens in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Simple Web Tokens<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (SWT) format and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>JSON Web Token<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> (JWT) format.</source>
            <target state="new">Media Services supports tokens in the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Simple Web Tokens<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> (SWT) format and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>JSON Web Token<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> (JWT) format.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>For more information, see Configure the content key’s authorization policy.</source>
            <target state="new">For more information, see Configure the content key’s authorization policy.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To take advantage of dynamic encryption, you need to have an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</source>
            <target state="new">To take advantage of dynamic encryption, you need to have an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>You also need to configure the delivery policy for the asset (described later in this topic).</source>
            <target state="new">You also need to configure the delivery policy for the asset (described later in this topic).</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Then, based on the format specified in the streaming URL, the On-Demand Streaming server will ensure that the stream is delivered in the protocol you have chosen.</source>
            <target state="new">Then, based on the format specified in the streaming URL, the On-Demand Streaming server will ensure that the stream is delivered in the protocol you have chosen.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</source>
            <target state="new">As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>This topic would be useful to developers that work on applications that deliver protected media.</source>
            <target state="new">This topic would be useful to developers that work on applications that deliver protected media.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>The topic shows you how to configure the PlayReady license delivery service with authorization policies so that only authorized clients could receive PlayReady licenses.</source>
            <target state="new">The topic shows you how to configure the PlayReady license delivery service with authorization policies so that only authorized clients could receive PlayReady licenses.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>It also shows how to use dynamic encryption.</source>
            <target state="new">It also shows how to use dynamic encryption.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>To start using dynamic encryption, you must first get at least one scale unit (also known as streaming unit).</source>
            <target state="new">To start using dynamic encryption, you must first get at least one scale unit (also known as streaming unit).</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Scale a Media Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>How to Scale a Media Service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>PlayReady Dynamic Encryption and PlayReady License Delivery Service Workflow</source>
            <target state="new">PlayReady Dynamic Encryption and PlayReady License Delivery Service Workflow</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The following are general steps that you would need to perform when protecting your assets with PlayReady, using the Media Services license delivery service, and also using dynamic encryption.</source>
            <target state="new">The following are general steps that you would need to perform when protecting your assets with PlayReady, using the Media Services license delivery service, and also using dynamic encryption.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Create an asset and upload files into the asset.</source>
            <target state="new">Create an asset and upload files into the asset.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Encode the asset containing the file to the adaptive bitrate MP4 set.</source>
            <target state="new">Encode the asset containing the file to the adaptive bitrate MP4 set.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Create a content key and associate it with the encoded asset.</source>
            <target state="new">Create a content key and associate it with the encoded asset.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>In Media Services, the content key contains the asset’s encryption key.</source>
            <target state="new">In Media Services, the content key contains the asset’s encryption key.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>For more information, see ContentKey.</source>
            <target state="new">For more information, see ContentKey.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Configure the content key’s authorization policy.</source>
            <target state="new">Configure the content key’s authorization policy.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>The content key authorization policy must be configured by you and met by the client in order for the content key to be delivered to the client.</source>
            <target state="new">The content key authorization policy must be configured by you and met by the client in order for the content key to be delivered to the client.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Configure the delivery policy for an asset.</source>
            <target state="new">Configure the delivery policy for an asset.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The delivery policy configuration includes: delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all), the type of dynamic encryption (for example, common encryption), PlayReady license acquisition URL.</source>
            <target state="new">The delivery policy configuration includes: delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all), the type of dynamic encryption (for example, common encryption), PlayReady license acquisition URL.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You could apply different policy to each protocol on the same asset.</source>
            <target state="new">You could apply different policy to each protocol on the same asset.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>For example, you could apply PlayReady encryption to Smooth/DASH and AES Envelope to HLS.</source>
            <target state="new">For example, you could apply PlayReady encryption to Smooth/DASH and AES Envelope to HLS.</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>Any protocols that are not defined in a delivery policy (for example, you add a single policy that only specifies HLS as the protocol) will be blocked from streaming.</source>
            <target state="new">Any protocols that are not defined in a delivery policy (for example, you add a single policy that only specifies HLS as the protocol) will be blocked from streaming.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The exception to this is if you have no asset delivery policy defined at all.</source>
            <target state="new">The exception to this is if you have no asset delivery policy defined at all.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Then, all protocols will be allowed in the clear.</source>
            <target state="new">Then, all protocols will be allowed in the clear.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Create an OnDemand locator in order to get a streaming URL.</source>
            <target state="new">Create an OnDemand locator in order to get a streaming URL.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>You will find a complete .NET example at the end of the topic.</source>
            <target state="new">You will find a complete .NET example at the end of the topic.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The following image demonstrates the workflow described above.</source>
            <target state="new">The following image demonstrates the workflow described above.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Here the token is used for authentication.</source>
            <target state="new">Here the token is used for authentication.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Protect with PlayReady<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Protect with PlayReady<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The rest of this topic provides detailed explanations, code examples, and links to topics that show you how to achieve the tasks described above.</source>
            <target state="new">The rest of this topic provides detailed explanations, code examples, and links to topics that show you how to achieve the tasks described above.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Current limitations</source>
            <target state="new">Current limitations</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</source>
            <target state="new">If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Create an asset and upload files into the asset</source>
            <target state="new">Create an asset and upload files into the asset</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In order to manage, encode, and stream your videos, you must first upload your content into Microsoft Azure Media Services.</source>
            <target state="new">In order to manage, encode, and stream your videos, you must first upload your content into Microsoft Azure Media Services.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Once uploaded, your content is stored securely in the cloud for further processing and streaming.</source>
            <target state="new">Once uploaded, your content is stored securely in the cloud for further processing and streaming.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>The following code snippet shows how to create an asset and upload the specified file into the asset.</source>
            <target state="new">The following code snippet shows how to create an asset and upload the specified file into the asset.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Encode the asset containing the file to the adaptive bitrate MP4 set</source>
            <target state="new">Encode the asset containing the file to the adaptive bitrate MP4 set</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>With dynamic encryption all you need is to create an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</source>
            <target state="new">With dynamic encryption all you need is to create an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Then, based on the specified format in the manifest or fragment request, the On-Demand Streaming server will ensure that you receive the stream in the protocol you have chosen.</source>
            <target state="new">Then, based on the specified format in the manifest or fragment request, the On-Demand Streaming server will ensure that you receive the stream in the protocol you have chosen.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</source>
            <target state="new">As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Dynamic Packaging Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic.</source>
            <target state="new">For more information, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Dynamic Packaging Overview<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> topic.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>The following code snippet shows you how to encode an asset to adaptive bitrate MP4 set:</source>
            <target state="new">The following code snippet shows you how to encode an asset to adaptive bitrate MP4 set:</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create a content key and associate it with the encoded asset</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create a content key and associate it with the encoded asset</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>In Media Services, the content key contains the key that you want to encrypt an asset with.</source>
            <target state="new">In Media Services, the content key contains the key that you want to encrypt an asset with.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create content key<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Create content key<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure the content key’s authorization policy</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure the content key’s authorization policy</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
            <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>The content key authorization policy must be configured by you and met by the client (player) in order for the key to be delivered to the client.</source>
            <target state="new">The content key authorization policy must be configured by you and met by the client (player) in order for the key to be delivered to the client.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</source>
            <target state="new">The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure Content Key Authorization Policy<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure Content Key Authorization Policy<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure asset delivery policy</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Configure asset delivery policy</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Configure the delivery policy for your asset.</source>
            <target state="new">Configure the delivery policy for your asset.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>Some things that the asset delivery policy configuration includes:</source>
            <target state="new">Some things that the asset delivery policy configuration includes:</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>The PlayReady license acquisition URL.</source>
            <target state="new">The PlayReady license acquisition URL.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>The asset delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all).</source>
            <target state="new">The asset delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all).</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>The type of dynamic encryption (in this case, common encryption).</source>
            <target state="new">The type of dynamic encryption (in this case, common encryption).</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure asset delivery policy <ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For detailed information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Configure asset delivery policy <ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create an OnDemand streaming locator in order to get a streaming URL</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Create an OnDemand streaming locator in order to get a streaming URL</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>You will need to provide your user with the streaming URL for Smooth, DASH or HLS.</source>
            <target state="new">You will need to provide your user with the streaming URL for Smooth, DASH or HLS.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</source>
            <target state="new">If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>For instructions on how to publish an asset and build a streaming URL, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build a streaming URL<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For instructions on how to publish an asset and build a streaming URL, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build a streaming URL<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Get a test token</source>
            <target state="new">Get a test token</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Get a test token based on the token restriction that was used for the key authorization policy.</source>
            <target state="new">Get a test token based on the token restriction that was used for the key authorization policy.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>You can use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>AMS Player<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to test your stream.</source>
            <target state="new">You can use the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>AMS Player<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to test your stream.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Example</source>
            <target state="new"><bpt id="1">&lt;html&gt;</bpt><ept id="1">&lt;/html&gt;</ept><bpt id="2">&lt;html&gt;</bpt><ept id="2">&lt;/html&gt;</ept>Example</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>Create a new Console project.</source>
            <target state="new">Create a new Console project.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Use NuGet to install and add Azure Media Services .NET SDK Extensions.</source>
            <target state="new">Use NuGet to install and add Azure Media Services .NET SDK Extensions.</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Installing this package, also installs Media Services .NET SDK and adds all other required dependencies.</source>
            <target state="new">Installing this package, also installs Media Services .NET SDK and adds all other required dependencies.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Add config file that contains the account name and key information:</source>
            <target state="new">Add config file that contains the account name and key information:</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Overwrite the code in your Program.cs file with the code shown in this section.</source>
            <target state="new">Overwrite the code in your Program.cs file with the code shown in this section.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>Make sure to update variables to point to folders where your input files are located.</source>
            <target state="new">Make sure to update variables to point to folders where your input files are located.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>