<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 1:41:55 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">199ea507711866ac84e740313a2da75508f93c9e</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>BizTalk Flat File Encoder</source>
            <target state="new">BizTalk Flat File Encoder</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>BizTalk Flat File Encoder</source>
            <target state="new">BizTalk Flat File Encoder</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>BizTalk Flat File Encoder</source>
            <target state="new">BizTalk Flat File Encoder</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>BizTalk Flat File Encode Decode connector helps your app interop between flat file data (example excel, csv) and XML data.</source>
            <target state="new">BizTalk Flat File Encode Decode connector helps your app interop between flat file data (example excel, csv) and XML data.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>It can convert a given flat file instance to XML and vice versa.</source>
            <target state="new">It can convert a given flat file instance to XML and vice versa.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Using the BizTalk Flat File Encoder</source>
            <target state="new">Using the BizTalk Flat File Encoder</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>To use the BizTalk Flat File Encoder, you need to first create an instance of the BizTalk Flat File Encoder API app.</source>
            <target state="new">To use the BizTalk Flat File Encoder, you need to first create an instance of the BizTalk Flat File Encoder API app.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>This can be done either inline while creating a logic app or by selecting the BizTalk Flat File Encoder API app from the Azure Marketplace.</source>
            <target state="new">This can be done either inline while creating a logic app or by selecting the BizTalk Flat File Encoder API app from the Azure Marketplace.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Configure BizTalk Flat File Encoder</source>
            <target state="new">Configure BizTalk Flat File Encoder</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>BizTalk Flat File Encoder takes schemas as part of its configuration.</source>
            <target state="new">BizTalk Flat File Encoder takes schemas as part of its configuration.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Users can launch the API App configuration blade by either launching the API App directly from the Azure portal, or by double-clicking the API App on the designer surface.</source>
            <target state="new">Users can launch the API App configuration blade by either launching the API App directly from the Azure portal, or by double-clicking the API App on the designer surface.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Configuration<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Configuration<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In the API App blade, users can configure schemas by clicking on <bpt id="2">&lt;em&gt;</bpt>Schemas<ept id="2">&lt;/em&gt;</ept> part.</source>
            <target state="new">In the API App blade, users can configure schemas by clicking on <bpt id="2">&lt;em&gt;</bpt>Schemas<ept id="2">&lt;/em&gt;</ept> part.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Schemas Part<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Schemas Part<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Users can upload schemas from disk or generate one from a flat file instance or a JSON instance.</source>
            <target state="new">Users can upload schemas from disk or generate one from a flat file instance or a JSON instance.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Schemas Part<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder Schemas Part<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Using the BizTalk Flat File Encoder in design surface</source>
            <target state="new">Using the BizTalk Flat File Encoder in design surface</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Once configured, users can click on <bpt id="2">&lt;em&gt;</bpt>-&gt;<ept id="2">&lt;/em&gt;</ept> and choose an action from a list of actions.</source>
            <target state="new">Once configured, users can click on <bpt id="2">&lt;em&gt;</bpt>-&gt;<ept id="2">&lt;/em&gt;</ept> and choose an action from a list of actions.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Flat File to Xml</source>
            <target state="new">Flat File to Xml</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Description of the parameter</source>
            <target state="new">Description of the parameter</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Flat File</source>
            <target state="new">Flat File</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Content of the input flat file</source>
            <target state="new">Content of the input flat file</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Schema Name</source>
            <target state="new">Schema Name</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Name of the schema which represents the input flat file</source>
            <target state="new">Name of the schema which represents the input flat file</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Root Name</source>
            <target state="new">Root Name</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Root node name of the flat file schema</source>
            <target state="new">Root node name of the flat file schema</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The action returns the output as a string - Output Xml.</source>
            <target state="new">The action returns the output as a string - Output Xml.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Output Xml contains the xml representation of the input flat file content.</source>
            <target state="new">Output Xml contains the xml representation of the input flat file content.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Xml to Flat File</source>
            <target state="new">Xml to Flat File</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>BizTalk Flat File Encoder List of actions<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Description of the parameter</source>
            <target state="new">Description of the parameter</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Input Xml</source>
            <target state="new">Input Xml</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Input Xml content</source>
            <target state="new">Input Xml content</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The action returns the output as a string - Flat File.</source>
            <target state="new">The action returns the output as a string - Flat File.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Output contains the flat file representation of the input xml content.</source>
            <target state="new">Output contains the flat file representation of the input xml content.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>