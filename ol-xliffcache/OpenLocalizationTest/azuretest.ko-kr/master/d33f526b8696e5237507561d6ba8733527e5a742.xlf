<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 2:52:04 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d33f526b8696e5237507561d6ba8733527e5a742</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Hive Activity</source>
            <target state="new">Hive Activity</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how you can use the Hive Activity in an Azure data factory to run Hive queries on an on-demand/your own HDInsight cluster.</source>
            <target state="new">Learn how you can use the Hive Activity in an Azure data factory to run Hive queries on an on-demand/your own HDInsight cluster.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Hive Activity</source>
            <target state="new">Hive Activity</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The HDInsight Hive activity in a Data Factory <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>pipeline<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> executes Hive queries on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>your own<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> or <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>on-demand<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> HDInsight cluster.</source>
            <target state="new">The HDInsight Hive activity in a Data Factory <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>pipeline<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> executes Hive queries on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>your own<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> or <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>on-demand<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept> HDInsight cluster.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>This article builds on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>data transformation activities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article which presents a general overview of data transformation and the supported transformation activities.</source>
            <target state="new">This article builds on the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>data transformation activities<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article which presents a general overview of data transformation and the supported transformation activities.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Syntax details</source>
            <target state="new">Syntax details</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Property</source>
            <target state="new">Property</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>name</source>
            <target state="new">name</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Name of the activity</source>
            <target state="new">Name of the activity</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>description</source>
            <target state="new">description</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Text describing what the activity is used for</source>
            <target state="new">Text describing what the activity is used for</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>type</source>
            <target state="new">type</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>HDinsightHive</source>
            <target state="new">HDinsightHive</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>inputs</source>
            <target state="new">inputs</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Input(s) consumed by the Hive activity</source>
            <target state="new">Input(s) consumed by the Hive activity</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>outputs</source>
            <target state="new">outputs</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Output(s) produced by the Hive activity</source>
            <target state="new">Output(s) produced by the Hive activity</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>linkedServiceName</source>
            <target state="new">linkedServiceName</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Reference to the HDInsight cluster registered as a linked service in Data Factory</source>
            <target state="new">Reference to the HDInsight cluster registered as a linked service in Data Factory</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>script</source>
            <target state="new">script</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Specify the Hive script inline</source>
            <target state="new">Specify the Hive script inline</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>script path</source>
            <target state="new">script path</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Store the Hive script in an Azure blob storage and provide the path to the file.</source>
            <target state="new">Store the Hive script in an Azure blob storage and provide the path to the file.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Use 'script' or 'scriptPath' property.</source>
            <target state="new">Use 'script' or 'scriptPath' property.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>Both cannot be used together</source>
            <target state="new">Both cannot be used together</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>defines</source>
            <target state="new">defines</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Specify parameters as key/value pairs for referencing within the Hive script using 'hiveconf'</source>
            <target state="new">Specify parameters as key/value pairs for referencing within the Hive script using 'hiveconf'</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Let’s consider an example of game logs analytics where you want to identify the time spent by users playing games launched by your company.</source>
            <target state="new">Let’s consider an example of game logs analytics where you want to identify the time spent by users playing games launched by your company.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Below is a sample game log which is comma (,) separated and contains the following fields – ProfileID, SessionStart, Duration, SrcIPAddress, and GameType.</source>
            <target state="new">Below is a sample game log which is comma (,) separated and contains the following fields – ProfileID, SessionStart, Duration, SrcIPAddress, and GameType.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Hive script<ept id="2">&lt;/strong&gt;</ept> to process this data looks like this:</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Hive script<ept id="2">&lt;/strong&gt;</ept> to process this data looks like this:</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>To execute this Hive script in a Data Factory pipeline, you need to the do the following</source>
            <target state="new">To execute this Hive script in a Data Factory pipeline, you need to the do the following</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>Create a linked service to register <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>your own HDInsight compute cluster<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or configure <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>on-demand HDInsight compute cluster<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Create a linked service to register <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>your own HDInsight compute cluster<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or configure <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>on-demand HDInsight compute cluster<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Let’s call this linked service “HDInsightLinkedService”.</source>
            <target state="new">Let’s call this linked service “HDInsightLinkedService”.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Create a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>linked service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to configure the connection to Azure Blob storage hosting the data.</source>
            <target state="new">Create a <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>linked service<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> to configure the connection to Azure Blob storage hosting the data.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Let’s call this linked service “StorageLinkedService”</source>
            <target state="new">Let’s call this linked service “StorageLinkedService”</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Create <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>datasets<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> pointing to the input and the output data.</source>
            <target state="new">Create <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>datasets<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> pointing to the input and the output data.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Let’s call the input dataset “HiveSampleIn” and the output dataset “HiveSampleOut”</source>
            <target state="new">Let’s call the input dataset “HiveSampleIn” and the output dataset “HiveSampleOut”</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Copy the Hive query as a file to Azure Blob Storage configured in step #2 above.</source>
            <target state="new">Copy the Hive query as a file to Azure Blob Storage configured in step #2 above.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>if the linked service for hosting the data is different from the one hosting this query file, create a separate Azure Storage linked service and refer to it in the activity configuration.</source>
            <target state="new">if the linked service for hosting the data is different from the one hosting this query file, create a separate Azure Storage linked service and refer to it in the activity configuration.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Use <bpt id="2">&lt;strong&gt;</bpt>scriptPath **to specify the path to hive query file and **scriptLinkedService<ept id="2">&lt;/strong&gt;</ept> to specify the Azure storage that contains the script file.</source>
            <target state="new">Use <bpt id="2">&lt;strong&gt;</bpt>scriptPath **to specify the path to hive query file and **scriptLinkedService<ept id="2">&lt;/strong&gt;</ept> to specify the Azure storage that contains the script file.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>You can also provide the Hive script inline in the activity definition by using the <bpt id="2">&lt;strong&gt;</bpt>script<ept id="2">&lt;/strong&gt;</ept> property but this is not recommended as all special characters in the script within the JSON document needs to be escaped and may cause debugging issues.</source>
            <target state="new">You can also provide the Hive script inline in the activity definition by using the <bpt id="2">&lt;strong&gt;</bpt>script<ept id="2">&lt;/strong&gt;</ept> property but this is not recommended as all special characters in the script within the JSON document needs to be escaped and may cause debugging issues.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>The best practice is to follow step #4.</source>
            <target state="new">The best practice is to follow step #4.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>Create the below pipeline with the HDInsightHive activity to process the data.</source>
            <target state="new">Create the below pipeline with the HDInsightHive activity to process the data.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Deploy the pipeline.</source>
            <target state="new">Deploy the pipeline.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Creating pipelines<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Creating pipelines<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article for details.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>Monitor the pipeline using the data factory monitoring and management views.</source>
            <target state="new">Monitor the pipeline using the data factory monitoring and management views.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Monitoring and manage Data Factory pipelines<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article for details.</source>
            <target state="new">See <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Monitoring and manage Data Factory pipelines<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> article for details.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Specifying parameters for a Hive script using the defines element</source>
            <target state="new">Specifying parameters for a Hive script using the defines element</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Consider the example where the game logs are ingested daily into Azure Blob Storage and stored in a folder partitioned with date and time.</source>
            <target state="new">Consider the example where the game logs are ingested daily into Azure Blob Storage and stored in a folder partitioned with date and time.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>You want to parameterize the Hive script and pass the input folder location dynamically during runtime and also produce the output partitioned with date and time.</source>
            <target state="new">You want to parameterize the Hive script and pass the input folder location dynamically during runtime and also produce the output partitioned with date and time.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>To use parameterize Hive script, do the following</source>
            <target state="new">To use parameterize Hive script, do the following</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Define the parameters in <bpt id="2">&lt;strong&gt;</bpt>defines<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">Define the parameters in <bpt id="2">&lt;strong&gt;</bpt>defines<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>In the Hive Script, refer to the parameter using <bpt id="2">&lt;strong&gt;</bpt>${hiveconf:parameterName}<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the Hive Script, refer to the parameter using <bpt id="2">&lt;strong&gt;</bpt>${hiveconf:parameterName}<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Send Feedback</source>
            <target state="new">Send Feedback</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>We would really appreciate your feedback on this article.</source>
            <target state="new">We would really appreciate your feedback on this article.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>Please take a few minutes to submit your feedback via <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>email<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Please take a few minutes to submit your feedback via <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>email<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>