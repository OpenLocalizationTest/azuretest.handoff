<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ko-kr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connect a Mobile App to an enterprise SaaS | Microsoft Azure</source>
          <target state="new">Connect a Mobile App to an enterprise SaaS | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to make calls to enterprise resources such as SharePoint Online</source>
          <target state="new">Learn how to make calls to enterprise resources such as SharePoint Online</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Connect your mobile app to SaaS APIs</source>
          <target state="new">Connect your mobile app to SaaS APIs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will connect your mobile app to an enterprise software-as-a-service (SaaS) solution.</source>
          <target state="new">In this tutorial, you will connect your mobile app to an enterprise software-as-a-service (SaaS) solution.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You will update the app from the [Authenticate your app with Azure Active Directory Authentication Library Single Sign-On] to create a Microsoft Word document in SharePoint Online whenever a new TodoItem is added.</source>
          <target state="new">You will update the app from the [Authenticate your app with Azure Active Directory Authentication Library Single Sign-On] to create a Microsoft Word document in SharePoint Online whenever a new TodoItem is added.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 running on Windows 8.1</source>
          <target state="new">Visual Studio 2013 running on Windows 8.1</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An active <bpt id="p1">[</bpt><ept id="p1">SharePoint Online]</ept> subscription</source>
          <target state="new">An active <bpt id="p1">[</bpt><ept id="p1">SharePoint Online]</ept> subscription</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Completion of the <bpt id="p1">[</bpt><ept id="p1">Authenticate your app with Active Directory Authentication Library Single Sign-On]</ept> tutorial.</source>
          <target state="new">Completion of the <bpt id="p1">[</bpt><ept id="p1">Authenticate your app with Active Directory Authentication Library Single Sign-On]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You should use the tenant provided by your SharePoint subscription.</source>
          <target state="new">You should use the tenant provided by your SharePoint subscription.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Configure your application for delegated access to SharePoint</source>
          <target state="new">Configure your application for delegated access to SharePoint</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, the token you receive from AAD has limited permissions.</source>
          <target state="new">By default, the token you receive from AAD has limited permissions.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In order to access a third-party resource or SaaS application such as SharePoint Online, you must explicitly allow it.</source>
          <target state="new">In order to access a third-party resource or SaaS application such as SharePoint Online, you must explicitly allow it.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept> Section of the <bpt id="p2">[</bpt><ept id="p2">Azure Management Portal]</ept>, select your tenant.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept> Section of the <bpt id="p2">[</bpt><ept id="p2">Azure Management Portal]</ept>, select your tenant.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Navigate to the web application that you created for the App Service.</source>
          <target state="new">Navigate to the web application that you created for the App Service.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab, scroll the page down to the permissions to other applications section.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab, scroll the page down to the permissions to other applications section.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Office 365 SharePoint Online<ept id="p1">**</ept> and grant the <bpt id="p2">**</bpt>Edit or delete users' files<ept id="p2">**</ept> delegated permission.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Office 365 SharePoint Online<ept id="p1">**</ept> and grant the <bpt id="p2">**</bpt>Edit or delete users' files<ept id="p2">**</ept> delegated permission.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You have now configured Azure AD to issue a SharePoint access token to the App Service.</source>
          <target state="new">You have now configured Azure AD to issue a SharePoint access token to the App Service.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add SharePoint information to your Mobile App</source>
          <target state="new">Add SharePoint information to your Mobile App</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In order to make a call to SharePoint, you need to specify the endpoints that the mobile app needs to talk to.</source>
          <target state="new">In order to make a call to SharePoint, you need to specify the endpoints that the mobile app needs to talk to.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You also need to be able to prove the identity of your app service.</source>
          <target state="new">You also need to be able to prove the identity of your app service.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This is accomplished using a Client ID and Client Secret pair.</source>
          <target state="new">This is accomplished using a Client ID and Client Secret pair.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You have already obtained and stored the Client ID for the app service during the AAD login setup.</source>
          <target state="new">You have already obtained and stored the Client ID for the app service during the AAD login setup.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because these are sensitive credentials, you should'nt store them as plaintext in our code.</source>
          <target state="new">Because these are sensitive credentials, you should'nt store them as plaintext in our code.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Instead, you'll set these values as Application Settings for our Mobile App Code site.</source>
          <target state="new">Instead, you'll set these values as Application Settings for our Mobile App Code site.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Return to the AAD Applications tab for your tenant, and select the web application for your app service.</source>
          <target state="new">Return to the AAD Applications tab for your tenant, and select the web application for your app service.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Under Configure, scroll down to Keys.</source>
          <target state="new">Under Configure, scroll down to Keys.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You'll obtain a Client Secret by generating a new key.</source>
          <target state="new">You'll obtain a Client Secret by generating a new key.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note once you create a key and leave the page, there is no way to get it out of the portal again.</source>
          <target state="new">Note once you create a key and leave the page, there is no way to get it out of the portal again.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Upon creation you must copy and save this value in a secure location.</source>
          <target state="new">Upon creation you must copy and save this value in a secure location.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select a duration for your key, then click save, and copy out the resulting value.</source>
          <target state="new">Select a duration for your key, then click save, and copy out the resulting value.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the Mobile App Code section of the Management Portal, navigate to the Configure tab, and scroll down to App Settings.</source>
          <target state="new">In the Mobile App Code section of the Management Portal, navigate to the Configure tab, and scroll down to App Settings.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Here you can provide a key-value pair to help you reference the necessary credentials.</source>
          <target state="new">Here you can provide a key-value pair to help you reference the necessary credentials.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Set SP_Authority to be the authority endpoint for your AAD tenant.</source>
          <target state="new">Set SP_Authority to be the authority endpoint for your AAD tenant.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This should be the same as the authority value used for your client app.</source>
          <target state="new">This should be the same as the authority value used for your client app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It'll be of the form <ph id="ph1">`https://login.windows.net/contoso.onmicrosoft.com`</ph></source>
          <target state="new">It'll be of the form <ph id="ph1">`https://login.windows.net/contoso.onmicrosoft.com`</ph></target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Set SP_ClientSecret to be the client secret value you obtained earlier.</source>
          <target state="new">Set SP_ClientSecret to be the client secret value you obtained earlier.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Set SP_SharePointURL to be the URL for your SharePoint site.</source>
          <target state="new">Set SP_SharePointURL to be the URL for your SharePoint site.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It should be of the form <ph id="ph1">`https://contoso-my.sharepoint.com`</ph></source>
          <target state="new">It should be of the form <ph id="ph1">`https://contoso-my.sharepoint.com`</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You'll be able to obtain these values again in your code using ApiServices.Settings.</source>
          <target state="new">You'll be able to obtain these values again in your code using ApiServices.Settings.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Obtain an access token and call the SharePoint API</source>
          <target state="new">Obtain an access token and call the SharePoint API</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to access SharePoint, you need a special access token with SharePoint as the target audience.</source>
          <target state="new">In order to access SharePoint, you need a special access token with SharePoint as the target audience.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To get this token, you'll need to call back into Azure AD with the identity of the App Service and the token that was issued for the user.</source>
          <target state="new">To get this token, you'll need to call back into Azure AD with the identity of the App Service and the token that was issued for the user.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Open your Mobile App Code project in Visual Studio.</source>
          <target state="new">Open your Mobile App Code project in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the NuGet Package manager, click <bpt id="p1">**</bpt>Online<ept id="p1">**</ept>.</source>
          <target state="new">In the NuGet Package manager, click <bpt id="p1">**</bpt>Online<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>Microsoft.Azure.Mobile.Server.AppService<ept id="p1">**</ept> as a search term.</source>
          <target state="new">Enter <bpt id="p1">**</bpt>Microsoft.Azure.Mobile.Server.AppService<ept id="p1">**</ept> as a search term.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept> to install the <bpt id="p2">[</bpt><ept id="p2">Mobile Apps .NET Backend App Service Extension]</ept> package.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept> to install the <bpt id="p2">[</bpt><ept id="p2">Mobile Apps .NET Backend App Service Extension]</ept> package.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This package provides extension methods for working with information about the currently logged-in user.</source>
          <target state="new">This package provides extension methods for working with information about the currently logged-in user.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In your Mobile App Code project, create a new class called SharePointUploadContext.</source>
          <target state="new">In your Mobile App Code project, create a new class called SharePointUploadContext.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`using Microsoft.Azure.Mobile.Server.AppService;`</ph> statement to the file.</source>
          <target state="new">Add a <ph id="ph1">`using Microsoft.Azure.Mobile.Server.AppService;`</ph> statement to the file.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Then, add the following to the class:</source>
          <target state="new">Then, add the following to the class:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>private String accessToken;</source>
          <target state="new">private String accessToken;</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>private String mySiteApiPath;</source>
          <target state="new">private String mySiteApiPath;</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>private String clientId;</source>
          <target state="new">private String clientId;</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>private String clientSecret;</source>
          <target state="new">private String clientSecret;</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>private String sharepointURL;</source>
          <target state="new">private String sharepointURL;</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>private String authority;</source>
          <target state="new">private String authority;</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>private const string getFilesPath = "/getfolderbyserverrelativeurl('Documents')/Files";</source>
          <target state="new">private const string getFilesPath = "/getfolderbyserverrelativeurl('Documents')/Files";</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>public static async Task</source>
          <target state="new">public static async Task</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>createContext(ServiceUser user, ServiceSettingsDictionary settings)</source>
          <target state="new">createContext(ServiceUser user, ServiceSettingsDictionary settings)</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>//Get the current access token</source>
          <target state="new">//Get the current access token</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>AzureActiveDirectoryCredentials creds = (await user.GetIdentitiesAsync()).OfType</source>
          <target state="new">AzureActiveDirectoryCredentials creds = (await user.GetIdentitiesAsync()).OfType</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>().FirstOrDefault();</source>
          <target state="new">().FirstOrDefault();</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>string userToken = creds.AccessToken;</source>
          <target state="new">string userToken = creds.AccessToken;</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>return new SharePointUploadContext(userToken, settings);</source>
          <target state="new">return new SharePointUploadContext(userToken, settings);</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>private SharePointUploadContext(string userToken, ServiceSettingsDictionary settings)</source>
          <target state="new">private SharePointUploadContext(string userToken, ServiceSettingsDictionary settings)</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>//Call ADAL and request a token to SharePoint with the access token</source>
          <target state="new">//Call ADAL and request a token to SharePoint with the access token</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>AuthenticationContext ac = new AuthenticationContext(authority);</source>
          <target state="new">AuthenticationContext ac = new AuthenticationContext(authority);</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>AuthenticationResult ar = ac.AcquireToken(sharepointURL, new ClientCredential(clientId, clientSecret), new UserAssertion(userToken));</source>
          <target state="new">AuthenticationResult ar = ac.AcquireToken(sharepointURL, new ClientCredential(clientId, clientSecret), new UserAssertion(userToken));</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>accessToken = ar.AccessToken;</source>
          <target state="new">accessToken = ar.AccessToken;</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>string upn = ar.UserInfo.UserId;</source>
          <target state="new">string upn = ar.UserInfo.UserId;</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>mySiteApiPath = "/personal/" + upn.Replace('@','<bpt id="p1">_</bpt>').Replace('.','<ept id="p1">_</ept>') + "/_api/web";</source>
          <target state="new">mySiteApiPath = "/personal/" + upn.Replace('@','<bpt id="p1">_</bpt>').Replace('.','<ept id="p1">_</ept>') + "/_api/web";</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>clientId = settings.AzureActiveDirectoryClientId;</source>
          <target state="new">clientId = settings.AzureActiveDirectoryClientId;</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>clientSecret = settings["SP_ClientSecret"];</source>
          <target state="new">clientSecret = settings["SP_ClientSecret"];</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>sharepointURL = settings["SP_SharePointURL"];</source>
          <target state="new">sharepointURL = settings["SP_SharePointURL"];</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>authority = settings["SP_Authority"];</source>
          <target state="new">authority = settings["SP_Authority"];</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Now create a method to add the file to the user's document library:</source>
          <target state="new">Now create a method to add the file to the user's document library:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>public async Task</source>
          <target state="new">public async Task</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>UploadDocument(string docName, byte[] document)</source>
          <target state="new">UploadDocument(string docName, byte[] document)</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>string uploadUri = sharepointURL + mySiteApiPath + getFilesPath + string.Format(@"/Add(url='{0}.docx', overwrite=true)", docName);</source>
          <target state="new">string uploadUri = sharepointURL + mySiteApiPath + getFilesPath + string.Format(@"/Add(url='{0}.docx', overwrite=true)", docName);</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>using (HttpClient client = new HttpClient())</source>
          <target state="new">using (HttpClient client = new HttpClient())</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Func</source>
          <target state="new">Func</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>requestCreator = () =&gt;</source>
          <target state="new">requestCreator = () =&gt;</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>HttpRequestMessage UploadRequest = new HttpRequestMessage(HttpMethod.Post, uploadUri);</source>
          <target state="new">HttpRequestMessage UploadRequest = new HttpRequestMessage(HttpMethod.Post, uploadUri);</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>UploadRequest.Content = new System.Net.Http.ByteArrayContent(document);</source>
          <target state="new">UploadRequest.Content = new System.Net.Http.ByteArrayContent(document);</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>UploadRequest.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");</source>
          <target state="new">UploadRequest.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>UploadRequest.Content.Headers.ContentType.Parameters.Add(new NameValueHeaderValue("odata", "verbose"));</source>
          <target state="new">UploadRequest.Content.Headers.ContentType.Parameters.Add(new NameValueHeaderValue("odata", "verbose"));</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>return UploadRequest;</source>
          <target state="new">return UploadRequest;</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>};</source>
          <target state="new">};</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>using (HttpRequestMessage uploadRequest = requestCreator.Invoke())</source>
          <target state="new">using (HttpRequestMessage uploadRequest = requestCreator.Invoke())</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>uploadRequest.Headers.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);</source>
          <target state="new">uploadRequest.Headers.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>HttpResponseMessage uploadResponse = await client.SendAsync(uploadRequest);</source>
          <target state="new">HttpResponseMessage uploadResponse = await client.SendAsync(uploadRequest);</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>return true;</source>
          <target state="new">return true;</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Create and upload a Word document</source>
          <target state="new">Create and upload a Word document</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To create a Word document, you'll use the OpenXML NuGet package.</source>
          <target state="new">To create a Word document, you'll use the OpenXML NuGet package.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Install this package by opening the NuGet Manager and searching for DocumentFormat.OpenXml.</source>
          <target state="new">Install this package by opening the NuGet Manager and searching for DocumentFormat.OpenXml.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Add the following code to TodoItemController.</source>
          <target state="new">Add the following code to TodoItemController.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This creates a Word document based on a TodoItem.</source>
          <target state="new">This creates a Word document based on a TodoItem.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The text of the document will be the name of the item.</source>
          <target state="new">The text of the document will be the name of the item.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>private static byte[] CreateWordDocument(TodoItem todoItem)</source>
          <target state="new">private static byte[] CreateWordDocument(TodoItem todoItem)</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>byte[] document;</source>
          <target state="new">byte[] document;</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>using (MemoryStream generatedDocument = new MemoryStream())</source>
          <target state="new">using (MemoryStream generatedDocument = new MemoryStream())</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>using (WordprocessingDocument package = WordprocessingDocument.Create(generatedDocument, WordprocessingDocumentType.Document))</source>
          <target state="new">using (WordprocessingDocument package = WordprocessingDocument.Create(generatedDocument, WordprocessingDocumentType.Document))</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>MainDocumentPart mainPart = package.MainDocumentPart;</source>
          <target state="new">MainDocumentPart mainPart = package.MainDocumentPart;</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>if (mainPart == null)</source>
          <target state="new">if (mainPart == null)</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>mainPart = package.AddMainDocumentPart();</source>
          <target state="new">mainPart = package.AddMainDocumentPart();</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>new Document(new Body()).Save(mainPart);</source>
          <target state="new">new Document(new Body()).Save(mainPart);</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Body body = mainPart.Document.Body;</source>
          <target state="new">Body body = mainPart.Document.Body;</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Paragraph p =</source>
          <target state="new">Paragraph p =</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>new Paragraph(</source>
          <target state="new">new Paragraph(</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>new Run(</source>
          <target state="new">new Run(</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>new Text(todoItem.Text)));</source>
          <target state="new">new Text(todoItem.Text)));</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>body.Append(p);</source>
          <target state="new">body.Append(p);</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>mainPart.Document.Save();</source>
          <target state="new">mainPart.Document.Save();</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>document = generatedDocument.ToArray();</source>
          <target state="new">document = generatedDocument.ToArray();</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>return document;</source>
          <target state="new">return document;</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Replace PostTodoItem with the following:</source>
          <target state="new">Replace PostTodoItem with the following:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>public async Task</source>
          <target state="new">public async Task</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PostTodoItem(TodoItem item)</source>
          <target state="new">PostTodoItem(TodoItem item)</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>TodoItem current = await InsertAsync(item);</source>
          <target state="new">TodoItem current = await InsertAsync(item);</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>SharePointUploadContext context = await SharePointUploadContext.createContext((ServiceUser)this.User, Services.Settings);</source>
          <target state="new">SharePointUploadContext context = await SharePointUploadContext.createContext((ServiceUser)this.User, Services.Settings);</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>byte[] document = CreateWordDocument(item);</source>
          <target state="new">byte[] document = CreateWordDocument(item);</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>bool uploadResult = await context.UploadDocument(item.Id, document);</source>
          <target state="new">bool uploadResult = await context.UploadDocument(item.Id, document);</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>return CreatedAtRoute("Tables", new { id = current.Id }, current);</source>
          <target state="new">return CreatedAtRoute("Tables", new { id = current.Id }, current);</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Test the application</source>
          <target state="new">Test the application</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Publish the changes to the backend, and then run your client application.</source>
          <target state="new">Publish the changes to the backend, and then run your client application.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Log in when prompted, and insert a new TodoItem.</source>
          <target state="new">Log in when prompted, and insert a new TodoItem.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Navigate to your SharePoint site and log in with the same user.</source>
          <target state="new">Navigate to your SharePoint site and log in with the same user.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Select the OneDrive tab.</source>
          <target state="new">Select the OneDrive tab.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Under the Documents Folder, you should see a Word document with a GUID title.</source>
          <target state="new">Under the Documents Folder, you should see a Word document with a GUID title.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When you open it, you should find the text for your TodoItem.</source>
          <target state="new">When you open it, you should find the text for your TodoItem.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a77ab0bf402a07117e730cc50d595c58d7dc5e3b</xliffext:olfilehash>
  </header>
</xliff>