<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 3:52:20 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ba0acd5a0fd5fae20cc6a14a8f44784ffcfdbe2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Add Offline Data Sync to your Android Mobile Services app | Microsoft Azure</source>
            <target state="new">Add Offline Data Sync to your Android Mobile Services app | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use Azure Mobile Services to cache and sync offline data in your Android application</source>
            <target state="new">Learn how to use Azure Mobile Services to cache and sync offline data in your Android application</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Add Offline Data Sync to your Android Mobile Services app</source>
            <target state="new">Add Offline Data Sync to your Android Mobile Services app</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-selector-offline.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Summary</source>
            <target state="new">Summary</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Mobile apps can lose network connectivity when moving to an area without service, or due to network issues.</source>
            <target state="new">Mobile apps can lose network connectivity when moving to an area without service, or due to network issues.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>For example, a construction industry app used at a remote construction site might need to enter scheduling data that is synced up to Azure later.</source>
            <target state="new">For example, a construction industry app used at a remote construction site might need to enter scheduling data that is synced up to Azure later.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>With Azure Mobile Services offline sync, you can keep working when network connectivity is lost, which is essential to many mobile apps.</source>
            <target state="new">With Azure Mobile Services offline sync, you can keep working when network connectivity is lost, which is essential to many mobile apps.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>With offline sync, you work with a local copy of your Azure SQL Server table, and periodically re-sync the two.</source>
            <target state="new">With offline sync, you work with a local copy of your Azure SQL Server table, and periodically re-sync the two.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>In this tutorial, you'll update the app from the [Mobile Services Quick Start tutorial] to enable offline sync, and then test the app by adding data offline,  syncing those items to the online database, and verifying the changes in the Azure Management Portal.</source>
            <target state="new">In this tutorial, you'll update the app from the [Mobile Services Quick Start tutorial] to enable offline sync, and then test the app by adding data offline,  syncing those items to the online database, and verifying the changes in the Azure Management Portal.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Whether you are offline or connected, conflicts can arise any time multiple changes are made to data.</source>
            <target state="new">Whether you are offline or connected, conflicts can arise any time multiple changes are made to data.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>A future tutorial will explore handling sync conflicts, where you choose which version of the changes to accept.</source>
            <target state="new">A future tutorial will explore handling sync conflicts, where you choose which version of the changes to accept.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>In this tutorial, we assume no sync conflicts and any changes you make to existing data will be applied directly to the Azure SQL Server.</source>
            <target state="new">In this tutorial, we assume no sync conflicts and any changes you make to existing data will be applied directly to the Azure SQL Server.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>What you need to get started</source>
            <target state="new">What you need to get started</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/mobile-services-android-prerequisites.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/mobile-services-android-prerequisites.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Update the app to support offline sync</source>
            <target state="new">Update the app to support offline sync</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>With offline sync you read to and write from a <bpt id="2">&lt;em&gt;</bpt>sync table<ept id="2">&lt;/em&gt;</ept> (using the <bpt id="4">&lt;em&gt;</bpt>IMobileServiceSyncTable<ept id="4">&lt;/em&gt;</ept> interface), which is part of a <bpt id="6">&lt;strong&gt;</bpt>SQL Light<ept id="6">&lt;/strong&gt;</ept> database on your device.</source>
            <target state="new">With offline sync you read to and write from a <bpt id="2">&lt;em&gt;</bpt>sync table<ept id="2">&lt;/em&gt;</ept> (using the <bpt id="4">&lt;em&gt;</bpt>IMobileServiceSyncTable<ept id="4">&lt;/em&gt;</ept> interface), which is part of a <bpt id="6">&lt;strong&gt;</bpt>SQL Light<ept id="6">&lt;/strong&gt;</ept> database on your device.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>To push and pull changes between the device and Azure Mobile Services, you use a <bpt id="2">&lt;em&gt;</bpt>synchronization context<ept id="2">&lt;/em&gt;</ept> (<bpt id="4">&lt;em&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/em&gt;</ept>), which you initialize with the local database that you use to store data locally.</source>
            <target state="new">To push and pull changes between the device and Azure Mobile Services, you use a <bpt id="2">&lt;em&gt;</bpt>synchronization context<ept id="2">&lt;/em&gt;</ept> (<bpt id="4">&lt;em&gt;</bpt>MobileServiceClient.SyncContext<ept id="4">&lt;/em&gt;</ept>), which you initialize with the local database that you use to store data locally.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Add permission to check for network connectivity by adding this code to the <bpt id="2">&lt;em&gt;</bpt>AndroidManifest.xml<ept id="2">&lt;/em&gt;</ept> file:</source>
            <target state="new">Add permission to check for network connectivity by adding this code to the <bpt id="2">&lt;em&gt;</bpt>AndroidManifest.xml<ept id="2">&lt;/em&gt;</ept> file:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Add the following <bpt id="2">&lt;strong&gt;</bpt>import<ept id="2">&lt;/strong&gt;</ept> statements to <bpt id="4">&lt;em&gt;</bpt>ToDoActivity.java<ept id="4">&lt;/em&gt;</ept>:</source>
            <target state="new">Add the following <bpt id="2">&lt;strong&gt;</bpt>import<ept id="2">&lt;/strong&gt;</ept> statements to <bpt id="4">&lt;em&gt;</bpt>ToDoActivity.java<ept id="4">&lt;/em&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Near the top of the <bpt id="2">&lt;code&gt;</bpt>ToDoActivity<ept id="2">&lt;/code&gt;</ept> class, change the declaration of the <bpt id="4">&lt;code&gt;</bpt>mToDoTable<ept id="4">&lt;/code&gt;</ept> variable from a <bpt id="6">&lt;code&gt;</bpt>MobileServiceTable&lt;ToDoItem&gt;<ept id="6">&lt;/code&gt;</ept> class to a <bpt id="8">&lt;code&gt;</bpt>MobileServiceSyncTable&lt;ToDoItem&gt;<ept id="8">&lt;/code&gt;</ept> class.</source>
            <target state="new">Near the top of the <bpt id="2">&lt;code&gt;</bpt>ToDoActivity<ept id="2">&lt;/code&gt;</ept> class, change the declaration of the <bpt id="4">&lt;code&gt;</bpt>mToDoTable<ept id="4">&lt;/code&gt;</ept> variable from a <bpt id="6">&lt;code&gt;</bpt>MobileServiceTable&lt;ToDoItem&gt;<ept id="6">&lt;/code&gt;</ept> class to a <bpt id="8">&lt;code&gt;</bpt>MobileServiceSyncTable&lt;ToDoItem&gt;<ept id="8">&lt;/code&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>This is where you define the sync table.</source>
            <target state="new">This is where you define the sync table.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>To handle initialization of the local store, in the <bpt id="2">&lt;code&gt;</bpt>onCreate<ept id="2">&lt;/code&gt;</ept> method, add the following lines after creating the <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient<ept id="4">&lt;/code&gt;</ept> instance:</source>
            <target state="new">To handle initialization of the local store, in the <bpt id="2">&lt;code&gt;</bpt>onCreate<ept id="2">&lt;/code&gt;</ept> method, add the following lines after creating the <bpt id="4">&lt;code&gt;</bpt>MobileServiceClient<ept id="4">&lt;/code&gt;</ept> instance:</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Following the preceding code, which is inside a <bpt id="2">&lt;code&gt;</bpt>try<ept id="2">&lt;/code&gt;</ept> block, add an additional <bpt id="4">&lt;code&gt;</bpt>catch<ept id="4">&lt;/code&gt;</ept> block following the <bpt id="6">&lt;code&gt;</bpt>MalformedURLException<ept id="6">&lt;/code&gt;</ept> one:</source>
            <target state="new">Following the preceding code, which is inside a <bpt id="2">&lt;code&gt;</bpt>try<ept id="2">&lt;/code&gt;</ept> block, add an additional <bpt id="4">&lt;code&gt;</bpt>catch<ept id="4">&lt;/code&gt;</ept> block following the <bpt id="6">&lt;code&gt;</bpt>MalformedURLException<ept id="6">&lt;/code&gt;</ept> one:</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Add this method to verify network connectivity:</source>
            <target state="new">Add this method to verify network connectivity:</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>Add this method to sync between the local <bpt id="2">&lt;em&gt;</bpt>SQL Light<ept id="2">&lt;/em&gt;</ept> store and the Azure SQL Server:</source>
            <target state="new">Add this method to sync between the local <bpt id="2">&lt;em&gt;</bpt>SQL Light<ept id="2">&lt;/em&gt;</ept> store and the Azure SQL Server:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>onCreate<ept id="2">&lt;/code&gt;</ept> method, add this code as the next-to-the-last line, right before the call to <bpt id="4">&lt;code&gt;</bpt>refreshItemsFromTable<ept id="4">&lt;/code&gt;</ept>:</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>onCreate<ept id="2">&lt;/code&gt;</ept> method, add this code as the next-to-the-last line, right before the call to <bpt id="4">&lt;code&gt;</bpt>refreshItemsFromTable<ept id="4">&lt;/code&gt;</ept>:</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>This causes the device on startup to sync with the Azure table.</source>
            <target state="new">This causes the device on startup to sync with the Azure table.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Otherwise you would display the last offline contents of the local store.</source>
            <target state="new">Otherwise you would display the last offline contents of the local store.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Update the code in the <bpt id="2">&lt;code&gt;</bpt>refreshItemsFromTable<ept id="2">&lt;/code&gt;</ept> method to use this query (first line of code inside the <bpt id="4">&lt;code&gt;</bpt>try<ept id="4">&lt;/code&gt;</ept> block):</source>
            <target state="new">Update the code in the <bpt id="2">&lt;code&gt;</bpt>refreshItemsFromTable<ept id="2">&lt;/code&gt;</ept> method to use this query (first line of code inside the <bpt id="4">&lt;code&gt;</bpt>try<ept id="4">&lt;/code&gt;</ept> block):</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>In the <bpt id="2">&lt;code&gt;</bpt>onOptionsItemSelected<ept id="2">&lt;/code&gt;</ept> method replace the contents of the <bpt id="4">&lt;code&gt;</bpt>if<ept id="4">&lt;/code&gt;</ept> block with this code:</source>
            <target state="new">In the <bpt id="2">&lt;code&gt;</bpt>onOptionsItemSelected<ept id="2">&lt;/code&gt;</ept> method replace the contents of the <bpt id="4">&lt;code&gt;</bpt>if<ept id="4">&lt;/code&gt;</ept> block with this code:</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>This code runs when you press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button in the upper right corner.</source>
            <target state="new">This code runs when you press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button in the upper right corner.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>This is the main way you sync your local store to Azure, in addition to syncing at startup.</source>
            <target state="new">This is the main way you sync your local store to Azure, in addition to syncing at startup.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>This encourages batching of sync changes, and is efficient given that the pull from Azure is a relatively expensive operation.</source>
            <target state="new">This encourages batching of sync changes, and is efficient given that the pull from Azure is a relatively expensive operation.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>You could also design this app to sync on every change by adding a call to <bpt id="2">&lt;code&gt;</bpt>syncAsync<ept id="2">&lt;/code&gt;</ept> to the <bpt id="4">&lt;code&gt;</bpt>addItem<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>checkItem<ept id="6">&lt;/code&gt;</ept> methods, if your app required this.</source>
            <target state="new">You could also design this app to sync on every change by adding a call to <bpt id="2">&lt;code&gt;</bpt>syncAsync<ept id="2">&lt;/code&gt;</ept> to the <bpt id="4">&lt;code&gt;</bpt>addItem<ept id="4">&lt;/code&gt;</ept> and <bpt id="6">&lt;code&gt;</bpt>checkItem<ept id="6">&lt;/code&gt;</ept> methods, if your app required this.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Test the app</source>
            <target state="new">Test the app</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>In this section, you will test the behavior with WiFi on, and then turn off WiFi to create an offline scenario.</source>
            <target state="new">In this section, you will test the behavior with WiFi on, and then turn off WiFi to create an offline scenario.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>When you add data items, they are held in the local SQL Light store, but not synced to the mobile service until you press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">When you add data items, they are held in the local SQL Light store, but not synced to the mobile service until you press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Other apps may have different requirements regarding when data needs to be synchronized, but for demo purposes this tutorial has the user explicitly request it.</source>
            <target state="new">Other apps may have different requirements regarding when data needs to be synchronized, but for demo purposes this tutorial has the user explicitly request it.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>When you press that button, a new background task starts, and first pushes all the changes made to the local store, by using the synchronization context, and then pulls all changed data from Azure to the local table.</source>
            <target state="new">When you press that button, a new background task starts, and first pushes all the changes made to the local store, by using the synchronization context, and then pulls all changed data from Azure to the local table.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Online testing</source>
            <target state="new">Online testing</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>Lets test the following scenarios.</source>
            <target state="new">Lets test the following scenarios.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>Add some new items on your device;</source>
            <target state="new">Add some new items on your device;</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Verify the items don't show in the portal;</source>
            <target state="new">Verify the items don't show in the portal;</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>next press <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> and verify that they then show up.</source>
            <target state="new">next press <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> and verify that they then show up.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Change or add an item in the portal, then press <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> and verify that the changes show up on your device.</source>
            <target state="new">Change or add an item in the portal, then press <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> and verify that the changes show up on your device.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Offline testing</source>
            <target state="new">Offline testing</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Place the device or simulator in <bpt id="2">&lt;em&gt;</bpt>Airplane Mode<ept id="2">&lt;/em&gt;</ept>.</source>
            <target state="new">Place the device or simulator in <bpt id="2">&lt;em&gt;</bpt>Airplane Mode<ept id="2">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>This creates an offline scenario.</source>
            <target state="new">This creates an offline scenario.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>Add some <bpt id="2">&lt;em&gt;</bpt>ToDo<ept id="2">&lt;/em&gt;</ept> items, or mark some items as complete.</source>
            <target state="new">Add some <bpt id="2">&lt;em&gt;</bpt>ToDo<ept id="2">&lt;/em&gt;</ept> items, or mark some items as complete.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>Quit the device or simulator (or forcibly close the app) and restart.</source>
            <target state="new">Quit the device or simulator (or forcibly close the app) and restart.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>Verify that your changes have been persisted on the device because they are held in the local SQL Light store.</source>
            <target state="new">Verify that your changes have been persisted on the device because they are held in the local SQL Light store.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>View the contents of the Azure <bpt id="2">&lt;em&gt;</bpt>TodoItem<ept id="2">&lt;/em&gt;</ept> table.</source>
            <target state="new">View the contents of the Azure <bpt id="2">&lt;em&gt;</bpt>TodoItem<ept id="2">&lt;/em&gt;</ept> table.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Verify that the new items have <bpt id="2">&lt;em&gt;</bpt>not<ept id="2">&lt;/em&gt;</ept> been synced to the server:</source>
            <target state="new">Verify that the new items have <bpt id="2">&lt;em&gt;</bpt>not<ept id="2">&lt;/em&gt;</ept> been synced to the server:</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>For the JavaScript backend, go to the Management Portal, and click the Data tab to view the contents of the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> table.</source>
            <target state="new">For the JavaScript backend, go to the Management Portal, and click the Data tab to view the contents of the <bpt id="2">&lt;code&gt;</bpt>TodoItem<ept id="2">&lt;/code&gt;</ept> table.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>For the .NET backend, view the table contents either with a SQL tool such as <bpt id="2">&lt;em&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/em&gt;</ept>, or a REST client such as <bpt id="4">&lt;em&gt;</bpt>Fiddler<ept id="4">&lt;/em&gt;</ept> or <bpt id="6">&lt;em&gt;</bpt>Postman<ept id="6">&lt;/em&gt;</ept>.</source>
            <target state="new">For the .NET backend, view the table contents either with a SQL tool such as <bpt id="2">&lt;em&gt;</bpt>SQL Server Management Studio<ept id="2">&lt;/em&gt;</ept>, or a REST client such as <bpt id="4">&lt;em&gt;</bpt>Fiddler<ept id="4">&lt;/em&gt;</ept> or <bpt id="6">&lt;em&gt;</bpt>Postman<ept id="6">&lt;/em&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>Turn on WiFi in the device or simulator.</source>
            <target state="new">Turn on WiFi in the device or simulator.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Next, press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button.</source>
            <target state="new">Next, press the <bpt id="2">&lt;strong&gt;</bpt>Refresh<ept id="2">&lt;/strong&gt;</ept> button.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>View the TodoItem data again in the Azure portal.</source>
            <target state="new">View the TodoItem data again in the Azure portal.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>The new and changed TodoItems should now appear.</source>
            <target state="new">The new and changed TodoItems should now appear.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>Next Steps</source>
            <target state="new">Next Steps</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using Soft Delete in Mobile Services[soft delete]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Using Soft Delete in Mobile Services[soft delete]<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>Additional Resources</source>
            <target state="new">Additional Resources</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>[Cloud Cover: Offline Sync in Azure Mobile Services]</source>
            <target state="new">[Cloud Cover: Offline Sync in Azure Mobile Services]</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>[Azure Friday: Offline-enabled apps in Azure Mobile Services] \(note: demos are for Windows, but feature discussion applies to all platforms\)</source>
            <target state="new">[Azure Friday: Offline-enabled apps in Azure Mobile Services] \(note: demos are for Windows, but feature discussion applies to all platforms\)</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>