<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="2/21/2016 4:37:28 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ea0de0a0c510000cb9cec042c1c17f9c65a8c06</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>How to use Service Bus relay (.NET) | Microsoft Azure</source>
            <target state="new">How to use Service Bus relay (.NET) | Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Learn how to use the Azure Service Bus relay service to connect two applications hosted in different locations.</source>
            <target state="new">Learn how to use the Azure Service Bus relay service to connect two applications hosted in different locations.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>How to use the Azure Service Bus relay service</source>
            <target state="new">How to use the Azure Service Bus relay service</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>This article describes how to use the Service Bus relay service.</source>
            <target state="new">This article describes how to use the Service Bus relay service.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The samples are written in C# and use the Windows Communication Foundation (WCF) API with extensions contained in the Service Bus assembly that is part of the Microsoft Azure .NET SDK.</source>
            <target state="new">The samples are written in C# and use the Windows Communication Foundation (WCF) API with extensions contained in the Service Bus assembly that is part of the Microsoft Azure .NET SDK.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>For more information about the Service Bus relay, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</source>
            <target state="new">For more information about the Service Bus relay, see the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Next steps<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></source>
            <target state="new"><ph id="1">&lt;token href="../../includes/create-account-note.md"/&gt;</ph></target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>What is the Service Bus relay?</source>
            <target state="new">What is the Service Bus relay?</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The Service Bus <bpt id="2">&lt;em&gt;</bpt>relay<ept id="2">&lt;/em&gt;</ept> service enables you to build hybrid applications that run in both an Azure datacenter and your own on-premises enterprise environment.</source>
            <target state="new">The Service Bus <bpt id="2">&lt;em&gt;</bpt>relay<ept id="2">&lt;/em&gt;</ept> service enables you to build hybrid applications that run in both an Azure datacenter and your own on-premises enterprise environment.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>The Service Bus relay facilitates this by enabling you to securely expose Windows Communication Foundation (WCF) services that reside within a corporate enterprise network to the public cloud, without having to open a firewall connection, or require intrusive changes to a corporate</source>
            <target state="new">The Service Bus relay facilitates this by enabling you to securely expose Windows Communication Foundation (WCF) services that reside within a corporate enterprise network to the public cloud, without having to open a firewall connection, or require intrusive changes to a corporate</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>network infrastructure.</source>
            <target state="new">network infrastructure.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt>Relay Concepts<ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt>Relay Concepts<ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>The Service Bus relay allows you to host WCF services within your existing enterprise environment.</source>
            <target state="new">The Service Bus relay allows you to host WCF services within your existing enterprise environment.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>You can then delegate listening for incoming sessions and requests to these WCF services to the Service Bus</source>
            <target state="new">You can then delegate listening for incoming sessions and requests to these WCF services to the Service Bus</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>service running within Azure.</source>
            <target state="new">service running within Azure.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>This enables you to expose these services to application code running in Azure, or to mobile workers or extranet partner environments.</source>
            <target state="new">This enables you to expose these services to application code running in Azure, or to mobile workers or extranet partner environments.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Service Bus allows you to securely control who can</source>
            <target state="new">Service Bus allows you to securely control who can</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>access these services at a fine-grained level.</source>
            <target state="new">access these services at a fine-grained level.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>It provides a powerful and secure way to expose application functionality and data from your existing enterprise solutions and take advantage of it from the cloud.</source>
            <target state="new">It provides a powerful and secure way to expose application functionality and data from your existing enterprise solutions and take advantage of it from the cloud.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>This how-to article demonstrates how to use the Service Bus relay to create a WCF web service, exposed using a TCP channel binding, that implements a secure conversation between two parties.</source>
            <target state="new">This how-to article demonstrates how to use the Service Bus relay to create a WCF web service, exposed using a TCP channel binding, that implements a secure conversation between two parties.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Create a service namespace</source>
            <target state="new">Create a service namespace</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>To begin using the Service Bus relay in Azure, you must first</source>
            <target state="new">To begin using the Service Bus relay in Azure, you must first</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>create a service namespace.</source>
            <target state="new">create a service namespace.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>A namespace provides a scoping</source>
            <target state="new">A namespace provides a scoping</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>container for addressing Service Bus resources within your application.</source>
            <target state="new">container for addressing Service Bus resources within your application.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>To create a service namespace:</source>
            <target state="new">To create a service namespace:</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Log on to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Log on to the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure portal[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>In the left navigation pane of the Azure portal, click</source>
            <target state="new">In the left navigation pane of the Azure portal, click</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Service Bus<ept id="1">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Service Bus<ept id="1">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>In the lower pane of the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">In the lower pane of the Azure portal, click <bpt id="2">&lt;strong&gt;</bpt>Create<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>In the <bpt id="2">&lt;strong&gt;</bpt>Add a new namespace<ept id="2">&lt;/strong&gt;</ept> dialog box, enter a namespace name.</source>
            <target state="new">In the <bpt id="2">&lt;strong&gt;</bpt>Add a new namespace<ept id="2">&lt;/strong&gt;</ept> dialog box, enter a namespace name.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The system immediately checks to see if the name is available.</source>
            <target state="new">The system immediately checks to see if the name is available.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>After making sure the namespace name is available, choose the</source>
            <target state="new">After making sure the namespace name is available, choose the</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>country or region in which your namespace should be hosted (make</source>
            <target state="new">country or region in which your namespace should be hosted (make</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>sure you use the same country/region in which you are deploying your</source>
            <target state="new">sure you use the same country/region in which you are deploying your</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>compute resources).</source>
            <target state="new">compute resources).</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Pick the <bpt id="2">&lt;em&gt;</bpt>same region<ept id="2">&lt;/em&gt;</ept> that you intend to choose for deploying your application.</source>
            <target state="new">Pick the <bpt id="2">&lt;em&gt;</bpt>same region<ept id="2">&lt;/em&gt;</ept> that you intend to choose for deploying your application.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>This will give you the best performance.</source>
            <target state="new">This will give you the best performance.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Leave the other fields in the dialog box with their default values (<bpt id="2">&lt;strong&gt;</bpt>Messaging<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Standard<ept id="4">&lt;/strong&gt;</ept> tier), then click the check mark.</source>
            <target state="new">Leave the other fields in the dialog box with their default values (<bpt id="2">&lt;strong&gt;</bpt>Messaging<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>Standard<ept id="4">&lt;/strong&gt;</ept> tier), then click the check mark.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The system now creates your namespace and enables it.</source>
            <target state="new">The system now creates your namespace and enables it.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>You might have to wait several minutes as the system provisions resources for your account.</source>
            <target state="new">You might have to wait several minutes as the system provisions resources for your account.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The namespace you created then appears in the Azure portal and takes a moment to activate.</source>
            <target state="new">The namespace you created then appears in the Azure portal and takes a moment to activate.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Wait until the status is <bpt id="2">&lt;strong&gt;</bpt>Active<ept id="2">&lt;/strong&gt;</ept> before continuing.</source>
            <target state="new">Wait until the status is <bpt id="2">&lt;strong&gt;</bpt>Active<ept id="2">&lt;/strong&gt;</ept> before continuing.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Obtain the default management credentials for the namespace</source>
            <target state="new">Obtain the default management credentials for the namespace</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>In order to perform management operations, such as creating a relay connection, on the new namespace, you must configure the Shared Access Signature (SAS) authorization rule for the namespace.</source>
            <target state="new">In order to perform management operations, such as creating a relay connection, on the new namespace, you must configure the Shared Access Signature (SAS) authorization rule for the namespace.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>For more information about SAS, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shared Access Signature Authentication with Service Bus[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information about SAS, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Shared Access Signature Authentication with Service Bus[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>In the left navigation pane, click the <bpt id="2">&lt;strong&gt;</bpt>Service Bus<ept id="2">&lt;/strong&gt;</ept> node, to</source>
            <target state="new">In the left navigation pane, click the <bpt id="2">&lt;strong&gt;</bpt>Service Bus<ept id="2">&lt;/strong&gt;</ept> node, to</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>display the list of available namespaces.</source>
            <target state="new">display the list of available namespaces.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Double click the name of the namespace you just created from the list shown.</source>
            <target state="new">Double click the name of the namespace you just created from the list shown.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Click the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab at the top of the page.</source>
            <target state="new">Click the <bpt id="2">&lt;strong&gt;</bpt>Configure<ept id="2">&lt;/strong&gt;</ept> tab at the top of the page.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>When a Service Bus namespace is provisioned, a <bpt id="2">&lt;strong&gt;</bpt>SharedAccessAuthorizationRule<ept id="2">&lt;/strong&gt;</ept>, with <bpt id="4">&lt;strong&gt;</bpt>KeyName<ept id="4">&lt;/strong&gt;</ept> set to <bpt id="6">&lt;strong&gt;</bpt>RootManageSharedAccessKey<ept id="6">&lt;/strong&gt;</ept>, is created by default.</source>
            <target state="new">When a Service Bus namespace is provisioned, a <bpt id="2">&lt;strong&gt;</bpt>SharedAccessAuthorizationRule<ept id="2">&lt;/strong&gt;</ept>, with <bpt id="4">&lt;strong&gt;</bpt>KeyName<ept id="4">&lt;/strong&gt;</ept> set to <bpt id="6">&lt;strong&gt;</bpt>RootManageSharedAccessKey<ept id="6">&lt;/strong&gt;</ept>, is created by default.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>This page displays that key, as well as the primary and secondary keys for the default rule.</source>
            <target state="new">This page displays that key, as well as the primary and secondary keys for the default rule.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>Get the Service Bus NuGet package</source>
            <target state="new">Get the Service Bus NuGet package</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>The Service Bus NuGet package is the easiest way to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</source>
            <target state="new">The Service Bus NuGet package is the easiest way to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>The NuGet Visual Studio extension makes it easy to install and update libraries and tools in Visual Studio and Visual Studio Express.</source>
            <target state="new">The NuGet Visual Studio extension makes it easy to install and update libraries and tools in Visual Studio and Visual Studio Express.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>The Service Bus NuGet package is the easiest way</source>
            <target state="new">The Service Bus NuGet package is the easiest way</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</source>
            <target state="new">to get the Service Bus API and to configure your application with all of the Service Bus dependencies.</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>To install the NuGet package in your application, do the following:</source>
            <target state="new">To install the NuGet package in your application, do the following:</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>In Solution Explorer, right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">In Solution Explorer, right-click <bpt id="2">&lt;strong&gt;</bpt>References<ept id="2">&lt;/strong&gt;</ept>, then click <bpt id="4">&lt;strong&gt;</bpt>Manage NuGet Packages<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source>Search for "Service Bus" and select the **Microsoft Azure</source>
            <target state="new">Search for "Service Bus" and select the **Microsoft Azure</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>Service Bus** item.</source>
            <target state="new">Service Bus** item.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Click <bpt id="2">&lt;strong&gt;</bpt>Install<ept id="2">&lt;/strong&gt;</ept> to complete the installation, then close the following dialog box.</source>
            <target state="new">Click <bpt id="2">&lt;strong&gt;</bpt>Install<ept id="2">&lt;/strong&gt;</ept> to complete the installation, then close the following dialog box.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;linkText&gt;</bpt><ept id="1">&lt;/linkText&gt;</ept></target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>How to use Service Bus to expose and consume a SOAP web service with TCP</source>
            <target state="new">How to use Service Bus to expose and consume a SOAP web service with TCP</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>To expose an existing WCF SOAP web service for external consumption, you must make changes to the service bindings and addresses.</source>
            <target state="new">To expose an existing WCF SOAP web service for external consumption, you must make changes to the service bindings and addresses.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>This may require changes to your configuration file or it could require code changes, depending on how you have set up and configured your WCF services.</source>
            <target state="new">This may require changes to your configuration file or it could require code changes, depending on how you have set up and configured your WCF services.</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Note that WCF allows you to have multiple network endpoints over the same service, so you can retain the existing internal endpoints while adding Service Bus endpoints for external access at the same time.</source>
            <target state="new">Note that WCF allows you to have multiple network endpoints over the same service, so you can retain the existing internal endpoints while adding Service Bus endpoints for external access at the same time.</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>In this task, you will build a simple WCF service and add a Service Bus listener to it.</source>
            <target state="new">In this task, you will build a simple WCF service and add a Service Bus listener to it.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>This exercise assumes some familiarity with Visual Studio, and therefore does not walk through all the details of creating a project.</source>
            <target state="new">This exercise assumes some familiarity with Visual Studio, and therefore does not walk through all the details of creating a project.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Instead, it focuses on the code.</source>
            <target state="new">Instead, it focuses on the code.</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>Before starting the steps below, complete the following procedure to set up your environment:</source>
            <target state="new">Before starting the steps below, complete the following procedure to set up your environment:</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Within Visual Studio, create a console application that contains two projects, "Client" and "Service", within the solution.</source>
            <target state="new">Within Visual Studio, create a console application that contains two projects, "Client" and "Service", within the solution.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>Add the Microsoft Azure Service Bus NuGet package to both projects.</source>
            <target state="new">Add the Microsoft Azure Service Bus NuGet package to both projects.</target>
          </trans-unit>
          <trans-unit id="179" xml:space="preserve">
            <source>This adds all of the necessary assembly references to your projects.</source>
            <target state="new">This adds all of the necessary assembly references to your projects.</target>
          </trans-unit>
          <trans-unit id="180" xml:space="preserve">
            <source>How to create the service</source>
            <target state="new">How to create the service</target>
          </trans-unit>
          <trans-unit id="181" xml:space="preserve">
            <source>First, create the service itself.</source>
            <target state="new">First, create the service itself.</target>
          </trans-unit>
          <trans-unit id="182" xml:space="preserve">
            <source>Any WCF service consists of at least three distinct parts:</source>
            <target state="new">Any WCF service consists of at least three distinct parts:</target>
          </trans-unit>
          <trans-unit id="183" xml:space="preserve">
            <source>Definition of a contract that describes what messages are exchanged and what operations are to be invoked.</source>
            <target state="new">Definition of a contract that describes what messages are exchanged and what operations are to be invoked.</target>
          </trans-unit>
          <trans-unit id="184" xml:space="preserve">
            <source>Implementation of said contract.</source>
            <target state="new">Implementation of said contract.</target>
          </trans-unit>
          <trans-unit id="185" xml:space="preserve">
            <source>Host that hosts the WCF service and exposes a number of endpoints.</source>
            <target state="new">Host that hosts the WCF service and exposes a number of endpoints.</target>
          </trans-unit>
          <trans-unit id="186" xml:space="preserve">
            <source>The code examples in this section address each of these components.</source>
            <target state="new">The code examples in this section address each of these components.</target>
          </trans-unit>
          <trans-unit id="187" xml:space="preserve">
            <source>The contract defines a single operation, <bpt id="2">&lt;code&gt;</bpt>AddNumbers<ept id="2">&lt;/code&gt;</ept>, that adds two numbers and returns the result.</source>
            <target state="new">The contract defines a single operation, <bpt id="2">&lt;code&gt;</bpt>AddNumbers<ept id="2">&lt;/code&gt;</ept>, that adds two numbers and returns the result.</target>
          </trans-unit>
          <trans-unit id="188" xml:space="preserve">
            <source>The <bpt id="2">&lt;code&gt;</bpt>IProblemSolverChannel<ept id="2">&lt;/code&gt;</ept> interface enables the client to more easily manage the proxy lifetime.</source>
            <target state="new">The <bpt id="2">&lt;code&gt;</bpt>IProblemSolverChannel<ept id="2">&lt;/code&gt;</ept> interface enables the client to more easily manage the proxy lifetime.</target>
          </trans-unit>
          <trans-unit id="189" xml:space="preserve">
            <source>Creating such an interface is considered a best practice.</source>
            <target state="new">Creating such an interface is considered a best practice.</target>
          </trans-unit>
          <trans-unit id="190" xml:space="preserve">
            <source>It's a good idea to put this contract definition into a separate file so that you can reference that file from both your "Client" and "Service" projects, but you can also copy the code into both projects.</source>
            <target state="new">It's a good idea to put this contract definition into a separate file so that you can reference that file from both your "Client" and "Service" projects, but you can also copy the code into both projects.</target>
          </trans-unit>
          <trans-unit id="191" xml:space="preserve">
            <source>With the contract in place, the implementation is trivial.</source>
            <target state="new">With the contract in place, the implementation is trivial.</target>
          </trans-unit>
          <trans-unit id="192" xml:space="preserve">
            <source>How to configure a service host programmatically</source>
            <target state="new">How to configure a service host programmatically</target>
          </trans-unit>
          <trans-unit id="193" xml:space="preserve">
            <source>With the contract and implementation in place, you can now host the service.</source>
            <target state="new">With the contract and implementation in place, you can now host the service.</target>
          </trans-unit>
          <trans-unit id="194" xml:space="preserve">
            <source>Hosting occurs inside a</source>
            <target state="new">Hosting occurs inside a</target>
          </trans-unit>
          <trans-unit id="195" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>System.ServiceModel.ServiceHost<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> object, which takes care of managing instances of the service and hosts the endpoints that listen for messages.</source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>System.ServiceModel.ServiceHost<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept> object, which takes care of managing instances of the service and hosts the endpoints that listen for messages.</target>
          </trans-unit>
          <trans-unit id="196" xml:space="preserve">
            <source>The following code configures the service with both a regular local endpoint and a Service Bus endpoint to illustrate the appearance, side-by-side, of internal and external endpoints.</source>
            <target state="new">The following code configures the service with both a regular local endpoint and a Service Bus endpoint to illustrate the appearance, side-by-side, of internal and external endpoints.</target>
          </trans-unit>
          <trans-unit id="197" xml:space="preserve">
            <source>Replace the string <bpt id="2">&lt;em&gt;</bpt>namespace<ept id="2">&lt;/em&gt;</ept> with your namespace name and <bpt id="4">&lt;em&gt;</bpt>yourKey<ept id="4">&lt;/em&gt;</ept> with the SAS key that you obtained in the previous setup step.</source>
            <target state="new">Replace the string <bpt id="2">&lt;em&gt;</bpt>namespace<ept id="2">&lt;/em&gt;</ept> with your namespace name and <bpt id="4">&lt;em&gt;</bpt>yourKey<ept id="4">&lt;/em&gt;</ept> with the SAS key that you obtained in the previous setup step.</target>
          </trans-unit>
          <trans-unit id="198" xml:space="preserve">
            <source>In the example, you create two endpoints that are on the same contract implementation.</source>
            <target state="new">In the example, you create two endpoints that are on the same contract implementation.</target>
          </trans-unit>
          <trans-unit id="199" xml:space="preserve">
            <source>One is local and one is projected through Service Bus.</source>
            <target state="new">One is local and one is projected through Service Bus.</target>
          </trans-unit>
          <trans-unit id="200" xml:space="preserve">
            <source>The key differences between them are the bindings; [<bpt id="2">&lt;code&gt;</bpt>NetTcpBinding<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/system.servicemodel.nettcpbinding.aspx) for the local one and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>NetTcpRelayBinding<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> for the Service Bus endpoint and the addresses.</source>
            <target state="new">The key differences between them are the bindings; [<bpt id="2">&lt;code&gt;</bpt>NetTcpBinding<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/system.servicemodel.nettcpbinding.aspx) for the local one and <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>NetTcpRelayBinding<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> for the Service Bus endpoint and the addresses.</target>
          </trans-unit>
          <trans-unit id="201" xml:space="preserve">
            <source>The local endpoint has a local network address with a distinct port.</source>
            <target state="new">The local endpoint has a local network address with a distinct port.</target>
          </trans-unit>
          <trans-unit id="202" xml:space="preserve">
            <source>The Service Bus endpoint has an endpoint address composed of the string "sb", your namespace name, and the path "solver".</source>
            <target state="new">The Service Bus endpoint has an endpoint address composed of the string "sb", your namespace name, and the path "solver".</target>
          </trans-unit>
          <trans-unit id="203" xml:space="preserve">
            <source>This results in the URI "sb://[serviceNamespace].servicebus.windows.net/solver", identifying the service endpoint as a Service Bus TCP endpoint with a fully qualified external DNS name.</source>
            <target state="new">This results in the URI "sb://[serviceNamespace].servicebus.windows.net/solver", identifying the service endpoint as a Service Bus TCP endpoint with a fully qualified external DNS name.</target>
          </trans-unit>
          <trans-unit id="204" xml:space="preserve">
            <source>If you place the code replacing the placeholders as explained above into the <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> function of the "Service" application, you will have a functional service.</source>
            <target state="new">If you place the code replacing the placeholders as explained above into the <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> function of the "Service" application, you will have a functional service.</target>
          </trans-unit>
          <trans-unit id="205" xml:space="preserve">
            <source>If you want your service to listen exclusively on Service Bus, remove the local endpoint declaration.</source>
            <target state="new">If you want your service to listen exclusively on Service Bus, remove the local endpoint declaration.</target>
          </trans-unit>
          <trans-unit id="206" xml:space="preserve">
            <source>How to configure a service host in the App.config file</source>
            <target state="new">How to configure a service host in the App.config file</target>
          </trans-unit>
          <trans-unit id="207" xml:space="preserve">
            <source>You can also configure the host using the App.config file.</source>
            <target state="new">You can also configure the host using the App.config file.</target>
          </trans-unit>
          <trans-unit id="208" xml:space="preserve">
            <source>The service hosting code in this case appears in the next example.</source>
            <target state="new">The service hosting code in this case appears in the next example.</target>
          </trans-unit>
          <trans-unit id="209" xml:space="preserve">
            <source>The endpoint definitions move into the App.config file.</source>
            <target state="new">The endpoint definitions move into the App.config file.</target>
          </trans-unit>
          <trans-unit id="210" xml:space="preserve">
            <source>Note that the NuGet package has already added a range of definitions to the App.config file, which are the required configuration extensions for Service Bus.</source>
            <target state="new">Note that the NuGet package has already added a range of definitions to the App.config file, which are the required configuration extensions for Service Bus.</target>
          </trans-unit>
          <trans-unit id="211" xml:space="preserve">
            <source>The following code example, which is the exact equivalent of the previous code example, should appear directly beneath the <bpt id="2">&lt;strong&gt;</bpt>system.serviceModel<ept id="2">&lt;/strong&gt;</ept> element.</source>
            <target state="new">The following code example, which is the exact equivalent of the previous code example, should appear directly beneath the <bpt id="2">&lt;strong&gt;</bpt>system.serviceModel<ept id="2">&lt;/strong&gt;</ept> element.</target>
          </trans-unit>
          <trans-unit id="212" xml:space="preserve">
            <source>This code example assumes that your project C\# namespace is named "Service".</source>
            <target state="new">This code example assumes that your project C\# namespace is named "Service".</target>
          </trans-unit>
          <trans-unit id="213" xml:space="preserve">
            <source>Replace the placeholders with your Service Bus service namespace and SAS key.</source>
            <target state="new">Replace the placeholders with your Service Bus service namespace and SAS key.</target>
          </trans-unit>
          <trans-unit id="214" xml:space="preserve">
            <source>After you make these changes, the service starts as it did before, but with two live endpoints: one local and one listening in the cloud.</source>
            <target state="new">After you make these changes, the service starts as it did before, but with two live endpoints: one local and one listening in the cloud.</target>
          </trans-unit>
          <trans-unit id="215" xml:space="preserve">
            <source>How to create the client</source>
            <target state="new">How to create the client</target>
          </trans-unit>
          <trans-unit id="216" xml:space="preserve">
            <source>How to configure a client programmatically</source>
            <target state="new">How to configure a client programmatically</target>
          </trans-unit>
          <trans-unit id="217" xml:space="preserve">
            <source>To consume the service, you can construct a WCF client using a [<bpt id="2">&lt;code&gt;</bpt>ChannelFactory<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/system.servicemodel.channelfactory.aspx) object.</source>
            <target state="new">To consume the service, you can construct a WCF client using a [<bpt id="2">&lt;code&gt;</bpt>ChannelFactory<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/system.servicemodel.channelfactory.aspx) object.</target>
          </trans-unit>
          <trans-unit id="218" xml:space="preserve">
            <source>Service Bus uses a token-based security</source>
            <target state="new">Service Bus uses a token-based security</target>
          </trans-unit>
          <trans-unit id="219" xml:space="preserve">
            <source>model implemented using SAS.</source>
            <target state="new">model implemented using SAS.</target>
          </trans-unit>
          <trans-unit id="220" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TokenProvider<ept id="2">&lt;/strong&gt;</ept> class represents a security token provider with built-in factory methods that return some well-known token providers.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TokenProvider<ept id="2">&lt;/strong&gt;</ept> class represents a security token provider with built-in factory methods that return some well-known token providers.</target>
          </trans-unit>
          <trans-unit id="221" xml:space="preserve">
            <source>The example below uses the [<bpt id="2">&lt;code&gt;</bpt>CreateSharedAccessSignatureTokenProvider<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.tokenprovider.createsharedaccesssignaturetokenprovider.aspx) method to handle the acquisition of the appropriate SAS token.</source>
            <target state="new">The example below uses the [<bpt id="2">&lt;code&gt;</bpt>CreateSharedAccessSignatureTokenProvider<ept id="2">&lt;/code&gt;</ept>](https://msdn.microsoft.com/library/azure/microsoft.servicebus.tokenprovider.createsharedaccesssignaturetokenprovider.aspx) method to handle the acquisition of the appropriate SAS token.</target>
          </trans-unit>
          <trans-unit id="222" xml:space="preserve">
            <source>The name and key are those obtained from the portal as described in the previous section.</source>
            <target state="new">The name and key are those obtained from the portal as described in the previous section.</target>
          </trans-unit>
          <trans-unit id="223" xml:space="preserve">
            <source>First, reference or copy the <bpt id="2">&lt;code&gt;</bpt>IProblemSolver<ept id="2">&lt;/code&gt;</ept> contract code from the service into your client project.</source>
            <target state="new">First, reference or copy the <bpt id="2">&lt;code&gt;</bpt>IProblemSolver<ept id="2">&lt;/code&gt;</ept> contract code from the service into your client project.</target>
          </trans-unit>
          <trans-unit id="224" xml:space="preserve">
            <source>Then, replace the code in the <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> method of the client, again replacing the placeholder text with your Service Bus namespace and SAS key.</source>
            <target state="new">Then, replace the code in the <bpt id="2">&lt;code&gt;</bpt>Main<ept id="2">&lt;/code&gt;</ept> method of the client, again replacing the placeholder text with your Service Bus namespace and SAS key.</target>
          </trans-unit>
          <trans-unit id="225" xml:space="preserve">
            <source>You can now build the client and the service, run them (run the service first), and the client will call the service and print "<bpt id="2">&lt;strong&gt;</bpt>9<ept id="2">&lt;/strong&gt;</ept>."</source>
            <target state="new">You can now build the client and the service, run them (run the service first), and the client will call the service and print "<bpt id="2">&lt;strong&gt;</bpt>9<ept id="2">&lt;/strong&gt;</ept>."</target>
          </trans-unit>
          <trans-unit id="226" xml:space="preserve">
            <source>You can run the client and server on different machines, even across networks, and the communication will still work.</source>
            <target state="new">You can run the client and server on different machines, even across networks, and the communication will still work.</target>
          </trans-unit>
          <trans-unit id="227" xml:space="preserve">
            <source>The client code can also run in the cloud or locally.</source>
            <target state="new">The client code can also run in the cloud or locally.</target>
          </trans-unit>
          <trans-unit id="228" xml:space="preserve">
            <source>How to configure a client in the App.config file</source>
            <target state="new">How to configure a client in the App.config file</target>
          </trans-unit>
          <trans-unit id="229" xml:space="preserve">
            <source>The following code shows how to configure the client using the App.config file.</source>
            <target state="new">The following code shows how to configure the client using the App.config file.</target>
          </trans-unit>
          <trans-unit id="230" xml:space="preserve">
            <source>The endpoint definitions move into the App.config file.</source>
            <target state="new">The endpoint definitions move into the App.config file.</target>
          </trans-unit>
          <trans-unit id="231" xml:space="preserve">
            <source>The following code example, which is the same as the code listed previously, should appear directly beneath the <bpt id="2">&lt;strong&gt;</bpt>system.serviceModel<ept id="2">&lt;/strong&gt;</ept> element.</source>
            <target state="new">The following code example, which is the same as the code listed previously, should appear directly beneath the <bpt id="2">&lt;strong&gt;</bpt>system.serviceModel<ept id="2">&lt;/strong&gt;</ept> element.</target>
          </trans-unit>
          <trans-unit id="232" xml:space="preserve">
            <source>Here, as before,</source>
            <target state="new">Here, as before,</target>
          </trans-unit>
          <trans-unit id="233" xml:space="preserve">
            <source>you must replace the placeholders with your Service Bus namespace and SAS key.</source>
            <target state="new">you must replace the placeholders with your Service Bus namespace and SAS key.</target>
          </trans-unit>
          <trans-unit id="234" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
          <trans-unit id="235" xml:space="preserve">
            <source>Now that you've learned the basics of the Service Bus <bpt id="2">&lt;em&gt;</bpt>relay<ept id="2">&lt;/em&gt;</ept> service, follow these links to learn more.</source>
            <target state="new">Now that you've learned the basics of the Service Bus <bpt id="2">&lt;em&gt;</bpt>relay<ept id="2">&lt;/em&gt;</ept> service, follow these links to learn more.</target>
          </trans-unit>
          <trans-unit id="236" xml:space="preserve">
            <source>Building a service: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building a Service for Service Bus[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Building a service: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building a Service for Service Bus[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="237" xml:space="preserve">
            <source>Building the client: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building a Service Bus Client Application[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Building the client: <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Building a Service Bus Client Application[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="238" xml:space="preserve">
            <source>Service Bus samples: Download from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Samples[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or see the overview on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>MSDN[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">Service Bus samples: Download from <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Azure Samples[]<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> or see the overview on <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>MSDN[]<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>