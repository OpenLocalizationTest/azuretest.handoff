{
  "nodes": [
    {
      "content": "Enable diagnostics logging for web apps in Azure App Service",
      "pos": [
        27,
        87
      ]
    },
    {
      "content": "Learn how to enable diagnostic logging and add instrumentation to your application, as well as how to access the information logged by Azure.",
      "pos": [
        106,
        247
      ]
    },
    {
      "content": "Enable diagnostics logging for web apps in Azure App Service",
      "pos": [
        556,
        616
      ]
    },
    {
      "content": "Overview",
      "pos": [
        621,
        629
      ]
    },
    {
      "content": "Azure provides built-in diagnostics to assist with debugging an <bpt id=\"p1\">[</bpt>App Service web app<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>.",
      "pos": [
        631,
        764
      ]
    },
    {
      "content": "In this article you'll learn how to enable diagnostic logging and add instrumentation to your application, as well as how to access the information logged by Azure.",
      "pos": [
        765,
        929
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> This article uses the <bpt id=\"p1\">[</bpt>Azure preview portal<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept>, Azure PowerShell, and the Azure Command-Line Interface (Azure CLI) to work with diagnostic logs.",
      "pos": [
        933,
        1135
      ]
    },
    {
      "content": "For information on working with diagnostic logs using Visual Studio, see <bpt id=\"p1\">[</bpt>Troubleshooting Azure in Visual Studio<ept id=\"p1\">](web-sites-dotnet-troubleshoot-visual-studio.md)</ept>.",
      "pos": [
        1136,
        1298
      ]
    },
    {
      "pos": [
        1303,
        1378
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"whatisdiag\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Web server diagnostics and application diagnostics"
    },
    {
      "content": "App Service web apps provide diagnostic functionality for logging information from both the web server and the web application.",
      "pos": [
        1380,
        1507
      ]
    },
    {
      "content": "These are logically separated into <bpt id=\"p1\">**</bpt>web server diagnostics<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>application diagnostics<ept id=\"p2\">**</ept>.",
      "pos": [
        1508,
        1602
      ]
    },
    {
      "content": "Web server diagnostics",
      "pos": [
        1608,
        1630
      ]
    },
    {
      "content": "You can enable or disable the following kinds of logs:",
      "pos": [
        1632,
        1686
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Detailed Error Logging<ept id=\"p1\">**</ept> - Detailed error information for HTTP status codes that indicate a failure (status code 400 or greater).",
      "pos": [
        1690,
        1821
      ]
    },
    {
      "content": "This may contain information that can help determine why the server returned the error code.",
      "pos": [
        1822,
        1914
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Failed Request Tracing<ept id=\"p1\">**</ept> - Detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component.",
      "pos": [
        1917,
        2092
      ]
    },
    {
      "content": "This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned.",
      "pos": [
        2093,
        2227
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Web Server Logging<ept id=\"p1\">**</ept> - Information about HTTP transactions using the <bpt id=\"p2\">[</bpt>W3C extended log file format<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx)</ept>.",
      "pos": [
        2230,
        2397
      ]
    },
    {
      "content": "This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address.",
      "pos": [
        2398,
        2542
      ]
    },
    {
      "content": "Application diagnostics",
      "pos": [
        2548,
        2571
      ]
    },
    {
      "content": "Application diagnostics allows you to capture information produced by a web application.",
      "pos": [
        2573,
        2661
      ]
    },
    {
      "content": "ASP.NET applications can use the <bpt id=\"p1\">[</bpt>System.Diagnostics.Trace<ept id=\"p1\">](http://msdn.microsoft.com/en-us/library/36hhw2t6.aspx)</ept> class to log information to the application diagnostics log.",
      "pos": [
        2662,
        2837
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2838,
        2850
      ]
    },
    {
      "content": "At runtime you can retrieve these logs to help with troubleshooting.",
      "pos": [
        2943,
        3011
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Troubleshooting Azure web apps in Visual Studio<ept id=\"p1\">](web-sites-dotnet-troubleshoot-visual-studio.md)</ept>.",
      "pos": [
        3012,
        3136
      ]
    },
    {
      "content": "App Service web apps also log deployment information when you publish content to a web app.",
      "pos": [
        3138,
        3229
      ]
    },
    {
      "content": "This happens automatically and there are no configuration settings for deployment logging.",
      "pos": [
        3230,
        3320
      ]
    },
    {
      "content": "Deployment logging allows you to determine why a deployment failed.",
      "pos": [
        3321,
        3388
      ]
    },
    {
      "content": "For example, if you are using a custom deployment script, you might use deployment logging to determine why the script is failing.",
      "pos": [
        3389,
        3519
      ]
    },
    {
      "pos": [
        3524,
        3574
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"enablediag\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to enable diagnostics"
    },
    {
      "pos": [
        3576,
        3730
      ],
      "content": "To enable diagnostics in the <bpt id=\"p1\">[</bpt>Azure preview portal<ept id=\"p1\">](https://portal.azure.com)</ept>, go to the blade for your web app and click <bpt id=\"p2\">**</bpt>Settings &gt; Diagnostics logs<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Logs part",
      "pos": [
        3788,
        3797
      ]
    },
    {
      "content": "When you enable <bpt id=\"p1\">**</bpt>application diagnostics<ept id=\"p1\">**</ept> you also choose the <bpt id=\"p2\">**</bpt>Level<ept id=\"p2\">**</ept>.",
      "pos": [
        3854,
        3928
      ]
    },
    {
      "content": "This setting allows you to filter the information captured to <bpt id=\"p1\">**</bpt>informational<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>warning<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>error<ept id=\"p3\">**</ept> information.",
      "pos": [
        3929,
        4047
      ]
    },
    {
      "content": "Setting this to <bpt id=\"p1\">**</bpt>verbose<ept id=\"p1\">**</ept> will log all information produced by the application.",
      "pos": [
        4048,
        4129
      ]
    },
    {
      "pos": [
        4133,
        4315
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Unlike changing the web.config file, enabling Application diagnostics or changing diagnostic log levels does not recycle the app domain that the application runs within."
    },
    {
      "content": "In the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://manage.windowsazure.com)</ept> Web app <bpt id=\"p2\">**</bpt>Configure<ept id=\"p2\">**</ept> tab, you can select <bpt id=\"p3\">**</bpt>storage<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>file system<ept id=\"p4\">**</ept> for <bpt id=\"p5\">**</bpt>web server logging<ept id=\"p5\">**</ept>.",
      "pos": [
        4317,
        4472
      ]
    },
    {
      "content": "Selecting <bpt id=\"p1\">**</bpt>storage<ept id=\"p1\">**</ept> allows you to select a storage account, and then a blob container that the logs will be written to.",
      "pos": [
        4473,
        4594
      ]
    },
    {
      "content": "All other logs for <bpt id=\"p1\">**</bpt>site diagnostics<ept id=\"p1\">**</ept> are written to the file system only.",
      "pos": [
        4595,
        4671
      ]
    },
    {
      "pos": [
        4673,
        4808
      ],
      "content": "The <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://manage.windowsazure.com)</ept> Web app <bpt id=\"p2\">**</bpt>Configure<ept id=\"p2\">**</ept> tab also has additional settings for application diagnostics:"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>File system<ept id=\"p1\">**</ept> - stores the application diagnostics information to the web app file system.",
      "pos": [
        4812,
        4904
      ]
    },
    {
      "content": "These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).",
      "pos": [
        4905,
        5046
      ]
    },
    {
      "pos": [
        5049,
        5170
      ],
      "content": "<bpt id=\"p1\">**</bpt>Table storage<ept id=\"p1\">**</ept> - stores the application diagnostics information in the specified Azure Storage Account and table name."
    },
    {
      "pos": [
        5173,
        5297
      ],
      "content": "<bpt id=\"p1\">**</bpt>Blob storage<ept id=\"p1\">**</ept> - stores the application diagnostics information in the specified Azure Storage Account and blob container."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Retention period<ept id=\"p1\">**</ept> - by default, logs are not automatically deleted from <bpt id=\"p2\">**</bpt>blob storage<ept id=\"p2\">**</ept>.",
      "pos": [
        5300,
        5392
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>set retention<ept id=\"p1\">**</ept> and enter the number of days to keep logs if you wish to automatically delete logs.",
      "pos": [
        5393,
        5501
      ]
    },
    {
      "content": "Any combination of file system, table storage, or blob storage can be enabled at the same time, and have individual log level configurations.",
      "pos": [
        5503,
        5644
      ]
    },
    {
      "content": "For example, you may wish to log errors and warnings to blob storage as a long-term logging solution, while enabling file system logging with a level of verbose.",
      "pos": [
        5645,
        5806
      ]
    },
    {
      "pos": [
        5808,
        6074
      ],
      "content": "While all three storage locations provide the same basic information for logged events, <bpt id=\"p1\">**</bpt>table storage<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>blob storage<ept id=\"p2\">**</ept> log additional information such as the instance ID, thread ID, and a more granular timestamp (tick format) than logging to <bpt id=\"p3\">**</bpt>file system<ept id=\"p3\">**</ept>."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Information stored in <bpt id=\"p1\">**</bpt>table storage<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>blob  storage<ept id=\"p2\">**</ept> can only be accessed using a storage client or an application that can directly work with these storage systems.",
      "pos": [
        6078,
        6264
      ]
    },
    {
      "content": "For example, Visual Studio 2013 contains a Storage Explorer that can be used to explore table or blob storage, and HDInsight can access data stored in blob storage.",
      "pos": [
        6265,
        6429
      ]
    },
    {
      "content": "You can also write an application that accesses Azure Storage by using one of the <bpt id=\"p1\">[</bpt>Azure SDKs<ept id=\"p1\">](/downloads/#)</ept>.",
      "pos": [
        6430,
        6539
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Diagnostics can also be enabled from Azure PowerShell using the <bpt id=\"p1\">**</bpt>Set-AzureWebsite<ept id=\"p1\">**</ept> cmdlet.",
      "pos": [
        6543,
        6648
      ]
    },
    {
      "content": "If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see <bpt id=\"p1\">[</bpt>How to Use Azure PowerShell<ept id=\"p1\">](/develop/nodejs/how-to-guides/powershell-cmdlets/)</ept>.",
      "pos": [
        6649,
        6836
      ]
    },
    {
      "pos": [
        6840,
        6885
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"download\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> How to: Download logs"
    },
    {
      "content": "Diagnostic information stored to the web app file system can be accessed directly using FTP.",
      "pos": [
        6887,
        6979
      ]
    },
    {
      "content": "It can also be downloaded as a Zip archive using Azure PowerShell or the Azure Command-Line Interface.",
      "pos": [
        6980,
        7082
      ]
    },
    {
      "content": "The directory structure that the logs are stored in is as follows:",
      "pos": [
        7084,
        7150
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Application logs<ept id=\"p1\">**</ept> - /LogFiles/Application/.",
      "pos": [
        7154,
        7200
      ]
    },
    {
      "content": "This folder contains one or more text files containing information produced by application logging.",
      "pos": [
        7201,
        7300
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Failed Request Traces<ept id=\"p1\">**</ept> - /LogFiles/W3SVC#########/.",
      "pos": [
        7304,
        7358
      ]
    },
    {
      "content": "This folder contains an XSL file and one or more XML files.",
      "pos": [
        7359,
        7418
      ]
    },
    {
      "content": "Ensure that you download the XSL file into the same directory as the XML file(s) because the XSL file provides functionality for formatting and filtering the contents of the XML file(s) when viewed in Internet Explorer.",
      "pos": [
        7419,
        7638
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Detailed Error Logs<ept id=\"p1\">**</ept> - /LogFiles/DetailedErrors/.",
      "pos": [
        7642,
        7694
      ]
    },
    {
      "content": "This folder contains one or more .htm files that provide extensive information for any HTTP errors that have occurred.",
      "pos": [
        7695,
        7813
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Web Server Logs<ept id=\"p1\">**</ept> - /LogFiles/http/RawLogs.",
      "pos": [
        7817,
        7862
      ]
    },
    {
      "content": "This folder contains one or more text files formatted using the <bpt id=\"p1\">[</bpt>W3C extended log file format<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx)</ept>.",
      "pos": [
        7863,
        8023
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Deployment logs<ept id=\"p1\">**</ept> - /LogFiles/Git.",
      "pos": [
        8027,
        8063
      ]
    },
    {
      "content": "This folder contains logs generated by the internal deployment processes used by Azure web apps, as well as logs for Git deployments.",
      "pos": [
        8064,
        8197
      ]
    },
    {
      "content": "FTP",
      "pos": [
        8203,
        8206
      ]
    },
    {
      "content": "To access diagnostic information using FTP, visit the <bpt id=\"p1\">**</bpt>Dashboard<ept id=\"p1\">**</ept> of your web app in the <bpt id=\"p2\">[</bpt>Azure portal<ept id=\"p2\">](https://manage.windowsazure.com)</ept>.",
      "pos": [
        8208,
        8347
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>quick glance<ept id=\"p1\">**</ept> section, use the <bpt id=\"p2\">**</bpt>FTP Diagnostic Logs<ept id=\"p2\">**</ept> link to access the log files using FTP.",
      "pos": [
        8348,
        8452
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Deployment/FTP User<ept id=\"p1\">**</ept> entry lists the user name that should be used to access the FTP site.",
      "pos": [
        8453,
        8550
      ]
    },
    {
      "pos": [
        8554,
        8809
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If the <bpt id=\"p1\">**</bpt>Deployment/FTP User<ept id=\"p1\">**</ept> entry is not set, or you have forgotten the password for this user, you can create a new user and password by using the <bpt id=\"p2\">**</bpt>Reset deployment credentials<ept id=\"p2\">**</ept> link in the <bpt id=\"p3\">**</bpt>quick glance<ept id=\"p3\">**</ept> section of the <bpt id=\"p4\">**</bpt>Dashboard<ept id=\"p4\">**</ept>."
    },
    {
      "content": "Download with Azure PowerShell",
      "pos": [
        8815,
        8845
      ]
    },
    {
      "content": "To download the log files, start a new instance of Azure PowerShell and use the following command:",
      "pos": [
        8847,
        8945
      ]
    },
    {
      "pos": [
        8990,
        9121
      ],
      "content": "This will save the logs for the web app specified by the <bpt id=\"p1\">**</bpt>-Name<ept id=\"p1\">**</ept> parameter to a file named <bpt id=\"p2\">**</bpt>logs.zip<ept id=\"p2\">**</ept> in the current directory."
    },
    {
      "pos": [
        9125,
        9325
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see <bpt id=\"p1\">[</bpt>How to Use Azure PowerShell<ept id=\"p1\">](/develop/nodejs/how-to-guides/powershell-cmdlets/)</ept>."
    },
    {
      "content": "Download with Azure Command-Line Interface",
      "pos": [
        9331,
        9373
      ]
    },
    {
      "content": "To download the log files using the Azure Command Line Interface, open a new command prompt, PowerShell, Bash, or Terminal session and enter the following command:",
      "pos": [
        9375,
        9538
      ]
    },
    {
      "pos": [
        9580,
        9700
      ],
      "content": "This will save the logs for the web app named 'webappname' to a file named <bpt id=\"p1\">**</bpt>diagnostics.zip<ept id=\"p1\">**</ept> in the current directory."
    },
    {
      "pos": [
        9704,
        9891
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you have not installed the Azure Command-Line Interface (Azure CLI), or have not configured it to use your Azure Subscription, see <bpt id=\"p1\">[</bpt>How to Use Azure CLI<ept id=\"p1\">](../xplat-cli.md)</ept>."
    },
    {
      "content": "How to: View logs in Application Insights",
      "pos": [
        9896,
        9937
      ]
    },
    {
      "content": "Visual Studio Application Insights provides tools for filtering and searching logs, and for correlating the logs with requests and other events.",
      "pos": [
        9939,
        10083
      ]
    },
    {
      "content": "Add the Application Insights SDK to your project in Visual Studio.",
      "pos": [
        10088,
        10154
      ]
    },
    {
      "content": "In Solution Explorer, right click your project and choose Add Application Insights.",
      "pos": [
        10158,
        10241
      ]
    },
    {
      "content": "You'll be guided through steps that include creating an Application Insights resource.",
      "pos": [
        10242,
        10328
      ]
    },
    {
      "content": "Learn more",
      "pos": [
        10330,
        10340
      ]
    },
    {
      "content": "Add the Trace Listener package to your project.",
      "pos": [
        10420,
        10467
      ]
    },
    {
      "content": "Right click your project and choose Manage NuGet Packages.",
      "pos": [
        10471,
        10529
      ]
    },
    {
      "content": "Select <ph id=\"ph1\">`Microsoft.ApplicationInsights.TraceListener`</ph> <bpt id=\"p1\">[</bpt>Learn more<ept id=\"p1\">](../application-insights/app-insights-asp-net-trace-logs.md)</ept>",
      "pos": [
        10530,
        10655
      ]
    },
    {
      "content": "Upload your project and run it to generate log data.",
      "pos": [
        10659,
        10711
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">[</bpt>Azure preview portal<ept id=\"p1\">](http://portal.azure.com/)</ept>, browse to your new Application Insights resource, and open <bpt id=\"p2\">**</bpt>Search<ept id=\"p2\">**</ept>.",
      "pos": [
        10715,
        10842
      ]
    },
    {
      "content": "You'll see your log data, along with request, usage and other telemetry.",
      "pos": [
        10843,
        10915
      ]
    },
    {
      "content": "Some telemetry might take a few minutes to arrive: click Refresh.",
      "pos": [
        10916,
        10981
      ]
    },
    {
      "content": "Learn more",
      "pos": [
        10983,
        10993
      ]
    },
    {
      "content": "Learn more about performance tracking with Application Insights",
      "pos": [
        11056,
        11119
      ]
    },
    {
      "pos": [
        11155,
        11200
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"streamlogs\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> How to: Stream logs"
    },
    {
      "content": "While developing an application, it is often useful to see logging information in near-real time.",
      "pos": [
        11202,
        11299
      ]
    },
    {
      "content": "This can be accomplished by streaming logging information to your development environment using either Azure PowerShell or the Azure Command-Line Interface.",
      "pos": [
        11300,
        11456
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Some types of logging buffer write to the log file, which can result in out of order events in the stream.",
      "pos": [
        11460,
        11579
      ]
    },
    {
      "content": "For example, an application log entry that occurs when a user visits a page may be displayed in the stream before the corresponding HTTP log entry for the page request.",
      "pos": [
        11580,
        11748
      ]
    },
    {
      "pos": [
        11752,
        11879
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Log streaming will also stream information written to any text file stored in the <bpt id=\"p1\">**</bpt>D:\\\\home\\\\LogFiles\\\\<ept id=\"p1\">**</ept> folder."
    },
    {
      "content": "Streaming with Azure PowerShell",
      "pos": [
        11885,
        11916
      ]
    },
    {
      "content": "To stream logging information, start a new of Azure PowerShell and use the following command:",
      "pos": [
        11918,
        12011
      ]
    },
    {
      "content": "This will connect to the web app specified by the <bpt id=\"p1\">**</bpt>-Name<ept id=\"p1\">**</ept> parameter and begin streaming information to the PowerShell window as log events occur on the web app.",
      "pos": [
        12061,
        12223
      ]
    },
    {
      "content": "Any information written to files ending in .txt, .log, or .htm that are stored in the /LogFiles directory (d:/home/logfiles) will be streamed to the local console.",
      "pos": [
        12224,
        12387
      ]
    },
    {
      "content": "To filter specific events, such as errors, use the <bpt id=\"p1\">**</bpt>-Message<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        12389,
        12463
      ]
    },
    {
      "content": "For example:",
      "pos": [
        12464,
        12476
      ]
    },
    {
      "content": "To filter specific log types, such as HTTP, use the <bpt id=\"p1\">**</bpt>-Path<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        12541,
        12613
      ]
    },
    {
      "content": "For example:",
      "pos": [
        12614,
        12626
      ]
    },
    {
      "content": "To see a list of available paths, use the -ListPath parameter.",
      "pos": [
        12687,
        12749
      ]
    },
    {
      "pos": [
        12753,
        12953
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see <bpt id=\"p1\">[</bpt>How to Use Azure PowerShell<ept id=\"p1\">](/develop/nodejs/how-to-guides/powershell-cmdlets/)</ept>."
    },
    {
      "content": "Streaming with Azure Command-Line Interface",
      "pos": [
        12959,
        13002
      ]
    },
    {
      "content": "To stream logging information, open a new command prompt, PowerShell, Bash, or Terminal session and enter the following command:",
      "pos": [
        13004,
        13132
      ]
    },
    {
      "content": "This will connect to the web app named 'webappname' and begin streaming information to the window as log events occur on the web app.",
      "pos": [
        13170,
        13303
      ]
    },
    {
      "content": "Any information written to files ending in .txt, .log, or .htm that are stored in the /LogFiles directory (d:/home/logfiles) will be streamed to the local console.",
      "pos": [
        13304,
        13467
      ]
    },
    {
      "content": "To filter specific events, such as errors, use the <bpt id=\"p1\">**</bpt>--Filter<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        13469,
        13543
      ]
    },
    {
      "content": "For example:",
      "pos": [
        13544,
        13556
      ]
    },
    {
      "content": "To filter specific log types, such as HTTP, use the <bpt id=\"p1\">**</bpt>--Path<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        13609,
        13682
      ]
    },
    {
      "content": "For example:",
      "pos": [
        13683,
        13695
      ]
    },
    {
      "pos": [
        13747,
        13941
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you have not installed the Azure Command-Line Interface, or have not configured it to use your Azure Subscription, see <bpt id=\"p1\">[</bpt>How to Use Azure Command-Line Interface<ept id=\"p1\">](../xplat-cli.md)</ept>."
    },
    {
      "pos": [
        13945,
        14010
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"understandlogs\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> How to: Understand diagnostics logs"
    },
    {
      "content": "Application diagnostics logs",
      "pos": [
        14016,
        14044
      ]
    },
    {
      "content": "Application diagnostics stores information in a specific format for .NET applications, depending on whether you store logs to the file system, table storage, or blob storage.",
      "pos": [
        14046,
        14220
      ]
    },
    {
      "content": "The base set of data stored is the same across all three storage types - the date and time the event occurred, the process ID that produced the event, the event type (information, warning, error,) and the event message.",
      "pos": [
        14221,
        14440
      ]
    },
    {
      "content": "File system",
      "pos": [
        14444,
        14455
      ]
    },
    {
      "content": "Each line logged to the file system or received using streaming will be in the following format:",
      "pos": [
        14459,
        14555
      ]
    },
    {
      "content": "For example, an error event would appear similar to the following:",
      "pos": [
        14617,
        14683
      ]
    },
    {
      "content": "Logging to the file system provides the most basic information of the three available methods, providing only the time, process id, event level, and message.",
      "pos": [
        14758,
        14915
      ]
    },
    {
      "content": "Table storage",
      "pos": [
        14919,
        14932
      ]
    },
    {
      "content": "When logging to table storage, additional properties are used to facilitate searching the data stored in the table as well as more granular information on the event.",
      "pos": [
        14936,
        15101
      ]
    },
    {
      "content": "The following properties (columns) are used for each entity (row) stored in the table.",
      "pos": [
        15102,
        15188
      ]
    },
    {
      "content": "Property name",
      "pos": [
        15190,
        15203
      ]
    },
    {
      "content": "Value/format",
      "pos": [
        15204,
        15216
      ]
    },
    {
      "content": "PartitionKey",
      "pos": [
        15225,
        15237
      ]
    },
    {
      "content": "Date/time of the event in yyyyMMddHH format",
      "pos": [
        15238,
        15281
      ]
    },
    {
      "content": "RowKey",
      "pos": [
        15282,
        15288
      ]
    },
    {
      "content": "A GUID value that uniquely identifies this entity",
      "pos": [
        15289,
        15338
      ]
    },
    {
      "content": "Timestamp",
      "pos": [
        15339,
        15348
      ]
    },
    {
      "content": "The date and time that the event occurred",
      "pos": [
        15349,
        15390
      ]
    },
    {
      "content": "EventTickCount",
      "pos": [
        15391,
        15405
      ]
    },
    {
      "content": "The date and time that the event occurred, in Tick format (greater precision)",
      "pos": [
        15406,
        15483
      ]
    },
    {
      "content": "ApplicationName",
      "pos": [
        15484,
        15499
      ]
    },
    {
      "content": "The web app name",
      "pos": [
        15500,
        15516
      ]
    },
    {
      "content": "Level",
      "pos": [
        15517,
        15522
      ]
    },
    {
      "content": "Event level (e.g. error, warning, information)",
      "pos": [
        15523,
        15569
      ]
    },
    {
      "content": "EventId",
      "pos": [
        15570,
        15577
      ]
    },
    {
      "content": "The event ID of this event",
      "pos": [
        15578,
        15604
      ]
    },
    {
      "content": "Defaults to 0 if none specified",
      "pos": [
        15610,
        15641
      ]
    },
    {
      "content": "InstanceId",
      "pos": [
        15642,
        15652
      ]
    },
    {
      "content": "Instance of the web app that the even occurred on",
      "pos": [
        15653,
        15702
      ]
    },
    {
      "content": "Pid",
      "pos": [
        15703,
        15706
      ]
    },
    {
      "content": "Process ID",
      "pos": [
        15707,
        15717
      ]
    },
    {
      "content": "Tid",
      "pos": [
        15718,
        15721
      ]
    },
    {
      "content": "The thread ID of the thread that produced the event",
      "pos": [
        15722,
        15773
      ]
    },
    {
      "content": "Message",
      "pos": [
        15774,
        15781
      ]
    },
    {
      "content": "Event detail message",
      "pos": [
        15782,
        15802
      ]
    },
    {
      "content": "Blob storage",
      "pos": [
        15806,
        15818
      ]
    },
    {
      "content": "When logging to blob storage, data is stored in comma-separated values (CSV) format.",
      "pos": [
        15822,
        15906
      ]
    },
    {
      "content": "Similar to table storage, additional fields are logged to provide more granular information about the event.",
      "pos": [
        15907,
        16015
      ]
    },
    {
      "content": "The following properties are used for each row in the CSV:",
      "pos": [
        16016,
        16074
      ]
    },
    {
      "content": "Property name",
      "pos": [
        16076,
        16089
      ]
    },
    {
      "content": "Value/format",
      "pos": [
        16090,
        16102
      ]
    },
    {
      "content": "Date",
      "pos": [
        16111,
        16115
      ]
    },
    {
      "content": "The date and time that the event occurred",
      "pos": [
        16116,
        16157
      ]
    },
    {
      "content": "Level",
      "pos": [
        16158,
        16163
      ]
    },
    {
      "content": "Event level (e.g. error, warning, information)",
      "pos": [
        16164,
        16210
      ]
    },
    {
      "content": "ApplicationName",
      "pos": [
        16211,
        16226
      ]
    },
    {
      "content": "The web app name",
      "pos": [
        16227,
        16243
      ]
    },
    {
      "content": "InstanceId",
      "pos": [
        16244,
        16254
      ]
    },
    {
      "content": "Instance of the web app that the even occurred on",
      "pos": [
        16255,
        16304
      ]
    },
    {
      "content": "EventTickCount",
      "pos": [
        16305,
        16319
      ]
    },
    {
      "content": "The date and time that the event occurred, in Tick format (greater precision)",
      "pos": [
        16320,
        16397
      ]
    },
    {
      "content": "EventId",
      "pos": [
        16398,
        16405
      ]
    },
    {
      "content": "The event ID of this event",
      "pos": [
        16406,
        16432
      ]
    },
    {
      "content": "Defaults to 0 if none specified",
      "pos": [
        16438,
        16469
      ]
    },
    {
      "content": "Pid",
      "pos": [
        16470,
        16473
      ]
    },
    {
      "content": "Process ID",
      "pos": [
        16474,
        16484
      ]
    },
    {
      "content": "Tid",
      "pos": [
        16485,
        16488
      ]
    },
    {
      "content": "The thread ID of the thread that produced the event",
      "pos": [
        16489,
        16540
      ]
    },
    {
      "content": "Message",
      "pos": [
        16541,
        16548
      ]
    },
    {
      "content": "Event detail message",
      "pos": [
        16549,
        16569
      ]
    },
    {
      "content": "The data stored in a blob would similar to the following:",
      "pos": [
        16571,
        16628
      ]
    },
    {
      "pos": [
        16806,
        16908
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The first line of the log will contain the column headers as represented in this example."
    },
    {
      "content": "Failed request traces",
      "pos": [
        16914,
        16935
      ]
    },
    {
      "content": "Failed request traces are stored in XML files named <bpt id=\"p1\">__</bpt>fr######.xml<ept id=\"p1\">__</ept>.",
      "pos": [
        16937,
        17006
      ]
    },
    {
      "content": "To make it easier to view the logged information, an XSL stylesheet named <bpt id=\"p1\">__</bpt>freb.xsl<ept id=\"p1\">__</ept> is provided in the same directory as the XML files.",
      "pos": [
        17007,
        17145
      ]
    },
    {
      "content": "Opening one of the XML files in Internet Explorer will use the XSL stylesheet to provide a formatted display of the trace information.",
      "pos": [
        17146,
        17280
      ]
    },
    {
      "content": "This will appear similar to the following:",
      "pos": [
        17281,
        17323
      ]
    },
    {
      "content": "failed request viewed in the browser",
      "pos": [
        17327,
        17363
      ]
    },
    {
      "content": "Detailed error logs",
      "pos": [
        17442,
        17461
      ]
    },
    {
      "content": "Detailed error logs are HTML documents that provide more detailed information on HTTP errors that have occurred.",
      "pos": [
        17463,
        17575
      ]
    },
    {
      "content": "Since they are simply HTML documents, they can be viewed using a web browser.",
      "pos": [
        17576,
        17653
      ]
    },
    {
      "content": "Web server logs",
      "pos": [
        17659,
        17674
      ]
    },
    {
      "content": "The web server logs are formatted using the <bpt id=\"p1\">[</bpt>W3C extended log file format<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx)</ept>.",
      "pos": [
        17676,
        17816
      ]
    },
    {
      "content": "This information can be read using a text editor or parsed using utilities such as <bpt id=\"p1\">[</bpt>Log Parser<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=246619)</ept>.",
      "pos": [
        17817,
        17960
      ]
    },
    {
      "pos": [
        17964,
        18087
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The logs produced by Azure web apps do not support the <bpt id=\"p1\">__</bpt>s-computername<ept id=\"p1\">__</ept>, <bpt id=\"p2\">__</bpt>s-ip<ept id=\"p2\">__</ept>, or <bpt id=\"p3\">__</bpt>cs-version<ept id=\"p3\">__</ept> fields."
    },
    {
      "pos": [
        18091,
        18126
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"nextsteps\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> Next steps"
    },
    {
      "content": "How to Monitor Web Apps",
      "pos": [
        18131,
        18154
      ]
    },
    {
      "content": "Troubleshooting Azure web apps in Visual Studio",
      "pos": [
        18218,
        18265
      ]
    },
    {
      "content": "Analyze web app Logs in HDInsight",
      "pos": [
        18318,
        18351
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id=\"p1\">[</bpt>Try App Service<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.",
      "pos": [
        18443,
        18696
      ]
    },
    {
      "content": "No credit cards required; no commitments.",
      "pos": [
        18697,
        18738
      ]
    },
    {
      "content": "What's changed",
      "pos": [
        18743,
        18757
      ]
    },
    {
      "pos": [
        18760,
        18928
      ],
      "content": "For a guide to the change from Websites to App Service see: <bpt id=\"p1\">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>"
    },
    {
      "pos": [
        18931,
        19090
      ],
      "content": "For a guide to the change of the old portal to the new portal see: <bpt id=\"p1\">[</bpt>Reference for navigating the preview portal<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept>"
    },
    {
      "content": "test",
      "pos": [
        19094,
        19098
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Enable diagnostics logging for web apps in Azure App Service\"\n    description=\"Learn how to enable diagnostic logging and add instrumentation to your application, as well as how to access the information logged by Azure.\"\n    services=\"app-service\\web\"\n    documentationCenter=\".net\"\n    authors=\"cephalin\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"app-service-web\"\n    ms.workload=\"web\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"07/02/2015\"\n    ms.author=\"cephalin\"/>\n\n# Enable diagnostics logging for web apps in Azure App Service\n\n## Overview\n\nAzure provides built-in diagnostics to assist with debugging an [App Service web app](http://go.microsoft.com/fwlink/?LinkId=529714). In this article you'll learn how to enable diagnostic logging and add instrumentation to your application, as well as how to access the information logged by Azure.\n\n> [AZURE.NOTE] This article uses the [Azure preview portal](http://go.microsoft.com/fwlink/?LinkId=529715), Azure PowerShell, and the Azure Command-Line Interface (Azure CLI) to work with diagnostic logs. For information on working with diagnostic logs using Visual Studio, see [Troubleshooting Azure in Visual Studio](web-sites-dotnet-troubleshoot-visual-studio.md).\n\n## <a name=\"whatisdiag\"></a>Web server diagnostics and application diagnostics\n\nApp Service web apps provide diagnostic functionality for logging information from both the web server and the web application. These are logically separated into **web server diagnostics** and **application diagnostics**.\n\n### Web server diagnostics\n\nYou can enable or disable the following kinds of logs:\n\n- **Detailed Error Logging** - Detailed error information for HTTP status codes that indicate a failure (status code 400 or greater). This may contain information that can help determine why the server returned the error code.\n- **Failed Request Tracing** - Detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned.\n- **Web Server Logging** - Information about HTTP transactions using the [W3C extended log file format](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx). This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address.\n\n### Application diagnostics\n\nApplication diagnostics allows you to capture information produced by a web application. ASP.NET applications can use the [System.Diagnostics.Trace](http://msdn.microsoft.com/en-us/library/36hhw2t6.aspx) class to log information to the application diagnostics log. For example:\n\n    System.Diagnostics.Trace.TraceError(\"If you're seeing this, something bad happened\");\n\nAt runtime you can retrieve these logs to help with troubleshooting. For more information, see [Troubleshooting Azure web apps in Visual Studio](web-sites-dotnet-troubleshoot-visual-studio.md).\n\nApp Service web apps also log deployment information when you publish content to a web app. This happens automatically and there are no configuration settings for deployment logging. Deployment logging allows you to determine why a deployment failed. For example, if you are using a custom deployment script, you might use deployment logging to determine why the script is failing.\n\n## <a name=\"enablediag\"></a>How to enable diagnostics\n\nTo enable diagnostics in the [Azure preview portal](https://portal.azure.com), go to the blade for your web app and click **Settings > Diagnostics logs**.\n\n<!-- todo:cleanup dogfood addresses in screenshot -->\n![Logs part](./media/web-sites-enable-diagnostic-log/logspart.png)\n\nWhen you enable **application diagnostics** you also choose the **Level**. This setting allows you to filter the information captured to **informational**, **warning** or **error** information. Setting this to **verbose** will log all information produced by the application.\n\n> [AZURE.NOTE] Unlike changing the web.config file, enabling Application diagnostics or changing diagnostic log levels does not recycle the app domain that the application runs within.\n\nIn the [Azure portal](https://manage.windowsazure.com) Web app **Configure** tab, you can select **storage** or **file system** for **web server logging**. Selecting **storage** allows you to select a storage account, and then a blob container that the logs will be written to. All other logs for **site diagnostics** are written to the file system only.\n\nThe [Azure portal](https://manage.windowsazure.com) Web app **Configure** tab also has additional settings for application diagnostics:\n\n* **File system** - stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).\n* **Table storage** - stores the application diagnostics information in the specified Azure Storage Account and table name.\n* **Blob storage** - stores the application diagnostics information in the specified Azure Storage Account and blob container.\n* **Retention period** - by default, logs are not automatically deleted from **blob storage**. Select **set retention** and enter the number of days to keep logs if you wish to automatically delete logs.\n\nAny combination of file system, table storage, or blob storage can be enabled at the same time, and have individual log level configurations. For example, you may wish to log errors and warnings to blob storage as a long-term logging solution, while enabling file system logging with a level of verbose.\n\nWhile all three storage locations provide the same basic information for logged events, **table storage** and **blob storage** log additional information such as the instance ID, thread ID, and a more granular timestamp (tick format) than logging to **file system**.\n\n> [AZURE.NOTE] Information stored in **table storage** or **blob  storage** can only be accessed using a storage client or an application that can directly work with these storage systems. For example, Visual Studio 2013 contains a Storage Explorer that can be used to explore table or blob storage, and HDInsight can access data stored in blob storage. You can also write an application that accesses Azure Storage by using one of the [Azure SDKs](/downloads/#).\n\n> [AZURE.NOTE] Diagnostics can also be enabled from Azure PowerShell using the **Set-AzureWebsite** cmdlet. If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see [How to Use Azure PowerShell](/develop/nodejs/how-to-guides/powershell-cmdlets/).\n\n##<a name=\"download\"></a> How to: Download logs\n\nDiagnostic information stored to the web app file system can be accessed directly using FTP. It can also be downloaded as a Zip archive using Azure PowerShell or the Azure Command-Line Interface.\n\nThe directory structure that the logs are stored in is as follows:\n\n* **Application logs** - /LogFiles/Application/. This folder contains one or more text files containing information produced by application logging.\n\n* **Failed Request Traces** - /LogFiles/W3SVC#########/. This folder contains an XSL file and one or more XML files. Ensure that you download the XSL file into the same directory as the XML file(s) because the XSL file provides functionality for formatting and filtering the contents of the XML file(s) when viewed in Internet Explorer.\n\n* **Detailed Error Logs** - /LogFiles/DetailedErrors/. This folder contains one or more .htm files that provide extensive information for any HTTP errors that have occurred.\n\n* **Web Server Logs** - /LogFiles/http/RawLogs. This folder contains one or more text files formatted using the [W3C extended log file format](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx).\n\n* **Deployment logs** - /LogFiles/Git. This folder contains logs generated by the internal deployment processes used by Azure web apps, as well as logs for Git deployments.\n\n### FTP\n\nTo access diagnostic information using FTP, visit the **Dashboard** of your web app in the [Azure portal](https://manage.windowsazure.com). In the **quick glance** section, use the **FTP Diagnostic Logs** link to access the log files using FTP. The **Deployment/FTP User** entry lists the user name that should be used to access the FTP site.\n\n> [AZURE.NOTE] If the **Deployment/FTP User** entry is not set, or you have forgotten the password for this user, you can create a new user and password by using the **Reset deployment credentials** link in the **quick glance** section of the **Dashboard**.\n\n### Download with Azure PowerShell\n\nTo download the log files, start a new instance of Azure PowerShell and use the following command:\n\n    Save-AzureWebSiteLog -Name webappname\n\nThis will save the logs for the web app specified by the **-Name** parameter to a file named **logs.zip** in the current directory.\n\n> [AZURE.NOTE] If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see [How to Use Azure PowerShell](/develop/nodejs/how-to-guides/powershell-cmdlets/).\n\n### Download with Azure Command-Line Interface\n\nTo download the log files using the Azure Command Line Interface, open a new command prompt, PowerShell, Bash, or Terminal session and enter the following command:\n\n    azure site log download webappname\n\nThis will save the logs for the web app named 'webappname' to a file named **diagnostics.zip** in the current directory.\n\n> [AZURE.NOTE] If you have not installed the Azure Command-Line Interface (Azure CLI), or have not configured it to use your Azure Subscription, see [How to Use Azure CLI](../xplat-cli.md).\n\n## How to: View logs in Application Insights\n\nVisual Studio Application Insights provides tools for filtering and searching logs, and for correlating the logs with requests and other events.\n\n1. Add the Application Insights SDK to your project in Visual Studio.\n * In Solution Explorer, right click your project and choose Add Application Insights. You'll be guided through steps that include creating an Application Insights resource. [Learn more](../application-insights/app-insights-start-monitoring-app-health-usage.md)\n2. Add the Trace Listener package to your project.\n * Right click your project and choose Manage NuGet Packages. Select `Microsoft.ApplicationInsights.TraceListener` [Learn more](../application-insights/app-insights-asp-net-trace-logs.md)\n3. Upload your project and run it to generate log data.\n4. In the [Azure preview portal](http://portal.azure.com/), browse to your new Application Insights resource, and open **Search**. You'll see your log data, along with request, usage and other telemetry. Some telemetry might take a few minutes to arrive: click Refresh. [Learn more](../application-insights/app-insights-diagnostic-search.md)\n\n[Learn more about performance tracking with Application Insights](../insights-perf-analytics.md)\n\n##<a name=\"streamlogs\"></a> How to: Stream logs\n\nWhile developing an application, it is often useful to see logging information in near-real time. This can be accomplished by streaming logging information to your development environment using either Azure PowerShell or the Azure Command-Line Interface.\n\n> [AZURE.NOTE] Some types of logging buffer write to the log file, which can result in out of order events in the stream. For example, an application log entry that occurs when a user visits a page may be displayed in the stream before the corresponding HTTP log entry for the page request.\n\n> [AZURE.NOTE] Log streaming will also stream information written to any text file stored in the **D:\\\\home\\\\LogFiles\\\\** folder.\n\n### Streaming with Azure PowerShell\n\nTo stream logging information, start a new of Azure PowerShell and use the following command:\n\n    Get-AzureWebSiteLog -Name webappname -Tail\n\nThis will connect to the web app specified by the **-Name** parameter and begin streaming information to the PowerShell window as log events occur on the web app. Any information written to files ending in .txt, .log, or .htm that are stored in the /LogFiles directory (d:/home/logfiles) will be streamed to the local console.\n\nTo filter specific events, such as errors, use the **-Message** parameter. For example:\n\n    Get-AzureWebSiteLog -Name webappname -Tail -Message Error\n\nTo filter specific log types, such as HTTP, use the **-Path** parameter. For example:\n\n    Get-AzureWebSiteLog -Name webappname -Tail -Path http\n\nTo see a list of available paths, use the -ListPath parameter.\n\n> [AZURE.NOTE] If you have not installed Azure PowerShell, or have not configured it to use your Azure Subscription, see [How to Use Azure PowerShell](/develop/nodejs/how-to-guides/powershell-cmdlets/).\n\n### Streaming with Azure Command-Line Interface\n\nTo stream logging information, open a new command prompt, PowerShell, Bash, or Terminal session and enter the following command:\n\n    azure site log tail webappname\n\nThis will connect to the web app named 'webappname' and begin streaming information to the window as log events occur on the web app. Any information written to files ending in .txt, .log, or .htm that are stored in the /LogFiles directory (d:/home/logfiles) will be streamed to the local console.\n\nTo filter specific events, such as errors, use the **--Filter** parameter. For example:\n\n    azure site log tail webappname --filter Error\n\nTo filter specific log types, such as HTTP, use the **--Path** parameter. For example:\n\n    azure site log tail webappname --path http\n\n> [AZURE.NOTE] If you have not installed the Azure Command-Line Interface, or have not configured it to use your Azure Subscription, see [How to Use Azure Command-Line Interface](../xplat-cli.md).\n\n##<a name=\"understandlogs\"></a> How to: Understand diagnostics logs\n\n### Application diagnostics logs\n\nApplication diagnostics stores information in a specific format for .NET applications, depending on whether you store logs to the file system, table storage, or blob storage. The base set of data stored is the same across all three storage types - the date and time the event occurred, the process ID that produced the event, the event type (information, warning, error,) and the event message.\n\n__File system__\n\nEach line logged to the file system or received using streaming will be in the following format:\n\n    {Date}  PID[{process id}] {event type/level} {message}\n\nFor example, an error event would appear similar to the following:\n\n    2014-01-30T16:36:59  PID[3096] Error       Fatal error on the page!\n\nLogging to the file system provides the most basic information of the three available methods, providing only the time, process id, event level, and message.\n\n__Table storage__\n\nWhen logging to table storage, additional properties are used to facilitate searching the data stored in the table as well as more granular information on the event. The following properties (columns) are used for each entity (row) stored in the table.\n\nProperty name|Value/format\n---|---\nPartitionKey|Date/time of the event in yyyyMMddHH format\nRowKey|A GUID value that uniquely identifies this entity\nTimestamp|The date and time that the event occurred\nEventTickCount|The date and time that the event occurred, in Tick format (greater precision)\nApplicationName|The web app name\nLevel|Event level (e.g. error, warning, information)\nEventId|The event ID of this event<p><p>Defaults to 0 if none specified\nInstanceId|Instance of the web app that the even occurred on\nPid|Process ID\nTid|The thread ID of the thread that produced the event\nMessage|Event detail message\n\n__Blob storage__\n\nWhen logging to blob storage, data is stored in comma-separated values (CSV) format. Similar to table storage, additional fields are logged to provide more granular information about the event. The following properties are used for each row in the CSV:\n\nProperty name|Value/format\n---|---\nDate|The date and time that the event occurred\nLevel|Event level (e.g. error, warning, information)\nApplicationName|The web app name\nInstanceId|Instance of the web app that the even occurred on\nEventTickCount|The date and time that the event occurred, in Tick format (greater precision)\nEventId|The event ID of this event<p><p>Defaults to 0 if none specified\nPid|Process ID\nTid|The thread ID of the thread that produced the event\nMessage|Event detail message\n\nThe data stored in a blob would similar to the following:\n\n    date,level,applicationName,instanceId,eventTickCount,eventId,pid,tid,message\n    2014-01-30T16:36:52,Error,mywebapp,6ee38a,635266966128818593,0,3096,9,An error occurred\n\n> [AZURE.NOTE] The first line of the log will contain the column headers as represented in this example.\n\n### Failed request traces\n\nFailed request traces are stored in XML files named __fr######.xml__. To make it easier to view the logged information, an XSL stylesheet named __freb.xsl__ is provided in the same directory as the XML files. Opening one of the XML files in Internet Explorer will use the XSL stylesheet to provide a formatted display of the trace information. This will appear similar to the following:\n\n![failed request viewed in the browser](./media/web-sites-enable-diagnostic-log/tws-failedrequestinbrowser.png)\n\n### Detailed error logs\n\nDetailed error logs are HTML documents that provide more detailed information on HTTP errors that have occurred. Since they are simply HTML documents, they can be viewed using a web browser.\n\n### Web server logs\n\nThe web server logs are formatted using the [W3C extended log file format](http://msdn.microsoft.com/library/windows/desktop/aa814385.aspx). This information can be read using a text editor or parsed using utilities such as [Log Parser](http://go.microsoft.com/fwlink/?LinkId=246619).\n\n> [AZURE.NOTE] The logs produced by Azure web apps do not support the __s-computername__, __s-ip__, or __cs-version__ fields.\n\n##<a name=\"nextsteps\"></a> Next steps\n\n- [How to Monitor Web Apps](/en-us/manage/services/web-sites/how-to-monitor-websites/)\n- [Troubleshooting Azure web apps in Visual Studio](web-sites-dotnet-troubleshoot-visual-studio.md)\n- [Analyze web app Logs in HDInsight](http://gallery.technet.microsoft.com/scriptcenter/Analyses-Windows-Azure-web-0b27d413)\n\n> [AZURE.NOTE] If you want to get started with Azure App Service before signing up for an Azure account, go to [Try App Service](http://go.microsoft.com/fwlink/?LinkId=523751), where you can immediately create a short-lived starter web app in App Service. No credit cards required; no commitments.\n\n## What's changed\n* For a guide to the change from Websites to App Service see: [Azure App Service and Its Impact on Existing Azure Services](http://go.microsoft.com/fwlink/?LinkId=529714)\n* For a guide to the change of the old portal to the new portal see: [Reference for navigating the preview portal](http://go.microsoft.com/fwlink/?LinkId=529715)\n \n\ntest\n"
}